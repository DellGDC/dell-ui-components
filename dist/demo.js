/*!
 * jQuery JavaScript Library v2.0.3
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2013-07-03T13:30Z
 */
(function (window, undefined) {
  // Can't do this because several apps including ASP.NET trace
  // the stack via arguments.caller.callee and Firefox dies if
  // you try to trace through "use strict" call chains. (#13335)
  // Support: Firefox 18+
  //"use strict";
  var
    // A central reference to the root jQuery(document)
    rootjQuery,
    // The deferred used on DOM ready
    readyList,
    // Support: IE9
    // For `typeof xmlNode.method` instead of `xmlNode.method !== undefined`
    core_strundefined = typeof undefined,
    // Use the correct document accordingly with window argument (sandbox)
    location = window.location, document = window.document, docElem = document.documentElement,
    // Map over jQuery in case of overwrite
    _jQuery = window.jQuery,
    // Map over the $ in case of overwrite
    _$ = window.$,
    // [[Class]] -> type pairs
    class2type = {},
    // List of deleted data cache ids, so we can reuse them
    core_deletedIds = [], core_version = '2.0.3',
    // Save a reference to some core methods
    core_concat = core_deletedIds.concat, core_push = core_deletedIds.push, core_slice = core_deletedIds.slice, core_indexOf = core_deletedIds.indexOf, core_toString = class2type.toString, core_hasOwn = class2type.hasOwnProperty, core_trim = core_version.trim,
    // Define a local copy of jQuery
    jQuery = function (selector, context) {
      // The jQuery object is actually just the init constructor 'enhanced'
      return new jQuery.fn.init(selector, context, rootjQuery);
    },
    // Used for matching numbers
    core_pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
    // Used for splitting on whitespace
    core_rnotwhite = /\S+/g,
    // A simple way to check for HTML strings
    // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
    // Strict HTML recognition (#11290: must start with <)
    rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
    // Match a standalone tag
    rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
    // Matches dashed string for camelizing
    rmsPrefix = /^-ms-/, rdashAlpha = /-([\da-z])/gi,
    // Used by jQuery.camelCase as callback to replace()
    fcamelCase = function (all, letter) {
      return letter.toUpperCase();
    },
    // The ready event handler and self cleanup method
    completed = function () {
      document.removeEventListener('DOMContentLoaded', completed, false);
      window.removeEventListener('load', completed, false);
      jQuery.ready();
    };
  jQuery.fn = jQuery.prototype = {
    jquery: core_version,
    constructor: jQuery,
    init: function (selector, context, rootjQuery) {
      var match, elem;
      // HANDLE: $(""), $(null), $(undefined), $(false)
      if (!selector) {
        return this;
      }
      // Handle HTML strings
      if (typeof selector === 'string') {
        if (selector.charAt(0) === '<' && selector.charAt(selector.length - 1) === '>' && selector.length >= 3) {
          // Assume that strings that start and end with <> are HTML and skip the regex check
          match = [
            null,
            selector,
            null
          ];
        } else {
          match = rquickExpr.exec(selector);
        }
        // Match html or make sure no context is specified for #id
        if (match && (match[1] || !context)) {
          // HANDLE: $(html) -> $(array)
          if (match[1]) {
            context = context instanceof jQuery ? context[0] : context;
            // scripts is true for back-compat
            jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));
            // HANDLE: $(html, props)
            if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
              for (match in context) {
                // Properties of context are called as methods if possible
                if (jQuery.isFunction(this[match])) {
                  this[match](context[match]);  // ...and otherwise set as attributes
                } else {
                  this.attr(match, context[match]);
                }
              }
            }
            return this;  // HANDLE: $(#id)
          } else {
            elem = document.getElementById(match[2]);
            // Check parentNode to catch when Blackberry 4.6 returns
            // nodes that are no longer in the document #6963
            if (elem && elem.parentNode) {
              // Inject the element directly into the jQuery object
              this.length = 1;
              this[0] = elem;
            }
            this.context = document;
            this.selector = selector;
            return this;
          }  // HANDLE: $(expr, $(...))
        } else if (!context || context.jquery) {
          return (context || rootjQuery).find(selector);  // HANDLE: $(expr, context)
                                                          // (which is just equivalent to: $(context).find(expr)
        } else {
          return this.constructor(context).find(selector);
        }  // HANDLE: $(DOMElement)
      } else if (selector.nodeType) {
        this.context = this[0] = selector;
        this.length = 1;
        return this;  // HANDLE: $(function)
                      // Shortcut for document ready
      } else if (jQuery.isFunction(selector)) {
        return rootjQuery.ready(selector);
      }
      if (selector.selector !== undefined) {
        this.selector = selector.selector;
        this.context = selector.context;
      }
      return jQuery.makeArray(selector, this);
    },
    selector: '',
    length: 0,
    toArray: function () {
      return core_slice.call(this);
    },
    get: function (num) {
      return num == null ? this.toArray() : num < 0 ? this[this.length + num] : this[num];
    },
    pushStack: function (elems) {
      // Build a new jQuery matched element set
      var ret = jQuery.merge(this.constructor(), elems);
      // Add the old object onto the stack (as a reference)
      ret.prevObject = this;
      ret.context = this.context;
      // Return the newly-formed element set
      return ret;
    },
    each: function (callback, args) {
      return jQuery.each(this, callback, args);
    },
    ready: function (fn) {
      // Add the callback
      jQuery.ready.promise().done(fn);
      return this;
    },
    slice: function () {
      return this.pushStack(core_slice.apply(this, arguments));
    },
    first: function () {
      return this.eq(0);
    },
    last: function () {
      return this.eq(-1);
    },
    eq: function (i) {
      var len = this.length, j = +i + (i < 0 ? len : 0);
      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
    },
    map: function (callback) {
      return this.pushStack(jQuery.map(this, function (elem, i) {
        return callback.call(elem, i, elem);
      }));
    },
    end: function () {
      return this.prevObject || this.constructor(null);
    },
    push: core_push,
    sort: [].sort,
    splice: [].splice
  };
  // Give the init function the jQuery prototype for later instantiation
  jQuery.fn.init.prototype = jQuery.fn;
  jQuery.extend = jQuery.fn.extend = function () {
    var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;
    // Handle a deep copy situation
    if (typeof target === 'boolean') {
      deep = target;
      target = arguments[1] || {};
      // skip the boolean and the target
      i = 2;
    }
    // Handle case when target is a string or something (possible in deep copy)
    if (typeof target !== 'object' && !jQuery.isFunction(target)) {
      target = {};
    }
    // extend jQuery itself if only one argument is passed
    if (length === i) {
      target = this;
      --i;
    }
    for (; i < length; i++) {
      // Only deal with non-null/undefined values
      if ((options = arguments[i]) != null) {
        // Extend the base object
        for (name in options) {
          src = target[name];
          copy = options[name];
          // Prevent never-ending loop
          if (target === copy) {
            continue;
          }
          // Recurse if we're merging plain objects or arrays
          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {
            if (copyIsArray) {
              copyIsArray = false;
              clone = src && jQuery.isArray(src) ? src : [];
            } else {
              clone = src && jQuery.isPlainObject(src) ? src : {};
            }
            // Never move original objects, clone them
            target[name] = jQuery.extend(deep, clone, copy);  // Don't bring in undefined values
          } else if (copy !== undefined) {
            target[name] = copy;
          }
        }
      }
    }
    // Return the modified object
    return target;
  };
  jQuery.extend({
    expando: 'jQuery' + (core_version + Math.random()).replace(/\D/g, ''),
    noConflict: function (deep) {
      if (window.$ === jQuery) {
        window.$ = _$;
      }
      if (deep && window.jQuery === jQuery) {
        window.jQuery = _jQuery;
      }
      return jQuery;
    },
    isReady: false,
    readyWait: 1,
    holdReady: function (hold) {
      if (hold) {
        jQuery.readyWait++;
      } else {
        jQuery.ready(true);
      }
    },
    ready: function (wait) {
      // Abort if there are pending holds or we're already ready
      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
        return;
      }
      // Remember that the DOM is ready
      jQuery.isReady = true;
      // If a normal DOM Ready event fired, decrement, and wait if need be
      if (wait !== true && --jQuery.readyWait > 0) {
        return;
      }
      // If there are functions bound, to execute
      readyList.resolveWith(document, [jQuery]);
      // Trigger any bound ready events
      if (jQuery.fn.trigger) {
        jQuery(document).trigger('ready').off('ready');
      }
    },
    isFunction: function (obj) {
      return jQuery.type(obj) === 'function';
    },
    isArray: Array.isArray,
    isWindow: function (obj) {
      return obj != null && obj === obj.window;
    },
    isNumeric: function (obj) {
      return !isNaN(parseFloat(obj)) && isFinite(obj);
    },
    type: function (obj) {
      if (obj == null) {
        return String(obj);
      }
      // Support: Safari <= 5.1 (functionish RegExp)
      return typeof obj === 'object' || typeof obj === 'function' ? class2type[core_toString.call(obj)] || 'object' : typeof obj;
    },
    isPlainObject: function (obj) {
      // Not plain objects:
      // - Any object or value whose internal [[Class]] property is not "[object Object]"
      // - DOM nodes
      // - window
      if (jQuery.type(obj) !== 'object' || obj.nodeType || jQuery.isWindow(obj)) {
        return false;
      }
      // Support: Firefox <20
      // The try/catch suppresses exceptions thrown when attempting to access
      // the "constructor" property of certain host objects, ie. |window.location|
      // https://bugzilla.mozilla.org/show_bug.cgi?id=814622
      try {
        if (obj.constructor && !core_hasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {
          return false;
        }
      } catch (e) {
        return false;
      }
      // If the function hasn't returned already, we're confident that
      // |obj| is a plain object, created by {} or constructed with new Object
      return true;
    },
    isEmptyObject: function (obj) {
      var name;
      for (name in obj) {
        return false;
      }
      return true;
    },
    error: function (msg) {
      throw new Error(msg);
    },
    parseHTML: function (data, context, keepScripts) {
      if (!data || typeof data !== 'string') {
        return null;
      }
      if (typeof context === 'boolean') {
        keepScripts = context;
        context = false;
      }
      context = context || document;
      var parsed = rsingleTag.exec(data), scripts = !keepScripts && [];
      // Single tag
      if (parsed) {
        return [context.createElement(parsed[1])];
      }
      parsed = jQuery.buildFragment([data], context, scripts);
      if (scripts) {
        jQuery(scripts).remove();
      }
      return jQuery.merge([], parsed.childNodes);
    },
    parseJSON: JSON.parse,
    parseXML: function (data) {
      var xml, tmp;
      if (!data || typeof data !== 'string') {
        return null;
      }
      // Support: IE9
      try {
        tmp = new DOMParser();
        xml = tmp.parseFromString(data, 'text/xml');
      } catch (e) {
        xml = undefined;
      }
      if (!xml || xml.getElementsByTagName('parsererror').length) {
        jQuery.error('Invalid XML: ' + data);
      }
      return xml;
    },
    noop: function () {
    },
    globalEval: function (code) {
      var script, indirect = eval;
      code = jQuery.trim(code);
      if (code) {
        // If the code includes a valid, prologue position
        // strict mode pragma, execute code by injecting a
        // script tag into the document.
        if (code.indexOf('use strict') === 1) {
          script = document.createElement('script');
          script.text = code;
          document.head.appendChild(script).parentNode.removeChild(script);
        } else {
          // Otherwise, avoid the DOM node creation, insertion
          // and removal by using an indirect global eval
          indirect(code);
        }
      }
    },
    camelCase: function (string) {
      return string.replace(rmsPrefix, 'ms-').replace(rdashAlpha, fcamelCase);
    },
    nodeName: function (elem, name) {
      return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
    },
    each: function (obj, callback, args) {
      var value, i = 0, length = obj.length, isArray = isArraylike(obj);
      if (args) {
        if (isArray) {
          for (; i < length; i++) {
            value = callback.apply(obj[i], args);
            if (value === false) {
              break;
            }
          }
        } else {
          for (i in obj) {
            value = callback.apply(obj[i], args);
            if (value === false) {
              break;
            }
          }
        }  // A special, fast, case for the most common use of each
      } else {
        if (isArray) {
          for (; i < length; i++) {
            value = callback.call(obj[i], i, obj[i]);
            if (value === false) {
              break;
            }
          }
        } else {
          for (i in obj) {
            value = callback.call(obj[i], i, obj[i]);
            if (value === false) {
              break;
            }
          }
        }
      }
      return obj;
    },
    trim: function (text) {
      return text == null ? '' : core_trim.call(text);
    },
    makeArray: function (arr, results) {
      var ret = results || [];
      if (arr != null) {
        if (isArraylike(Object(arr))) {
          jQuery.merge(ret, typeof arr === 'string' ? [arr] : arr);
        } else {
          core_push.call(ret, arr);
        }
      }
      return ret;
    },
    inArray: function (elem, arr, i) {
      return arr == null ? -1 : core_indexOf.call(arr, elem, i);
    },
    merge: function (first, second) {
      var l = second.length, i = first.length, j = 0;
      if (typeof l === 'number') {
        for (; j < l; j++) {
          first[i++] = second[j];
        }
      } else {
        while (second[j] !== undefined) {
          first[i++] = second[j++];
        }
      }
      first.length = i;
      return first;
    },
    grep: function (elems, callback, inv) {
      var retVal, ret = [], i = 0, length = elems.length;
      inv = !!inv;
      // Go through the array, only saving the items
      // that pass the validator function
      for (; i < length; i++) {
        retVal = !!callback(elems[i], i);
        if (inv !== retVal) {
          ret.push(elems[i]);
        }
      }
      return ret;
    },
    map: function (elems, callback, arg) {
      var value, i = 0, length = elems.length, isArray = isArraylike(elems), ret = [];
      // Go through the array, translating each of the items to their
      if (isArray) {
        for (; i < length; i++) {
          value = callback(elems[i], i, arg);
          if (value != null) {
            ret[ret.length] = value;
          }
        }  // Go through every key on the object,
      } else {
        for (i in elems) {
          value = callback(elems[i], i, arg);
          if (value != null) {
            ret[ret.length] = value;
          }
        }
      }
      // Flatten any nested arrays
      return core_concat.apply([], ret);
    },
    guid: 1,
    proxy: function (fn, context) {
      var tmp, args, proxy;
      if (typeof context === 'string') {
        tmp = fn[context];
        context = fn;
        fn = tmp;
      }
      // Quick check to determine if target is callable, in the spec
      // this throws a TypeError, but we will just return undefined.
      if (!jQuery.isFunction(fn)) {
        return undefined;
      }
      // Simulated bind
      args = core_slice.call(arguments, 2);
      proxy = function () {
        return fn.apply(context || this, args.concat(core_slice.call(arguments)));
      };
      // Set the guid of unique handler to the same of original handler, so it can be removed
      proxy.guid = fn.guid = fn.guid || jQuery.guid++;
      return proxy;
    },
    access: function (elems, fn, key, value, chainable, emptyGet, raw) {
      var i = 0, length = elems.length, bulk = key == null;
      // Sets many values
      if (jQuery.type(key) === 'object') {
        chainable = true;
        for (i in key) {
          jQuery.access(elems, fn, i, key[i], true, emptyGet, raw);
        }  // Sets one value
      } else if (value !== undefined) {
        chainable = true;
        if (!jQuery.isFunction(value)) {
          raw = true;
        }
        if (bulk) {
          // Bulk operations run against the entire set
          if (raw) {
            fn.call(elems, value);
            fn = null;  // ...except when executing function values
          } else {
            bulk = fn;
            fn = function (elem, key, value) {
              return bulk.call(jQuery(elem), value);
            };
          }
        }
        if (fn) {
          for (; i < length; i++) {
            fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
          }
        }
      }
      return chainable ? elems : bulk ? fn.call(elems) : length ? fn(elems[0], key) : emptyGet;
    },
    now: Date.now,
    swap: function (elem, options, callback, args) {
      var ret, name, old = {};
      // Remember the old values, and insert the new ones
      for (name in options) {
        old[name] = elem.style[name];
        elem.style[name] = options[name];
      }
      ret = callback.apply(elem, args || []);
      // Revert the old values
      for (name in options) {
        elem.style[name] = old[name];
      }
      return ret;
    }
  });
  jQuery.ready.promise = function (obj) {
    if (!readyList) {
      readyList = jQuery.Deferred();
      // Catch cases where $(document).ready() is called after the browser event has already occurred.
      // we once tried to use readyState "interactive" here, but it caused issues like the one
      // discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
      if (document.readyState === 'complete') {
        // Handle it asynchronously to allow scripts the opportunity to delay ready
        setTimeout(jQuery.ready);
      } else {
        // Use the handy event callback
        document.addEventListener('DOMContentLoaded', completed, false);
        // A fallback to window.onload, that will always work
        window.addEventListener('load', completed, false);
      }
    }
    return readyList.promise(obj);
  };
  // Populate the class2type map
  jQuery.each('Boolean Number String Function Array Date RegExp Object Error'.split(' '), function (i, name) {
    class2type['[object ' + name + ']'] = name.toLowerCase();
  });
  function isArraylike(obj) {
    var length = obj.length, type = jQuery.type(obj);
    if (jQuery.isWindow(obj)) {
      return false;
    }
    if (obj.nodeType === 1 && length) {
      return true;
    }
    return type === 'array' || type !== 'function' && (length === 0 || typeof length === 'number' && length > 0 && length - 1 in obj);
  }
  // All jQuery objects should point back to these
  rootjQuery = jQuery(document);
  /*!
 * Sizzle CSS Selector Engine v1.9.4-pre
 * http://sizzlejs.com/
 *
 * Copyright 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2013-06-03
 */
  (function (window, undefined) {
    var i, support, cachedruns, Expr, getText, isXML, compile, outermostContext, sortInput,
      // Local document vars
      setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains,
      // Instance-specific data
      expando = 'sizzle' + -new Date(), preferredDoc = window.document, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), hasDuplicate = false, sortOrder = function (a, b) {
        if (a === b) {
          hasDuplicate = true;
          return 0;
        }
        return 0;
      },
      // General-purpose constants
      strundefined = typeof undefined, MAX_NEGATIVE = 1 << 31,
      // Instance methods
      hasOwn = {}.hasOwnProperty, arr = [], pop = arr.pop, push_native = arr.push, push = arr.push, slice = arr.slice,
      // Use a stripped-down indexOf if we can't use a native one
      indexOf = arr.indexOf || function (elem) {
        var i = 0, len = this.length;
        for (; i < len; i++) {
          if (this[i] === elem) {
            return i;
          }
        }
        return -1;
      }, booleans = 'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped',
      // Regular expressions
      // Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
      whitespace = '[\\x20\\t\\r\\n\\f]',
      // http://www.w3.org/TR/css3-syntax/#characters
      characterEncoding = '(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+',
      // Loosely modeled on CSS identifier characters
      // An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
      // Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
      identifier = characterEncoding.replace('w', 'w#'),
      // Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors
      attributes = '\\[' + whitespace + '*(' + characterEncoding + ')' + whitespace + '*(?:([*^$|!~]?=)' + whitespace + '*(?:([\'"])((?:\\\\.|[^\\\\])*?)\\3|(' + identifier + ')|)|)' + whitespace + '*\\]',
      // Prefer arguments quoted,
      //   then not containing pseudos/brackets,
      //   then attribute selectors/non-parenthetical expressions,
      //   then anything else
      // These preferences are here to reduce the number of selectors
      //   needing tokenize in the PSEUDO preFilter
      pseudos = ':(' + characterEncoding + ')(?:\\((([\'"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|' + attributes.replace(3, 8) + ')*)|.*)\\)|)',
      // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
      rtrim = new RegExp('^' + whitespace + '+|((?:^|[^\\\\])(?:\\\\.)*)' + whitespace + '+$', 'g'), rcomma = new RegExp('^' + whitespace + '*,' + whitespace + '*'), rcombinators = new RegExp('^' + whitespace + '*([>+~]|' + whitespace + ')' + whitespace + '*'), rsibling = new RegExp(whitespace + '*[+~]'), rattributeQuotes = new RegExp('=' + whitespace + '*([^\\]\'"]*)' + whitespace + '*\\]', 'g'), rpseudo = new RegExp(pseudos), ridentifier = new RegExp('^' + identifier + '$'), matchExpr = {
        'ID': new RegExp('^#(' + characterEncoding + ')'),
        'CLASS': new RegExp('^\\.(' + characterEncoding + ')'),
        'TAG': new RegExp('^(' + characterEncoding.replace('w', 'w*') + ')'),
        'ATTR': new RegExp('^' + attributes),
        'PSEUDO': new RegExp('^' + pseudos),
        'CHILD': new RegExp('^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(' + whitespace + '*(even|odd|(([+-]|)(\\d*)n|)' + whitespace + '*(?:([+-]|)' + whitespace + '*(\\d+)|))' + whitespace + '*\\)|)', 'i'),
        'bool': new RegExp('^(?:' + booleans + ')$', 'i'),
        'needsContext': new RegExp('^' + whitespace + '*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(' + whitespace + '*((?:-\\d)?\\d*)' + whitespace + '*\\)|)(?=[^-]|$)', 'i')
      }, rnative = /^[^{]+\{\s*\[native \w/,
      // Easily-parseable/retrievable ID or TAG or CLASS selectors
      rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\d$/i, rescape = /'|\\/g,
      // CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
      runescape = new RegExp('\\\\([\\da-f]{1,6}' + whitespace + '?|(' + whitespace + ')|.)', 'ig'), funescape = function (_, escaped, escapedWhitespace) {
        var high = '0x' + escaped - 65536;
        // NaN means non-codepoint
        // Support: Firefox
        // Workaround erroneous numeric interpretation of +"0x"
        return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);
      };
    // Optimize for push.apply( _, NodeList )
    try {
      push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes);
      // Support: Android<4.0
      // Detect silently failing push.apply
      arr[preferredDoc.childNodes.length].nodeType;
    } catch (e) {
      push = {
        apply: arr.length ? function (target, els) {
          push_native.apply(target, slice.call(els));
        } : function (target, els) {
          var j = target.length, i = 0;
          // Can't trust NodeList.length
          while (target[j++] = els[i++]) {
          }
          target.length = j - 1;
        }
      };
    }
    function Sizzle(selector, context, results, seed) {
      var match, elem, m, nodeType,
        // QSA vars
        i, groups, old, nid, newContext, newSelector;
      if ((context ? context.ownerDocument || context : preferredDoc) !== document) {
        setDocument(context);
      }
      context = context || document;
      results = results || [];
      if (!selector || typeof selector !== 'string') {
        return results;
      }
      if ((nodeType = context.nodeType) !== 1 && nodeType !== 9) {
        return [];
      }
      if (documentIsHTML && !seed) {
        // Shortcuts
        if (match = rquickExpr.exec(selector)) {
          // Speed-up: Sizzle("#ID")
          if (m = match[1]) {
            if (nodeType === 9) {
              elem = context.getElementById(m);
              // Check parentNode to catch when Blackberry 4.6 returns
              // nodes that are no longer in the document #6963
              if (elem && elem.parentNode) {
                // Handle the case where IE, Opera, and Webkit return items
                // by name instead of ID
                if (elem.id === m) {
                  results.push(elem);
                  return results;
                }
              } else {
                return results;
              }
            } else {
              // Context is not a document
              if (context.ownerDocument && (elem = context.ownerDocument.getElementById(m)) && contains(context, elem) && elem.id === m) {
                results.push(elem);
                return results;
              }
            }  // Speed-up: Sizzle("TAG")
          } else if (match[2]) {
            push.apply(results, context.getElementsByTagName(selector));
            return results;  // Speed-up: Sizzle(".CLASS")
          } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {
            push.apply(results, context.getElementsByClassName(m));
            return results;
          }
        }
        // QSA path
        if (support.qsa && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
          nid = old = expando;
          newContext = context;
          newSelector = nodeType === 9 && selector;
          // qSA works strangely on Element-rooted queries
          // We can work around this by specifying an extra ID on the root
          // and working up from there (Thanks to Andrew Dupont for the technique)
          // IE 8 doesn't work on object elements
          if (nodeType === 1 && context.nodeName.toLowerCase() !== 'object') {
            groups = tokenize(selector);
            if (old = context.getAttribute('id')) {
              nid = old.replace(rescape, '\\$&');
            } else {
              context.setAttribute('id', nid);
            }
            nid = '[id=\'' + nid + '\'] ';
            i = groups.length;
            while (i--) {
              groups[i] = nid + toSelector(groups[i]);
            }
            newContext = rsibling.test(selector) && context.parentNode || context;
            newSelector = groups.join(',');
          }
          if (newSelector) {
            try {
              push.apply(results, newContext.querySelectorAll(newSelector));
              return results;
            } catch (qsaError) {
            } finally {
              if (!old) {
                context.removeAttribute('id');
              }
            }
          }
        }
      }
      // All others
      return select(selector.replace(rtrim, '$1'), context, results, seed);
    }
    /**
 * Create key-value caches of limited size
 * @returns {Function(string, Object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
    function createCache() {
      var keys = [];
      function cache(key, value) {
        // Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
        if (keys.push(key += ' ') > Expr.cacheLength) {
          // Only keep the most recent entries
          delete cache[keys.shift()];
        }
        return cache[key] = value;
      }
      return cache;
    }
    /**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
    function markFunction(fn) {
      fn[expando] = true;
      return fn;
    }
    /**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
    function assert(fn) {
      var div = document.createElement('div');
      try {
        return !!fn(div);
      } catch (e) {
        return false;
      } finally {
        // Remove from its parent by default
        if (div.parentNode) {
          div.parentNode.removeChild(div);
        }
        // release memory in IE
        div = null;
      }
    }
    /**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
    function addHandle(attrs, handler) {
      var arr = attrs.split('|'), i = attrs.length;
      while (i--) {
        Expr.attrHandle[arr[i]] = handler;
      }
    }
    /**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
    function siblingCheck(a, b) {
      var cur = b && a, diff = cur && a.nodeType === 1 && b.nodeType === 1 && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE);
      // Use IE sourceIndex if available on both nodes
      if (diff) {
        return diff;
      }
      // Check if b follows a
      if (cur) {
        while (cur = cur.nextSibling) {
          if (cur === b) {
            return -1;
          }
        }
      }
      return a ? 1 : -1;
    }
    /**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
    function createInputPseudo(type) {
      return function (elem) {
        var name = elem.nodeName.toLowerCase();
        return name === 'input' && elem.type === type;
      };
    }
    /**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
    function createButtonPseudo(type) {
      return function (elem) {
        var name = elem.nodeName.toLowerCase();
        return (name === 'input' || name === 'button') && elem.type === type;
      };
    }
    /**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
    function createPositionalPseudo(fn) {
      return markFunction(function (argument) {
        argument = +argument;
        return markFunction(function (seed, matches) {
          var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;
          // Match elements found at the specified indexes
          while (i--) {
            if (seed[j = matchIndexes[i]]) {
              seed[j] = !(matches[j] = seed[j]);
            }
          }
        });
      });
    }
    /**
 * Detect xml
 * @param {Element|Object} elem An element or a document
 */
    isXML = Sizzle.isXML = function (elem) {
      // documentElement is verified for cases where it doesn't yet exist
      // (such as loading iframes in IE - #4833)
      var documentElement = elem && (elem.ownerDocument || elem).documentElement;
      return documentElement ? documentElement.nodeName !== 'HTML' : false;
    };
    // Expose support vars for convenience
    support = Sizzle.support = {};
    /**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
    setDocument = Sizzle.setDocument = function (node) {
      var doc = node ? node.ownerDocument || node : preferredDoc, parent = doc.defaultView;
      // If no document and documentElement is available, return
      if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {
        return document;
      }
      // Set our document
      document = doc;
      docElem = doc.documentElement;
      // Support tests
      documentIsHTML = !isXML(doc);
      // Support: IE>8
      // If iframe document is assigned to "document" variable and if iframe has been reloaded,
      // IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936
      // IE6-8 do not support the defaultView property so parent will be undefined
      if (parent && parent.attachEvent && parent !== parent.top) {
        parent.attachEvent('onbeforeunload', function () {
          setDocument();
        });
      }
      /* Attributes
	---------------------------------------------------------------------- */
      // Support: IE<8
      // Verify that getAttribute really returns attributes and not properties (excepting IE8 booleans)
      support.attributes = assert(function (div) {
        div.className = 'i';
        return !div.getAttribute('className');
      });
      /* getElement(s)By*
	---------------------------------------------------------------------- */
      // Check if getElementsByTagName("*") returns only elements
      support.getElementsByTagName = assert(function (div) {
        div.appendChild(doc.createComment(''));
        return !div.getElementsByTagName('*').length;
      });
      // Check if getElementsByClassName can be trusted
      support.getElementsByClassName = assert(function (div) {
        div.innerHTML = '<div class=\'a\'></div><div class=\'a i\'></div>';
        // Support: Safari<4
        // Catch class over-caching
        div.firstChild.className = 'i';
        // Support: Opera<10
        // Catch gEBCN failure to find non-leading classes
        return div.getElementsByClassName('i').length === 2;
      });
      // Support: IE<10
      // Check if getElementById returns elements by name
      // The broken getElementById methods don't pick up programatically-set names,
      // so use a roundabout getElementsByName test
      support.getById = assert(function (div) {
        docElem.appendChild(div).id = expando;
        return !doc.getElementsByName || !doc.getElementsByName(expando).length;
      });
      // ID find and filter
      if (support.getById) {
        Expr.find['ID'] = function (id, context) {
          if (typeof context.getElementById !== strundefined && documentIsHTML) {
            var m = context.getElementById(id);
            // Check parentNode to catch when Blackberry 4.6 returns
            // nodes that are no longer in the document #6963
            return m && m.parentNode ? [m] : [];
          }
        };
        Expr.filter['ID'] = function (id) {
          var attrId = id.replace(runescape, funescape);
          return function (elem) {
            return elem.getAttribute('id') === attrId;
          };
        };
      } else {
        // Support: IE6/7
        // getElementById is not reliable as a find shortcut
        delete Expr.find['ID'];
        Expr.filter['ID'] = function (id) {
          var attrId = id.replace(runescape, funescape);
          return function (elem) {
            var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode('id');
            return node && node.value === attrId;
          };
        };
      }
      // Tag
      Expr.find['TAG'] = support.getElementsByTagName ? function (tag, context) {
        if (typeof context.getElementsByTagName !== strundefined) {
          return context.getElementsByTagName(tag);
        }
      } : function (tag, context) {
        var elem, tmp = [], i = 0, results = context.getElementsByTagName(tag);
        // Filter out possible comments
        if (tag === '*') {
          while (elem = results[i++]) {
            if (elem.nodeType === 1) {
              tmp.push(elem);
            }
          }
          return tmp;
        }
        return results;
      };
      // Class
      Expr.find['CLASS'] = support.getElementsByClassName && function (className, context) {
        if (typeof context.getElementsByClassName !== strundefined && documentIsHTML) {
          return context.getElementsByClassName(className);
        }
      };
      /* QSA/matchesSelector
	---------------------------------------------------------------------- */
      // QSA and matchesSelector support
      // matchesSelector(:active) reports false when true (IE9/Opera 11.5)
      rbuggyMatches = [];
      // qSa(:focus) reports false when true (Chrome 21)
      // We allow this because of a bug in IE8/9 that throws an error
      // whenever `document.activeElement` is accessed on an iframe
      // So, we allow :focus to pass through QSA all the time to avoid the IE error
      // See http://bugs.jquery.com/ticket/13378
      rbuggyQSA = [];
      if (support.qsa = rnative.test(doc.querySelectorAll)) {
        // Build QSA regex
        // Regex strategy adopted from Diego Perini
        assert(function (div) {
          // Select is set to empty string on purpose
          // This is to test IE's treatment of not explicitly
          // setting a boolean content attribute,
          // since its presence should be enough
          // http://bugs.jquery.com/ticket/12359
          div.innerHTML = '<select><option selected=\'\'></option></select>';
          // Support: IE8
          // Boolean attributes and "value" are not treated correctly
          if (!div.querySelectorAll('[selected]').length) {
            rbuggyQSA.push('\\[' + whitespace + '*(?:value|' + booleans + ')');
          }
          // Webkit/Opera - :checked should return selected option elements
          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
          // IE8 throws error here and will not see later tests
          if (!div.querySelectorAll(':checked').length) {
            rbuggyQSA.push(':checked');
          }
        });
        assert(function (div) {
          // Support: Opera 10-12/IE8
          // ^= $= *= and empty values
          // Should not select anything
          // Support: Windows 8 Native Apps
          // The type attribute is restricted during .innerHTML assignment
          var input = doc.createElement('input');
          input.setAttribute('type', 'hidden');
          div.appendChild(input).setAttribute('t', '');
          if (div.querySelectorAll('[t^=\'\']').length) {
            rbuggyQSA.push('[*^$]=' + whitespace + '*(?:\'\'|"")');
          }
          // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
          // IE8 throws error here and will not see later tests
          if (!div.querySelectorAll(':enabled').length) {
            rbuggyQSA.push(':enabled', ':disabled');
          }
          // Opera 10-11 does not throw on post-comma invalid pseudos
          div.querySelectorAll('*,:x');
          rbuggyQSA.push(',.*:');
        });
      }
      if (support.matchesSelector = rnative.test(matches = docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {
        assert(function (div) {
          // Check to see if it's possible to do matchesSelector
          // on a disconnected node (IE 9)
          support.disconnectedMatch = matches.call(div, 'div');
          // This should fail with an exception
          // Gecko does not error, returns false instead
          matches.call(div, '[s!=\'\']:x');
          rbuggyMatches.push('!=', pseudos);
        });
      }
      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join('|'));
      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join('|'));
      /* Contains
	---------------------------------------------------------------------- */
      // Element contains another
      // Purposefully does not implement inclusive descendent
      // As in, an element does not contain itself
      contains = rnative.test(docElem.contains) || docElem.compareDocumentPosition ? function (a, b) {
        var adown = a.nodeType === 9 ? a.documentElement : a, bup = b && b.parentNode;
        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
      } : function (a, b) {
        if (b) {
          while (b = b.parentNode) {
            if (b === a) {
              return true;
            }
          }
        }
        return false;
      };
      /* Sorting
	---------------------------------------------------------------------- */
      // Document order sorting
      sortOrder = docElem.compareDocumentPosition ? function (a, b) {
        // Flag for duplicate removal
        if (a === b) {
          hasDuplicate = true;
          return 0;
        }
        var compare = b.compareDocumentPosition && a.compareDocumentPosition && a.compareDocumentPosition(b);
        if (compare) {
          // Disconnected nodes
          if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {
            // Choose the first element that is related to our preferred document
            if (a === doc || contains(preferredDoc, a)) {
              return -1;
            }
            if (b === doc || contains(preferredDoc, b)) {
              return 1;
            }
            // Maintain original order
            return sortInput ? indexOf.call(sortInput, a) - indexOf.call(sortInput, b) : 0;
          }
          return compare & 4 ? -1 : 1;
        }
        // Not directly comparable, sort on existence of method
        return a.compareDocumentPosition ? -1 : 1;
      } : function (a, b) {
        var cur, i = 0, aup = a.parentNode, bup = b.parentNode, ap = [a], bp = [b];
        // Exit early if the nodes are identical
        if (a === b) {
          hasDuplicate = true;
          return 0;  // Parentless nodes are either documents or disconnected
        } else if (!aup || !bup) {
          return a === doc ? -1 : b === doc ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf.call(sortInput, a) - indexOf.call(sortInput, b) : 0;  // If the nodes are siblings, we can do a quick check
        } else if (aup === bup) {
          return siblingCheck(a, b);
        }
        // Otherwise we need full lists of their ancestors for comparison
        cur = a;
        while (cur = cur.parentNode) {
          ap.unshift(cur);
        }
        cur = b;
        while (cur = cur.parentNode) {
          bp.unshift(cur);
        }
        // Walk down the tree looking for a discrepancy
        while (ap[i] === bp[i]) {
          i++;
        }
        return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;
      };
      return doc;
    };
    Sizzle.matches = function (expr, elements) {
      return Sizzle(expr, null, null, elements);
    };
    Sizzle.matchesSelector = function (elem, expr) {
      // Set document vars if needed
      if ((elem.ownerDocument || elem) !== document) {
        setDocument(elem);
      }
      // Make sure that attribute selectors are quoted
      expr = expr.replace(rattributeQuotes, '=\'$1\']');
      if (support.matchesSelector && documentIsHTML && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
        try {
          var ret = matches.call(elem, expr);
          // IE 9's matchesSelector returns false on disconnected nodes
          if (ret || support.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {
            return ret;
          }
        } catch (e) {
        }
      }
      return Sizzle(expr, document, null, [elem]).length > 0;
    };
    Sizzle.contains = function (context, elem) {
      // Set document vars if needed
      if ((context.ownerDocument || context) !== document) {
        setDocument(context);
      }
      return contains(context, elem);
    };
    Sizzle.attr = function (elem, name) {
      // Set document vars if needed
      if ((elem.ownerDocument || elem) !== document) {
        setDocument(elem);
      }
      var fn = Expr.attrHandle[name.toLowerCase()],
        // Don't get fooled by Object.prototype properties (jQuery #13807)
        val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;
      return val === undefined ? support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null : val;
    };
    Sizzle.error = function (msg) {
      throw new Error('Syntax error, unrecognized expression: ' + msg);
    };
    /**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
    Sizzle.uniqueSort = function (results) {
      var elem, duplicates = [], j = 0, i = 0;
      // Unless we *know* we can detect duplicates, assume their presence
      hasDuplicate = !support.detectDuplicates;
      sortInput = !support.sortStable && results.slice(0);
      results.sort(sortOrder);
      if (hasDuplicate) {
        while (elem = results[i++]) {
          if (elem === results[i]) {
            j = duplicates.push(i);
          }
        }
        while (j--) {
          results.splice(duplicates[j], 1);
        }
      }
      return results;
    };
    /**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
    getText = Sizzle.getText = function (elem) {
      var node, ret = '', i = 0, nodeType = elem.nodeType;
      if (!nodeType) {
        // If no nodeType, this is expected to be an array
        for (; node = elem[i]; i++) {
          // Do not traverse comment nodes
          ret += getText(node);
        }
      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
        // Use textContent for elements
        // innerText usage removed for consistency of new lines (see #11153)
        if (typeof elem.textContent === 'string') {
          return elem.textContent;
        } else {
          // Traverse its children
          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
            ret += getText(elem);
          }
        }
      } else if (nodeType === 3 || nodeType === 4) {
        return elem.nodeValue;
      }
      // Do not include comment or processing instruction nodes
      return ret;
    };
    Expr = Sizzle.selectors = {
      cacheLength: 50,
      createPseudo: markFunction,
      match: matchExpr,
      attrHandle: {},
      find: {},
      relative: {
        '>': {
          dir: 'parentNode',
          first: true
        },
        ' ': { dir: 'parentNode' },
        '+': {
          dir: 'previousSibling',
          first: true
        },
        '~': { dir: 'previousSibling' }
      },
      preFilter: {
        'ATTR': function (match) {
          match[1] = match[1].replace(runescape, funescape);
          // Move the given value to match[3] whether quoted or unquoted
          match[3] = (match[4] || match[5] || '').replace(runescape, funescape);
          if (match[2] === '~=') {
            match[3] = ' ' + match[3] + ' ';
          }
          return match.slice(0, 4);
        },
        'CHILD': function (match) {
          /* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
          match[1] = match[1].toLowerCase();
          if (match[1].slice(0, 3) === 'nth') {
            // nth-* requires argument
            if (!match[3]) {
              Sizzle.error(match[0]);
            }
            // numeric x and y parameters for Expr.filter.CHILD
            // remember that false/true cast respectively to 0/1
            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === 'even' || match[3] === 'odd'));
            match[5] = +(match[7] + match[8] || match[3] === 'odd');  // other types prohibit arguments
          } else if (match[3]) {
            Sizzle.error(match[0]);
          }
          return match;
        },
        'PSEUDO': function (match) {
          var excess, unquoted = !match[5] && match[2];
          if (matchExpr['CHILD'].test(match[0])) {
            return null;
          }
          // Accept quoted arguments as-is
          if (match[3] && match[4] !== undefined) {
            match[2] = match[4];  // Strip excess characters from unquoted arguments
          } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(')', unquoted.length - excess) - unquoted.length)) {
            // excess is a negative index
            match[0] = match[0].slice(0, excess);
            match[2] = unquoted.slice(0, excess);
          }
          // Return only captures needed by the pseudo filter method (type and argument)
          return match.slice(0, 3);
        }
      },
      filter: {
        'TAG': function (nodeNameSelector) {
          var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
          return nodeNameSelector === '*' ? function () {
            return true;
          } : function (elem) {
            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
          };
        },
        'CLASS': function (className) {
          var pattern = classCache[className + ' '];
          return pattern || (pattern = new RegExp('(^|' + whitespace + ')' + className + '(' + whitespace + '|$)')) && classCache(className, function (elem) {
            return pattern.test(typeof elem.className === 'string' && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute('class') || '');
          });
        },
        'ATTR': function (name, operator, check) {
          return function (elem) {
            var result = Sizzle.attr(elem, name);
            if (result == null) {
              return operator === '!=';
            }
            if (!operator) {
              return true;
            }
            result += '';
            return operator === '=' ? result === check : operator === '!=' ? result !== check : operator === '^=' ? check && result.indexOf(check) === 0 : operator === '*=' ? check && result.indexOf(check) > -1 : operator === '$=' ? check && result.slice(-check.length) === check : operator === '~=' ? (' ' + result + ' ').indexOf(check) > -1 : operator === '|=' ? result === check || result.slice(0, check.length + 1) === check + '-' : false;
          };
        },
        'CHILD': function (type, what, argument, first, last) {
          var simple = type.slice(0, 3) !== 'nth', forward = type.slice(-4) !== 'last', ofType = what === 'of-type';
          return first === 1 && last === 0 ? function (elem) {
            return !!elem.parentNode;
          } : function (elem, context, xml) {
            var cache, outerCache, node, diff, nodeIndex, start, dir = simple !== forward ? 'nextSibling' : 'previousSibling', parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType;
            if (parent) {
              // :(first|last|only)-(child|of-type)
              if (simple) {
                while (dir) {
                  node = elem;
                  while (node = node[dir]) {
                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {
                      return false;
                    }
                  }
                  // Reverse direction for :only-* (if we haven't yet done so)
                  start = dir = type === 'only' && !start && 'nextSibling';
                }
                return true;
              }
              start = [forward ? parent.firstChild : parent.lastChild];
              // non-xml :nth-child(...) stores cache data on `parent`
              if (forward && useCache) {
                // Seek `elem` from a previously-cached index
                outerCache = parent[expando] || (parent[expando] = {});
                cache = outerCache[type] || [];
                nodeIndex = cache[0] === dirruns && cache[1];
                diff = cache[0] === dirruns && cache[2];
                node = nodeIndex && parent.childNodes[nodeIndex];
                while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
                  // When found, cache indexes on `parent` and break
                  if (node.nodeType === 1 && ++diff && node === elem) {
                    outerCache[type] = [
                      dirruns,
                      nodeIndex,
                      diff
                    ];
                    break;
                  }
                }  // Use previously-cached element index if available
              } else if (useCache && (cache = (elem[expando] || (elem[expando] = {}))[type]) && cache[0] === dirruns) {
                diff = cache[1];  // xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)
              } else {
                // Use the same loop as above to seek `elem` from the start
                while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
                  if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
                    // Cache the index of each encountered element
                    if (useCache) {
                      (node[expando] || (node[expando] = {}))[type] = [
                        dirruns,
                        diff
                      ];
                    }
                    if (node === elem) {
                      break;
                    }
                  }
                }
              }
              // Incorporate the offset, then check against cycle size
              diff -= last;
              return diff === first || diff % first === 0 && diff / first >= 0;
            }
          };
        },
        'PSEUDO': function (pseudo, argument) {
          // pseudo-class names are case-insensitive
          // http://www.w3.org/TR/selectors/#pseudo-classes
          // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
          // Remember that setFilters inherits from pseudos
          var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error('unsupported pseudo: ' + pseudo);
          // The user may use createPseudo to indicate that
          // arguments are needed to create the filter function
          // just as Sizzle does
          if (fn[expando]) {
            return fn(argument);
          }
          // But maintain support for old signatures
          if (fn.length > 1) {
            args = [
              pseudo,
              pseudo,
              '',
              argument
            ];
            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {
              var idx, matched = fn(seed, argument), i = matched.length;
              while (i--) {
                idx = indexOf.call(seed, matched[i]);
                seed[idx] = !(matches[idx] = matched[i]);
              }
            }) : function (elem) {
              return fn(elem, 0, args);
            };
          }
          return fn;
        }
      },
      pseudos: {
        'not': markFunction(function (selector) {
          // Trim the selector passed to compile
          // to avoid treating leading and trailing
          // spaces as combinators
          var input = [], results = [], matcher = compile(selector.replace(rtrim, '$1'));
          return matcher[expando] ? markFunction(function (seed, matches, context, xml) {
            var elem, unmatched = matcher(seed, null, xml, []), i = seed.length;
            // Match elements unmatched by `matcher`
            while (i--) {
              if (elem = unmatched[i]) {
                seed[i] = !(matches[i] = elem);
              }
            }
          }) : function (elem, context, xml) {
            input[0] = elem;
            matcher(input, null, xml, results);
            return !results.pop();
          };
        }),
        'has': markFunction(function (selector) {
          return function (elem) {
            return Sizzle(selector, elem).length > 0;
          };
        }),
        'contains': markFunction(function (text) {
          return function (elem) {
            return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;
          };
        }),
        'lang': markFunction(function (lang) {
          // lang value must be a valid identifier
          if (!ridentifier.test(lang || '')) {
            Sizzle.error('unsupported lang: ' + lang);
          }
          lang = lang.replace(runescape, funescape).toLowerCase();
          return function (elem) {
            var elemLang;
            do {
              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute('xml:lang') || elem.getAttribute('lang')) {
                elemLang = elemLang.toLowerCase();
                return elemLang === lang || elemLang.indexOf(lang + '-') === 0;
              }
            } while ((elem = elem.parentNode) && elem.nodeType === 1);
            return false;
          };
        }),
        'target': function (elem) {
          var hash = window.location && window.location.hash;
          return hash && hash.slice(1) === elem.id;
        },
        'root': function (elem) {
          return elem === docElem;
        },
        'focus': function (elem) {
          return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
        },
        'enabled': function (elem) {
          return elem.disabled === false;
        },
        'disabled': function (elem) {
          return elem.disabled === true;
        },
        'checked': function (elem) {
          // In CSS3, :checked should return both checked and selected elements
          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
          var nodeName = elem.nodeName.toLowerCase();
          return nodeName === 'input' && !!elem.checked || nodeName === 'option' && !!elem.selected;
        },
        'selected': function (elem) {
          // Accessing this property makes selected-by-default
          // options in Safari work properly
          if (elem.parentNode) {
            elem.parentNode.selectedIndex;
          }
          return elem.selected === true;
        },
        'empty': function (elem) {
          // http://www.w3.org/TR/selectors/#empty-pseudo
          // :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),
          //   not comment, processing instructions, or others
          // Thanks to Diego Perini for the nodeName shortcut
          //   Greater than "@" means alpha characters (specifically not starting with "#" or "?")
          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
            if (elem.nodeName > '@' || elem.nodeType === 3 || elem.nodeType === 4) {
              return false;
            }
          }
          return true;
        },
        'parent': function (elem) {
          return !Expr.pseudos['empty'](elem);
        },
        'header': function (elem) {
          return rheader.test(elem.nodeName);
        },
        'input': function (elem) {
          return rinputs.test(elem.nodeName);
        },
        'button': function (elem) {
          var name = elem.nodeName.toLowerCase();
          return name === 'input' && elem.type === 'button' || name === 'button';
        },
        'text': function (elem) {
          var attr;
          // IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)
          // use getAttribute instead to test this case
          return elem.nodeName.toLowerCase() === 'input' && elem.type === 'text' && ((attr = elem.getAttribute('type')) == null || attr.toLowerCase() === elem.type);
        },
        'first': createPositionalPseudo(function () {
          return [0];
        }),
        'last': createPositionalPseudo(function (matchIndexes, length) {
          return [length - 1];
        }),
        'eq': createPositionalPseudo(function (matchIndexes, length, argument) {
          return [argument < 0 ? argument + length : argument];
        }),
        'even': createPositionalPseudo(function (matchIndexes, length) {
          var i = 0;
          for (; i < length; i += 2) {
            matchIndexes.push(i);
          }
          return matchIndexes;
        }),
        'odd': createPositionalPseudo(function (matchIndexes, length) {
          var i = 1;
          for (; i < length; i += 2) {
            matchIndexes.push(i);
          }
          return matchIndexes;
        }),
        'lt': createPositionalPseudo(function (matchIndexes, length, argument) {
          var i = argument < 0 ? argument + length : argument;
          for (; --i >= 0;) {
            matchIndexes.push(i);
          }
          return matchIndexes;
        }),
        'gt': createPositionalPseudo(function (matchIndexes, length, argument) {
          var i = argument < 0 ? argument + length : argument;
          for (; ++i < length;) {
            matchIndexes.push(i);
          }
          return matchIndexes;
        })
      }
    };
    Expr.pseudos['nth'] = Expr.pseudos['eq'];
    // Add button/input type pseudos
    for (i in {
        radio: true,
        checkbox: true,
        file: true,
        password: true,
        image: true
      }) {
      Expr.pseudos[i] = createInputPseudo(i);
    }
    for (i in {
        submit: true,
        reset: true
      }) {
      Expr.pseudos[i] = createButtonPseudo(i);
    }
    // Easy API for creating new setFilters
    function setFilters() {
    }
    setFilters.prototype = Expr.filters = Expr.pseudos;
    Expr.setFilters = new setFilters();
    function tokenize(selector, parseOnly) {
      var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + ' '];
      if (cached) {
        return parseOnly ? 0 : cached.slice(0);
      }
      soFar = selector;
      groups = [];
      preFilters = Expr.preFilter;
      while (soFar) {
        // Comma and first run
        if (!matched || (match = rcomma.exec(soFar))) {
          if (match) {
            // Don't consume trailing commas as valid
            soFar = soFar.slice(match[0].length) || soFar;
          }
          groups.push(tokens = []);
        }
        matched = false;
        // Combinators
        if (match = rcombinators.exec(soFar)) {
          matched = match.shift();
          tokens.push({
            value: matched,
            type: match[0].replace(rtrim, ' ')
          });
          soFar = soFar.slice(matched.length);
        }
        // Filters
        for (type in Expr.filter) {
          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
            matched = match.shift();
            tokens.push({
              value: matched,
              type: type,
              matches: match
            });
            soFar = soFar.slice(matched.length);
          }
        }
        if (!matched) {
          break;
        }
      }
      // Return the length of the invalid excess
      // if we're just parsing
      // Otherwise, throw an error or return tokens
      return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);
    }
    function toSelector(tokens) {
      var i = 0, len = tokens.length, selector = '';
      for (; i < len; i++) {
        selector += tokens[i].value;
      }
      return selector;
    }
    function addCombinator(matcher, combinator, base) {
      var dir = combinator.dir, checkNonElements = base && dir === 'parentNode', doneName = done++;
      return combinator.first ? function (elem, context, xml) {
        while (elem = elem[dir]) {
          if (elem.nodeType === 1 || checkNonElements) {
            return matcher(elem, context, xml);
          }
        }
      } : function (elem, context, xml) {
        var data, cache, outerCache, dirkey = dirruns + ' ' + doneName;
        // We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
        if (xml) {
          while (elem = elem[dir]) {
            if (elem.nodeType === 1 || checkNonElements) {
              if (matcher(elem, context, xml)) {
                return true;
              }
            }
          }
        } else {
          while (elem = elem[dir]) {
            if (elem.nodeType === 1 || checkNonElements) {
              outerCache = elem[expando] || (elem[expando] = {});
              if ((cache = outerCache[dir]) && cache[0] === dirkey) {
                if ((data = cache[1]) === true || data === cachedruns) {
                  return data === true;
                }
              } else {
                cache = outerCache[dir] = [dirkey];
                cache[1] = matcher(elem, context, xml) || cachedruns;
                if (cache[1] === true) {
                  return true;
                }
              }
            }
          }
        }
      };
    }
    function elementMatcher(matchers) {
      return matchers.length > 1 ? function (elem, context, xml) {
        var i = matchers.length;
        while (i--) {
          if (!matchers[i](elem, context, xml)) {
            return false;
          }
        }
        return true;
      } : matchers[0];
    }
    function condense(unmatched, map, filter, context, xml) {
      var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = map != null;
      for (; i < len; i++) {
        if (elem = unmatched[i]) {
          if (!filter || filter(elem, context, xml)) {
            newUnmatched.push(elem);
            if (mapped) {
              map.push(i);
            }
          }
        }
      }
      return newUnmatched;
    }
    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
      if (postFilter && !postFilter[expando]) {
        postFilter = setMatcher(postFilter);
      }
      if (postFinder && !postFinder[expando]) {
        postFinder = setMatcher(postFinder, postSelector);
      }
      return markFunction(function (seed, results, context, xml) {
        var temp, i, elem, preMap = [], postMap = [], preexisting = results.length,
          // Get initial elements from seed or context
          elems = seed || multipleContexts(selector || '*', context.nodeType ? [context] : context, []),
          // Prefilter to get matcher input, preserving a map for seed-results synchronization
          matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems, matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
        // Find primary matches
        if (matcher) {
          matcher(matcherIn, matcherOut, context, xml);
        }
        // Apply postFilter
        if (postFilter) {
          temp = condense(matcherOut, postMap);
          postFilter(temp, [], context, xml);
          // Un-match failing elements by moving them back to matcherIn
          i = temp.length;
          while (i--) {
            if (elem = temp[i]) {
              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
            }
          }
        }
        if (seed) {
          if (postFinder || preFilter) {
            if (postFinder) {
              // Get the final matcherOut by condensing this intermediate into postFinder contexts
              temp = [];
              i = matcherOut.length;
              while (i--) {
                if (elem = matcherOut[i]) {
                  // Restore matcherIn since elem is not yet a final match
                  temp.push(matcherIn[i] = elem);
                }
              }
              postFinder(null, matcherOut = [], temp, xml);
            }
            // Move matched elements from seed to results to keep them synchronized
            i = matcherOut.length;
            while (i--) {
              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf.call(seed, elem) : preMap[i]) > -1) {
                seed[temp] = !(results[temp] = elem);
              }
            }
          }  // Add elements to results, through postFinder if defined
        } else {
          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
          if (postFinder) {
            postFinder(null, results, matcherOut, xml);
          } else {
            push.apply(results, matcherOut);
          }
        }
      });
    }
    function matcherFromTokens(tokens) {
      var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[' '], i = leadingRelative ? 1 : 0,
        // The foundational matcher ensures that elements are reachable from top-level context(s)
        matchContext = addCombinator(function (elem) {
          return elem === checkContext;
        }, implicitRelative, true), matchAnyContext = addCombinator(function (elem) {
          return indexOf.call(checkContext, elem) > -1;
        }, implicitRelative, true), matchers = [function (elem, context, xml) {
            return !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
          }];
      for (; i < len; i++) {
        if (matcher = Expr.relative[tokens[i].type]) {
          matchers = [addCombinator(elementMatcher(matchers), matcher)];
        } else {
          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);
          // Return special upon seeing a positional matcher
          if (matcher[expando]) {
            // Find the next relative operator (if any) for proper handling
            j = ++i;
            for (; j < len; j++) {
              if (Expr.relative[tokens[j].type]) {
                break;
              }
            }
            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({ value: tokens[i - 2].type === ' ' ? '*' : '' })).replace(rtrim, '$1'), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));
          }
          matchers.push(matcher);
        }
      }
      return elementMatcher(matchers);
    }
    function matcherFromGroupMatchers(elementMatchers, setMatchers) {
      // A counter to specify which element is currently being matched
      var matcherCachedRuns = 0, bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function (seed, context, xml, results, expandContext) {
          var elem, j, matcher, setMatched = [], matchedCount = 0, i = '0', unmatched = seed && [], outermost = expandContext != null, contextBackup = outermostContext,
            // We must always have either seed elements or context
            elems = seed || byElement && Expr.find['TAG']('*', expandContext && context.parentNode || context),
            // Use integer dirruns iff this is the outermost matcher
            dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1;
          if (outermost) {
            outermostContext = context !== document && context;
            cachedruns = matcherCachedRuns;
          }
          // Add elements passing elementMatchers directly to results
          // Keep `i` a string if there are no elements so `matchedCount` will be "00" below
          for (; (elem = elems[i]) != null; i++) {
            if (byElement && elem) {
              j = 0;
              while (matcher = elementMatchers[j++]) {
                if (matcher(elem, context, xml)) {
                  results.push(elem);
                  break;
                }
              }
              if (outermost) {
                dirruns = dirrunsUnique;
                cachedruns = ++matcherCachedRuns;
              }
            }
            // Track unmatched elements for set filters
            if (bySet) {
              // They will have gone through all possible matchers
              if (elem = !matcher && elem) {
                matchedCount--;
              }
              // Lengthen the array for every element, matched or not
              if (seed) {
                unmatched.push(elem);
              }
            }
          }
          // Apply set filters to unmatched elements
          matchedCount += i;
          if (bySet && i !== matchedCount) {
            j = 0;
            while (matcher = setMatchers[j++]) {
              matcher(unmatched, setMatched, context, xml);
            }
            if (seed) {
              // Reintegrate element matches to eliminate the need for sorting
              if (matchedCount > 0) {
                while (i--) {
                  if (!(unmatched[i] || setMatched[i])) {
                    setMatched[i] = pop.call(results);
                  }
                }
              }
              // Discard index placeholder values to get only actual matches
              setMatched = condense(setMatched);
            }
            // Add matches to results
            push.apply(results, setMatched);
            // Seedless set matches succeeding multiple successful matchers stipulate sorting
            if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {
              Sizzle.uniqueSort(results);
            }
          }
          // Override manipulation of globals by nested matchers
          if (outermost) {
            dirruns = dirrunsUnique;
            outermostContext = contextBackup;
          }
          return unmatched;
        };
      return bySet ? markFunction(superMatcher) : superMatcher;
    }
    compile = Sizzle.compile = function (selector, group) {
      var i, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + ' '];
      if (!cached) {
        // Generate a function of recursive functions that can be used to check each element
        if (!group) {
          group = tokenize(selector);
        }
        i = group.length;
        while (i--) {
          cached = matcherFromTokens(group[i]);
          if (cached[expando]) {
            setMatchers.push(cached);
          } else {
            elementMatchers.push(cached);
          }
        }
        // Cache the compiled function
        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
      }
      return cached;
    };
    function multipleContexts(selector, contexts, results) {
      var i = 0, len = contexts.length;
      for (; i < len; i++) {
        Sizzle(selector, contexts[i], results);
      }
      return results;
    }
    function select(selector, context, results, seed) {
      var i, tokens, token, type, find, match = tokenize(selector);
      if (!seed) {
        // Try to minimize operations if there is only one group
        if (match.length === 1) {
          // Take a shortcut and set the context if the root selector is an ID
          tokens = match[0] = match[0].slice(0);
          if (tokens.length > 2 && (token = tokens[0]).type === 'ID' && support.getById && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
            context = (Expr.find['ID'](token.matches[0].replace(runescape, funescape), context) || [])[0];
            if (!context) {
              return results;
            }
            selector = selector.slice(tokens.shift().value.length);
          }
          // Fetch a seed set for right-to-left matching
          i = matchExpr['needsContext'].test(selector) ? 0 : tokens.length;
          while (i--) {
            token = tokens[i];
            // Abort if we hit a combinator
            if (Expr.relative[type = token.type]) {
              break;
            }
            if (find = Expr.find[type]) {
              // Search, expanding context for leading sibling combinators
              if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && context.parentNode || context)) {
                // If seed is empty or no tokens remain, we can return early
                tokens.splice(i, 1);
                selector = seed.length && toSelector(tokens);
                if (!selector) {
                  push.apply(results, seed);
                  return results;
                }
                break;
              }
            }
          }
        }
      }
      // Compile and execute a filtering function
      // Provide `match` to avoid retokenization if we modified the selector above
      compile(selector, match)(seed, context, !documentIsHTML, results, rsibling.test(selector));
      return results;
    }
    // One-time assignments
    // Sort stability
    support.sortStable = expando.split('').sort(sortOrder).join('') === expando;
    // Support: Chrome<14
    // Always assume duplicates if they aren't passed to the comparison function
    support.detectDuplicates = hasDuplicate;
    // Initialize against the default document
    setDocument();
    // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
    // Detached nodes confoundingly follow *each other*
    support.sortDetached = assert(function (div1) {
      // Should return 1, but returns 4 (following)
      return div1.compareDocumentPosition(document.createElement('div')) & 1;
    });
    // Support: IE<8
    // Prevent attribute/property "interpolation"
    // http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
    if (!assert(function (div) {
        div.innerHTML = '<a href=\'#\'></a>';
        return div.firstChild.getAttribute('href') === '#';
      })) {
      addHandle('type|href|height|width', function (elem, name, isXML) {
        if (!isXML) {
          return elem.getAttribute(name, name.toLowerCase() === 'type' ? 1 : 2);
        }
      });
    }
    // Support: IE<9
    // Use defaultValue in place of getAttribute("value")
    if (!support.attributes || !assert(function (div) {
        div.innerHTML = '<input/>';
        div.firstChild.setAttribute('value', '');
        return div.firstChild.getAttribute('value') === '';
      })) {
      addHandle('value', function (elem, name, isXML) {
        if (!isXML && elem.nodeName.toLowerCase() === 'input') {
          return elem.defaultValue;
        }
      });
    }
    // Support: IE<9
    // Use getAttributeNode to fetch booleans when getAttribute lies
    if (!assert(function (div) {
        return div.getAttribute('disabled') == null;
      })) {
      addHandle(booleans, function (elem, name, isXML) {
        var val;
        if (!isXML) {
          return (val = elem.getAttributeNode(name)) && val.specified ? val.value : elem[name] === true ? name.toLowerCase() : null;
        }
      });
    }
    jQuery.find = Sizzle;
    jQuery.expr = Sizzle.selectors;
    jQuery.expr[':'] = jQuery.expr.pseudos;
    jQuery.unique = Sizzle.uniqueSort;
    jQuery.text = Sizzle.getText;
    jQuery.isXMLDoc = Sizzle.isXML;
    jQuery.contains = Sizzle.contains;
  }(window));
  // String to Object options format cache
  var optionsCache = {};
  // Convert String-formatted options into Object-formatted ones and store in cache
  function createOptions(options) {
    var object = optionsCache[options] = {};
    jQuery.each(options.match(core_rnotwhite) || [], function (_, flag) {
      object[flag] = true;
    });
    return object;
  }
  /*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
  jQuery.Callbacks = function (options) {
    // Convert options from String-formatted to Object-formatted if needed
    // (we check in cache first)
    options = typeof options === 'string' ? optionsCache[options] || createOptions(options) : jQuery.extend({}, options);
    var
      // Last fire value (for non-forgettable lists)
      memory,
      // Flag to know if list was already fired
      fired,
      // Flag to know if list is currently firing
      firing,
      // First callback to fire (used internally by add and fireWith)
      firingStart,
      // End of the loop when firing
      firingLength,
      // Index of currently firing callback (modified by remove if needed)
      firingIndex,
      // Actual callback list
      list = [],
      // Stack of fire calls for repeatable lists
      stack = !options.once && [],
      // Fire callbacks
      fire = function (data) {
        memory = options.memory && data;
        fired = true;
        firingIndex = firingStart || 0;
        firingStart = 0;
        firingLength = list.length;
        firing = true;
        for (; list && firingIndex < firingLength; firingIndex++) {
          if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {
            memory = false;
            // To prevent further calls using add
            break;
          }
        }
        firing = false;
        if (list) {
          if (stack) {
            if (stack.length) {
              fire(stack.shift());
            }
          } else if (memory) {
            list = [];
          } else {
            self.disable();
          }
        }
      },
      // Actual Callbacks object
      self = {
        add: function () {
          if (list) {
            // First, we save the current length
            var start = list.length;
            (function add(args) {
              jQuery.each(args, function (_, arg) {
                var type = jQuery.type(arg);
                if (type === 'function') {
                  if (!options.unique || !self.has(arg)) {
                    list.push(arg);
                  }
                } else if (arg && arg.length && type !== 'string') {
                  // Inspect recursively
                  add(arg);
                }
              });
            }(arguments));
            // Do we need to add the callbacks to the
            // current firing batch?
            if (firing) {
              firingLength = list.length;  // With memory, if we're not firing then
                                           // we should call right away
            } else if (memory) {
              firingStart = start;
              fire(memory);
            }
          }
          return this;
        },
        remove: function () {
          if (list) {
            jQuery.each(arguments, function (_, arg) {
              var index;
              while ((index = jQuery.inArray(arg, list, index)) > -1) {
                list.splice(index, 1);
                // Handle firing indexes
                if (firing) {
                  if (index <= firingLength) {
                    firingLength--;
                  }
                  if (index <= firingIndex) {
                    firingIndex--;
                  }
                }
              }
            });
          }
          return this;
        },
        has: function (fn) {
          return fn ? jQuery.inArray(fn, list) > -1 : !!(list && list.length);
        },
        empty: function () {
          list = [];
          firingLength = 0;
          return this;
        },
        disable: function () {
          list = stack = memory = undefined;
          return this;
        },
        disabled: function () {
          return !list;
        },
        lock: function () {
          stack = undefined;
          if (!memory) {
            self.disable();
          }
          return this;
        },
        locked: function () {
          return !stack;
        },
        fireWith: function (context, args) {
          if (list && (!fired || stack)) {
            args = args || [];
            args = [
              context,
              args.slice ? args.slice() : args
            ];
            if (firing) {
              stack.push(args);
            } else {
              fire(args);
            }
          }
          return this;
        },
        fire: function () {
          self.fireWith(this, arguments);
          return this;
        },
        fired: function () {
          return !!fired;
        }
      };
    return self;
  };
  jQuery.extend({
    Deferred: function (func) {
      var tuples = [
          [
            'resolve',
            'done',
            jQuery.Callbacks('once memory'),
            'resolved'
          ],
          [
            'reject',
            'fail',
            jQuery.Callbacks('once memory'),
            'rejected'
          ],
          [
            'notify',
            'progress',
            jQuery.Callbacks('memory')
          ]
        ], state = 'pending', promise = {
          state: function () {
            return state;
          },
          always: function () {
            deferred.done(arguments).fail(arguments);
            return this;
          },
          then: function () {
            var fns = arguments;
            return jQuery.Deferred(function (newDefer) {
              jQuery.each(tuples, function (i, tuple) {
                var action = tuple[0], fn = jQuery.isFunction(fns[i]) && fns[i];
                // deferred[ done | fail | progress ] for forwarding actions to newDefer
                deferred[tuple[1]](function () {
                  var returned = fn && fn.apply(this, arguments);
                  if (returned && jQuery.isFunction(returned.promise)) {
                    returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify);
                  } else {
                    newDefer[action + 'With'](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments);
                  }
                });
              });
              fns = null;
            }).promise();
          },
          promise: function (obj) {
            return obj != null ? jQuery.extend(obj, promise) : promise;
          }
        }, deferred = {};
      // Keep pipe for back-compat
      promise.pipe = promise.then;
      // Add list-specific methods
      jQuery.each(tuples, function (i, tuple) {
        var list = tuple[2], stateString = tuple[3];
        // promise[ done | fail | progress ] = list.add
        promise[tuple[1]] = list.add;
        // Handle state
        if (stateString) {
          list.add(function () {
            // state = [ resolved | rejected ]
            state = stateString;  // [ reject_list | resolve_list ].disable; progress_list.lock
          }, tuples[i ^ 1][2].disable, tuples[2][2].lock);
        }
        // deferred[ resolve | reject | notify ]
        deferred[tuple[0]] = function () {
          deferred[tuple[0] + 'With'](this === deferred ? promise : this, arguments);
          return this;
        };
        deferred[tuple[0] + 'With'] = list.fireWith;
      });
      // Make the deferred a promise
      promise.promise(deferred);
      // Call given func if any
      if (func) {
        func.call(deferred, deferred);
      }
      // All done!
      return deferred;
    },
    when: function (subordinate) {
      var i = 0, resolveValues = core_slice.call(arguments), length = resolveValues.length,
        // the count of uncompleted subordinates
        remaining = length !== 1 || subordinate && jQuery.isFunction(subordinate.promise) ? length : 0,
        // the master Deferred. If resolveValues consist of only a single Deferred, just use that.
        deferred = remaining === 1 ? subordinate : jQuery.Deferred(),
        // Update function for both resolve and progress values
        updateFunc = function (i, contexts, values) {
          return function (value) {
            contexts[i] = this;
            values[i] = arguments.length > 1 ? core_slice.call(arguments) : value;
            if (values === progressValues) {
              deferred.notifyWith(contexts, values);
            } else if (!--remaining) {
              deferred.resolveWith(contexts, values);
            }
          };
        }, progressValues, progressContexts, resolveContexts;
      // add listeners to Deferred subordinates; treat others as resolved
      if (length > 1) {
        progressValues = new Array(length);
        progressContexts = new Array(length);
        resolveContexts = new Array(length);
        for (; i < length; i++) {
          if (resolveValues[i] && jQuery.isFunction(resolveValues[i].promise)) {
            resolveValues[i].promise().done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject).progress(updateFunc(i, progressContexts, progressValues));
          } else {
            --remaining;
          }
        }
      }
      // if we're not waiting on anything, resolve the master
      if (!remaining) {
        deferred.resolveWith(resolveContexts, resolveValues);
      }
      return deferred.promise();
    }
  });
  jQuery.support = function (support) {
    var input = document.createElement('input'), fragment = document.createDocumentFragment(), div = document.createElement('div'), select = document.createElement('select'), opt = select.appendChild(document.createElement('option'));
    // Finish early in limited environments
    if (!input.type) {
      return support;
    }
    input.type = 'checkbox';
    // Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3
    // Check the default checkbox/radio value ("" on old WebKit; "on" elsewhere)
    support.checkOn = input.value !== '';
    // Must access the parent to make an option select properly
    // Support: IE9, IE10
    support.optSelected = opt.selected;
    // Will be defined later
    support.reliableMarginRight = true;
    support.boxSizingReliable = true;
    support.pixelPosition = false;
    // Make sure checked status is properly cloned
    // Support: IE9, IE10
    input.checked = true;
    support.noCloneChecked = input.cloneNode(true).checked;
    // Make sure that the options inside disabled selects aren't marked as disabled
    // (WebKit marks them as disabled)
    select.disabled = true;
    support.optDisabled = !opt.disabled;
    // Check if an input maintains its value after becoming a radio
    // Support: IE9, IE10
    input = document.createElement('input');
    input.value = 't';
    input.type = 'radio';
    support.radioValue = input.value === 't';
    // #11217 - WebKit loses check when the name is after the checked attribute
    input.setAttribute('checked', 't');
    input.setAttribute('name', 't');
    fragment.appendChild(input);
    // Support: Safari 5.1, Android 4.x, Android 2.3
    // old WebKit doesn't clone checked state correctly in fragments
    support.checkClone = fragment.cloneNode(true).cloneNode(true).lastChild.checked;
    // Support: Firefox, Chrome, Safari
    // Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)
    support.focusinBubbles = 'onfocusin' in window;
    div.style.backgroundClip = 'content-box';
    div.cloneNode(true).style.backgroundClip = '';
    support.clearCloneStyle = div.style.backgroundClip === 'content-box';
    // Run tests that need a body at doc ready
    jQuery(function () {
      var container, marginDiv,
        // Support: Firefox, Android 2.3 (Prefixed box-sizing versions).
        divReset = 'padding:0;margin:0;border:0;display:block;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box', body = document.getElementsByTagName('body')[0];
      if (!body) {
        // Return for frameset docs that don't have a body
        return;
      }
      container = document.createElement('div');
      container.style.cssText = 'border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px';
      // Check box-sizing and margin behavior.
      body.appendChild(container).appendChild(div);
      div.innerHTML = '';
      // Support: Firefox, Android 2.3 (Prefixed box-sizing versions).
      div.style.cssText = '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%';
      // Workaround failing boxSizing test due to offsetWidth returning wrong value
      // with some non-1 values of body zoom, ticket #13543
      jQuery.swap(body, body.style.zoom != null ? { zoom: 1 } : {}, function () {
        support.boxSizing = div.offsetWidth === 4;
      });
      // Use window.getComputedStyle because jsdom on node.js will break without it.
      if (window.getComputedStyle) {
        support.pixelPosition = (window.getComputedStyle(div, null) || {}).top !== '1%';
        support.boxSizingReliable = (window.getComputedStyle(div, null) || { width: '4px' }).width === '4px';
        // Support: Android 2.3
        // Check if div with explicit width and no margin-right incorrectly
        // gets computed margin-right based on width of container. (#3333)
        // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
        marginDiv = div.appendChild(document.createElement('div'));
        marginDiv.style.cssText = div.style.cssText = divReset;
        marginDiv.style.marginRight = marginDiv.style.width = '0';
        div.style.width = '1px';
        support.reliableMarginRight = !parseFloat((window.getComputedStyle(marginDiv, null) || {}).marginRight);
      }
      body.removeChild(container);
    });
    return support;
  }({});
  /*
	Implementation Summary

	1. Enforce API surface and semantic compatibility with 1.9.x branch
	2. Improve the module's maintainability by reducing the storage
		paths to a single mechanism.
	3. Use the same single mechanism to support "private" and "user" data.
	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
	5. Avoid exposing implementation details on user objects (eg. expando properties)
	6. Provide a clear path for implementation upgrade to WeakMap in 2014
*/
  var data_user, data_priv, rbrace = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/, rmultiDash = /([A-Z])/g;
  function Data() {
    // Support: Android < 4,
    // Old WebKit does not have Object.preventExtensions/freeze method,
    // return new empty object instead with no [[set]] accessor
    Object.defineProperty(this.cache = {}, 0, {
      get: function () {
        return {};
      }
    });
    this.expando = jQuery.expando + Math.random();
  }
  Data.uid = 1;
  Data.accepts = function (owner) {
    // Accepts only:
    //  - Node
    //    - Node.ELEMENT_NODE
    //    - Node.DOCUMENT_NODE
    //  - Object
    //    - Any
    return owner.nodeType ? owner.nodeType === 1 || owner.nodeType === 9 : true;
  };
  Data.prototype = {
    key: function (owner) {
      // We can accept data for non-element nodes in modern browsers,
      // but we should not, see #8335.
      // Always return the key for a frozen object.
      if (!Data.accepts(owner)) {
        return 0;
      }
      var descriptor = {},
        // Check if the owner object already has a cache key
        unlock = owner[this.expando];
      // If not, create one
      if (!unlock) {
        unlock = Data.uid++;
        // Secure it in a non-enumerable, non-writable property
        try {
          descriptor[this.expando] = { value: unlock };
          Object.defineProperties(owner, descriptor);  // Support: Android < 4
                                                       // Fallback to a less secure definition
        } catch (e) {
          descriptor[this.expando] = unlock;
          jQuery.extend(owner, descriptor);
        }
      }
      // Ensure the cache object
      if (!this.cache[unlock]) {
        this.cache[unlock] = {};
      }
      return unlock;
    },
    set: function (owner, data, value) {
      var prop,
        // There may be an unlock assigned to this node,
        // if there is no entry for this "owner", create one inline
        // and set the unlock as though an owner entry had always existed
        unlock = this.key(owner), cache = this.cache[unlock];
      // Handle: [ owner, key, value ] args
      if (typeof data === 'string') {
        cache[data] = value;  // Handle: [ owner, { properties } ] args
      } else {
        // Fresh assignments by object are shallow copied
        if (jQuery.isEmptyObject(cache)) {
          jQuery.extend(this.cache[unlock], data);  // Otherwise, copy the properties one-by-one to the cache object
        } else {
          for (prop in data) {
            cache[prop] = data[prop];
          }
        }
      }
      return cache;
    },
    get: function (owner, key) {
      // Either a valid cache is found, or will be created.
      // New caches will be created and the unlock returned,
      // allowing direct access to the newly created
      // empty data object. A valid owner object must be provided.
      var cache = this.cache[this.key(owner)];
      return key === undefined ? cache : cache[key];
    },
    access: function (owner, key, value) {
      var stored;
      // In cases where either:
      //
      //   1. No key was specified
      //   2. A string key was specified, but no value provided
      //
      // Take the "read" path and allow the get method to determine
      // which value to return, respectively either:
      //
      //   1. The entire cache object
      //   2. The data stored at the key
      //
      if (key === undefined || key && typeof key === 'string' && value === undefined) {
        stored = this.get(owner, key);
        return stored !== undefined ? stored : this.get(owner, jQuery.camelCase(key));
      }
      // [*]When the key is not a string, or both a key and value
      // are specified, set or extend (existing objects) with either:
      //
      //   1. An object of properties
      //   2. A key and value
      //
      this.set(owner, key, value);
      // Since the "set" path can have two possible entry points
      // return the expected data based on which path was taken[*]
      return value !== undefined ? value : key;
    },
    remove: function (owner, key) {
      var i, name, camel, unlock = this.key(owner), cache = this.cache[unlock];
      if (key === undefined) {
        this.cache[unlock] = {};
      } else {
        // Support array or space separated string of keys
        if (jQuery.isArray(key)) {
          // If "name" is an array of keys...
          // When data is initially created, via ("key", "val") signature,
          // keys will be converted to camelCase.
          // Since there is no way to tell _how_ a key was added, remove
          // both plain key and camelCase key. #12786
          // This will only penalize the array argument path.
          name = key.concat(key.map(jQuery.camelCase));
        } else {
          camel = jQuery.camelCase(key);
          // Try the string as a key before any manipulation
          if (key in cache) {
            name = [
              key,
              camel
            ];
          } else {
            // If a key with the spaces exists, use it.
            // Otherwise, create an array by matching non-whitespace
            name = camel;
            name = name in cache ? [name] : name.match(core_rnotwhite) || [];
          }
        }
        i = name.length;
        while (i--) {
          delete cache[name[i]];
        }
      }
    },
    hasData: function (owner) {
      return !jQuery.isEmptyObject(this.cache[owner[this.expando]] || {});
    },
    discard: function (owner) {
      if (owner[this.expando]) {
        delete this.cache[owner[this.expando]];
      }
    }
  };
  // These may be used throughout the jQuery core codebase
  data_user = new Data();
  data_priv = new Data();
  jQuery.extend({
    acceptData: Data.accepts,
    hasData: function (elem) {
      return data_user.hasData(elem) || data_priv.hasData(elem);
    },
    data: function (elem, name, data) {
      return data_user.access(elem, name, data);
    },
    removeData: function (elem, name) {
      data_user.remove(elem, name);
    },
    _data: function (elem, name, data) {
      return data_priv.access(elem, name, data);
    },
    _removeData: function (elem, name) {
      data_priv.remove(elem, name);
    }
  });
  jQuery.fn.extend({
    data: function (key, value) {
      var attrs, name, elem = this[0], i = 0, data = null;
      // Gets all values
      if (key === undefined) {
        if (this.length) {
          data = data_user.get(elem);
          if (elem.nodeType === 1 && !data_priv.get(elem, 'hasDataAttrs')) {
            attrs = elem.attributes;
            for (; i < attrs.length; i++) {
              name = attrs[i].name;
              if (name.indexOf('data-') === 0) {
                name = jQuery.camelCase(name.slice(5));
                dataAttr(elem, name, data[name]);
              }
            }
            data_priv.set(elem, 'hasDataAttrs', true);
          }
        }
        return data;
      }
      // Sets multiple values
      if (typeof key === 'object') {
        return this.each(function () {
          data_user.set(this, key);
        });
      }
      return jQuery.access(this, function (value) {
        var data, camelKey = jQuery.camelCase(key);
        // The calling jQuery object (element matches) is not empty
        // (and therefore has an element appears at this[ 0 ]) and the
        // `value` parameter was not undefined. An empty jQuery object
        // will result in `undefined` for elem = this[ 0 ] which will
        // throw an exception if an attempt to read a data cache is made.
        if (elem && value === undefined) {
          // Attempt to get data from the cache
          // with the key as-is
          data = data_user.get(elem, key);
          if (data !== undefined) {
            return data;
          }
          // Attempt to get data from the cache
          // with the key camelized
          data = data_user.get(elem, camelKey);
          if (data !== undefined) {
            return data;
          }
          // Attempt to "discover" the data in
          // HTML5 custom data-* attrs
          data = dataAttr(elem, camelKey, undefined);
          if (data !== undefined) {
            return data;
          }
          // We tried really hard, but the data doesn't exist.
          return;
        }
        // Set the data...
        this.each(function () {
          // First, attempt to store a copy or reference of any
          // data that might've been store with a camelCased key.
          var data = data_user.get(this, camelKey);
          // For HTML5 data-* attribute interop, we have to
          // store property names with dashes in a camelCase form.
          // This might not apply to all properties...*
          data_user.set(this, camelKey, value);
          // *... In the case of properties that might _actually_
          // have dashes, we need to also store a copy of that
          // unchanged property.
          if (key.indexOf('-') !== -1 && data !== undefined) {
            data_user.set(this, key, value);
          }
        });
      }, null, value, arguments.length > 1, null, true);
    },
    removeData: function (key) {
      return this.each(function () {
        data_user.remove(this, key);
      });
    }
  });
  function dataAttr(elem, key, data) {
    var name;
    // If nothing was found internally, try to fetch any
    // data from the HTML5 data-* attribute
    if (data === undefined && elem.nodeType === 1) {
      name = 'data-' + key.replace(rmultiDash, '-$1').toLowerCase();
      data = elem.getAttribute(name);
      if (typeof data === 'string') {
        try {
          data = data === 'true' ? true : data === 'false' ? false : data === 'null' ? null : +data + '' === data ? +data : rbrace.test(data) ? JSON.parse(data) : data;
        } catch (e) {
        }
        // Make sure we set the data so it isn't changed later
        data_user.set(elem, key, data);
      } else {
        data = undefined;
      }
    }
    return data;
  }
  jQuery.extend({
    queue: function (elem, type, data) {
      var queue;
      if (elem) {
        type = (type || 'fx') + 'queue';
        queue = data_priv.get(elem, type);
        // Speed up dequeue by getting out quickly if this is just a lookup
        if (data) {
          if (!queue || jQuery.isArray(data)) {
            queue = data_priv.access(elem, type, jQuery.makeArray(data));
          } else {
            queue.push(data);
          }
        }
        return queue || [];
      }
    },
    dequeue: function (elem, type) {
      type = type || 'fx';
      var queue = jQuery.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery._queueHooks(elem, type), next = function () {
          jQuery.dequeue(elem, type);
        };
      // If the fx queue is dequeued, always remove the progress sentinel
      if (fn === 'inprogress') {
        fn = queue.shift();
        startLength--;
      }
      if (fn) {
        // Add a progress sentinel to prevent the fx queue from being
        // automatically dequeued
        if (type === 'fx') {
          queue.unshift('inprogress');
        }
        // clear up the last queue stop function
        delete hooks.stop;
        fn.call(elem, next, hooks);
      }
      if (!startLength && hooks) {
        hooks.empty.fire();
      }
    },
    _queueHooks: function (elem, type) {
      var key = type + 'queueHooks';
      return data_priv.get(elem, key) || data_priv.access(elem, key, {
        empty: jQuery.Callbacks('once memory').add(function () {
          data_priv.remove(elem, [
            type + 'queue',
            key
          ]);
        })
      });
    }
  });
  jQuery.fn.extend({
    queue: function (type, data) {
      var setter = 2;
      if (typeof type !== 'string') {
        data = type;
        type = 'fx';
        setter--;
      }
      if (arguments.length < setter) {
        return jQuery.queue(this[0], type);
      }
      return data === undefined ? this : this.each(function () {
        var queue = jQuery.queue(this, type, data);
        // ensure a hooks for this queue
        jQuery._queueHooks(this, type);
        if (type === 'fx' && queue[0] !== 'inprogress') {
          jQuery.dequeue(this, type);
        }
      });
    },
    dequeue: function (type) {
      return this.each(function () {
        jQuery.dequeue(this, type);
      });
    },
    delay: function (time, type) {
      time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
      type = type || 'fx';
      return this.queue(type, function (next, hooks) {
        var timeout = setTimeout(next, time);
        hooks.stop = function () {
          clearTimeout(timeout);
        };
      });
    },
    clearQueue: function (type) {
      return this.queue(type || 'fx', []);
    },
    promise: function (type, obj) {
      var tmp, count = 1, defer = jQuery.Deferred(), elements = this, i = this.length, resolve = function () {
          if (!--count) {
            defer.resolveWith(elements, [elements]);
          }
        };
      if (typeof type !== 'string') {
        obj = type;
        type = undefined;
      }
      type = type || 'fx';
      while (i--) {
        tmp = data_priv.get(elements[i], type + 'queueHooks');
        if (tmp && tmp.empty) {
          count++;
          tmp.empty.add(resolve);
        }
      }
      resolve();
      return defer.promise(obj);
    }
  });
  var nodeHook, boolHook, rclass = /[\t\r\n\f]/g, rreturn = /\r/g, rfocusable = /^(?:input|select|textarea|button)$/i;
  jQuery.fn.extend({
    attr: function (name, value) {
      return jQuery.access(this, jQuery.attr, name, value, arguments.length > 1);
    },
    removeAttr: function (name) {
      return this.each(function () {
        jQuery.removeAttr(this, name);
      });
    },
    prop: function (name, value) {
      return jQuery.access(this, jQuery.prop, name, value, arguments.length > 1);
    },
    removeProp: function (name) {
      return this.each(function () {
        delete this[jQuery.propFix[name] || name];
      });
    },
    addClass: function (value) {
      var classes, elem, cur, clazz, j, i = 0, len = this.length, proceed = typeof value === 'string' && value;
      if (jQuery.isFunction(value)) {
        return this.each(function (j) {
          jQuery(this).addClass(value.call(this, j, this.className));
        });
      }
      if (proceed) {
        // The disjunction here is for better compressibility (see removeClass)
        classes = (value || '').match(core_rnotwhite) || [];
        for (; i < len; i++) {
          elem = this[i];
          cur = elem.nodeType === 1 && (elem.className ? (' ' + elem.className + ' ').replace(rclass, ' ') : ' ');
          if (cur) {
            j = 0;
            while (clazz = classes[j++]) {
              if (cur.indexOf(' ' + clazz + ' ') < 0) {
                cur += clazz + ' ';
              }
            }
            elem.className = jQuery.trim(cur);
          }
        }
      }
      return this;
    },
    removeClass: function (value) {
      var classes, elem, cur, clazz, j, i = 0, len = this.length, proceed = arguments.length === 0 || typeof value === 'string' && value;
      if (jQuery.isFunction(value)) {
        return this.each(function (j) {
          jQuery(this).removeClass(value.call(this, j, this.className));
        });
      }
      if (proceed) {
        classes = (value || '').match(core_rnotwhite) || [];
        for (; i < len; i++) {
          elem = this[i];
          // This expression is here for better compressibility (see addClass)
          cur = elem.nodeType === 1 && (elem.className ? (' ' + elem.className + ' ').replace(rclass, ' ') : '');
          if (cur) {
            j = 0;
            while (clazz = classes[j++]) {
              // Remove *all* instances
              while (cur.indexOf(' ' + clazz + ' ') >= 0) {
                cur = cur.replace(' ' + clazz + ' ', ' ');
              }
            }
            elem.className = value ? jQuery.trim(cur) : '';
          }
        }
      }
      return this;
    },
    toggleClass: function (value, stateVal) {
      var type = typeof value;
      if (typeof stateVal === 'boolean' && type === 'string') {
        return stateVal ? this.addClass(value) : this.removeClass(value);
      }
      if (jQuery.isFunction(value)) {
        return this.each(function (i) {
          jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal);
        });
      }
      return this.each(function () {
        if (type === 'string') {
          // toggle individual class names
          var className, i = 0, self = jQuery(this), classNames = value.match(core_rnotwhite) || [];
          while (className = classNames[i++]) {
            // check each className given, space separated list
            if (self.hasClass(className)) {
              self.removeClass(className);
            } else {
              self.addClass(className);
            }
          }  // Toggle whole class name
        } else if (type === core_strundefined || type === 'boolean') {
          if (this.className) {
            // store className if set
            data_priv.set(this, '__className__', this.className);
          }
          // If the element has a class name or if we're passed "false",
          // then remove the whole classname (if there was one, the above saved it).
          // Otherwise bring back whatever was previously saved (if anything),
          // falling back to the empty string if nothing was stored.
          this.className = this.className || value === false ? '' : data_priv.get(this, '__className__') || '';
        }
      });
    },
    hasClass: function (selector) {
      var className = ' ' + selector + ' ', i = 0, l = this.length;
      for (; i < l; i++) {
        if (this[i].nodeType === 1 && (' ' + this[i].className + ' ').replace(rclass, ' ').indexOf(className) >= 0) {
          return true;
        }
      }
      return false;
    },
    val: function (value) {
      var hooks, ret, isFunction, elem = this[0];
      if (!arguments.length) {
        if (elem) {
          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];
          if (hooks && 'get' in hooks && (ret = hooks.get(elem, 'value')) !== undefined) {
            return ret;
          }
          ret = elem.value;
          return typeof ret === 'string' ? ret.replace(rreturn, '') : ret == null ? '' : ret;
        }
        return;
      }
      isFunction = jQuery.isFunction(value);
      return this.each(function (i) {
        var val;
        if (this.nodeType !== 1) {
          return;
        }
        if (isFunction) {
          val = value.call(this, i, jQuery(this).val());
        } else {
          val = value;
        }
        // Treat null/undefined as ""; convert numbers to string
        if (val == null) {
          val = '';
        } else if (typeof val === 'number') {
          val += '';
        } else if (jQuery.isArray(val)) {
          val = jQuery.map(val, function (value) {
            return value == null ? '' : value + '';
          });
        }
        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];
        // If set returns undefined, fall back to normal setting
        if (!hooks || !('set' in hooks) || hooks.set(this, val, 'value') === undefined) {
          this.value = val;
        }
      });
    }
  });
  jQuery.extend({
    valHooks: {
      option: {
        get: function (elem) {
          // attributes.value is undefined in Blackberry 4.7 but
          // uses .value. See #6932
          var val = elem.attributes.value;
          return !val || val.specified ? elem.value : elem.text;
        }
      },
      select: {
        get: function (elem) {
          var value, option, options = elem.options, index = elem.selectedIndex, one = elem.type === 'select-one' || index < 0, values = one ? null : [], max = one ? index + 1 : options.length, i = index < 0 ? max : one ? index : 0;
          // Loop through all the selected options
          for (; i < max; i++) {
            option = options[i];
            // IE6-9 doesn't update selected after form reset (#2551)
            if ((option.selected || i === index) && (jQuery.support.optDisabled ? !option.disabled : option.getAttribute('disabled') === null) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, 'optgroup'))) {
              // Get the specific value for the option
              value = jQuery(option).val();
              // We don't need an array for one selects
              if (one) {
                return value;
              }
              // Multi-Selects return an array
              values.push(value);
            }
          }
          return values;
        },
        set: function (elem, value) {
          var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i = options.length;
          while (i--) {
            option = options[i];
            if (option.selected = jQuery.inArray(jQuery(option).val(), values) >= 0) {
              optionSet = true;
            }
          }
          // force browsers to behave consistently when non-matching value is set
          if (!optionSet) {
            elem.selectedIndex = -1;
          }
          return values;
        }
      }
    },
    attr: function (elem, name, value) {
      var hooks, ret, nType = elem.nodeType;
      // don't get/set attributes on text, comment and attribute nodes
      if (!elem || nType === 3 || nType === 8 || nType === 2) {
        return;
      }
      // Fallback to prop when attributes are not supported
      if (typeof elem.getAttribute === core_strundefined) {
        return jQuery.prop(elem, name, value);
      }
      // All attributes are lowercase
      // Grab necessary hook if one is defined
      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
        name = name.toLowerCase();
        hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name) ? boolHook : nodeHook);
      }
      if (value !== undefined) {
        if (value === null) {
          jQuery.removeAttr(elem, name);
        } else if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
          return ret;
        } else {
          elem.setAttribute(name, value + '');
          return value;
        }
      } else if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {
        return ret;
      } else {
        ret = jQuery.find.attr(elem, name);
        // Non-existent attributes return null, we normalize to undefined
        return ret == null ? undefined : ret;
      }
    },
    removeAttr: function (elem, value) {
      var name, propName, i = 0, attrNames = value && value.match(core_rnotwhite);
      if (attrNames && elem.nodeType === 1) {
        while (name = attrNames[i++]) {
          propName = jQuery.propFix[name] || name;
          // Boolean attributes get special treatment (#10870)
          if (jQuery.expr.match.bool.test(name)) {
            // Set corresponding property to false
            elem[propName] = false;
          }
          elem.removeAttribute(name);
        }
      }
    },
    attrHooks: {
      type: {
        set: function (elem, value) {
          if (!jQuery.support.radioValue && value === 'radio' && jQuery.nodeName(elem, 'input')) {
            // Setting the type on a radio button after the value resets the value in IE6-9
            // Reset value to default in case type is set after value during creation
            var val = elem.value;
            elem.setAttribute('type', value);
            if (val) {
              elem.value = val;
            }
            return value;
          }
        }
      }
    },
    propFix: {
      'for': 'htmlFor',
      'class': 'className'
    },
    prop: function (elem, name, value) {
      var ret, hooks, notxml, nType = elem.nodeType;
      // don't get/set properties on text, comment and attribute nodes
      if (!elem || nType === 3 || nType === 8 || nType === 2) {
        return;
      }
      notxml = nType !== 1 || !jQuery.isXMLDoc(elem);
      if (notxml) {
        // Fix name and attach hooks
        name = jQuery.propFix[name] || name;
        hooks = jQuery.propHooks[name];
      }
      if (value !== undefined) {
        return hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined ? ret : elem[name] = value;
      } else {
        return hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null ? ret : elem[name];
      }
    },
    propHooks: {
      tabIndex: {
        get: function (elem) {
          return elem.hasAttribute('tabindex') || rfocusable.test(elem.nodeName) || elem.href ? elem.tabIndex : -1;
        }
      }
    }
  });
  // Hooks for boolean attributes
  boolHook = {
    set: function (elem, value, name) {
      if (value === false) {
        // Remove boolean attributes when set to false
        jQuery.removeAttr(elem, name);
      } else {
        elem.setAttribute(name, name);
      }
      return name;
    }
  };
  jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function (i, name) {
    var getter = jQuery.expr.attrHandle[name] || jQuery.find.attr;
    jQuery.expr.attrHandle[name] = function (elem, name, isXML) {
      var fn = jQuery.expr.attrHandle[name], ret = isXML ? undefined : (jQuery.expr.attrHandle[name] = undefined) != getter(elem, name, isXML) ? name.toLowerCase() : null;
      // Restore handler
      jQuery.expr.attrHandle[name] = fn;
      return ret;
    };
  });
  // Support: IE9+
  // Selectedness for an option in an optgroup can be inaccurate
  if (!jQuery.support.optSelected) {
    jQuery.propHooks.selected = {
      get: function (elem) {
        var parent = elem.parentNode;
        if (parent && parent.parentNode) {
          parent.parentNode.selectedIndex;
        }
        return null;
      }
    };
  }
  jQuery.each([
    'tabIndex',
    'readOnly',
    'maxLength',
    'cellSpacing',
    'cellPadding',
    'rowSpan',
    'colSpan',
    'useMap',
    'frameBorder',
    'contentEditable'
  ], function () {
    jQuery.propFix[this.toLowerCase()] = this;
  });
  // Radios and checkboxes getter/setter
  jQuery.each([
    'radio',
    'checkbox'
  ], function () {
    jQuery.valHooks[this] = {
      set: function (elem, value) {
        if (jQuery.isArray(value)) {
          return elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0;
        }
      }
    };
    if (!jQuery.support.checkOn) {
      jQuery.valHooks[this].get = function (elem) {
        // Support: Webkit
        // "" is returned instead of "on" if a value isn't specified
        return elem.getAttribute('value') === null ? 'on' : elem.value;
      };
    }
  });
  var rkeyEvent = /^key/, rmouseEvent = /^(?:mouse|contextmenu)|click/, rfocusMorph = /^(?:focusinfocus|focusoutblur)$/, rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;
  function returnTrue() {
    return true;
  }
  function returnFalse() {
    return false;
  }
  function safeActiveElement() {
    try {
      return document.activeElement;
    } catch (err) {
    }
  }
  /*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
  jQuery.event = {
    global: {},
    add: function (elem, types, handler, data, selector) {
      var handleObjIn, eventHandle, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = data_priv.get(elem);
      // Don't attach events to noData or text/comment nodes (but allow plain objects)
      if (!elemData) {
        return;
      }
      // Caller can pass in an object of custom data in lieu of the handler
      if (handler.handler) {
        handleObjIn = handler;
        handler = handleObjIn.handler;
        selector = handleObjIn.selector;
      }
      // Make sure that the handler has a unique ID, used to find/remove it later
      if (!handler.guid) {
        handler.guid = jQuery.guid++;
      }
      // Init the element's event structure and main handler, if this is the first
      if (!(events = elemData.events)) {
        events = elemData.events = {};
      }
      if (!(eventHandle = elemData.handle)) {
        eventHandle = elemData.handle = function (e) {
          // Discard the second event of a jQuery.event.trigger() and
          // when an event is called after a page has unloaded
          return typeof jQuery !== core_strundefined && (!e || jQuery.event.triggered !== e.type) ? jQuery.event.dispatch.apply(eventHandle.elem, arguments) : undefined;
        };
        // Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
        eventHandle.elem = elem;
      }
      // Handle multiple events separated by a space
      types = (types || '').match(core_rnotwhite) || [''];
      t = types.length;
      while (t--) {
        tmp = rtypenamespace.exec(types[t]) || [];
        type = origType = tmp[1];
        namespaces = (tmp[2] || '').split('.').sort();
        // There *must* be a type, no attaching namespace-only handlers
        if (!type) {
          continue;
        }
        // If event changes its type, use the special event handlers for the changed type
        special = jQuery.event.special[type] || {};
        // If selector defined, determine special event api type, otherwise given type
        type = (selector ? special.delegateType : special.bindType) || type;
        // Update special based on newly reset type
        special = jQuery.event.special[type] || {};
        // handleObj is passed to all event handlers
        handleObj = jQuery.extend({
          type: type,
          origType: origType,
          data: data,
          handler: handler,
          guid: handler.guid,
          selector: selector,
          needsContext: selector && jQuery.expr.match.needsContext.test(selector),
          namespace: namespaces.join('.')
        }, handleObjIn);
        // Init the event handler queue if we're the first
        if (!(handlers = events[type])) {
          handlers = events[type] = [];
          handlers.delegateCount = 0;
          // Only use addEventListener if the special events handler returns false
          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
            if (elem.addEventListener) {
              elem.addEventListener(type, eventHandle, false);
            }
          }
        }
        if (special.add) {
          special.add.call(elem, handleObj);
          if (!handleObj.handler.guid) {
            handleObj.handler.guid = handler.guid;
          }
        }
        // Add to the element's handler list, delegates in front
        if (selector) {
          handlers.splice(handlers.delegateCount++, 0, handleObj);
        } else {
          handlers.push(handleObj);
        }
        // Keep track of which events have ever been used, for event optimization
        jQuery.event.global[type] = true;
      }
      // Nullify elem to prevent memory leaks in IE
      elem = null;
    },
    remove: function (elem, types, handler, selector, mappedTypes) {
      var j, origCount, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = data_priv.hasData(elem) && data_priv.get(elem);
      if (!elemData || !(events = elemData.events)) {
        return;
      }
      // Once for each type.namespace in types; type may be omitted
      types = (types || '').match(core_rnotwhite) || [''];
      t = types.length;
      while (t--) {
        tmp = rtypenamespace.exec(types[t]) || [];
        type = origType = tmp[1];
        namespaces = (tmp[2] || '').split('.').sort();
        // Unbind all events (on this namespace, if provided) for the element
        if (!type) {
          for (type in events) {
            jQuery.event.remove(elem, type + types[t], handler, selector, true);
          }
          continue;
        }
        special = jQuery.event.special[type] || {};
        type = (selector ? special.delegateType : special.bindType) || type;
        handlers = events[type] || [];
        tmp = tmp[2] && new RegExp('(^|\\.)' + namespaces.join('\\.(?:.*\\.|)') + '(\\.|$)');
        // Remove matching events
        origCount = j = handlers.length;
        while (j--) {
          handleObj = handlers[j];
          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === '**' && handleObj.selector)) {
            handlers.splice(j, 1);
            if (handleObj.selector) {
              handlers.delegateCount--;
            }
            if (special.remove) {
              special.remove.call(elem, handleObj);
            }
          }
        }
        // Remove generic event handler if we removed something and no more handlers exist
        // (avoids potential for endless recursion during removal of special event handlers)
        if (origCount && !handlers.length) {
          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {
            jQuery.removeEvent(elem, type, elemData.handle);
          }
          delete events[type];
        }
      }
      // Remove the expando if it's no longer used
      if (jQuery.isEmptyObject(events)) {
        delete elemData.handle;
        data_priv.remove(elem, 'events');
      }
    },
    trigger: function (event, data, elem, onlyHandlers) {
      var i, cur, tmp, bubbleType, ontype, handle, special, eventPath = [elem || document], type = core_hasOwn.call(event, 'type') ? event.type : event, namespaces = core_hasOwn.call(event, 'namespace') ? event.namespace.split('.') : [];
      cur = tmp = elem = elem || document;
      // Don't do events on text and comment nodes
      if (elem.nodeType === 3 || elem.nodeType === 8) {
        return;
      }
      // focus/blur morphs to focusin/out; ensure we're not firing them right now
      if (rfocusMorph.test(type + jQuery.event.triggered)) {
        return;
      }
      if (type.indexOf('.') >= 0) {
        // Namespaced trigger; create a regexp to match event type in handle()
        namespaces = type.split('.');
        type = namespaces.shift();
        namespaces.sort();
      }
      ontype = type.indexOf(':') < 0 && 'on' + type;
      // Caller can pass in a jQuery.Event object, Object, or just an event type string
      event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === 'object' && event);
      // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
      event.isTrigger = onlyHandlers ? 2 : 3;
      event.namespace = namespaces.join('.');
      event.namespace_re = event.namespace ? new RegExp('(^|\\.)' + namespaces.join('\\.(?:.*\\.|)') + '(\\.|$)') : null;
      // Clean up the event in case it is being reused
      event.result = undefined;
      if (!event.target) {
        event.target = elem;
      }
      // Clone any incoming data and prepend the event, creating the handler arg list
      data = data == null ? [event] : jQuery.makeArray(data, [event]);
      // Allow special events to draw outside the lines
      special = jQuery.event.special[type] || {};
      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
        return;
      }
      // Determine event propagation path in advance, per W3C events spec (#9951)
      // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
      if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {
        bubbleType = special.delegateType || type;
        if (!rfocusMorph.test(bubbleType + type)) {
          cur = cur.parentNode;
        }
        for (; cur; cur = cur.parentNode) {
          eventPath.push(cur);
          tmp = cur;
        }
        // Only add window if we got to document (e.g., not plain obj or detached DOM)
        if (tmp === (elem.ownerDocument || document)) {
          eventPath.push(tmp.defaultView || tmp.parentWindow || window);
        }
      }
      // Fire handlers on the event path
      i = 0;
      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
        event.type = i > 1 ? bubbleType : special.bindType || type;
        // jQuery handler
        handle = (data_priv.get(cur, 'events') || {})[event.type] && data_priv.get(cur, 'handle');
        if (handle) {
          handle.apply(cur, data);
        }
        // Native handler
        handle = ontype && cur[ontype];
        if (handle && jQuery.acceptData(cur) && handle.apply && handle.apply(cur, data) === false) {
          event.preventDefault();
        }
      }
      event.type = type;
      // If nobody prevented the default action, do it now
      if (!onlyHandlers && !event.isDefaultPrevented()) {
        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && jQuery.acceptData(elem)) {
          // Call a native DOM method on the target with the same name name as the event.
          // Don't do default actions on window, that's where global variables be (#6170)
          if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {
            // Don't re-trigger an onFOO event when we call its FOO() method
            tmp = elem[ontype];
            if (tmp) {
              elem[ontype] = null;
            }
            // Prevent re-triggering of the same event, since we already bubbled it above
            jQuery.event.triggered = type;
            elem[type]();
            jQuery.event.triggered = undefined;
            if (tmp) {
              elem[ontype] = tmp;
            }
          }
        }
      }
      return event.result;
    },
    dispatch: function (event) {
      // Make a writable jQuery.Event from the native event object
      event = jQuery.event.fix(event);
      var i, j, ret, matched, handleObj, handlerQueue = [], args = core_slice.call(arguments), handlers = (data_priv.get(this, 'events') || {})[event.type] || [], special = jQuery.event.special[event.type] || {};
      // Use the fix-ed jQuery.Event rather than the (read-only) native event
      args[0] = event;
      event.delegateTarget = this;
      // Call the preDispatch hook for the mapped type, and let it bail if desired
      if (special.preDispatch && special.preDispatch.call(this, event) === false) {
        return;
      }
      // Determine handlers
      handlerQueue = jQuery.event.handlers.call(this, event, handlers);
      // Run delegates first; they may want to stop propagation beneath us
      i = 0;
      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
        event.currentTarget = matched.elem;
        j = 0;
        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {
          // Triggered event must either 1) have no namespace, or
          // 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
          if (!event.namespace_re || event.namespace_re.test(handleObj.namespace)) {
            event.handleObj = handleObj;
            event.data = handleObj.data;
            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
            if (ret !== undefined) {
              if ((event.result = ret) === false) {
                event.preventDefault();
                event.stopPropagation();
              }
            }
          }
        }
      }
      // Call the postDispatch hook for the mapped type
      if (special.postDispatch) {
        special.postDispatch.call(this, event);
      }
      return event.result;
    },
    handlers: function (event, handlers) {
      var i, matches, sel, handleObj, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event.target;
      // Find delegate handlers
      // Black-hole SVG <use> instance trees (#13180)
      // Avoid non-left-click bubbling in Firefox (#3861)
      if (delegateCount && cur.nodeType && (!event.button || event.type !== 'click')) {
        for (; cur !== this; cur = cur.parentNode || this) {
          // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
          if (cur.disabled !== true || event.type !== 'click') {
            matches = [];
            for (i = 0; i < delegateCount; i++) {
              handleObj = handlers[i];
              // Don't conflict with Object.prototype properties (#13203)
              sel = handleObj.selector + ' ';
              if (matches[sel] === undefined) {
                matches[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) >= 0 : jQuery.find(sel, this, null, [cur]).length;
              }
              if (matches[sel]) {
                matches.push(handleObj);
              }
            }
            if (matches.length) {
              handlerQueue.push({
                elem: cur,
                handlers: matches
              });
            }
          }
        }
      }
      // Add the remaining (directly-bound) handlers
      if (delegateCount < handlers.length) {
        handlerQueue.push({
          elem: this,
          handlers: handlers.slice(delegateCount)
        });
      }
      return handlerQueue;
    },
    props: 'altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which'.split(' '),
    fixHooks: {},
    keyHooks: {
      props: 'char charCode key keyCode'.split(' '),
      filter: function (event, original) {
        // Add which for key events
        if (event.which == null) {
          event.which = original.charCode != null ? original.charCode : original.keyCode;
        }
        return event;
      }
    },
    mouseHooks: {
      props: 'button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement'.split(' '),
      filter: function (event, original) {
        var eventDoc, doc, body, button = original.button;
        // Calculate pageX/Y if missing and clientX/Y available
        if (event.pageX == null && original.clientX != null) {
          eventDoc = event.target.ownerDocument || document;
          doc = eventDoc.documentElement;
          body = eventDoc.body;
          event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
          event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
        }
        // Add which for click: 1 === left; 2 === middle; 3 === right
        // Note: button is not normalized, so don't use it
        if (!event.which && button !== undefined) {
          event.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;
        }
        return event;
      }
    },
    fix: function (event) {
      if (event[jQuery.expando]) {
        return event;
      }
      // Create a writable copy of the event object and normalize some properties
      var i, prop, copy, type = event.type, originalEvent = event, fixHook = this.fixHooks[type];
      if (!fixHook) {
        this.fixHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : {};
      }
      copy = fixHook.props ? this.props.concat(fixHook.props) : this.props;
      event = new jQuery.Event(originalEvent);
      i = copy.length;
      while (i--) {
        prop = copy[i];
        event[prop] = originalEvent[prop];
      }
      // Support: Cordova 2.5 (WebKit) (#13255)
      // All events should have a target; Cordova deviceready doesn't
      if (!event.target) {
        event.target = document;
      }
      // Support: Safari 6.0+, Chrome < 28
      // Target should not be a text node (#504, #13143)
      if (event.target.nodeType === 3) {
        event.target = event.target.parentNode;
      }
      return fixHook.filter ? fixHook.filter(event, originalEvent) : event;
    },
    special: {
      load: { noBubble: true },
      focus: {
        trigger: function () {
          if (this !== safeActiveElement() && this.focus) {
            this.focus();
            return false;
          }
        },
        delegateType: 'focusin'
      },
      blur: {
        trigger: function () {
          if (this === safeActiveElement() && this.blur) {
            this.blur();
            return false;
          }
        },
        delegateType: 'focusout'
      },
      click: {
        trigger: function () {
          if (this.type === 'checkbox' && this.click && jQuery.nodeName(this, 'input')) {
            this.click();
            return false;
          }
        },
        _default: function (event) {
          return jQuery.nodeName(event.target, 'a');
        }
      },
      beforeunload: {
        postDispatch: function (event) {
          // Support: Firefox 20+
          // Firefox doesn't alert if the returnValue field is not set.
          if (event.result !== undefined) {
            event.originalEvent.returnValue = event.result;
          }
        }
      }
    },
    simulate: function (type, elem, event, bubble) {
      // Piggyback on a donor event to simulate a different one.
      // Fake originalEvent to avoid donor's stopPropagation, but if the
      // simulated event prevents default then we do the same on the donor.
      var e = jQuery.extend(new jQuery.Event(), event, {
          type: type,
          isSimulated: true,
          originalEvent: {}
        });
      if (bubble) {
        jQuery.event.trigger(e, null, elem);
      } else {
        jQuery.event.dispatch.call(elem, e);
      }
      if (e.isDefaultPrevented()) {
        event.preventDefault();
      }
    }
  };
  jQuery.removeEvent = function (elem, type, handle) {
    if (elem.removeEventListener) {
      elem.removeEventListener(type, handle, false);
    }
  };
  jQuery.Event = function (src, props) {
    // Allow instantiation without the 'new' keyword
    if (!(this instanceof jQuery.Event)) {
      return new jQuery.Event(src, props);
    }
    // Event object
    if (src && src.type) {
      this.originalEvent = src;
      this.type = src.type;
      // Events bubbling up the document may have been marked as prevented
      // by a handler lower down the tree; reflect the correct value.
      this.isDefaultPrevented = src.defaultPrevented || src.getPreventDefault && src.getPreventDefault() ? returnTrue : returnFalse;  // Event type
    } else {
      this.type = src;
    }
    // Put explicitly provided properties onto the event object
    if (props) {
      jQuery.extend(this, props);
    }
    // Create a timestamp if incoming event doesn't have one
    this.timeStamp = src && src.timeStamp || jQuery.now();
    // Mark it as fixed
    this[jQuery.expando] = true;
  };
  // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
  // http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
  jQuery.Event.prototype = {
    isDefaultPrevented: returnFalse,
    isPropagationStopped: returnFalse,
    isImmediatePropagationStopped: returnFalse,
    preventDefault: function () {
      var e = this.originalEvent;
      this.isDefaultPrevented = returnTrue;
      if (e && e.preventDefault) {
        e.preventDefault();
      }
    },
    stopPropagation: function () {
      var e = this.originalEvent;
      this.isPropagationStopped = returnTrue;
      if (e && e.stopPropagation) {
        e.stopPropagation();
      }
    },
    stopImmediatePropagation: function () {
      this.isImmediatePropagationStopped = returnTrue;
      this.stopPropagation();
    }
  };
  // Create mouseenter/leave events using mouseover/out and event-time checks
  // Support: Chrome 15+
  jQuery.each({
    mouseenter: 'mouseover',
    mouseleave: 'mouseout'
  }, function (orig, fix) {
    jQuery.event.special[orig] = {
      delegateType: fix,
      bindType: fix,
      handle: function (event) {
        var ret, target = this, related = event.relatedTarget, handleObj = event.handleObj;
        // For mousenter/leave call the handler if related is outside the target.
        // NB: No relatedTarget if the mouse left/entered the browser window
        if (!related || related !== target && !jQuery.contains(target, related)) {
          event.type = handleObj.origType;
          ret = handleObj.handler.apply(this, arguments);
          event.type = fix;
        }
        return ret;
      }
    };
  });
  // Create "bubbling" focus and blur events
  // Support: Firefox, Chrome, Safari
  if (!jQuery.support.focusinBubbles) {
    jQuery.each({
      focus: 'focusin',
      blur: 'focusout'
    }, function (orig, fix) {
      // Attach a single capturing handler while someone wants focusin/focusout
      var attaches = 0, handler = function (event) {
          jQuery.event.simulate(fix, event.target, jQuery.event.fix(event), true);
        };
      jQuery.event.special[fix] = {
        setup: function () {
          if (attaches++ === 0) {
            document.addEventListener(orig, handler, true);
          }
        },
        teardown: function () {
          if (--attaches === 0) {
            document.removeEventListener(orig, handler, true);
          }
        }
      };
    });
  }
  jQuery.fn.extend({
    on: function (types, selector, data, fn, one) {
      var origFn, type;
      // Types can be a map of types/handlers
      if (typeof types === 'object') {
        // ( types-Object, selector, data )
        if (typeof selector !== 'string') {
          // ( types-Object, data )
          data = data || selector;
          selector = undefined;
        }
        for (type in types) {
          this.on(type, selector, data, types[type], one);
        }
        return this;
      }
      if (data == null && fn == null) {
        // ( types, fn )
        fn = selector;
        data = selector = undefined;
      } else if (fn == null) {
        if (typeof selector === 'string') {
          // ( types, selector, fn )
          fn = data;
          data = undefined;
        } else {
          // ( types, data, fn )
          fn = data;
          data = selector;
          selector = undefined;
        }
      }
      if (fn === false) {
        fn = returnFalse;
      } else if (!fn) {
        return this;
      }
      if (one === 1) {
        origFn = fn;
        fn = function (event) {
          // Can use an empty set, since event contains the info
          jQuery().off(event);
          return origFn.apply(this, arguments);
        };
        // Use same guid so caller can remove using origFn
        fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
      }
      return this.each(function () {
        jQuery.event.add(this, types, fn, data, selector);
      });
    },
    one: function (types, selector, data, fn) {
      return this.on(types, selector, data, fn, 1);
    },
    off: function (types, selector, fn) {
      var handleObj, type;
      if (types && types.preventDefault && types.handleObj) {
        // ( event )  dispatched jQuery.Event
        handleObj = types.handleObj;
        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + '.' + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
        return this;
      }
      if (typeof types === 'object') {
        // ( types-object [, selector] )
        for (type in types) {
          this.off(type, selector, types[type]);
        }
        return this;
      }
      if (selector === false || typeof selector === 'function') {
        // ( types [, fn] )
        fn = selector;
        selector = undefined;
      }
      if (fn === false) {
        fn = returnFalse;
      }
      return this.each(function () {
        jQuery.event.remove(this, types, fn, selector);
      });
    },
    trigger: function (type, data) {
      return this.each(function () {
        jQuery.event.trigger(type, data, this);
      });
    },
    triggerHandler: function (type, data) {
      var elem = this[0];
      if (elem) {
        return jQuery.event.trigger(type, data, elem, true);
      }
    }
  });
  var isSimple = /^.[^:#\[\.,]*$/, rparentsprev = /^(?:parents|prev(?:Until|All))/, rneedsContext = jQuery.expr.match.needsContext,
    // methods guaranteed to produce a unique set when starting from a unique set
    guaranteedUnique = {
      children: true,
      contents: true,
      next: true,
      prev: true
    };
  jQuery.fn.extend({
    find: function (selector) {
      var i, ret = [], self = this, len = self.length;
      if (typeof selector !== 'string') {
        return this.pushStack(jQuery(selector).filter(function () {
          for (i = 0; i < len; i++) {
            if (jQuery.contains(self[i], this)) {
              return true;
            }
          }
        }));
      }
      for (i = 0; i < len; i++) {
        jQuery.find(selector, self[i], ret);
      }
      // Needed because $( selector, context ) becomes $( context ).find( selector )
      ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret);
      ret.selector = this.selector ? this.selector + ' ' + selector : selector;
      return ret;
    },
    has: function (target) {
      var targets = jQuery(target, this), l = targets.length;
      return this.filter(function () {
        var i = 0;
        for (; i < l; i++) {
          if (jQuery.contains(this, targets[i])) {
            return true;
          }
        }
      });
    },
    not: function (selector) {
      return this.pushStack(winnow(this, selector || [], true));
    },
    filter: function (selector) {
      return this.pushStack(winnow(this, selector || [], false));
    },
    is: function (selector) {
      return !!winnow(this, typeof selector === 'string' && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;
    },
    closest: function (selectors, context) {
      var cur, i = 0, l = this.length, matched = [], pos = rneedsContext.test(selectors) || typeof selectors !== 'string' ? jQuery(selectors, context || this.context) : 0;
      for (; i < l; i++) {
        for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {
          // Always skip document fragments
          if (cur.nodeType < 11 && (pos ? pos.index(cur) > -1 : cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {
            cur = matched.push(cur);
            break;
          }
        }
      }
      return this.pushStack(matched.length > 1 ? jQuery.unique(matched) : matched);
    },
    index: function (elem) {
      // No argument, return index in parent
      if (!elem) {
        return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
      }
      // index in selector
      if (typeof elem === 'string') {
        return core_indexOf.call(jQuery(elem), this[0]);
      }
      // Locate the position of the desired element
      return core_indexOf.call(this, elem.jquery ? elem[0] : elem);
    },
    add: function (selector, context) {
      var set = typeof selector === 'string' ? jQuery(selector, context) : jQuery.makeArray(selector && selector.nodeType ? [selector] : selector), all = jQuery.merge(this.get(), set);
      return this.pushStack(jQuery.unique(all));
    },
    addBack: function (selector) {
      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
    }
  });
  function sibling(cur, dir) {
    while ((cur = cur[dir]) && cur.nodeType !== 1) {
    }
    return cur;
  }
  jQuery.each({
    parent: function (elem) {
      var parent = elem.parentNode;
      return parent && parent.nodeType !== 11 ? parent : null;
    },
    parents: function (elem) {
      return jQuery.dir(elem, 'parentNode');
    },
    parentsUntil: function (elem, i, until) {
      return jQuery.dir(elem, 'parentNode', until);
    },
    next: function (elem) {
      return sibling(elem, 'nextSibling');
    },
    prev: function (elem) {
      return sibling(elem, 'previousSibling');
    },
    nextAll: function (elem) {
      return jQuery.dir(elem, 'nextSibling');
    },
    prevAll: function (elem) {
      return jQuery.dir(elem, 'previousSibling');
    },
    nextUntil: function (elem, i, until) {
      return jQuery.dir(elem, 'nextSibling', until);
    },
    prevUntil: function (elem, i, until) {
      return jQuery.dir(elem, 'previousSibling', until);
    },
    siblings: function (elem) {
      return jQuery.sibling((elem.parentNode || {}).firstChild, elem);
    },
    children: function (elem) {
      return jQuery.sibling(elem.firstChild);
    },
    contents: function (elem) {
      return elem.contentDocument || jQuery.merge([], elem.childNodes);
    }
  }, function (name, fn) {
    jQuery.fn[name] = function (until, selector) {
      var matched = jQuery.map(this, fn, until);
      if (name.slice(-5) !== 'Until') {
        selector = until;
      }
      if (selector && typeof selector === 'string') {
        matched = jQuery.filter(selector, matched);
      }
      if (this.length > 1) {
        // Remove duplicates
        if (!guaranteedUnique[name]) {
          jQuery.unique(matched);
        }
        // Reverse order for parents* and prev-derivatives
        if (rparentsprev.test(name)) {
          matched.reverse();
        }
      }
      return this.pushStack(matched);
    };
  });
  jQuery.extend({
    filter: function (expr, elems, not) {
      var elem = elems[0];
      if (not) {
        expr = ':not(' + expr + ')';
      }
      return elems.length === 1 && elem.nodeType === 1 ? jQuery.find.matchesSelector(elem, expr) ? [elem] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {
        return elem.nodeType === 1;
      }));
    },
    dir: function (elem, dir, until) {
      var matched = [], truncate = until !== undefined;
      while ((elem = elem[dir]) && elem.nodeType !== 9) {
        if (elem.nodeType === 1) {
          if (truncate && jQuery(elem).is(until)) {
            break;
          }
          matched.push(elem);
        }
      }
      return matched;
    },
    sibling: function (n, elem) {
      var matched = [];
      for (; n; n = n.nextSibling) {
        if (n.nodeType === 1 && n !== elem) {
          matched.push(n);
        }
      }
      return matched;
    }
  });
  // Implement the identical functionality for filter and not
  function winnow(elements, qualifier, not) {
    if (jQuery.isFunction(qualifier)) {
      return jQuery.grep(elements, function (elem, i) {
        /* jshint -W018 */
        return !!qualifier.call(elem, i, elem) !== not;
      });
    }
    if (qualifier.nodeType) {
      return jQuery.grep(elements, function (elem) {
        return elem === qualifier !== not;
      });
    }
    if (typeof qualifier === 'string') {
      if (isSimple.test(qualifier)) {
        return jQuery.filter(qualifier, elements, not);
      }
      qualifier = jQuery.filter(qualifier, elements);
    }
    return jQuery.grep(elements, function (elem) {
      return core_indexOf.call(qualifier, elem) >= 0 !== not;
    });
  }
  var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, rtagName = /<([\w:]+)/, rhtml = /<|&#?\w+;/, rnoInnerhtml = /<(?:script|style|link)/i, manipulation_rcheckableType = /^(?:checkbox|radio)$/i,
    // checked="checked" or checked
    rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i, rscriptType = /^$|\/(?:java|ecma)script/i, rscriptTypeMasked = /^true\/(.*)/, rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
    // We have to close these tags to support XHTML (#13200)
    wrapMap = {
      option: [
        1,
        '<select multiple=\'multiple\'>',
        '</select>'
      ],
      thead: [
        1,
        '<table>',
        '</table>'
      ],
      col: [
        2,
        '<table><colgroup>',
        '</colgroup></table>'
      ],
      tr: [
        2,
        '<table><tbody>',
        '</tbody></table>'
      ],
      td: [
        3,
        '<table><tbody><tr>',
        '</tr></tbody></table>'
      ],
      _default: [
        0,
        '',
        ''
      ]
    };
  // Support: IE 9
  wrapMap.optgroup = wrapMap.option;
  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
  wrapMap.th = wrapMap.td;
  jQuery.fn.extend({
    text: function (value) {
      return jQuery.access(this, function (value) {
        return value === undefined ? jQuery.text(this) : this.empty().append((this[0] && this[0].ownerDocument || document).createTextNode(value));
      }, null, value, arguments.length);
    },
    append: function () {
      return this.domManip(arguments, function (elem) {
        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
          var target = manipulationTarget(this, elem);
          target.appendChild(elem);
        }
      });
    },
    prepend: function () {
      return this.domManip(arguments, function (elem) {
        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
          var target = manipulationTarget(this, elem);
          target.insertBefore(elem, target.firstChild);
        }
      });
    },
    before: function () {
      return this.domManip(arguments, function (elem) {
        if (this.parentNode) {
          this.parentNode.insertBefore(elem, this);
        }
      });
    },
    after: function () {
      return this.domManip(arguments, function (elem) {
        if (this.parentNode) {
          this.parentNode.insertBefore(elem, this.nextSibling);
        }
      });
    },
    remove: function (selector, keepData) {
      var elem, elems = selector ? jQuery.filter(selector, this) : this, i = 0;
      for (; (elem = elems[i]) != null; i++) {
        if (!keepData && elem.nodeType === 1) {
          jQuery.cleanData(getAll(elem));
        }
        if (elem.parentNode) {
          if (keepData && jQuery.contains(elem.ownerDocument, elem)) {
            setGlobalEval(getAll(elem, 'script'));
          }
          elem.parentNode.removeChild(elem);
        }
      }
      return this;
    },
    empty: function () {
      var elem, i = 0;
      for (; (elem = this[i]) != null; i++) {
        if (elem.nodeType === 1) {
          // Prevent memory leaks
          jQuery.cleanData(getAll(elem, false));
          // Remove any remaining nodes
          elem.textContent = '';
        }
      }
      return this;
    },
    clone: function (dataAndEvents, deepDataAndEvents) {
      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
      return this.map(function () {
        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
      });
    },
    html: function (value) {
      return jQuery.access(this, function (value) {
        var elem = this[0] || {}, i = 0, l = this.length;
        if (value === undefined && elem.nodeType === 1) {
          return elem.innerHTML;
        }
        // See if we can take a shortcut and just use innerHTML
        if (typeof value === 'string' && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [
            '',
            ''
          ])[1].toLowerCase()]) {
          value = value.replace(rxhtmlTag, '<$1></$2>');
          try {
            for (; i < l; i++) {
              elem = this[i] || {};
              // Remove element nodes and prevent memory leaks
              if (elem.nodeType === 1) {
                jQuery.cleanData(getAll(elem, false));
                elem.innerHTML = value;
              }
            }
            elem = 0;  // If using innerHTML throws an exception, use the fallback method
          } catch (e) {
          }
        }
        if (elem) {
          this.empty().append(value);
        }
      }, null, value, arguments.length);
    },
    replaceWith: function () {
      var
        // Snapshot the DOM in case .domManip sweeps something relevant into its fragment
        args = jQuery.map(this, function (elem) {
          return [
            elem.nextSibling,
            elem.parentNode
          ];
        }), i = 0;
      // Make the changes, replacing each context element with the new content
      this.domManip(arguments, function (elem) {
        var next = args[i++], parent = args[i++];
        if (parent) {
          // Don't use the snapshot next if it has moved (#13810)
          if (next && next.parentNode !== parent) {
            next = this.nextSibling;
          }
          jQuery(this).remove();
          parent.insertBefore(elem, next);
        }  // Allow new content to include elements from the context set
      }, true);
      // Force removal if there was no new content (e.g., from empty arguments)
      return i ? this : this.remove();
    },
    detach: function (selector) {
      return this.remove(selector, true);
    },
    domManip: function (args, callback, allowIntersection) {
      // Flatten any nested arrays
      args = core_concat.apply([], args);
      var fragment, first, scripts, hasScripts, node, doc, i = 0, l = this.length, set = this, iNoClone = l - 1, value = args[0], isFunction = jQuery.isFunction(value);
      // We can't cloneNode fragments that contain checked, in WebKit
      if (isFunction || !(l <= 1 || typeof value !== 'string' || jQuery.support.checkClone || !rchecked.test(value))) {
        return this.each(function (index) {
          var self = set.eq(index);
          if (isFunction) {
            args[0] = value.call(this, index, self.html());
          }
          self.domManip(args, callback, allowIntersection);
        });
      }
      if (l) {
        fragment = jQuery.buildFragment(args, this[0].ownerDocument, false, !allowIntersection && this);
        first = fragment.firstChild;
        if (fragment.childNodes.length === 1) {
          fragment = first;
        }
        if (first) {
          scripts = jQuery.map(getAll(fragment, 'script'), disableScript);
          hasScripts = scripts.length;
          // Use the original fragment for the last item instead of the first because it can end up
          // being emptied incorrectly in certain situations (#8070).
          for (; i < l; i++) {
            node = fragment;
            if (i !== iNoClone) {
              node = jQuery.clone(node, true, true);
              // Keep references to cloned scripts for later restoration
              if (hasScripts) {
                // Support: QtWebKit
                // jQuery.merge because core_push.apply(_, arraylike) throws
                jQuery.merge(scripts, getAll(node, 'script'));
              }
            }
            callback.call(this[i], node, i);
          }
          if (hasScripts) {
            doc = scripts[scripts.length - 1].ownerDocument;
            // Reenable scripts
            jQuery.map(scripts, restoreScript);
            // Evaluate executable scripts on first document insertion
            for (i = 0; i < hasScripts; i++) {
              node = scripts[i];
              if (rscriptType.test(node.type || '') && !data_priv.access(node, 'globalEval') && jQuery.contains(doc, node)) {
                if (node.src) {
                  // Hope ajax is available...
                  jQuery._evalUrl(node.src);
                } else {
                  jQuery.globalEval(node.textContent.replace(rcleanScript, ''));
                }
              }
            }
          }
        }
      }
      return this;
    }
  });
  jQuery.each({
    appendTo: 'append',
    prependTo: 'prepend',
    insertBefore: 'before',
    insertAfter: 'after',
    replaceAll: 'replaceWith'
  }, function (name, original) {
    jQuery.fn[name] = function (selector) {
      var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i = 0;
      for (; i <= last; i++) {
        elems = i === last ? this : this.clone(true);
        jQuery(insert[i])[original](elems);
        // Support: QtWebKit
        // .get() because core_push.apply(_, arraylike) throws
        core_push.apply(ret, elems.get());
      }
      return this.pushStack(ret);
    };
  });
  jQuery.extend({
    clone: function (elem, dataAndEvents, deepDataAndEvents) {
      var i, l, srcElements, destElements, clone = elem.cloneNode(true), inPage = jQuery.contains(elem.ownerDocument, elem);
      // Support: IE >= 9
      // Fix Cloning issues
      if (!jQuery.support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
        // We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
        destElements = getAll(clone);
        srcElements = getAll(elem);
        for (i = 0, l = srcElements.length; i < l; i++) {
          fixInput(srcElements[i], destElements[i]);
        }
      }
      // Copy the events from the original to the clone
      if (dataAndEvents) {
        if (deepDataAndEvents) {
          srcElements = srcElements || getAll(elem);
          destElements = destElements || getAll(clone);
          for (i = 0, l = srcElements.length; i < l; i++) {
            cloneCopyEvent(srcElements[i], destElements[i]);
          }
        } else {
          cloneCopyEvent(elem, clone);
        }
      }
      // Preserve script evaluation history
      destElements = getAll(clone, 'script');
      if (destElements.length > 0) {
        setGlobalEval(destElements, !inPage && getAll(elem, 'script'));
      }
      // Return the cloned set
      return clone;
    },
    buildFragment: function (elems, context, scripts, selection) {
      var elem, tmp, tag, wrap, contains, j, i = 0, l = elems.length, fragment = context.createDocumentFragment(), nodes = [];
      for (; i < l; i++) {
        elem = elems[i];
        if (elem || elem === 0) {
          // Add nodes directly
          if (jQuery.type(elem) === 'object') {
            // Support: QtWebKit
            // jQuery.merge because core_push.apply(_, arraylike) throws
            jQuery.merge(nodes, elem.nodeType ? [elem] : elem);  // Convert non-html into a text node
          } else if (!rhtml.test(elem)) {
            nodes.push(context.createTextNode(elem));  // Convert html into DOM nodes
          } else {
            tmp = tmp || fragment.appendChild(context.createElement('div'));
            // Deserialize a standard representation
            tag = (rtagName.exec(elem) || [
              '',
              ''
            ])[1].toLowerCase();
            wrap = wrapMap[tag] || wrapMap._default;
            tmp.innerHTML = wrap[1] + elem.replace(rxhtmlTag, '<$1></$2>') + wrap[2];
            // Descend through wrappers to the right content
            j = wrap[0];
            while (j--) {
              tmp = tmp.lastChild;
            }
            // Support: QtWebKit
            // jQuery.merge because core_push.apply(_, arraylike) throws
            jQuery.merge(nodes, tmp.childNodes);
            // Remember the top-level container
            tmp = fragment.firstChild;
            // Fixes #12346
            // Support: Webkit, IE
            tmp.textContent = '';
          }
        }
      }
      // Remove wrapper from fragment
      fragment.textContent = '';
      i = 0;
      while (elem = nodes[i++]) {
        // #4087 - If origin and destination elements are the same, and this is
        // that element, do not do anything
        if (selection && jQuery.inArray(elem, selection) !== -1) {
          continue;
        }
        contains = jQuery.contains(elem.ownerDocument, elem);
        // Append to fragment
        tmp = getAll(fragment.appendChild(elem), 'script');
        // Preserve script evaluation history
        if (contains) {
          setGlobalEval(tmp);
        }
        // Capture executables
        if (scripts) {
          j = 0;
          while (elem = tmp[j++]) {
            if (rscriptType.test(elem.type || '')) {
              scripts.push(elem);
            }
          }
        }
      }
      return fragment;
    },
    cleanData: function (elems) {
      var data, elem, events, type, key, j, special = jQuery.event.special, i = 0;
      for (; (elem = elems[i]) !== undefined; i++) {
        if (Data.accepts(elem)) {
          key = elem[data_priv.expando];
          if (key && (data = data_priv.cache[key])) {
            events = Object.keys(data.events || {});
            if (events.length) {
              for (j = 0; (type = events[j]) !== undefined; j++) {
                if (special[type]) {
                  jQuery.event.remove(elem, type);  // This is a shortcut to avoid jQuery.event.remove's overhead
                } else {
                  jQuery.removeEvent(elem, type, data.handle);
                }
              }
            }
            if (data_priv.cache[key]) {
              // Discard any remaining `private` data
              delete data_priv.cache[key];
            }
          }
        }
        // Discard any remaining `user` data
        delete data_user.cache[elem[data_user.expando]];
      }
    },
    _evalUrl: function (url) {
      return jQuery.ajax({
        url: url,
        type: 'GET',
        dataType: 'script',
        async: false,
        global: false,
        'throws': true
      });
    }
  });
  // Support: 1.x compatibility
  // Manipulating tables requires a tbody
  function manipulationTarget(elem, content) {
    return jQuery.nodeName(elem, 'table') && jQuery.nodeName(content.nodeType === 1 ? content : content.firstChild, 'tr') ? elem.getElementsByTagName('tbody')[0] || elem.appendChild(elem.ownerDocument.createElement('tbody')) : elem;
  }
  // Replace/restore the type attribute of script elements for safe DOM manipulation
  function disableScript(elem) {
    elem.type = (elem.getAttribute('type') !== null) + '/' + elem.type;
    return elem;
  }
  function restoreScript(elem) {
    var match = rscriptTypeMasked.exec(elem.type);
    if (match) {
      elem.type = match[1];
    } else {
      elem.removeAttribute('type');
    }
    return elem;
  }
  // Mark scripts as having already been evaluated
  function setGlobalEval(elems, refElements) {
    var l = elems.length, i = 0;
    for (; i < l; i++) {
      data_priv.set(elems[i], 'globalEval', !refElements || data_priv.get(refElements[i], 'globalEval'));
    }
  }
  function cloneCopyEvent(src, dest) {
    var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;
    if (dest.nodeType !== 1) {
      return;
    }
    // 1. Copy private data: events, handlers, etc.
    if (data_priv.hasData(src)) {
      pdataOld = data_priv.access(src);
      pdataCur = data_priv.set(dest, pdataOld);
      events = pdataOld.events;
      if (events) {
        delete pdataCur.handle;
        pdataCur.events = {};
        for (type in events) {
          for (i = 0, l = events[type].length; i < l; i++) {
            jQuery.event.add(dest, type, events[type][i]);
          }
        }
      }
    }
    // 2. Copy user data
    if (data_user.hasData(src)) {
      udataOld = data_user.access(src);
      udataCur = jQuery.extend({}, udataOld);
      data_user.set(dest, udataCur);
    }
  }
  function getAll(context, tag) {
    var ret = context.getElementsByTagName ? context.getElementsByTagName(tag || '*') : context.querySelectorAll ? context.querySelectorAll(tag || '*') : [];
    return tag === undefined || tag && jQuery.nodeName(context, tag) ? jQuery.merge([context], ret) : ret;
  }
  // Support: IE >= 9
  function fixInput(src, dest) {
    var nodeName = dest.nodeName.toLowerCase();
    // Fails to persist the checked state of a cloned checkbox or radio button.
    if (nodeName === 'input' && manipulation_rcheckableType.test(src.type)) {
      dest.checked = src.checked;  // Fails to return the selected option to the default selected state when cloning options
    } else if (nodeName === 'input' || nodeName === 'textarea') {
      dest.defaultValue = src.defaultValue;
    }
  }
  jQuery.fn.extend({
    wrapAll: function (html) {
      var wrap;
      if (jQuery.isFunction(html)) {
        return this.each(function (i) {
          jQuery(this).wrapAll(html.call(this, i));
        });
      }
      if (this[0]) {
        // The elements to wrap the target around
        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);
        if (this[0].parentNode) {
          wrap.insertBefore(this[0]);
        }
        wrap.map(function () {
          var elem = this;
          while (elem.firstElementChild) {
            elem = elem.firstElementChild;
          }
          return elem;
        }).append(this);
      }
      return this;
    },
    wrapInner: function (html) {
      if (jQuery.isFunction(html)) {
        return this.each(function (i) {
          jQuery(this).wrapInner(html.call(this, i));
        });
      }
      return this.each(function () {
        var self = jQuery(this), contents = self.contents();
        if (contents.length) {
          contents.wrapAll(html);
        } else {
          self.append(html);
        }
      });
    },
    wrap: function (html) {
      var isFunction = jQuery.isFunction(html);
      return this.each(function (i) {
        jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);
      });
    },
    unwrap: function () {
      return this.parent().each(function () {
        if (!jQuery.nodeName(this, 'body')) {
          jQuery(this).replaceWith(this.childNodes);
        }
      }).end();
    }
  });
  var curCSS, iframe,
    // swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
    // see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
    rdisplayswap = /^(none|table(?!-c[ea]).+)/, rmargin = /^margin/, rnumsplit = new RegExp('^(' + core_pnum + ')(.*)$', 'i'), rnumnonpx = new RegExp('^(' + core_pnum + ')(?!px)[a-z%]+$', 'i'), rrelNum = new RegExp('^([+-])=(' + core_pnum + ')', 'i'), elemdisplay = { BODY: 'block' }, cssShow = {
      position: 'absolute',
      visibility: 'hidden',
      display: 'block'
    }, cssNormalTransform = {
      letterSpacing: 0,
      fontWeight: 400
    }, cssExpand = [
      'Top',
      'Right',
      'Bottom',
      'Left'
    ], cssPrefixes = [
      'Webkit',
      'O',
      'Moz',
      'ms'
    ];
  // return a css property mapped to a potentially vendor prefixed property
  function vendorPropName(style, name) {
    // shortcut for names that are not vendor prefixed
    if (name in style) {
      return name;
    }
    // check for vendor prefixed names
    var capName = name.charAt(0).toUpperCase() + name.slice(1), origName = name, i = cssPrefixes.length;
    while (i--) {
      name = cssPrefixes[i] + capName;
      if (name in style) {
        return name;
      }
    }
    return origName;
  }
  function isHidden(elem, el) {
    // isHidden might be called from jQuery#filter function;
    // in that case, element will be second argument
    elem = el || elem;
    return jQuery.css(elem, 'display') === 'none' || !jQuery.contains(elem.ownerDocument, elem);
  }
  // NOTE: we've included the "window" in window.getComputedStyle
  // because jsdom on node.js will break without it.
  function getStyles(elem) {
    return window.getComputedStyle(elem, null);
  }
  function showHide(elements, show) {
    var display, elem, hidden, values = [], index = 0, length = elements.length;
    for (; index < length; index++) {
      elem = elements[index];
      if (!elem.style) {
        continue;
      }
      values[index] = data_priv.get(elem, 'olddisplay');
      display = elem.style.display;
      if (show) {
        // Reset the inline display of this element to learn if it is
        // being hidden by cascaded rules or not
        if (!values[index] && display === 'none') {
          elem.style.display = '';
        }
        // Set elements which have been overridden with display: none
        // in a stylesheet to whatever the default browser style is
        // for such an element
        if (elem.style.display === '' && isHidden(elem)) {
          values[index] = data_priv.access(elem, 'olddisplay', css_defaultDisplay(elem.nodeName));
        }
      } else {
        if (!values[index]) {
          hidden = isHidden(elem);
          if (display && display !== 'none' || !hidden) {
            data_priv.set(elem, 'olddisplay', hidden ? display : jQuery.css(elem, 'display'));
          }
        }
      }
    }
    // Set the display of most of the elements in a second loop
    // to avoid the constant reflow
    for (index = 0; index < length; index++) {
      elem = elements[index];
      if (!elem.style) {
        continue;
      }
      if (!show || elem.style.display === 'none' || elem.style.display === '') {
        elem.style.display = show ? values[index] || '' : 'none';
      }
    }
    return elements;
  }
  jQuery.fn.extend({
    css: function (name, value) {
      return jQuery.access(this, function (elem, name, value) {
        var styles, len, map = {}, i = 0;
        if (jQuery.isArray(name)) {
          styles = getStyles(elem);
          len = name.length;
          for (; i < len; i++) {
            map[name[i]] = jQuery.css(elem, name[i], false, styles);
          }
          return map;
        }
        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
      }, name, value, arguments.length > 1);
    },
    show: function () {
      return showHide(this, true);
    },
    hide: function () {
      return showHide(this);
    },
    toggle: function (state) {
      if (typeof state === 'boolean') {
        return state ? this.show() : this.hide();
      }
      return this.each(function () {
        if (isHidden(this)) {
          jQuery(this).show();
        } else {
          jQuery(this).hide();
        }
      });
    }
  });
  jQuery.extend({
    cssHooks: {
      opacity: {
        get: function (elem, computed) {
          if (computed) {
            // We should always get a number back from opacity
            var ret = curCSS(elem, 'opacity');
            return ret === '' ? '1' : ret;
          }
        }
      }
    },
    cssNumber: {
      'columnCount': true,
      'fillOpacity': true,
      'fontWeight': true,
      'lineHeight': true,
      'opacity': true,
      'order': true,
      'orphans': true,
      'widows': true,
      'zIndex': true,
      'zoom': true
    },
    cssProps: { 'float': 'cssFloat' },
    style: function (elem, name, value, extra) {
      // Don't set styles on text and comment nodes
      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
        return;
      }
      // Make sure that we're working with the right name
      var ret, type, hooks, origName = jQuery.camelCase(name), style = elem.style;
      name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(style, origName));
      // gets hook for the prefixed version
      // followed by the unprefixed version
      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
      // Check if we're setting a value
      if (value !== undefined) {
        type = typeof value;
        // convert relative number strings (+= or -=) to relative numbers. #7345
        if (type === 'string' && (ret = rrelNum.exec(value))) {
          value = (ret[1] + 1) * ret[2] + parseFloat(jQuery.css(elem, name));
          // Fixes bug #9237
          type = 'number';
        }
        // Make sure that NaN and null values aren't set. See: #7116
        if (value == null || type === 'number' && isNaN(value)) {
          return;
        }
        // If a number was passed in, add 'px' to the (except for certain CSS properties)
        if (type === 'number' && !jQuery.cssNumber[origName]) {
          value += 'px';
        }
        // Fixes #8908, it can be done more correctly by specifying setters in cssHooks,
        // but it would mean to define eight (for every problematic property) identical functions
        if (!jQuery.support.clearCloneStyle && value === '' && name.indexOf('background') === 0) {
          style[name] = 'inherit';
        }
        // If a hook was provided, use that value, otherwise just set the specified value
        if (!hooks || !('set' in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {
          style[name] = value;
        }
      } else {
        // If a hook was provided get the non-computed value from there
        if (hooks && 'get' in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {
          return ret;
        }
        // Otherwise just get the value from the style object
        return style[name];
      }
    },
    css: function (elem, name, extra, styles) {
      var val, num, hooks, origName = jQuery.camelCase(name);
      // Make sure that we're working with the right name
      name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(elem.style, origName));
      // gets hook for the prefixed version
      // followed by the unprefixed version
      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
      // If a hook was provided get the computed value from there
      if (hooks && 'get' in hooks) {
        val = hooks.get(elem, true, extra);
      }
      // Otherwise, if a way to get the computed value exists, use that
      if (val === undefined) {
        val = curCSS(elem, name, styles);
      }
      //convert "normal" to computed value
      if (val === 'normal' && name in cssNormalTransform) {
        val = cssNormalTransform[name];
      }
      // Return, converting to number if forced or a qualifier was provided and val looks numeric
      if (extra === '' || extra) {
        num = parseFloat(val);
        return extra === true || jQuery.isNumeric(num) ? num || 0 : val;
      }
      return val;
    }
  });
  curCSS = function (elem, name, _computed) {
    var width, minWidth, maxWidth, computed = _computed || getStyles(elem),
      // Support: IE9
      // getPropertyValue is only needed for .css('filter') in IE9, see #12537
      ret = computed ? computed.getPropertyValue(name) || computed[name] : undefined, style = elem.style;
    if (computed) {
      if (ret === '' && !jQuery.contains(elem.ownerDocument, elem)) {
        ret = jQuery.style(elem, name);
      }
      // Support: Safari 5.1
      // A tribute to the "awesome hack by Dean Edwards"
      // Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
      // this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
      if (rnumnonpx.test(ret) && rmargin.test(name)) {
        // Remember the original values
        width = style.width;
        minWidth = style.minWidth;
        maxWidth = style.maxWidth;
        // Put in the new values to get a computed value out
        style.minWidth = style.maxWidth = style.width = ret;
        ret = computed.width;
        // Revert the changed values
        style.width = width;
        style.minWidth = minWidth;
        style.maxWidth = maxWidth;
      }
    }
    return ret;
  };
  function setPositiveNumber(elem, value, subtract) {
    var matches = rnumsplit.exec(value);
    return matches ? Math.max(0, matches[1] - (subtract || 0)) + (matches[2] || 'px') : value;
  }
  function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {
    var i = extra === (isBorderBox ? 'border' : 'content') ? 4 : name === 'width' ? 1 : 0, val = 0;
    for (; i < 4; i += 2) {
      // both box models exclude margin, so add it if we want it
      if (extra === 'margin') {
        val += jQuery.css(elem, extra + cssExpand[i], true, styles);
      }
      if (isBorderBox) {
        // border-box includes padding, so remove it if we want content
        if (extra === 'content') {
          val -= jQuery.css(elem, 'padding' + cssExpand[i], true, styles);
        }
        // at this point, extra isn't border nor margin, so remove border
        if (extra !== 'margin') {
          val -= jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles);
        }
      } else {
        // at this point, extra isn't content, so add padding
        val += jQuery.css(elem, 'padding' + cssExpand[i], true, styles);
        // at this point, extra isn't content nor padding, so add border
        if (extra !== 'padding') {
          val += jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles);
        }
      }
    }
    return val;
  }
  function getWidthOrHeight(elem, name, extra) {
    // Start with offset property, which is equivalent to the border-box value
    var valueIsBorderBox = true, val = name === 'width' ? elem.offsetWidth : elem.offsetHeight, styles = getStyles(elem), isBorderBox = jQuery.support.boxSizing && jQuery.css(elem, 'boxSizing', false, styles) === 'border-box';
    // some non-html elements return undefined for offsetWidth, so check for null/undefined
    // svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
    // MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
    if (val <= 0 || val == null) {
      // Fall back to computed then uncomputed css if necessary
      val = curCSS(elem, name, styles);
      if (val < 0 || val == null) {
        val = elem.style[name];
      }
      // Computed unit is not pixels. Stop here and return.
      if (rnumnonpx.test(val)) {
        return val;
      }
      // we need the check for style in case a browser which returns unreliable values
      // for getComputedStyle silently falls back to the reliable elem.style
      valueIsBorderBox = isBorderBox && (jQuery.support.boxSizingReliable || val === elem.style[name]);
      // Normalize "", auto, and prepare for extra
      val = parseFloat(val) || 0;
    }
    // use the active box-sizing model to add/subtract irrelevant styles
    return val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? 'border' : 'content'), valueIsBorderBox, styles) + 'px';
  }
  // Try to determine the default display value of an element
  function css_defaultDisplay(nodeName) {
    var doc = document, display = elemdisplay[nodeName];
    if (!display) {
      display = actualDisplay(nodeName, doc);
      // If the simple way fails, read from inside an iframe
      if (display === 'none' || !display) {
        // Use the already-created iframe if possible
        iframe = (iframe || jQuery('<iframe frameborder=\'0\' width=\'0\' height=\'0\'/>').css('cssText', 'display:block !important')).appendTo(doc.documentElement);
        // Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
        doc = (iframe[0].contentWindow || iframe[0].contentDocument).document;
        doc.write('<!doctype html><html><body>');
        doc.close();
        display = actualDisplay(nodeName, doc);
        iframe.detach();
      }
      // Store the correct default display
      elemdisplay[nodeName] = display;
    }
    return display;
  }
  // Called ONLY from within css_defaultDisplay
  function actualDisplay(name, doc) {
    var elem = jQuery(doc.createElement(name)).appendTo(doc.body), display = jQuery.css(elem[0], 'display');
    elem.remove();
    return display;
  }
  jQuery.each([
    'height',
    'width'
  ], function (i, name) {
    jQuery.cssHooks[name] = {
      get: function (elem, computed, extra) {
        if (computed) {
          // certain elements can have dimension info if we invisibly show them
          // however, it must have a current display style that would benefit from this
          return elem.offsetWidth === 0 && rdisplayswap.test(jQuery.css(elem, 'display')) ? jQuery.swap(elem, cssShow, function () {
            return getWidthOrHeight(elem, name, extra);
          }) : getWidthOrHeight(elem, name, extra);
        }
      },
      set: function (elem, value, extra) {
        var styles = extra && getStyles(elem);
        return setPositiveNumber(elem, value, extra ? augmentWidthOrHeight(elem, name, extra, jQuery.support.boxSizing && jQuery.css(elem, 'boxSizing', false, styles) === 'border-box', styles) : 0);
      }
    };
  });
  // These hooks cannot be added until DOM ready because the support test
  // for it is not run until after DOM ready
  jQuery(function () {
    // Support: Android 2.3
    if (!jQuery.support.reliableMarginRight) {
      jQuery.cssHooks.marginRight = {
        get: function (elem, computed) {
          if (computed) {
            // Support: Android 2.3
            // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
            // Work around by temporarily setting element display to inline-block
            return jQuery.swap(elem, { 'display': 'inline-block' }, curCSS, [
              elem,
              'marginRight'
            ]);
          }
        }
      };
    }
    // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
    // getComputedStyle returns percent when specified for top/left/bottom/right
    // rather than make the css module depend on the offset module, we just check for it here
    if (!jQuery.support.pixelPosition && jQuery.fn.position) {
      jQuery.each([
        'top',
        'left'
      ], function (i, prop) {
        jQuery.cssHooks[prop] = {
          get: function (elem, computed) {
            if (computed) {
              computed = curCSS(elem, prop);
              // if curCSS returns percentage, fallback to offset
              return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + 'px' : computed;
            }
          }
        };
      });
    }
  });
  if (jQuery.expr && jQuery.expr.filters) {
    jQuery.expr.filters.hidden = function (elem) {
      // Support: Opera <= 12.12
      // Opera reports offsetWidths and offsetHeights less than zero on some elements
      return elem.offsetWidth <= 0 && elem.offsetHeight <= 0;
    };
    jQuery.expr.filters.visible = function (elem) {
      return !jQuery.expr.filters.hidden(elem);
    };
  }
  // These hooks are used by animate to expand properties
  jQuery.each({
    margin: '',
    padding: '',
    border: 'Width'
  }, function (prefix, suffix) {
    jQuery.cssHooks[prefix + suffix] = {
      expand: function (value) {
        var i = 0, expanded = {},
          // assumes a single number if not a string
          parts = typeof value === 'string' ? value.split(' ') : [value];
        for (; i < 4; i++) {
          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
        }
        return expanded;
      }
    };
    if (!rmargin.test(prefix)) {
      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
    }
  });
  var r20 = /%20/g, rbracket = /\[\]$/, rCRLF = /\r?\n/g, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;
  jQuery.fn.extend({
    serialize: function () {
      return jQuery.param(this.serializeArray());
    },
    serializeArray: function () {
      return this.map(function () {
        // Can add propHook for "elements" to filter or add form elements
        var elements = jQuery.prop(this, 'elements');
        return elements ? jQuery.makeArray(elements) : this;
      }).filter(function () {
        var type = this.type;
        // Use .is(":disabled") so that fieldset[disabled] works
        return this.name && !jQuery(this).is(':disabled') && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !manipulation_rcheckableType.test(type));
      }).map(function (i, elem) {
        var val = jQuery(this).val();
        return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function (val) {
          return {
            name: elem.name,
            value: val.replace(rCRLF, '\r\n')
          };
        }) : {
          name: elem.name,
          value: val.replace(rCRLF, '\r\n')
        };
      }).get();
    }
  });
  //Serialize an array of form elements or a set of
  //key/values into a query string
  jQuery.param = function (a, traditional) {
    var prefix, s = [], add = function (key, value) {
        // If value is a function, invoke it and return its value
        value = jQuery.isFunction(value) ? value() : value == null ? '' : value;
        s[s.length] = encodeURIComponent(key) + '=' + encodeURIComponent(value);
      };
    // Set traditional to true for jQuery <= 1.3.2 behavior.
    if (traditional === undefined) {
      traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
    }
    // If an array was passed in, assume that it is an array of form elements.
    if (jQuery.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {
      // Serialize the form elements
      jQuery.each(a, function () {
        add(this.name, this.value);
      });
    } else {
      // If traditional, encode the "old" way (the way 1.3.2 or older
      // did it), otherwise encode params recursively.
      for (prefix in a) {
        buildParams(prefix, a[prefix], traditional, add);
      }
    }
    // Return the resulting serialization
    return s.join('&').replace(r20, '+');
  };
  function buildParams(prefix, obj, traditional, add) {
    var name;
    if (jQuery.isArray(obj)) {
      // Serialize array item.
      jQuery.each(obj, function (i, v) {
        if (traditional || rbracket.test(prefix)) {
          // Treat each array item as a scalar.
          add(prefix, v);
        } else {
          // Item is non-scalar (array or object), encode its numeric index.
          buildParams(prefix + '[' + (typeof v === 'object' ? i : '') + ']', v, traditional, add);
        }
      });
    } else if (!traditional && jQuery.type(obj) === 'object') {
      // Serialize object item.
      for (name in obj) {
        buildParams(prefix + '[' + name + ']', obj[name], traditional, add);
      }
    } else {
      // Serialize scalar item.
      add(prefix, obj);
    }
  }
  jQuery.each(('blur focus focusin focusout load resize scroll unload click dblclick ' + 'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' + 'change select submit keydown keypress keyup error contextmenu').split(' '), function (i, name) {
    // Handle event binding
    jQuery.fn[name] = function (data, fn) {
      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
    };
  });
  jQuery.fn.extend({
    hover: function (fnOver, fnOut) {
      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
    },
    bind: function (types, data, fn) {
      return this.on(types, null, data, fn);
    },
    unbind: function (types, fn) {
      return this.off(types, null, fn);
    },
    delegate: function (selector, types, data, fn) {
      return this.on(types, selector, data, fn);
    },
    undelegate: function (selector, types, fn) {
      // ( namespace ) or ( selector, types [, fn] )
      return arguments.length === 1 ? this.off(selector, '**') : this.off(types, selector || '**', fn);
    }
  });
  var
    // Document location
    ajaxLocParts, ajaxLocation, ajax_nonce = jQuery.now(), ajax_rquery = /\?/, rhash = /#.*$/, rts = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \t]*([^\r\n]*)$/gm,
    // #7653, #8125, #8152: local protocol detection
    rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, rnoContent = /^(?:GET|HEAD)$/, rprotocol = /^\/\//, rurl = /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,
    // Keep a copy of the old load method
    _load = jQuery.fn.load,
    /* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
    prefilters = {},
    /* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
    transports = {},
    // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
    allTypes = '*/'.concat('*');
  // #8138, IE may throw an exception when accessing
  // a field from window.location if document.domain has been set
  try {
    ajaxLocation = location.href;
  } catch (e) {
    // Use the href attribute of an A element
    // since IE will modify it given document.location
    ajaxLocation = document.createElement('a');
    ajaxLocation.href = '';
    ajaxLocation = ajaxLocation.href;
  }
  // Segment location into parts
  ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [];
  // Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
  function addToPrefiltersOrTransports(structure) {
    // dataTypeExpression is optional and defaults to "*"
    return function (dataTypeExpression, func) {
      if (typeof dataTypeExpression !== 'string') {
        func = dataTypeExpression;
        dataTypeExpression = '*';
      }
      var dataType, i = 0, dataTypes = dataTypeExpression.toLowerCase().match(core_rnotwhite) || [];
      if (jQuery.isFunction(func)) {
        // For each dataType in the dataTypeExpression
        while (dataType = dataTypes[i++]) {
          // Prepend if requested
          if (dataType[0] === '+') {
            dataType = dataType.slice(1) || '*';
            (structure[dataType] = structure[dataType] || []).unshift(func);  // Otherwise append
          } else {
            (structure[dataType] = structure[dataType] || []).push(func);
          }
        }
      }
    };
  }
  // Base inspection function for prefilters and transports
  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
    var inspected = {}, seekingTransport = structure === transports;
    function inspect(dataType) {
      var selected;
      inspected[dataType] = true;
      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {
        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
        if (typeof dataTypeOrTransport === 'string' && !seekingTransport && !inspected[dataTypeOrTransport]) {
          options.dataTypes.unshift(dataTypeOrTransport);
          inspect(dataTypeOrTransport);
          return false;
        } else if (seekingTransport) {
          return !(selected = dataTypeOrTransport);
        }
      });
      return selected;
    }
    return inspect(options.dataTypes[0]) || !inspected['*'] && inspect('*');
  }
  // A special extend for ajax options
  // that takes "flat" options (not to be deep extended)
  // Fixes #9887
  function ajaxExtend(target, src) {
    var key, deep, flatOptions = jQuery.ajaxSettings.flatOptions || {};
    for (key in src) {
      if (src[key] !== undefined) {
        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
      }
    }
    if (deep) {
      jQuery.extend(true, target, deep);
    }
    return target;
  }
  jQuery.fn.load = function (url, params, callback) {
    if (typeof url !== 'string' && _load) {
      return _load.apply(this, arguments);
    }
    var selector, type, response, self = this, off = url.indexOf(' ');
    if (off >= 0) {
      selector = url.slice(off);
      url = url.slice(0, off);
    }
    // If it's a function
    if (jQuery.isFunction(params)) {
      // We assume that it's the callback
      callback = params;
      params = undefined;  // Otherwise, build a param string
    } else if (params && typeof params === 'object') {
      type = 'POST';
    }
    // If we have elements to modify, make the request
    if (self.length > 0) {
      jQuery.ajax({
        url: url,
        type: type,
        dataType: 'html',
        data: params
      }).done(function (responseText) {
        // Save response for use in complete callback
        response = arguments;
        self.html(selector ? jQuery('<div>').append(jQuery.parseHTML(responseText)).find(selector) : responseText);
      }).complete(callback && function (jqXHR, status) {
        self.each(callback, response || [
          jqXHR.responseText,
          status,
          jqXHR
        ]);
      });
    }
    return this;
  };
  // Attach a bunch of functions for handling common AJAX events
  jQuery.each([
    'ajaxStart',
    'ajaxStop',
    'ajaxComplete',
    'ajaxError',
    'ajaxSuccess',
    'ajaxSend'
  ], function (i, type) {
    jQuery.fn[type] = function (fn) {
      return this.on(type, fn);
    };
  });
  jQuery.extend({
    active: 0,
    lastModified: {},
    etag: {},
    ajaxSettings: {
      url: ajaxLocation,
      type: 'GET',
      isLocal: rlocalProtocol.test(ajaxLocParts[1]),
      global: true,
      processData: true,
      async: true,
      contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
      accepts: {
        '*': allTypes,
        text: 'text/plain',
        html: 'text/html',
        xml: 'application/xml, text/xml',
        json: 'application/json, text/javascript'
      },
      contents: {
        xml: /xml/,
        html: /html/,
        json: /json/
      },
      responseFields: {
        xml: 'responseXML',
        text: 'responseText',
        json: 'responseJSON'
      },
      converters: {
        '* text': String,
        'text html': true,
        'text json': jQuery.parseJSON,
        'text xml': jQuery.parseXML
      },
      flatOptions: {
        url: true,
        context: true
      }
    },
    ajaxSetup: function (target, settings) {
      return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);
    },
    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
    ajaxTransport: addToPrefiltersOrTransports(transports),
    ajax: function (url, options) {
      // If url is an object, simulate pre-1.5 signature
      if (typeof url === 'object') {
        options = url;
        url = undefined;
      }
      // Force options to be an object
      options = options || {};
      var transport,
        // URL without anti-cache param
        cacheURL,
        // Response headers
        responseHeadersString, responseHeaders,
        // timeout handle
        timeoutTimer,
        // Cross-domain detection vars
        parts,
        // To know if global events are to be dispatched
        fireGlobals,
        // Loop variable
        i,
        // Create the final options object
        s = jQuery.ajaxSetup({}, options),
        // Callbacks context
        callbackContext = s.context || s,
        // Context for global events is callbackContext if it is a DOM node or jQuery collection
        globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,
        // Deferreds
        deferred = jQuery.Deferred(), completeDeferred = jQuery.Callbacks('once memory'),
        // Status-dependent callbacks
        statusCode = s.statusCode || {},
        // Headers (they are sent all at once)
        requestHeaders = {}, requestHeadersNames = {},
        // The jqXHR state
        state = 0,
        // Default abort message
        strAbort = 'canceled',
        // Fake xhr
        jqXHR = {
          readyState: 0,
          getResponseHeader: function (key) {
            var match;
            if (state === 2) {
              if (!responseHeaders) {
                responseHeaders = {};
                while (match = rheaders.exec(responseHeadersString)) {
                  responseHeaders[match[1].toLowerCase()] = match[2];
                }
              }
              match = responseHeaders[key.toLowerCase()];
            }
            return match == null ? null : match;
          },
          getAllResponseHeaders: function () {
            return state === 2 ? responseHeadersString : null;
          },
          setRequestHeader: function (name, value) {
            var lname = name.toLowerCase();
            if (!state) {
              name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;
              requestHeaders[name] = value;
            }
            return this;
          },
          overrideMimeType: function (type) {
            if (!state) {
              s.mimeType = type;
            }
            return this;
          },
          statusCode: function (map) {
            var code;
            if (map) {
              if (state < 2) {
                for (code in map) {
                  // Lazy-add the new callback in a way that preserves old ones
                  statusCode[code] = [
                    statusCode[code],
                    map[code]
                  ];
                }
              } else {
                // Execute the appropriate callbacks
                jqXHR.always(map[jqXHR.status]);
              }
            }
            return this;
          },
          abort: function (statusText) {
            var finalText = statusText || strAbort;
            if (transport) {
              transport.abort(finalText);
            }
            done(0, finalText);
            return this;
          }
        };
      // Attach deferreds
      deferred.promise(jqXHR).complete = completeDeferred.add;
      jqXHR.success = jqXHR.done;
      jqXHR.error = jqXHR.fail;
      // Remove hash character (#7531: and string promotion)
      // Add protocol if not provided (prefilters might expect it)
      // Handle falsy url in the settings object (#10093: consistency with old signature)
      // We also use the url parameter if available
      s.url = ((url || s.url || ajaxLocation) + '').replace(rhash, '').replace(rprotocol, ajaxLocParts[1] + '//');
      // Alias method option to type as per ticket #12004
      s.type = options.method || options.type || s.method || s.type;
      // Extract dataTypes list
      s.dataTypes = jQuery.trim(s.dataType || '*').toLowerCase().match(core_rnotwhite) || [''];
      // A cross-domain request is in order when we have a protocol:host:port mismatch
      if (s.crossDomain == null) {
        parts = rurl.exec(s.url.toLowerCase());
        s.crossDomain = !!(parts && (parts[1] !== ajaxLocParts[1] || parts[2] !== ajaxLocParts[2] || (parts[3] || (parts[1] === 'http:' ? '80' : '443')) !== (ajaxLocParts[3] || (ajaxLocParts[1] === 'http:' ? '80' : '443'))));
      }
      // Convert data if not already a string
      if (s.data && s.processData && typeof s.data !== 'string') {
        s.data = jQuery.param(s.data, s.traditional);
      }
      // Apply prefilters
      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
      // If request was aborted inside a prefilter, stop there
      if (state === 2) {
        return jqXHR;
      }
      // We can fire global events as of now if asked to
      fireGlobals = s.global;
      // Watch for a new set of requests
      if (fireGlobals && jQuery.active++ === 0) {
        jQuery.event.trigger('ajaxStart');
      }
      // Uppercase the type
      s.type = s.type.toUpperCase();
      // Determine if request has content
      s.hasContent = !rnoContent.test(s.type);
      // Save the URL in case we're toying with the If-Modified-Since
      // and/or If-None-Match header later on
      cacheURL = s.url;
      // More options handling for requests with no content
      if (!s.hasContent) {
        // If data is available, append data to url
        if (s.data) {
          cacheURL = s.url += (ajax_rquery.test(cacheURL) ? '&' : '?') + s.data;
          // #9682: remove data so that it's not used in an eventual retry
          delete s.data;
        }
        // Add anti-cache in url if needed
        if (s.cache === false) {
          s.url = rts.test(cacheURL) ? cacheURL.replace(rts, '$1_=' + ajax_nonce++) : cacheURL + (ajax_rquery.test(cacheURL) ? '&' : '?') + '_=' + ajax_nonce++;
        }
      }
      // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
      if (s.ifModified) {
        if (jQuery.lastModified[cacheURL]) {
          jqXHR.setRequestHeader('If-Modified-Since', jQuery.lastModified[cacheURL]);
        }
        if (jQuery.etag[cacheURL]) {
          jqXHR.setRequestHeader('If-None-Match', jQuery.etag[cacheURL]);
        }
      }
      // Set the correct header, if data is being sent
      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
        jqXHR.setRequestHeader('Content-Type', s.contentType);
      }
      // Set the Accepts header for the server, depending on the dataType
      jqXHR.setRequestHeader('Accept', s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== '*' ? ', ' + allTypes + '; q=0.01' : '') : s.accepts['*']);
      // Check for headers option
      for (i in s.headers) {
        jqXHR.setRequestHeader(i, s.headers[i]);
      }
      // Allow custom headers/mimetypes and early abort
      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {
        // Abort if not done already and return
        return jqXHR.abort();
      }
      // aborting is no longer a cancellation
      strAbort = 'abort';
      // Install callbacks on deferreds
      for (i in {
          success: 1,
          error: 1,
          complete: 1
        }) {
        jqXHR[i](s[i]);
      }
      // Get transport
      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);
      // If no transport, we auto-abort
      if (!transport) {
        done(-1, 'No Transport');
      } else {
        jqXHR.readyState = 1;
        // Send global event
        if (fireGlobals) {
          globalEventContext.trigger('ajaxSend', [
            jqXHR,
            s
          ]);
        }
        // Timeout
        if (s.async && s.timeout > 0) {
          timeoutTimer = setTimeout(function () {
            jqXHR.abort('timeout');
          }, s.timeout);
        }
        try {
          state = 1;
          transport.send(requestHeaders, done);
        } catch (e) {
          // Propagate exception as error if not done
          if (state < 2) {
            done(-1, e);  // Simply rethrow otherwise
          } else {
            throw e;
          }
        }
      }
      // Callback for when everything is done
      function done(status, nativeStatusText, responses, headers) {
        var isSuccess, success, error, response, modified, statusText = nativeStatusText;
        // Called once
        if (state === 2) {
          return;
        }
        // State is "done" now
        state = 2;
        // Clear timeout if it exists
        if (timeoutTimer) {
          clearTimeout(timeoutTimer);
        }
        // Dereference transport for early garbage collection
        // (no matter how long the jqXHR object will be used)
        transport = undefined;
        // Cache response headers
        responseHeadersString = headers || '';
        // Set readyState
        jqXHR.readyState = status > 0 ? 4 : 0;
        // Determine if successful
        isSuccess = status >= 200 && status < 300 || status === 304;
        // Get response data
        if (responses) {
          response = ajaxHandleResponses(s, jqXHR, responses);
        }
        // Convert no matter what (that way responseXXX fields are always set)
        response = ajaxConvert(s, response, jqXHR, isSuccess);
        // If successful, handle type chaining
        if (isSuccess) {
          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
          if (s.ifModified) {
            modified = jqXHR.getResponseHeader('Last-Modified');
            if (modified) {
              jQuery.lastModified[cacheURL] = modified;
            }
            modified = jqXHR.getResponseHeader('etag');
            if (modified) {
              jQuery.etag[cacheURL] = modified;
            }
          }
          // if no content
          if (status === 204 || s.type === 'HEAD') {
            statusText = 'nocontent';  // if not modified
          } else if (status === 304) {
            statusText = 'notmodified';  // If we have data, let's convert it
          } else {
            statusText = response.state;
            success = response.data;
            error = response.error;
            isSuccess = !error;
          }
        } else {
          // We extract error from statusText
          // then normalize statusText and status for non-aborts
          error = statusText;
          if (status || !statusText) {
            statusText = 'error';
            if (status < 0) {
              status = 0;
            }
          }
        }
        // Set data for the fake xhr object
        jqXHR.status = status;
        jqXHR.statusText = (nativeStatusText || statusText) + '';
        // Success/Error
        if (isSuccess) {
          deferred.resolveWith(callbackContext, [
            success,
            statusText,
            jqXHR
          ]);
        } else {
          deferred.rejectWith(callbackContext, [
            jqXHR,
            statusText,
            error
          ]);
        }
        // Status-dependent callbacks
        jqXHR.statusCode(statusCode);
        statusCode = undefined;
        if (fireGlobals) {
          globalEventContext.trigger(isSuccess ? 'ajaxSuccess' : 'ajaxError', [
            jqXHR,
            s,
            isSuccess ? success : error
          ]);
        }
        // Complete
        completeDeferred.fireWith(callbackContext, [
          jqXHR,
          statusText
        ]);
        if (fireGlobals) {
          globalEventContext.trigger('ajaxComplete', [
            jqXHR,
            s
          ]);
          // Handle the global AJAX counter
          if (!--jQuery.active) {
            jQuery.event.trigger('ajaxStop');
          }
        }
      }
      return jqXHR;
    },
    getJSON: function (url, data, callback) {
      return jQuery.get(url, data, callback, 'json');
    },
    getScript: function (url, callback) {
      return jQuery.get(url, undefined, callback, 'script');
    }
  });
  jQuery.each([
    'get',
    'post'
  ], function (i, method) {
    jQuery[method] = function (url, data, callback, type) {
      // shift arguments if data argument was omitted
      if (jQuery.isFunction(data)) {
        type = type || callback;
        callback = data;
        data = undefined;
      }
      return jQuery.ajax({
        url: url,
        type: method,
        dataType: type,
        data: data,
        success: callback
      });
    };
  });
  /* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
  function ajaxHandleResponses(s, jqXHR, responses) {
    var ct, type, finalDataType, firstDataType, contents = s.contents, dataTypes = s.dataTypes;
    // Remove auto dataType and get content-type in the process
    while (dataTypes[0] === '*') {
      dataTypes.shift();
      if (ct === undefined) {
        ct = s.mimeType || jqXHR.getResponseHeader('Content-Type');
      }
    }
    // Check if we're dealing with a known content-type
    if (ct) {
      for (type in contents) {
        if (contents[type] && contents[type].test(ct)) {
          dataTypes.unshift(type);
          break;
        }
      }
    }
    // Check to see if we have a response for the expected dataType
    if (dataTypes[0] in responses) {
      finalDataType = dataTypes[0];
    } else {
      // Try convertible dataTypes
      for (type in responses) {
        if (!dataTypes[0] || s.converters[type + ' ' + dataTypes[0]]) {
          finalDataType = type;
          break;
        }
        if (!firstDataType) {
          firstDataType = type;
        }
      }
      // Or just use first one
      finalDataType = finalDataType || firstDataType;
    }
    // If we found a dataType
    // We add the dataType to the list if needed
    // and return the corresponding response
    if (finalDataType) {
      if (finalDataType !== dataTypes[0]) {
        dataTypes.unshift(finalDataType);
      }
      return responses[finalDataType];
    }
  }
  /* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
  function ajaxConvert(s, response, jqXHR, isSuccess) {
    var conv2, current, conv, tmp, prev, converters = {},
      // Work with a copy of dataTypes in case we need to modify it for conversion
      dataTypes = s.dataTypes.slice();
    // Create converters map with lowercased keys
    if (dataTypes[1]) {
      for (conv in s.converters) {
        converters[conv.toLowerCase()] = s.converters[conv];
      }
    }
    current = dataTypes.shift();
    // Convert to each sequential dataType
    while (current) {
      if (s.responseFields[current]) {
        jqXHR[s.responseFields[current]] = response;
      }
      // Apply the dataFilter if provided
      if (!prev && isSuccess && s.dataFilter) {
        response = s.dataFilter(response, s.dataType);
      }
      prev = current;
      current = dataTypes.shift();
      if (current) {
        // There's only work to do if current dataType is non-auto
        if (current === '*') {
          current = prev;  // Convert response if prev dataType is non-auto and differs from current
        } else if (prev !== '*' && prev !== current) {
          // Seek a direct converter
          conv = converters[prev + ' ' + current] || converters['* ' + current];
          // If none found, seek a pair
          if (!conv) {
            for (conv2 in converters) {
              // If conv2 outputs current
              tmp = conv2.split(' ');
              if (tmp[1] === current) {
                // If prev can be converted to accepted input
                conv = converters[prev + ' ' + tmp[0]] || converters['* ' + tmp[0]];
                if (conv) {
                  // Condense equivalence converters
                  if (conv === true) {
                    conv = converters[conv2];  // Otherwise, insert the intermediate dataType
                  } else if (converters[conv2] !== true) {
                    current = tmp[0];
                    dataTypes.unshift(tmp[1]);
                  }
                  break;
                }
              }
            }
          }
          // Apply converter (if not an equivalence)
          if (conv !== true) {
            // Unless errors are allowed to bubble, catch and return them
            if (conv && s['throws']) {
              response = conv(response);
            } else {
              try {
                response = conv(response);
              } catch (e) {
                return {
                  state: 'parsererror',
                  error: conv ? e : 'No conversion from ' + prev + ' to ' + current
                };
              }
            }
          }
        }
      }
    }
    return {
      state: 'success',
      data: response
    };
  }
  // Install script dataType
  jQuery.ajaxSetup({
    accepts: { script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript' },
    contents: { script: /(?:java|ecma)script/ },
    converters: {
      'text script': function (text) {
        jQuery.globalEval(text);
        return text;
      }
    }
  });
  // Handle cache's special case and crossDomain
  jQuery.ajaxPrefilter('script', function (s) {
    if (s.cache === undefined) {
      s.cache = false;
    }
    if (s.crossDomain) {
      s.type = 'GET';
    }
  });
  // Bind script tag hack transport
  jQuery.ajaxTransport('script', function (s) {
    // This transport only deals with cross domain requests
    if (s.crossDomain) {
      var script, callback;
      return {
        send: function (_, complete) {
          script = jQuery('<script>').prop({
            async: true,
            charset: s.scriptCharset,
            src: s.url
          }).on('load error', callback = function (evt) {
            script.remove();
            callback = null;
            if (evt) {
              complete(evt.type === 'error' ? 404 : 200, evt.type);
            }
          });
          document.head.appendChild(script[0]);
        },
        abort: function () {
          if (callback) {
            callback();
          }
        }
      };
    }
  });
  var oldCallbacks = [], rjsonp = /(=)\?(?=&|$)|\?\?/;
  // Default jsonp settings
  jQuery.ajaxSetup({
    jsonp: 'callback',
    jsonpCallback: function () {
      var callback = oldCallbacks.pop() || jQuery.expando + '_' + ajax_nonce++;
      this[callback] = true;
      return callback;
    }
  });
  // Detect, normalize options and install callbacks for jsonp requests
  jQuery.ajaxPrefilter('json jsonp', function (s, originalSettings, jqXHR) {
    var callbackName, overwritten, responseContainer, jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? 'url' : typeof s.data === 'string' && !(s.contentType || '').indexOf('application/x-www-form-urlencoded') && rjsonp.test(s.data) && 'data');
    // Handle iff the expected data type is "jsonp" or we have a parameter to set
    if (jsonProp || s.dataTypes[0] === 'jsonp') {
      // Get callback name, remembering preexisting value associated with it
      callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;
      // Insert callback into url or form data
      if (jsonProp) {
        s[jsonProp] = s[jsonProp].replace(rjsonp, '$1' + callbackName);
      } else if (s.jsonp !== false) {
        s.url += (ajax_rquery.test(s.url) ? '&' : '?') + s.jsonp + '=' + callbackName;
      }
      // Use data converter to retrieve json after script execution
      s.converters['script json'] = function () {
        if (!responseContainer) {
          jQuery.error(callbackName + ' was not called');
        }
        return responseContainer[0];
      };
      // force json dataType
      s.dataTypes[0] = 'json';
      // Install callback
      overwritten = window[callbackName];
      window[callbackName] = function () {
        responseContainer = arguments;
      };
      // Clean-up function (fires after converters)
      jqXHR.always(function () {
        // Restore preexisting value
        window[callbackName] = overwritten;
        // Save back as free
        if (s[callbackName]) {
          // make sure that re-using the options doesn't screw things around
          s.jsonpCallback = originalSettings.jsonpCallback;
          // save the callback name for future use
          oldCallbacks.push(callbackName);
        }
        // Call if it was a function and we have a response
        if (responseContainer && jQuery.isFunction(overwritten)) {
          overwritten(responseContainer[0]);
        }
        responseContainer = overwritten = undefined;
      });
      // Delegate to script
      return 'script';
    }
  });
  jQuery.ajaxSettings.xhr = function () {
    try {
      return new XMLHttpRequest();
    } catch (e) {
    }
  };
  var xhrSupported = jQuery.ajaxSettings.xhr(), xhrSuccessStatus = {
      0: 200,
      1223: 204
    },
    // Support: IE9
    // We need to keep track of outbound xhr and abort them manually
    // because IE is not smart enough to do it all by itself
    xhrId = 0, xhrCallbacks = {};
  if (window.ActiveXObject) {
    jQuery(window).on('unload', function () {
      for (var key in xhrCallbacks) {
        xhrCallbacks[key]();
      }
      xhrCallbacks = undefined;
    });
  }
  jQuery.support.cors = !!xhrSupported && 'withCredentials' in xhrSupported;
  jQuery.support.ajax = xhrSupported = !!xhrSupported;
  jQuery.ajaxTransport(function (options) {
    var callback;
    // Cross domain only allowed if supported through XMLHttpRequest
    if (jQuery.support.cors || xhrSupported && !options.crossDomain) {
      return {
        send: function (headers, complete) {
          var i, id, xhr = options.xhr();
          xhr.open(options.type, options.url, options.async, options.username, options.password);
          // Apply custom fields if provided
          if (options.xhrFields) {
            for (i in options.xhrFields) {
              xhr[i] = options.xhrFields[i];
            }
          }
          // Override mime type if needed
          if (options.mimeType && xhr.overrideMimeType) {
            xhr.overrideMimeType(options.mimeType);
          }
          // X-Requested-With header
          // For cross-domain requests, seeing as conditions for a preflight are
          // akin to a jigsaw puzzle, we simply never set it to be sure.
          // (it can always be set on a per-request basis or even using ajaxSetup)
          // For same-domain requests, won't change header if already provided.
          if (!options.crossDomain && !headers['X-Requested-With']) {
            headers['X-Requested-With'] = 'XMLHttpRequest';
          }
          // Set headers
          for (i in headers) {
            xhr.setRequestHeader(i, headers[i]);
          }
          // Callback
          callback = function (type) {
            return function () {
              if (callback) {
                delete xhrCallbacks[id];
                callback = xhr.onload = xhr.onerror = null;
                if (type === 'abort') {
                  xhr.abort();
                } else if (type === 'error') {
                  complete(xhr.status || 404, xhr.statusText);
                } else {
                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, typeof xhr.responseText === 'string' ? { text: xhr.responseText } : undefined, xhr.getAllResponseHeaders());
                }
              }
            };
          };
          // Listen to events
          xhr.onload = callback();
          xhr.onerror = callback('error');
          // Create the abort callback
          callback = xhrCallbacks[id = xhrId++] = callback('abort');
          // Do send the request
          // This may raise an exception which is actually
          // handled in jQuery.ajax (so no try/catch here)
          xhr.send(options.hasContent && options.data || null);
        },
        abort: function () {
          if (callback) {
            callback();
          }
        }
      };
    }
  });
  var fxNow, timerId, rfxtypes = /^(?:toggle|show|hide)$/, rfxnum = new RegExp('^(?:([+-])=|)(' + core_pnum + ')([a-z%]*)$', 'i'), rrun = /queueHooks$/, animationPrefilters = [defaultPrefilter], tweeners = {
      '*': [function (prop, value) {
          var tween = this.createTween(prop, value), target = tween.cur(), parts = rfxnum.exec(value), unit = parts && parts[3] || (jQuery.cssNumber[prop] ? '' : 'px'),
            // Starting value computation is required for potential unit mismatches
            start = (jQuery.cssNumber[prop] || unit !== 'px' && +target) && rfxnum.exec(jQuery.css(tween.elem, prop)), scale = 1, maxIterations = 20;
          if (start && start[3] !== unit) {
            // Trust units reported by jQuery.css
            unit = unit || start[3];
            // Make sure we update the tween properties later on
            parts = parts || [];
            // Iteratively approximate from a nonzero starting point
            start = +target || 1;
            do {
              // If previous iteration zeroed out, double until we get *something*
              // Use a string for doubling factor so we don't accidentally see scale as unchanged below
              scale = scale || '.5';
              // Adjust and apply
              start = start / scale;
              jQuery.style(tween.elem, prop, start + unit);  // Update scale, tolerating zero or NaN from tween.cur()
                                                             // And breaking the loop if scale is unchanged or perfect, or if we've just had enough
            } while (scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations);
          }
          // Update tween properties
          if (parts) {
            start = tween.start = +start || +target || 0;
            tween.unit = unit;
            // If a +=/-= token was provided, we're doing a relative animation
            tween.end = parts[1] ? start + (parts[1] + 1) * parts[2] : +parts[2];
          }
          return tween;
        }]
    };
  // Animations created synchronously will run synchronously
  function createFxNow() {
    setTimeout(function () {
      fxNow = undefined;
    });
    return fxNow = jQuery.now();
  }
  function createTween(value, prop, animation) {
    var tween, collection = (tweeners[prop] || []).concat(tweeners['*']), index = 0, length = collection.length;
    for (; index < length; index++) {
      if (tween = collection[index].call(animation, prop, value)) {
        // we're done with this property
        return tween;
      }
    }
  }
  function Animation(elem, properties, options) {
    var result, stopped, index = 0, length = animationPrefilters.length, deferred = jQuery.Deferred().always(function () {
        // don't match elem in the :animated selector
        delete tick.elem;
      }), tick = function () {
        if (stopped) {
          return false;
        }
        var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime),
          // archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)
          temp = remaining / animation.duration || 0, percent = 1 - temp, index = 0, length = animation.tweens.length;
        for (; index < length; index++) {
          animation.tweens[index].run(percent);
        }
        deferred.notifyWith(elem, [
          animation,
          percent,
          remaining
        ]);
        if (percent < 1 && length) {
          return remaining;
        } else {
          deferred.resolveWith(elem, [animation]);
          return false;
        }
      }, animation = deferred.promise({
        elem: elem,
        props: jQuery.extend({}, properties),
        opts: jQuery.extend(true, { specialEasing: {} }, options),
        originalProperties: properties,
        originalOptions: options,
        startTime: fxNow || createFxNow(),
        duration: options.duration,
        tweens: [],
        createTween: function (prop, end) {
          var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
          animation.tweens.push(tween);
          return tween;
        },
        stop: function (gotoEnd) {
          var index = 0,
            // if we are going to the end, we want to run all the tweens
            // otherwise we skip this part
            length = gotoEnd ? animation.tweens.length : 0;
          if (stopped) {
            return this;
          }
          stopped = true;
          for (; index < length; index++) {
            animation.tweens[index].run(1);
          }
          // resolve when we played the last frame
          // otherwise, reject
          if (gotoEnd) {
            deferred.resolveWith(elem, [
              animation,
              gotoEnd
            ]);
          } else {
            deferred.rejectWith(elem, [
              animation,
              gotoEnd
            ]);
          }
          return this;
        }
      }), props = animation.props;
    propFilter(props, animation.opts.specialEasing);
    for (; index < length; index++) {
      result = animationPrefilters[index].call(animation, elem, props, animation.opts);
      if (result) {
        return result;
      }
    }
    jQuery.map(props, createTween, animation);
    if (jQuery.isFunction(animation.opts.start)) {
      animation.opts.start.call(elem, animation);
    }
    jQuery.fx.timer(jQuery.extend(tick, {
      elem: elem,
      anim: animation,
      queue: animation.opts.queue
    }));
    // attach callbacks from options
    return animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
  }
  function propFilter(props, specialEasing) {
    var index, name, easing, value, hooks;
    // camelCase, specialEasing and expand cssHook pass
    for (index in props) {
      name = jQuery.camelCase(index);
      easing = specialEasing[name];
      value = props[index];
      if (jQuery.isArray(value)) {
        easing = value[1];
        value = props[index] = value[0];
      }
      if (index !== name) {
        props[name] = value;
        delete props[index];
      }
      hooks = jQuery.cssHooks[name];
      if (hooks && 'expand' in hooks) {
        value = hooks.expand(value);
        delete props[name];
        // not quite $.extend, this wont overwrite keys already present.
        // also - reusing 'index' from above because we have the correct "name"
        for (index in value) {
          if (!(index in props)) {
            props[index] = value[index];
            specialEasing[index] = easing;
          }
        }
      } else {
        specialEasing[name] = easing;
      }
    }
  }
  jQuery.Animation = jQuery.extend(Animation, {
    tweener: function (props, callback) {
      if (jQuery.isFunction(props)) {
        callback = props;
        props = ['*'];
      } else {
        props = props.split(' ');
      }
      var prop, index = 0, length = props.length;
      for (; index < length; index++) {
        prop = props[index];
        tweeners[prop] = tweeners[prop] || [];
        tweeners[prop].unshift(callback);
      }
    },
    prefilter: function (callback, prepend) {
      if (prepend) {
        animationPrefilters.unshift(callback);
      } else {
        animationPrefilters.push(callback);
      }
    }
  });
  function defaultPrefilter(elem, props, opts) {
    /* jshint validthis: true */
    var prop, value, toggle, tween, hooks, oldfire, anim = this, orig = {}, style = elem.style, hidden = elem.nodeType && isHidden(elem), dataShow = data_priv.get(elem, 'fxshow');
    // handle queue: false promises
    if (!opts.queue) {
      hooks = jQuery._queueHooks(elem, 'fx');
      if (hooks.unqueued == null) {
        hooks.unqueued = 0;
        oldfire = hooks.empty.fire;
        hooks.empty.fire = function () {
          if (!hooks.unqueued) {
            oldfire();
          }
        };
      }
      hooks.unqueued++;
      anim.always(function () {
        // doing this makes sure that the complete handler will be called
        // before this completes
        anim.always(function () {
          hooks.unqueued--;
          if (!jQuery.queue(elem, 'fx').length) {
            hooks.empty.fire();
          }
        });
      });
    }
    // height/width overflow pass
    if (elem.nodeType === 1 && ('height' in props || 'width' in props)) {
      // Make sure that nothing sneaks out
      // Record all 3 overflow attributes because IE9-10 do not
      // change the overflow attribute when overflowX and
      // overflowY are set to the same value
      opts.overflow = [
        style.overflow,
        style.overflowX,
        style.overflowY
      ];
      // Set display property to inline-block for height/width
      // animations on inline elements that are having width/height animated
      if (jQuery.css(elem, 'display') === 'inline' && jQuery.css(elem, 'float') === 'none') {
        style.display = 'inline-block';
      }
    }
    if (opts.overflow) {
      style.overflow = 'hidden';
      anim.always(function () {
        style.overflow = opts.overflow[0];
        style.overflowX = opts.overflow[1];
        style.overflowY = opts.overflow[2];
      });
    }
    // show/hide pass
    for (prop in props) {
      value = props[prop];
      if (rfxtypes.exec(value)) {
        delete props[prop];
        toggle = toggle || value === 'toggle';
        if (value === (hidden ? 'hide' : 'show')) {
          // If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden
          if (value === 'show' && dataShow && dataShow[prop] !== undefined) {
            hidden = true;
          } else {
            continue;
          }
        }
        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
      }
    }
    if (!jQuery.isEmptyObject(orig)) {
      if (dataShow) {
        if ('hidden' in dataShow) {
          hidden = dataShow.hidden;
        }
      } else {
        dataShow = data_priv.access(elem, 'fxshow', {});
      }
      // store state if its toggle - enables .stop().toggle() to "reverse"
      if (toggle) {
        dataShow.hidden = !hidden;
      }
      if (hidden) {
        jQuery(elem).show();
      } else {
        anim.done(function () {
          jQuery(elem).hide();
        });
      }
      anim.done(function () {
        var prop;
        data_priv.remove(elem, 'fxshow');
        for (prop in orig) {
          jQuery.style(elem, prop, orig[prop]);
        }
      });
      for (prop in orig) {
        tween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
        if (!(prop in dataShow)) {
          dataShow[prop] = tween.start;
          if (hidden) {
            tween.end = tween.start;
            tween.start = prop === 'width' || prop === 'height' ? 1 : 0;
          }
        }
      }
    }
  }
  function Tween(elem, options, prop, end, easing) {
    return new Tween.prototype.init(elem, options, prop, end, easing);
  }
  jQuery.Tween = Tween;
  Tween.prototype = {
    constructor: Tween,
    init: function (elem, options, prop, end, easing, unit) {
      this.elem = elem;
      this.prop = prop;
      this.easing = easing || 'swing';
      this.options = options;
      this.start = this.now = this.cur();
      this.end = end;
      this.unit = unit || (jQuery.cssNumber[prop] ? '' : 'px');
    },
    cur: function () {
      var hooks = Tween.propHooks[this.prop];
      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
    },
    run: function (percent) {
      var eased, hooks = Tween.propHooks[this.prop];
      if (this.options.duration) {
        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
      } else {
        this.pos = eased = percent;
      }
      this.now = (this.end - this.start) * eased + this.start;
      if (this.options.step) {
        this.options.step.call(this.elem, this.now, this);
      }
      if (hooks && hooks.set) {
        hooks.set(this);
      } else {
        Tween.propHooks._default.set(this);
      }
      return this;
    }
  };
  Tween.prototype.init.prototype = Tween.prototype;
  Tween.propHooks = {
    _default: {
      get: function (tween) {
        var result;
        if (tween.elem[tween.prop] != null && (!tween.elem.style || tween.elem.style[tween.prop] == null)) {
          return tween.elem[tween.prop];
        }
        // passing an empty string as a 3rd parameter to .css will automatically
        // attempt a parseFloat and fallback to a string if the parse fails
        // so, simple values such as "10px" are parsed to Float.
        // complex values such as "rotate(1rad)" are returned as is.
        result = jQuery.css(tween.elem, tween.prop, '');
        // Empty strings, null, undefined and "auto" are converted to 0.
        return !result || result === 'auto' ? 0 : result;
      },
      set: function (tween) {
        // use step hook for back compat - use cssHook if its there - use .style if its
        // available and use plain properties where available
        if (jQuery.fx.step[tween.prop]) {
          jQuery.fx.step[tween.prop](tween);
        } else if (tween.elem.style && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {
          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
        } else {
          tween.elem[tween.prop] = tween.now;
        }
      }
    }
  };
  // Support: IE9
  // Panic based approach to setting things on disconnected nodes
  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
    set: function (tween) {
      if (tween.elem.nodeType && tween.elem.parentNode) {
        tween.elem[tween.prop] = tween.now;
      }
    }
  };
  jQuery.each([
    'toggle',
    'show',
    'hide'
  ], function (i, name) {
    var cssFn = jQuery.fn[name];
    jQuery.fn[name] = function (speed, easing, callback) {
      return speed == null || typeof speed === 'boolean' ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
    };
  });
  jQuery.fn.extend({
    fadeTo: function (speed, to, easing, callback) {
      // show any hidden elements after setting opacity to 0
      return this.filter(isHidden).css('opacity', 0).show().end().animate({ opacity: to }, speed, easing, callback);
    },
    animate: function (prop, speed, easing, callback) {
      var empty = jQuery.isEmptyObject(prop), optall = jQuery.speed(speed, easing, callback), doAnimation = function () {
          // Operate on a copy of prop so per-property easing won't be lost
          var anim = Animation(this, jQuery.extend({}, prop), optall);
          // Empty animations, or finishing resolves immediately
          if (empty || data_priv.get(this, 'finish')) {
            anim.stop(true);
          }
        };
      doAnimation.finish = doAnimation;
      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
    },
    stop: function (type, clearQueue, gotoEnd) {
      var stopQueue = function (hooks) {
        var stop = hooks.stop;
        delete hooks.stop;
        stop(gotoEnd);
      };
      if (typeof type !== 'string') {
        gotoEnd = clearQueue;
        clearQueue = type;
        type = undefined;
      }
      if (clearQueue && type !== false) {
        this.queue(type || 'fx', []);
      }
      return this.each(function () {
        var dequeue = true, index = type != null && type + 'queueHooks', timers = jQuery.timers, data = data_priv.get(this);
        if (index) {
          if (data[index] && data[index].stop) {
            stopQueue(data[index]);
          }
        } else {
          for (index in data) {
            if (data[index] && data[index].stop && rrun.test(index)) {
              stopQueue(data[index]);
            }
          }
        }
        for (index = timers.length; index--;) {
          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
            timers[index].anim.stop(gotoEnd);
            dequeue = false;
            timers.splice(index, 1);
          }
        }
        // start the next in the queue if the last step wasn't forced
        // timers currently will call their complete callbacks, which will dequeue
        // but only if they were gotoEnd
        if (dequeue || !gotoEnd) {
          jQuery.dequeue(this, type);
        }
      });
    },
    finish: function (type) {
      if (type !== false) {
        type = type || 'fx';
      }
      return this.each(function () {
        var index, data = data_priv.get(this), queue = data[type + 'queue'], hooks = data[type + 'queueHooks'], timers = jQuery.timers, length = queue ? queue.length : 0;
        // enable finishing flag on private data
        data.finish = true;
        // empty the queue first
        jQuery.queue(this, type, []);
        if (hooks && hooks.stop) {
          hooks.stop.call(this, true);
        }
        // look for any active animations, and finish them
        for (index = timers.length; index--;) {
          if (timers[index].elem === this && timers[index].queue === type) {
            timers[index].anim.stop(true);
            timers.splice(index, 1);
          }
        }
        // look for any animations in the old queue and finish them
        for (index = 0; index < length; index++) {
          if (queue[index] && queue[index].finish) {
            queue[index].finish.call(this);
          }
        }
        // turn off finishing flag
        delete data.finish;
      });
    }
  });
  // Generate parameters to create a standard animation
  function genFx(type, includeWidth) {
    var which, attrs = { height: type }, i = 0;
    // if we include width, step value is 1 to do all cssExpand values,
    // if we don't include width, step value is 2 to skip over Left and Right
    includeWidth = includeWidth ? 1 : 0;
    for (; i < 4; i += 2 - includeWidth) {
      which = cssExpand[i];
      attrs['margin' + which] = attrs['padding' + which] = type;
    }
    if (includeWidth) {
      attrs.opacity = attrs.width = type;
    }
    return attrs;
  }
  // Generate shortcuts for custom animations
  jQuery.each({
    slideDown: genFx('show'),
    slideUp: genFx('hide'),
    slideToggle: genFx('toggle'),
    fadeIn: { opacity: 'show' },
    fadeOut: { opacity: 'hide' },
    fadeToggle: { opacity: 'toggle' }
  }, function (name, props) {
    jQuery.fn[name] = function (speed, easing, callback) {
      return this.animate(props, speed, easing, callback);
    };
  });
  jQuery.speed = function (speed, easing, fn) {
    var opt = speed && typeof speed === 'object' ? jQuery.extend({}, speed) : {
        complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,
        duration: speed,
        easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
      };
    opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === 'number' ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;
    // normalize opt.queue - true/undefined/null -> "fx"
    if (opt.queue == null || opt.queue === true) {
      opt.queue = 'fx';
    }
    // Queueing
    opt.old = opt.complete;
    opt.complete = function () {
      if (jQuery.isFunction(opt.old)) {
        opt.old.call(this);
      }
      if (opt.queue) {
        jQuery.dequeue(this, opt.queue);
      }
    };
    return opt;
  };
  jQuery.easing = {
    linear: function (p) {
      return p;
    },
    swing: function (p) {
      return 0.5 - Math.cos(p * Math.PI) / 2;
    }
  };
  jQuery.timers = [];
  jQuery.fx = Tween.prototype.init;
  jQuery.fx.tick = function () {
    var timer, timers = jQuery.timers, i = 0;
    fxNow = jQuery.now();
    for (; i < timers.length; i++) {
      timer = timers[i];
      // Checks the timer has not already been removed
      if (!timer() && timers[i] === timer) {
        timers.splice(i--, 1);
      }
    }
    if (!timers.length) {
      jQuery.fx.stop();
    }
    fxNow = undefined;
  };
  jQuery.fx.timer = function (timer) {
    if (timer() && jQuery.timers.push(timer)) {
      jQuery.fx.start();
    }
  };
  jQuery.fx.interval = 13;
  jQuery.fx.start = function () {
    if (!timerId) {
      timerId = setInterval(jQuery.fx.tick, jQuery.fx.interval);
    }
  };
  jQuery.fx.stop = function () {
    clearInterval(timerId);
    timerId = null;
  };
  jQuery.fx.speeds = {
    slow: 600,
    fast: 200,
    _default: 400
  };
  // Back Compat <1.8 extension point
  jQuery.fx.step = {};
  if (jQuery.expr && jQuery.expr.filters) {
    jQuery.expr.filters.animated = function (elem) {
      return jQuery.grep(jQuery.timers, function (fn) {
        return elem === fn.elem;
      }).length;
    };
  }
  jQuery.fn.offset = function (options) {
    if (arguments.length) {
      return options === undefined ? this : this.each(function (i) {
        jQuery.offset.setOffset(this, options, i);
      });
    }
    var docElem, win, elem = this[0], box = {
        top: 0,
        left: 0
      }, doc = elem && elem.ownerDocument;
    if (!doc) {
      return;
    }
    docElem = doc.documentElement;
    // Make sure it's not a disconnected DOM node
    if (!jQuery.contains(docElem, elem)) {
      return box;
    }
    // If we don't have gBCR, just use 0,0 rather than error
    // BlackBerry 5, iOS 3 (original iPhone)
    if (typeof elem.getBoundingClientRect !== core_strundefined) {
      box = elem.getBoundingClientRect();
    }
    win = getWindow(doc);
    return {
      top: box.top + win.pageYOffset - docElem.clientTop,
      left: box.left + win.pageXOffset - docElem.clientLeft
    };
  };
  jQuery.offset = {
    setOffset: function (elem, options, i) {
      var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery.css(elem, 'position'), curElem = jQuery(elem), props = {};
      // Set position first, in-case top/left are set even on static elem
      if (position === 'static') {
        elem.style.position = 'relative';
      }
      curOffset = curElem.offset();
      curCSSTop = jQuery.css(elem, 'top');
      curCSSLeft = jQuery.css(elem, 'left');
      calculatePosition = (position === 'absolute' || position === 'fixed') && (curCSSTop + curCSSLeft).indexOf('auto') > -1;
      // Need to be able to calculate position if either top or left is auto and position is either absolute or fixed
      if (calculatePosition) {
        curPosition = curElem.position();
        curTop = curPosition.top;
        curLeft = curPosition.left;
      } else {
        curTop = parseFloat(curCSSTop) || 0;
        curLeft = parseFloat(curCSSLeft) || 0;
      }
      if (jQuery.isFunction(options)) {
        options = options.call(elem, i, curOffset);
      }
      if (options.top != null) {
        props.top = options.top - curOffset.top + curTop;
      }
      if (options.left != null) {
        props.left = options.left - curOffset.left + curLeft;
      }
      if ('using' in options) {
        options.using.call(elem, props);
      } else {
        curElem.css(props);
      }
    }
  };
  jQuery.fn.extend({
    position: function () {
      if (!this[0]) {
        return;
      }
      var offsetParent, offset, elem = this[0], parentOffset = {
          top: 0,
          left: 0
        };
      // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent
      if (jQuery.css(elem, 'position') === 'fixed') {
        // We assume that getBoundingClientRect is available when computed position is fixed
        offset = elem.getBoundingClientRect();
      } else {
        // Get *real* offsetParent
        offsetParent = this.offsetParent();
        // Get correct offsets
        offset = this.offset();
        if (!jQuery.nodeName(offsetParent[0], 'html')) {
          parentOffset = offsetParent.offset();
        }
        // Add offsetParent borders
        parentOffset.top += jQuery.css(offsetParent[0], 'borderTopWidth', true);
        parentOffset.left += jQuery.css(offsetParent[0], 'borderLeftWidth', true);
      }
      // Subtract parent offsets and element margins
      return {
        top: offset.top - parentOffset.top - jQuery.css(elem, 'marginTop', true),
        left: offset.left - parentOffset.left - jQuery.css(elem, 'marginLeft', true)
      };
    },
    offsetParent: function () {
      return this.map(function () {
        var offsetParent = this.offsetParent || docElem;
        while (offsetParent && (!jQuery.nodeName(offsetParent, 'html') && jQuery.css(offsetParent, 'position') === 'static')) {
          offsetParent = offsetParent.offsetParent;
        }
        return offsetParent || docElem;
      });
    }
  });
  // Create scrollLeft and scrollTop methods
  jQuery.each({
    scrollLeft: 'pageXOffset',
    scrollTop: 'pageYOffset'
  }, function (method, prop) {
    var top = 'pageYOffset' === prop;
    jQuery.fn[method] = function (val) {
      return jQuery.access(this, function (elem, method, val) {
        var win = getWindow(elem);
        if (val === undefined) {
          return win ? win[prop] : elem[method];
        }
        if (win) {
          win.scrollTo(!top ? val : window.pageXOffset, top ? val : window.pageYOffset);
        } else {
          elem[method] = val;
        }
      }, method, val, arguments.length, null);
    };
  });
  function getWindow(elem) {
    return jQuery.isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView;
  }
  // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
  jQuery.each({
    Height: 'height',
    Width: 'width'
  }, function (name, type) {
    jQuery.each({
      padding: 'inner' + name,
      content: type,
      '': 'outer' + name
    }, function (defaultExtra, funcName) {
      // margin is only for outerHeight, outerWidth
      jQuery.fn[funcName] = function (margin, value) {
        var chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean'), extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border');
        return jQuery.access(this, function (elem, type, value) {
          var doc;
          if (jQuery.isWindow(elem)) {
            // As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
            // isn't a whole lot we can do. See pull request at this URL for discussion:
            // https://github.com/jquery/jquery/pull/764
            return elem.document.documentElement['client' + name];
          }
          // Get document width or height
          if (elem.nodeType === 9) {
            doc = elem.documentElement;
            // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
            // whichever is greatest
            return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);
          }
          return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
        }, type, chainable ? margin : undefined, chainable, null);
      };
    });
  });
  // Limit scope pollution from any deprecated API
  // (function() {
  // The number of elements contained in the matched element set
  jQuery.fn.size = function () {
    return this.length;
  };
  jQuery.fn.andSelf = jQuery.fn.addBack;
  // })();
  if (typeof module === 'object' && module && typeof module.exports === 'object') {
    // Expose jQuery as module.exports in loaders that implement the Node
    // module pattern (including browserify). Do not create the global, since
    // the user will be storing it themselves locally, and globals are frowned
    // upon in the Node module world.
    module.exports = jQuery;
  } else {
    // Register as a named AMD module, since jQuery can be concatenated with other
    // files that may use define, but not via a proper concatenation script that
    // understands anonymous AMD modules. A named AMD is safest and most robust
    // way to register. Lowercase jquery is used because AMD module names are
    // derived from file names, and jQuery is normally delivered in a lowercase
    // file name. Do this after creating the global so that if an AMD module wants
    // to call noConflict to hide this version of jQuery, it will work.
    if (typeof define === 'function' && define.amd) {
      define('jquery', [], function () {
        return jQuery;
      });
    }
  }
  // If there is a window object, that at least has a document property,
  // define jQuery and $ identifiers
  if (typeof window === 'object' && typeof window.document === 'object') {
    window.jQuery = window.$ = jQuery;
  }
}(window));
//     Underscore.js 1.5.2
//     http://underscorejs.org
//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.
(function () {
  // Baseline setup
  // --------------
  // Establish the root object, `window` in the browser, or `exports` on the server.
  var root = this;
  // Save the previous value of the `_` variable.
  var previousUnderscore = root._;
  // Establish the object that gets returned to break out of a loop iteration.
  var breaker = {};
  // Save bytes in the minified (but not gzipped) version:
  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;
  // Create quick reference variables for speed access to core prototypes.
  var push = ArrayProto.push, slice = ArrayProto.slice, concat = ArrayProto.concat, toString = ObjProto.toString, hasOwnProperty = ObjProto.hasOwnProperty;
  // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.
  var nativeForEach = ArrayProto.forEach, nativeMap = ArrayProto.map, nativeReduce = ArrayProto.reduce, nativeReduceRight = ArrayProto.reduceRight, nativeFilter = ArrayProto.filter, nativeEvery = ArrayProto.every, nativeSome = ArrayProto.some, nativeIndexOf = ArrayProto.indexOf, nativeLastIndexOf = ArrayProto.lastIndexOf, nativeIsArray = Array.isArray, nativeKeys = Object.keys, nativeBind = FuncProto.bind;
  // Create a safe reference to the Underscore object for use below.
  var _ = function (obj) {
    if (obj instanceof _)
      return obj;
    if (!(this instanceof _))
      return new _(obj);
    this._wrapped = obj;
  };
  // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for the old `require()` API. If we're in
  // the browser, add `_` as a global object via a string identifier,
  // for Closure Compiler "advanced" mode.
  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = _;
    }
    exports._ = _;
  } else {
    root._ = _;
  }
  // Current version.
  _.VERSION = '1.5.2';
  // Collection Functions
  // --------------------
  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles objects with the built-in `forEach`, arrays, and raw objects.
  // Delegates to **ECMAScript 5**'s native `forEach` if available.
  var each = _.each = _.forEach = function (obj, iterator, context) {
      if (obj == null)
        return;
      if (nativeForEach && obj.forEach === nativeForEach) {
        obj.forEach(iterator, context);
      } else if (obj.length === +obj.length) {
        for (var i = 0, length = obj.length; i < length; i++) {
          if (iterator.call(context, obj[i], i, obj) === breaker)
            return;
        }
      } else {
        var keys = _.keys(obj);
        for (var i = 0, length = keys.length; i < length; i++) {
          if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker)
            return;
        }
      }
    };
  // Return the results of applying the iterator to each element.
  // Delegates to **ECMAScript 5**'s native `map` if available.
  _.map = _.collect = function (obj, iterator, context) {
    var results = [];
    if (obj == null)
      return results;
    if (nativeMap && obj.map === nativeMap)
      return obj.map(iterator, context);
    each(obj, function (value, index, list) {
      results.push(iterator.call(context, value, index, list));
    });
    return results;
  };
  var reduceError = 'Reduce of empty array with no initial value';
  // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.
  _.reduce = _.foldl = _.inject = function (obj, iterator, memo, context) {
    var initial = arguments.length > 2;
    if (obj == null)
      obj = [];
    if (nativeReduce && obj.reduce === nativeReduce) {
      if (context)
        iterator = _.bind(iterator, context);
      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);
    }
    each(obj, function (value, index, list) {
      if (!initial) {
        memo = value;
        initial = true;
      } else {
        memo = iterator.call(context, memo, value, index, list);
      }
    });
    if (!initial)
      throw new TypeError(reduceError);
    return memo;
  };
  // The right-associative version of reduce, also known as `foldr`.
  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.
  _.reduceRight = _.foldr = function (obj, iterator, memo, context) {
    var initial = arguments.length > 2;
    if (obj == null)
      obj = [];
    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {
      if (context)
        iterator = _.bind(iterator, context);
      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);
    }
    var length = obj.length;
    if (length !== +length) {
      var keys = _.keys(obj);
      length = keys.length;
    }
    each(obj, function (value, index, list) {
      index = keys ? keys[--length] : --length;
      if (!initial) {
        memo = obj[index];
        initial = true;
      } else {
        memo = iterator.call(context, memo, obj[index], index, list);
      }
    });
    if (!initial)
      throw new TypeError(reduceError);
    return memo;
  };
  // Return the first value which passes a truth test. Aliased as `detect`.
  _.find = _.detect = function (obj, iterator, context) {
    var result;
    any(obj, function (value, index, list) {
      if (iterator.call(context, value, index, list)) {
        result = value;
        return true;
      }
    });
    return result;
  };
  // Return all the elements that pass a truth test.
  // Delegates to **ECMAScript 5**'s native `filter` if available.
  // Aliased as `select`.
  _.filter = _.select = function (obj, iterator, context) {
    var results = [];
    if (obj == null)
      return results;
    if (nativeFilter && obj.filter === nativeFilter)
      return obj.filter(iterator, context);
    each(obj, function (value, index, list) {
      if (iterator.call(context, value, index, list))
        results.push(value);
    });
    return results;
  };
  // Return all the elements for which a truth test fails.
  _.reject = function (obj, iterator, context) {
    return _.filter(obj, function (value, index, list) {
      return !iterator.call(context, value, index, list);
    }, context);
  };
  // Determine whether all of the elements match a truth test.
  // Delegates to **ECMAScript 5**'s native `every` if available.
  // Aliased as `all`.
  _.every = _.all = function (obj, iterator, context) {
    iterator || (iterator = _.identity);
    var result = true;
    if (obj == null)
      return result;
    if (nativeEvery && obj.every === nativeEvery)
      return obj.every(iterator, context);
    each(obj, function (value, index, list) {
      if (!(result = result && iterator.call(context, value, index, list)))
        return breaker;
    });
    return !!result;
  };
  // Determine if at least one element in the object matches a truth test.
  // Delegates to **ECMAScript 5**'s native `some` if available.
  // Aliased as `any`.
  var any = _.some = _.any = function (obj, iterator, context) {
      iterator || (iterator = _.identity);
      var result = false;
      if (obj == null)
        return result;
      if (nativeSome && obj.some === nativeSome)
        return obj.some(iterator, context);
      each(obj, function (value, index, list) {
        if (result || (result = iterator.call(context, value, index, list)))
          return breaker;
      });
      return !!result;
    };
  // Determine if the array or object contains a given value (using `===`).
  // Aliased as `include`.
  _.contains = _.include = function (obj, target) {
    if (obj == null)
      return false;
    if (nativeIndexOf && obj.indexOf === nativeIndexOf)
      return obj.indexOf(target) != -1;
    return any(obj, function (value) {
      return value === target;
    });
  };
  // Invoke a method (with arguments) on every item in a collection.
  _.invoke = function (obj, method) {
    var args = slice.call(arguments, 2);
    var isFunc = _.isFunction(method);
    return _.map(obj, function (value) {
      return (isFunc ? method : value[method]).apply(value, args);
    });
  };
  // Convenience version of a common use case of `map`: fetching a property.
  _.pluck = function (obj, key) {
    return _.map(obj, function (value) {
      return value[key];
    });
  };
  // Convenience version of a common use case of `filter`: selecting only objects
  // containing specific `key:value` pairs.
  _.where = function (obj, attrs, first) {
    if (_.isEmpty(attrs))
      return first ? void 0 : [];
    return _[first ? 'find' : 'filter'](obj, function (value) {
      for (var key in attrs) {
        if (attrs[key] !== value[key])
          return false;
      }
      return true;
    });
  };
  // Convenience version of a common use case of `find`: getting the first object
  // containing specific `key:value` pairs.
  _.findWhere = function (obj, attrs) {
    return _.where(obj, attrs, true);
  };
  // Return the maximum element or (element-based computation).
  // Can't optimize arrays of integers longer than 65,535 elements.
  // See [WebKit Bug 80797](https://bugs.webkit.org/show_bug.cgi?id=80797)
  _.max = function (obj, iterator, context) {
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {
      return Math.max.apply(Math, obj);
    }
    if (!iterator && _.isEmpty(obj))
      return -Infinity;
    var result = {
        computed: -Infinity,
        value: -Infinity
      };
    each(obj, function (value, index, list) {
      var computed = iterator ? iterator.call(context, value, index, list) : value;
      computed > result.computed && (result = {
        value: value,
        computed: computed
      });
    });
    return result.value;
  };
  // Return the minimum element (or element-based computation).
  _.min = function (obj, iterator, context) {
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {
      return Math.min.apply(Math, obj);
    }
    if (!iterator && _.isEmpty(obj))
      return Infinity;
    var result = {
        computed: Infinity,
        value: Infinity
      };
    each(obj, function (value, index, list) {
      var computed = iterator ? iterator.call(context, value, index, list) : value;
      computed < result.computed && (result = {
        value: value,
        computed: computed
      });
    });
    return result.value;
  };
  // Shuffle an array, using the modern version of the 
  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
  _.shuffle = function (obj) {
    var rand;
    var index = 0;
    var shuffled = [];
    each(obj, function (value) {
      rand = _.random(index++);
      shuffled[index - 1] = shuffled[rand];
      shuffled[rand] = value;
    });
    return shuffled;
  };
  // Sample **n** random values from an array.
  // If **n** is not specified, returns a single random element from the array.
  // The internal `guard` argument allows it to work with `map`.
  _.sample = function (obj, n, guard) {
    if (arguments.length < 2 || guard) {
      return obj[_.random(obj.length - 1)];
    }
    return _.shuffle(obj).slice(0, Math.max(0, n));
  };
  // An internal function to generate lookup iterators.
  var lookupIterator = function (value) {
    return _.isFunction(value) ? value : function (obj) {
      return obj[value];
    };
  };
  // Sort the object's values by a criterion produced by an iterator.
  _.sortBy = function (obj, value, context) {
    var iterator = lookupIterator(value);
    return _.pluck(_.map(obj, function (value, index, list) {
      return {
        value: value,
        index: index,
        criteria: iterator.call(context, value, index, list)
      };
    }).sort(function (left, right) {
      var a = left.criteria;
      var b = right.criteria;
      if (a !== b) {
        if (a > b || a === void 0)
          return 1;
        if (a < b || b === void 0)
          return -1;
      }
      return left.index - right.index;
    }), 'value');
  };
  // An internal function used for aggregate "group by" operations.
  var group = function (behavior) {
    return function (obj, value, context) {
      var result = {};
      var iterator = value == null ? _.identity : lookupIterator(value);
      each(obj, function (value, index) {
        var key = iterator.call(context, value, index, obj);
        behavior(result, key, value);
      });
      return result;
    };
  };
  // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.
  _.groupBy = group(function (result, key, value) {
    (_.has(result, key) ? result[key] : result[key] = []).push(value);
  });
  // Indexes the object's values by a criterion, similar to `groupBy`, but for
  // when you know that your index values will be unique.
  _.indexBy = group(function (result, key, value) {
    result[key] = value;
  });
  // Counts instances of an object that group by a certain criterion. Pass
  // either a string attribute to count by, or a function that returns the
  // criterion.
  _.countBy = group(function (result, key) {
    _.has(result, key) ? result[key]++ : result[key] = 1;
  });
  // Use a comparator function to figure out the smallest index at which
  // an object should be inserted so as to maintain order. Uses binary search.
  _.sortedIndex = function (array, obj, iterator, context) {
    iterator = iterator == null ? _.identity : lookupIterator(iterator);
    var value = iterator.call(context, obj);
    var low = 0, high = array.length;
    while (low < high) {
      var mid = low + high >>> 1;
      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;
    }
    return low;
  };
  // Safely create a real, live array from anything iterable.
  _.toArray = function (obj) {
    if (!obj)
      return [];
    if (_.isArray(obj))
      return slice.call(obj);
    if (obj.length === +obj.length)
      return _.map(obj, _.identity);
    return _.values(obj);
  };
  // Return the number of elements in an object.
  _.size = function (obj) {
    if (obj == null)
      return 0;
    return obj.length === +obj.length ? obj.length : _.keys(obj).length;
  };
  // Array Functions
  // ---------------
  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.
  _.first = _.head = _.take = function (array, n, guard) {
    if (array == null)
      return void 0;
    return n == null || guard ? array[0] : slice.call(array, 0, n);
  };
  // Returns everything but the last entry of the array. Especially useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N. The **guard** check allows it to work with
  // `_.map`.
  _.initial = function (array, n, guard) {
    return slice.call(array, 0, array.length - (n == null || guard ? 1 : n));
  };
  // Get the last element of an array. Passing **n** will return the last N
  // values in the array. The **guard** check allows it to work with `_.map`.
  _.last = function (array, n, guard) {
    if (array == null)
      return void 0;
    if (n == null || guard) {
      return array[array.length - 1];
    } else {
      return slice.call(array, Math.max(array.length - n, 0));
    }
  };
  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
  // Especially useful on the arguments object. Passing an **n** will return
  // the rest N values in the array. The **guard**
  // check allows it to work with `_.map`.
  _.rest = _.tail = _.drop = function (array, n, guard) {
    return slice.call(array, n == null || guard ? 1 : n);
  };
  // Trim out all falsy values from an array.
  _.compact = function (array) {
    return _.filter(array, _.identity);
  };
  // Internal implementation of a recursive `flatten` function.
  var flatten = function (input, shallow, output) {
    if (shallow && _.every(input, _.isArray)) {
      return concat.apply(output, input);
    }
    each(input, function (value) {
      if (_.isArray(value) || _.isArguments(value)) {
        shallow ? push.apply(output, value) : flatten(value, shallow, output);
      } else {
        output.push(value);
      }
    });
    return output;
  };
  // Flatten out an array, either recursively (by default), or just one level.
  _.flatten = function (array, shallow) {
    return flatten(array, shallow, []);
  };
  // Return a version of the array that does not contain the specified value(s).
  _.without = function (array) {
    return _.difference(array, slice.call(arguments, 1));
  };
  // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // Aliased as `unique`.
  _.uniq = _.unique = function (array, isSorted, iterator, context) {
    if (_.isFunction(isSorted)) {
      context = iterator;
      iterator = isSorted;
      isSorted = false;
    }
    var initial = iterator ? _.map(array, iterator, context) : array;
    var results = [];
    var seen = [];
    each(initial, function (value, index) {
      if (isSorted ? !index || seen[seen.length - 1] !== value : !_.contains(seen, value)) {
        seen.push(value);
        results.push(array[index]);
      }
    });
    return results;
  };
  // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.
  _.union = function () {
    return _.uniq(_.flatten(arguments, true));
  };
  // Produce an array that contains every item shared between all the
  // passed-in arrays.
  _.intersection = function (array) {
    var rest = slice.call(arguments, 1);
    return _.filter(_.uniq(array), function (item) {
      return _.every(rest, function (other) {
        return _.indexOf(other, item) >= 0;
      });
    });
  };
  // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.
  _.difference = function (array) {
    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));
    return _.filter(array, function (value) {
      return !_.contains(rest, value);
    });
  };
  // Zip together multiple lists into a single array -- elements that share
  // an index go together.
  _.zip = function () {
    var length = _.max(_.pluck(arguments, 'length').concat(0));
    var results = new Array(length);
    for (var i = 0; i < length; i++) {
      results[i] = _.pluck(arguments, '' + i);
    }
    return results;
  };
  // Converts lists into objects. Pass either a single array of `[key, value]`
  // pairs, or two parallel arrays of the same length -- one of keys, and one of
  // the corresponding values.
  _.object = function (list, values) {
    if (list == null)
      return {};
    var result = {};
    for (var i = 0, length = list.length; i < length; i++) {
      if (values) {
        result[list[i]] = values[i];
      } else {
        result[list[i][0]] = list[i][1];
      }
    }
    return result;
  };
  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),
  // we need this function. Return the position of the first occurrence of an
  // item in an array, or -1 if the item is not included in the array.
  // Delegates to **ECMAScript 5**'s native `indexOf` if available.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.
  _.indexOf = function (array, item, isSorted) {
    if (array == null)
      return -1;
    var i = 0, length = array.length;
    if (isSorted) {
      if (typeof isSorted == 'number') {
        i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;
      } else {
        i = _.sortedIndex(array, item);
        return array[i] === item ? i : -1;
      }
    }
    if (nativeIndexOf && array.indexOf === nativeIndexOf)
      return array.indexOf(item, isSorted);
    for (; i < length; i++)
      if (array[i] === item)
        return i;
    return -1;
  };
  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.
  _.lastIndexOf = function (array, item, from) {
    if (array == null)
      return -1;
    var hasIndex = from != null;
    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {
      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);
    }
    var i = hasIndex ? from : array.length;
    while (i--)
      if (array[i] === item)
        return i;
    return -1;
  };
  // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).
  _.range = function (start, stop, step) {
    if (arguments.length <= 1) {
      stop = start || 0;
      start = 0;
    }
    step = arguments[2] || 1;
    var length = Math.max(Math.ceil((stop - start) / step), 0);
    var idx = 0;
    var range = new Array(length);
    while (idx < length) {
      range[idx++] = start;
      start += step;
    }
    return range;
  };
  // Function (ahem) Functions
  // ------------------
  // Reusable constructor function for prototype setting.
  var ctor = function () {
  };
  // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
  // available.
  _.bind = function (func, context) {
    var args, bound;
    if (nativeBind && func.bind === nativeBind)
      return nativeBind.apply(func, slice.call(arguments, 1));
    if (!_.isFunction(func))
      throw new TypeError();
    args = slice.call(arguments, 2);
    return bound = function () {
      if (!(this instanceof bound))
        return func.apply(context, args.concat(slice.call(arguments)));
      ctor.prototype = func.prototype;
      var self = new ctor();
      ctor.prototype = null;
      var result = func.apply(self, args.concat(slice.call(arguments)));
      if (Object(result) === result)
        return result;
      return self;
    };
  };
  // Partially apply a function by creating a version that has had some of its
  // arguments pre-filled, without changing its dynamic `this` context.
  _.partial = function (func) {
    var args = slice.call(arguments, 1);
    return function () {
      return func.apply(this, args.concat(slice.call(arguments)));
    };
  };
  // Bind all of an object's methods to that object. Useful for ensuring that
  // all callbacks defined on an object belong to it.
  _.bindAll = function (obj) {
    var funcs = slice.call(arguments, 1);
    if (funcs.length === 0)
      throw new Error('bindAll must be passed function names');
    each(funcs, function (f) {
      obj[f] = _.bind(obj[f], obj);
    });
    return obj;
  };
  // Memoize an expensive function by storing its results.
  _.memoize = function (func, hasher) {
    var memo = {};
    hasher || (hasher = _.identity);
    return function () {
      var key = hasher.apply(this, arguments);
      return _.has(memo, key) ? memo[key] : memo[key] = func.apply(this, arguments);
    };
  };
  // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.
  _.delay = function (func, wait) {
    var args = slice.call(arguments, 2);
    return setTimeout(function () {
      return func.apply(null, args);
    }, wait);
  };
  // Defers a function, scheduling it to run after the current call stack has
  // cleared.
  _.defer = function (func) {
    return _.delay.apply(_, [
      func,
      1
    ].concat(slice.call(arguments, 1)));
  };
  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time. Normally, the throttled function will run
  // as much as it can, without ever going more than once per `wait` duration;
  // but if you'd like to disable the execution on the leading edge, pass
  // `{leading: false}`. To disable execution on the trailing edge, ditto.
  _.throttle = function (func, wait, options) {
    var context, args, result;
    var timeout = null;
    var previous = 0;
    options || (options = {});
    var later = function () {
      previous = options.leading === false ? 0 : new Date();
      timeout = null;
      result = func.apply(context, args);
    };
    return function () {
      var now = new Date();
      if (!previous && options.leading === false)
        previous = now;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;
      if (remaining <= 0) {
        clearTimeout(timeout);
        timeout = null;
        previous = now;
        result = func.apply(context, args);
      } else if (!timeout && options.trailing !== false) {
        timeout = setTimeout(later, remaining);
      }
      return result;
    };
  };
  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  _.debounce = function (func, wait, immediate) {
    var timeout, args, context, timestamp, result;
    return function () {
      context = this;
      args = arguments;
      timestamp = new Date();
      var later = function () {
        var last = new Date() - timestamp;
        if (last < wait) {
          timeout = setTimeout(later, wait - last);
        } else {
          timeout = null;
          if (!immediate)
            result = func.apply(context, args);
        }
      };
      var callNow = immediate && !timeout;
      if (!timeout) {
        timeout = setTimeout(later, wait);
      }
      if (callNow)
        result = func.apply(context, args);
      return result;
    };
  };
  // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.
  _.once = function (func) {
    var ran = false, memo;
    return function () {
      if (ran)
        return memo;
      ran = true;
      memo = func.apply(this, arguments);
      func = null;
      return memo;
    };
  };
  // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.
  _.wrap = function (func, wrapper) {
    return function () {
      var args = [func];
      push.apply(args, arguments);
      return wrapper.apply(this, args);
    };
  };
  // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.
  _.compose = function () {
    var funcs = arguments;
    return function () {
      var args = arguments;
      for (var i = funcs.length - 1; i >= 0; i--) {
        args = [funcs[i].apply(this, args)];
      }
      return args[0];
    };
  };
  // Returns a function that will only be executed after being called N times.
  _.after = function (times, func) {
    return function () {
      if (--times < 1) {
        return func.apply(this, arguments);
      }
    };
  };
  // Object Functions
  // ----------------
  // Retrieve the names of an object's properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`
  _.keys = nativeKeys || function (obj) {
    if (obj !== Object(obj))
      throw new TypeError('Invalid object');
    var keys = [];
    for (var key in obj)
      if (_.has(obj, key))
        keys.push(key);
    return keys;
  };
  // Retrieve the values of an object's properties.
  _.values = function (obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var values = new Array(length);
    for (var i = 0; i < length; i++) {
      values[i] = obj[keys[i]];
    }
    return values;
  };
  // Convert an object into a list of `[key, value]` pairs.
  _.pairs = function (obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var pairs = new Array(length);
    for (var i = 0; i < length; i++) {
      pairs[i] = [
        keys[i],
        obj[keys[i]]
      ];
    }
    return pairs;
  };
  // Invert the keys and values of an object. The values must be serializable.
  _.invert = function (obj) {
    var result = {};
    var keys = _.keys(obj);
    for (var i = 0, length = keys.length; i < length; i++) {
      result[obj[keys[i]]] = keys[i];
    }
    return result;
  };
  // Return a sorted list of the function names available on the object.
  // Aliased as `methods`
  _.functions = _.methods = function (obj) {
    var names = [];
    for (var key in obj) {
      if (_.isFunction(obj[key]))
        names.push(key);
    }
    return names.sort();
  };
  // Extend a given object with all the properties in passed-in object(s).
  _.extend = function (obj) {
    each(slice.call(arguments, 1), function (source) {
      if (source) {
        for (var prop in source) {
          obj[prop] = source[prop];
        }
      }
    });
    return obj;
  };
  // Return a copy of the object only containing the whitelisted properties.
  _.pick = function (obj) {
    var copy = {};
    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));
    each(keys, function (key) {
      if (key in obj)
        copy[key] = obj[key];
    });
    return copy;
  };
  // Return a copy of the object without the blacklisted properties.
  _.omit = function (obj) {
    var copy = {};
    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));
    for (var key in obj) {
      if (!_.contains(keys, key))
        copy[key] = obj[key];
    }
    return copy;
  };
  // Fill in a given object with default properties.
  _.defaults = function (obj) {
    each(slice.call(arguments, 1), function (source) {
      if (source) {
        for (var prop in source) {
          if (obj[prop] === void 0)
            obj[prop] = source[prop];
        }
      }
    });
    return obj;
  };
  // Create a (shallow-cloned) duplicate of an object.
  _.clone = function (obj) {
    if (!_.isObject(obj))
      return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  };
  // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.
  _.tap = function (obj, interceptor) {
    interceptor(obj);
    return obj;
  };
  // Internal recursive comparison function for `isEqual`.
  var eq = function (a, b, aStack, bStack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
    if (a === b)
      return a !== 0 || 1 / a == 1 / b;
    // A strict comparison is necessary because `null == undefined`.
    if (a == null || b == null)
      return a === b;
    // Unwrap any wrapped objects.
    if (a instanceof _)
      a = a._wrapped;
    if (b instanceof _)
      b = b._wrapped;
    // Compare `[[Class]]` names.
    var className = toString.call(a);
    if (className != toString.call(b))
      return false;
    switch (className) {
    // Strings, numbers, dates, and booleans are compared by value.
    case '[object String]':
      // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
      // equivalent to `new String("5")`.
      return a == String(b);
    case '[object Number]':
      // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for
      // other numeric values.
      return a != +a ? b != +b : a == 0 ? 1 / a == 1 / b : a == +b;
    case '[object Date]':
    case '[object Boolean]':
      // Coerce dates and booleans to numeric primitive values. Dates are compared by their
      // millisecond representations. Note that invalid dates with millisecond representations
      // of `NaN` are not equivalent.
      return +a == +b;
    // RegExps are compared by their source patterns and flags.
    case '[object RegExp]':
      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;
    }
    if (typeof a != 'object' || typeof b != 'object')
      return false;
    // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
    var length = aStack.length;
    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (aStack[length] == a)
        return bStack[length] == b;
    }
    // Objects with different constructors are not equivalent, but `Object`s
    // from different frames are.
    var aCtor = a.constructor, bCtor = b.constructor;
    if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor)) {
      return false;
    }
    // Add the first object to the stack of traversed objects.
    aStack.push(a);
    bStack.push(b);
    var size = 0, result = true;
    // Recursively compare objects and arrays.
    if (className == '[object Array]') {
      // Compare array lengths to determine if a deep comparison is necessary.
      size = a.length;
      result = size == b.length;
      if (result) {
        // Deep compare the contents, ignoring non-numeric properties.
        while (size--) {
          if (!(result = eq(a[size], b[size], aStack, bStack)))
            break;
        }
      }
    } else {
      // Deep compare objects.
      for (var key in a) {
        if (_.has(a, key)) {
          // Count the expected number of properties.
          size++;
          // Deep compare each member.
          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack)))
            break;
        }
      }
      // Ensure that both objects contain the same number of properties.
      if (result) {
        for (key in b) {
          if (_.has(b, key) && !size--)
            break;
        }
        result = !size;
      }
    }
    // Remove the first object from the stack of traversed objects.
    aStack.pop();
    bStack.pop();
    return result;
  };
  // Perform a deep comparison to check if two objects are equal.
  _.isEqual = function (a, b) {
    return eq(a, b, [], []);
  };
  // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.
  _.isEmpty = function (obj) {
    if (obj == null)
      return true;
    if (_.isArray(obj) || _.isString(obj))
      return obj.length === 0;
    for (var key in obj)
      if (_.has(obj, key))
        return false;
    return true;
  };
  // Is a given value a DOM element?
  _.isElement = function (obj) {
    return !!(obj && obj.nodeType === 1);
  };
  // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray
  _.isArray = nativeIsArray || function (obj) {
    return toString.call(obj) == '[object Array]';
  };
  // Is a given variable an object?
  _.isObject = function (obj) {
    return obj === Object(obj);
  };
  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.
  each([
    'Arguments',
    'Function',
    'String',
    'Number',
    'Date',
    'RegExp'
  ], function (name) {
    _['is' + name] = function (obj) {
      return toString.call(obj) == '[object ' + name + ']';
    };
  });
  // Define a fallback version of the method in browsers (ahem, IE), where
  // there isn't any inspectable "Arguments" type.
  if (!_.isArguments(arguments)) {
    _.isArguments = function (obj) {
      return !!(obj && _.has(obj, 'callee'));
    };
  }
  // Optimize `isFunction` if appropriate.
  if (typeof /./ !== 'function') {
    _.isFunction = function (obj) {
      return typeof obj === 'function';
    };
  }
  // Is a given object a finite number?
  _.isFinite = function (obj) {
    return isFinite(obj) && !isNaN(parseFloat(obj));
  };
  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
  _.isNaN = function (obj) {
    return _.isNumber(obj) && obj != +obj;
  };
  // Is a given value a boolean?
  _.isBoolean = function (obj) {
    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';
  };
  // Is a given value equal to null?
  _.isNull = function (obj) {
    return obj === null;
  };
  // Is a given variable undefined?
  _.isUndefined = function (obj) {
    return obj === void 0;
  };
  // Shortcut function for checking if an object has a given property directly
  // on itself (in other words, not on a prototype).
  _.has = function (obj, key) {
    return hasOwnProperty.call(obj, key);
  };
  // Utility Functions
  // -----------------
  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.
  _.noConflict = function () {
    root._ = previousUnderscore;
    return this;
  };
  // Keep the identity function around for default iterators.
  _.identity = function (value) {
    return value;
  };
  // Run a function **n** times.
  _.times = function (n, iterator, context) {
    var accum = Array(Math.max(0, n));
    for (var i = 0; i < n; i++)
      accum[i] = iterator.call(context, i);
    return accum;
  };
  // Return a random integer between min and max (inclusive).
  _.random = function (min, max) {
    if (max == null) {
      max = min;
      min = 0;
    }
    return min + Math.floor(Math.random() * (max - min + 1));
  };
  // List of HTML entities for escaping.
  var entityMap = {
      escape: {
        '&': '&amp;',
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        '\'': '&#x27;'
      }
    };
  entityMap.unescape = _.invert(entityMap.escape);
  // Regexes containing the keys and values listed immediately above.
  var entityRegexes = {
      escape: new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),
      unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')
    };
  // Functions for escaping and unescaping strings to/from HTML interpolation.
  _.each([
    'escape',
    'unescape'
  ], function (method) {
    _[method] = function (string) {
      if (string == null)
        return '';
      return ('' + string).replace(entityRegexes[method], function (match) {
        return entityMap[method][match];
      });
    };
  });
  // If the value of the named `property` is a function then invoke it with the
  // `object` as context; otherwise, return it.
  _.result = function (object, property) {
    if (object == null)
      return void 0;
    var value = object[property];
    return _.isFunction(value) ? value.call(object) : value;
  };
  // Add your own custom functions to the Underscore object.
  _.mixin = function (obj) {
    each(_.functions(obj), function (name) {
      var func = _[name] = obj[name];
      _.prototype[name] = function () {
        var args = [this._wrapped];
        push.apply(args, arguments);
        return result.call(this, func.apply(_, args));
      };
    });
  };
  // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.
  var idCounter = 0;
  _.uniqueId = function (prefix) {
    var id = ++idCounter + '';
    return prefix ? prefix + id : id;
  };
  // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.
  _.templateSettings = {
    evaluate: /<%([\s\S]+?)%>/g,
    interpolate: /<%=([\s\S]+?)%>/g,
    escape: /<%-([\s\S]+?)%>/g
  };
  // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.
  var noMatch = /(.)^/;
  // Certain characters need to be escaped so that they can be put into a
  // string literal.
  var escapes = {
      '\'': '\'',
      '\\': '\\',
      '\r': 'r',
      '\n': 'n',
      '\t': 't',
      '\u2028': 'u2028',
      '\u2029': 'u2029'
    };
  var escaper = /\\|'|\r|\n|\t|\u2028|\u2029/g;
  // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  _.template = function (text, data, settings) {
    var render;
    settings = _.defaults({}, settings, _.templateSettings);
    // Combine delimiters into one regular expression via alternation.
    var matcher = new RegExp([
        (settings.escape || noMatch).source,
        (settings.interpolate || noMatch).source,
        (settings.evaluate || noMatch).source
      ].join('|') + '|$', 'g');
    // Compile the template source, escaping string literals appropriately.
    var index = 0;
    var source = '__p+=\'';
    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {
      source += text.slice(index, offset).replace(escaper, function (match) {
        return '\\' + escapes[match];
      });
      if (escape) {
        source += '\'+\n((__t=(' + escape + '))==null?\'\':_.escape(__t))+\n\'';
      }
      if (interpolate) {
        source += '\'+\n((__t=(' + interpolate + '))==null?\'\':__t)+\n\'';
      }
      if (evaluate) {
        source += '\';\n' + evaluate + '\n__p+=\'';
      }
      index = offset + match.length;
      return match;
    });
    source += '\';\n';
    // If a variable is not specified, place data values in local scope.
    if (!settings.variable)
      source = 'with(obj||{}){\n' + source + '}\n';
    source = 'var __t,__p=\'\',__j=Array.prototype.join,' + 'print=function(){__p+=__j.call(arguments,\'\');};\n' + source + 'return __p;\n';
    try {
      render = new Function(settings.variable || 'obj', '_', source);
    } catch (e) {
      e.source = source;
      throw e;
    }
    if (data)
      return render(data, _);
    var template = function (data) {
      return render.call(this, data, _);
    };
    // Provide the compiled function source as a convenience for precompilation.
    template.source = 'function(' + (settings.variable || 'obj') + '){\n' + source + '}';
    return template;
  };
  // Add a "chain" function, which will delegate to the wrapper.
  _.chain = function (obj) {
    return _(obj).chain();
  };
  // OOP
  // ---------------
  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.
  // Helper function to continue chaining intermediate results.
  var result = function (obj) {
    return this._chain ? _(obj).chain() : obj;
  };
  // Add all of the Underscore functions to the wrapper object.
  _.mixin(_);
  // Add all mutator Array functions to the wrapper.
  each([
    'pop',
    'push',
    'reverse',
    'shift',
    'sort',
    'splice',
    'unshift'
  ], function (name) {
    var method = ArrayProto[name];
    _.prototype[name] = function () {
      var obj = this._wrapped;
      method.apply(obj, arguments);
      if ((name == 'shift' || name == 'splice') && obj.length === 0)
        delete obj[0];
      return result.call(this, obj);
    };
  });
  // Add all accessor Array functions to the wrapper.
  each([
    'concat',
    'join',
    'slice'
  ], function (name) {
    var method = ArrayProto[name];
    _.prototype[name] = function () {
      return result.call(this, method.apply(this._wrapped, arguments));
    };
  });
  _.extend(_.prototype, {
    chain: function () {
      this._chain = true;
      return this;
    },
    value: function () {
      return this._wrapped;
    }
  });
}.call(this));
/**
 * @license AngularJS v1.2.28
 * (c) 2010-2014 Google, Inc. http://angularjs.org
 * License: MIT
 */
(function (window, document, undefined) {
  'use strict';
  /**
 * @description
 *
 * This object provides a utility for producing rich Error messages within
 * Angular. It can be called as follows:
 *
 * var exampleMinErr = minErr('example');
 * throw exampleMinErr('one', 'This {0} is {1}', foo, bar);
 *
 * The above creates an instance of minErr in the example namespace. The
 * resulting error will have a namespaced error code of example.one.  The
 * resulting error will replace {0} with the value of foo, and {1} with the
 * value of bar. The object is not restricted in the number of arguments it can
 * take.
 *
 * If fewer arguments are specified than necessary for interpolation, the extra
 * interpolation markers will be preserved in the final string.
 *
 * Since data will be parsed statically during a build step, some restrictions
 * are applied with respect to how minErr instances are created and called.
 * Instances should have names of the form namespaceMinErr for a minErr created
 * using minErr('namespace') . Error codes, namespaces and template strings
 * should all be static strings, not variables or general expressions.
 *
 * @param {string} module The namespace to use for the new minErr instance.
 * @returns {function(code:string, template:string, ...templateArgs): Error} minErr instance
 */
  function minErr(module) {
    return function () {
      var code = arguments[0], prefix = '[' + (module ? module + ':' : '') + code + '] ', template = arguments[1], templateArgs = arguments, stringify = function (obj) {
          if (typeof obj === 'function') {
            return obj.toString().replace(/ \{[\s\S]*$/, '');
          } else if (typeof obj === 'undefined') {
            return 'undefined';
          } else if (typeof obj !== 'string') {
            return JSON.stringify(obj);
          }
          return obj;
        }, message, i;
      message = prefix + template.replace(/\{\d+\}/g, function (match) {
        var index = +match.slice(1, -1), arg;
        if (index + 2 < templateArgs.length) {
          arg = templateArgs[index + 2];
          if (typeof arg === 'function') {
            return arg.toString().replace(/ ?\{[\s\S]*$/, '');
          } else if (typeof arg === 'undefined') {
            return 'undefined';
          } else if (typeof arg !== 'string') {
            return toJson(arg);
          }
          return arg;
        }
        return match;
      });
      message = message + '\nhttp://errors.angularjs.org/1.2.28/' + (module ? module + '/' : '') + code;
      for (i = 2; i < arguments.length; i++) {
        message = message + (i == 2 ? '?' : '&') + 'p' + (i - 2) + '=' + encodeURIComponent(stringify(arguments[i]));
      }
      return new Error(message);
    };
  }
  /* We need to tell jshint what variables are being exported */
  /* global angular: true,
    msie: true,
    jqLite: true,
    jQuery: true,
    slice: true,
    push: true,
    toString: true,
    ngMinErr: true,
    angularModule: true,
    nodeName_: true,
    uid: true,
    VALIDITY_STATE_PROPERTY: true,

    lowercase: true,
    uppercase: true,
    manualLowercase: true,
    manualUppercase: true,
    nodeName_: true,
    isArrayLike: true,
    forEach: true,
    sortedKeys: true,
    forEachSorted: true,
    reverseParams: true,
    nextUid: true,
    setHashKey: true,
    extend: true,
    int: true,
    inherit: true,
    noop: true,
    identity: true,
    valueFn: true,
    isUndefined: true,
    isDefined: true,
    isObject: true,
    isString: true,
    isNumber: true,
    isDate: true,
    isArray: true,
    isFunction: true,
    isRegExp: true,
    isWindow: true,
    isScope: true,
    isFile: true,
    isBlob: true,
    isBoolean: true,
    isPromiseLike: true,
    trim: true,
    isElement: true,
    makeMap: true,
    map: true,
    size: true,
    includes: true,
    indexOf: true,
    arrayRemove: true,
    isLeafNode: true,
    copy: true,
    shallowCopy: true,
    equals: true,
    csp: true,
    concat: true,
    sliceArgs: true,
    bind: true,
    toJsonReplacer: true,
    toJson: true,
    fromJson: true,
    toBoolean: true,
    startingTag: true,
    tryDecodeURIComponent: true,
    parseKeyValue: true,
    toKeyValue: true,
    encodeUriSegment: true,
    encodeUriQuery: true,
    angularInit: true,
    bootstrap: true,
    snake_case: true,
    bindJQuery: true,
    assertArg: true,
    assertArgFn: true,
    assertNotHasOwnProperty: true,
    getter: true,
    getBlockElements: true,
    hasOwnProperty: true,
*/
  ////////////////////////////////////
  /**
 * @ngdoc module
 * @name ng
 * @module ng
 * @description
 *
 * # ng (core module)
 * The ng module is loaded by default when an AngularJS application is started. The module itself
 * contains the essential components for an AngularJS application to function. The table below
 * lists a high level breakdown of each of the services/factories, filters, directives and testing
 * components available within this core module.
 *
 * <div doc-module-components="ng"></div>
 */
  // The name of a form control's ValidityState property.
  // This is used so that it's possible for internal tests to create mock ValidityStates.
  var VALIDITY_STATE_PROPERTY = 'validity';
  /**
 * @ngdoc function
 * @name angular.lowercase
 * @module ng
 * @kind function
 *
 * @description Converts the specified string to lowercase.
 * @param {string} string String to be converted to lowercase.
 * @returns {string} Lowercased string.
 */
  var lowercase = function (string) {
    return isString(string) ? string.toLowerCase() : string;
  };
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  /**
 * @ngdoc function
 * @name angular.uppercase
 * @module ng
 * @kind function
 *
 * @description Converts the specified string to uppercase.
 * @param {string} string String to be converted to uppercase.
 * @returns {string} Uppercased string.
 */
  var uppercase = function (string) {
    return isString(string) ? string.toUpperCase() : string;
  };
  var manualLowercase = function (s) {
    /* jshint bitwise: false */
    return isString(s) ? s.replace(/[A-Z]/g, function (ch) {
      return String.fromCharCode(ch.charCodeAt(0) | 32);
    }) : s;
  };
  var manualUppercase = function (s) {
    /* jshint bitwise: false */
    return isString(s) ? s.replace(/[a-z]/g, function (ch) {
      return String.fromCharCode(ch.charCodeAt(0) & ~32);
    }) : s;
  };
  // String#toLowerCase and String#toUpperCase don't produce correct results in browsers with Turkish
  // locale, for this reason we need to detect this case and redefine lowercase/uppercase methods
  // with correct but slower alternatives.
  if ('i' !== 'I'.toLowerCase()) {
    lowercase = manualLowercase;
    uppercase = manualUppercase;
  }
  var msie,
    // holds major version number for IE, or NaN if UA is not IE.
    jqLite,
    // delay binding since jQuery could be loaded after us.
    jQuery,
    // delay binding
    slice = [].slice, push = [].push, toString = Object.prototype.toString, ngMinErr = minErr('ng'),
    /** @name angular */
    angular = window.angular || (window.angular = {}), angularModule, nodeName_, uid = [
      '0',
      '0',
      '0'
    ];
  /**
 * IE 11 changed the format of the UserAgent string.
 * See http://msdn.microsoft.com/en-us/library/ms537503.aspx
 */
  msie = int((/msie (\d+)/.exec(lowercase(navigator.userAgent)) || [])[1]);
  if (isNaN(msie)) {
    msie = int((/trident\/.*; rv:(\d+)/.exec(lowercase(navigator.userAgent)) || [])[1]);
  }
  /**
 * @private
 * @param {*} obj
 * @return {boolean} Returns true if `obj` is an array or array-like object (NodeList, Arguments,
 *                   String ...)
 */
  function isArrayLike(obj) {
    if (obj == null || isWindow(obj)) {
      return false;
    }
    var length = obj.length;
    if (obj.nodeType === 1 && length) {
      return true;
    }
    return isString(obj) || isArray(obj) || length === 0 || typeof length === 'number' && length > 0 && length - 1 in obj;
  }
  /**
 * @ngdoc function
 * @name angular.forEach
 * @module ng
 * @kind function
 *
 * @description
 * Invokes the `iterator` function once for each item in `obj` collection, which can be either an
 * object or an array. The `iterator` function is invoked with `iterator(value, key)`, where `value`
 * is the value of an object property or an array element and `key` is the object property key or
 * array element index. Specifying a `context` for the function is optional.
 *
 * It is worth noting that `.forEach` does not iterate over inherited properties because it filters
 * using the `hasOwnProperty` method.
 *
   ```js
     var values = {name: 'misko', gender: 'male'};
     var log = [];
     angular.forEach(values, function(value, key) {
       this.push(key + ': ' + value);
     }, log);
     expect(log).toEqual(['name: misko', 'gender: male']);
   ```
 *
 * @param {Object|Array} obj Object to iterate over.
 * @param {Function} iterator Iterator function.
 * @param {Object=} context Object to become context (`this`) for the iterator function.
 * @returns {Object|Array} Reference to `obj`.
 */
  function forEach(obj, iterator, context) {
    var key;
    if (obj) {
      if (isFunction(obj)) {
        for (key in obj) {
          // Need to check if hasOwnProperty exists,
          // as on IE8 the result of querySelectorAll is an object without a hasOwnProperty function
          if (key != 'prototype' && key != 'length' && key != 'name' && (!obj.hasOwnProperty || obj.hasOwnProperty(key))) {
            iterator.call(context, obj[key], key);
          }
        }
      } else if (isArray(obj) || isArrayLike(obj)) {
        for (key = 0; key < obj.length; key++) {
          iterator.call(context, obj[key], key);
        }
      } else if (obj.forEach && obj.forEach !== forEach) {
        obj.forEach(iterator, context);
      } else {
        for (key in obj) {
          if (obj.hasOwnProperty(key)) {
            iterator.call(context, obj[key], key);
          }
        }
      }
    }
    return obj;
  }
  function sortedKeys(obj) {
    var keys = [];
    for (var key in obj) {
      if (obj.hasOwnProperty(key)) {
        keys.push(key);
      }
    }
    return keys.sort();
  }
  function forEachSorted(obj, iterator, context) {
    var keys = sortedKeys(obj);
    for (var i = 0; i < keys.length; i++) {
      iterator.call(context, obj[keys[i]], keys[i]);
    }
    return keys;
  }
  /**
 * when using forEach the params are value, key, but it is often useful to have key, value.
 * @param {function(string, *)} iteratorFn
 * @returns {function(*, string)}
 */
  function reverseParams(iteratorFn) {
    return function (value, key) {
      iteratorFn(key, value);
    };
  }
  /**
 * A consistent way of creating unique IDs in angular. The ID is a sequence of alpha numeric
 * characters such as '012ABC'. The reason why we are not using simply a number counter is that
 * the number string gets longer over time, and it can also overflow, where as the nextId
 * will grow much slower, it is a string, and it will never overflow.
 *
 * @returns {string} an unique alpha-numeric string
 */
  function nextUid() {
    var index = uid.length;
    var digit;
    while (index) {
      index--;
      digit = uid[index].charCodeAt(0);
      if (digit == 57) {
        uid[index] = 'A';
        return uid.join('');
      }
      if (digit == 90) {
        uid[index] = '0';
      } else {
        uid[index] = String.fromCharCode(digit + 1);
        return uid.join('');
      }
    }
    uid.unshift('0');
    return uid.join('');
  }
  /**
 * Set or clear the hashkey for an object.
 * @param obj object
 * @param h the hashkey (!truthy to delete the hashkey)
 */
  function setHashKey(obj, h) {
    if (h) {
      obj.$$hashKey = h;
    } else {
      delete obj.$$hashKey;
    }
  }
  /**
 * @ngdoc function
 * @name angular.extend
 * @module ng
 * @kind function
 *
 * @description
 * Extends the destination object `dst` by copying own enumerable properties from the `src` object(s)
 * to `dst`. You can specify multiple `src` objects.
 *
 * @param {Object} dst Destination object.
 * @param {...Object} src Source object(s).
 * @returns {Object} Reference to `dst`.
 */
  function extend(dst) {
    var h = dst.$$hashKey;
    forEach(arguments, function (obj) {
      if (obj !== dst) {
        forEach(obj, function (value, key) {
          dst[key] = value;
        });
      }
    });
    setHashKey(dst, h);
    return dst;
  }
  function int(str) {
    return parseInt(str, 10);
  }
  function inherit(parent, extra) {
    return extend(new (extend(function () {
    }, { prototype: parent }))(), extra);
  }
  /**
 * @ngdoc function
 * @name angular.noop
 * @module ng
 * @kind function
 *
 * @description
 * A function that performs no operations. This function can be useful when writing code in the
 * functional style.
   ```js
     function foo(callback) {
       var result = calculateResult();
       (callback || angular.noop)(result);
     }
   ```
 */
  function noop() {
  }
  noop.$inject = [];
  /**
 * @ngdoc function
 * @name angular.identity
 * @module ng
 * @kind function
 *
 * @description
 * A function that returns its first argument. This function is useful when writing code in the
 * functional style.
 *
   ```js
     function transformer(transformationFn, value) {
       return (transformationFn || angular.identity)(value);
     };
   ```
 */
  function identity($) {
    return $;
  }
  identity.$inject = [];
  function valueFn(value) {
    return function () {
      return value;
    };
  }
  /**
 * @ngdoc function
 * @name angular.isUndefined
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a reference is undefined.
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is undefined.
 */
  function isUndefined(value) {
    return typeof value === 'undefined';
  }
  /**
 * @ngdoc function
 * @name angular.isDefined
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a reference is defined.
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is defined.
 */
  function isDefined(value) {
    return typeof value !== 'undefined';
  }
  /**
 * @ngdoc function
 * @name angular.isObject
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a reference is an `Object`. Unlike `typeof` in JavaScript, `null`s are not
 * considered to be objects. Note that JavaScript arrays are objects.
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is an `Object` but not `null`.
 */
  function isObject(value) {
    return value != null && typeof value === 'object';
  }
  /**
 * @ngdoc function
 * @name angular.isString
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a reference is a `String`.
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is a `String`.
 */
  function isString(value) {
    return typeof value === 'string';
  }
  /**
 * @ngdoc function
 * @name angular.isNumber
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a reference is a `Number`.
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is a `Number`.
 */
  function isNumber(value) {
    return typeof value === 'number';
  }
  /**
 * @ngdoc function
 * @name angular.isDate
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a value is a date.
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is a `Date`.
 */
  function isDate(value) {
    return toString.call(value) === '[object Date]';
  }
  /**
 * @ngdoc function
 * @name angular.isArray
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a reference is an `Array`.
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is an `Array`.
 */
  var isArray = function () {
      if (!isFunction(Array.isArray)) {
        return function (value) {
          return toString.call(value) === '[object Array]';
        };
      }
      return Array.isArray;
    }();
  /**
 * @ngdoc function
 * @name angular.isFunction
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a reference is a `Function`.
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is a `Function`.
 */
  function isFunction(value) {
    return typeof value === 'function';
  }
  /**
 * Determines if a value is a regular expression object.
 *
 * @private
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is a `RegExp`.
 */
  function isRegExp(value) {
    return toString.call(value) === '[object RegExp]';
  }
  /**
 * Checks if `obj` is a window object.
 *
 * @private
 * @param {*} obj Object to check
 * @returns {boolean} True if `obj` is a window obj.
 */
  function isWindow(obj) {
    return obj && obj.document && obj.location && obj.alert && obj.setInterval;
  }
  function isScope(obj) {
    return obj && obj.$evalAsync && obj.$watch;
  }
  function isFile(obj) {
    return toString.call(obj) === '[object File]';
  }
  function isBlob(obj) {
    return toString.call(obj) === '[object Blob]';
  }
  function isBoolean(value) {
    return typeof value === 'boolean';
  }
  function isPromiseLike(obj) {
    return obj && isFunction(obj.then);
  }
  var trim = function () {
      // native trim is way faster: http://jsperf.com/angular-trim-test
      // but IE doesn't have it... :-(
      // TODO: we should move this into IE/ES5 polyfill
      if (!String.prototype.trim) {
        return function (value) {
          return isString(value) ? value.replace(/^\s\s*/, '').replace(/\s\s*$/, '') : value;
        };
      }
      return function (value) {
        return isString(value) ? value.trim() : value;
      };
    }();
  /**
 * @ngdoc function
 * @name angular.isElement
 * @module ng
 * @kind function
 *
 * @description
 * Determines if a reference is a DOM element (or wrapped jQuery element).
 *
 * @param {*} value Reference to check.
 * @returns {boolean} True if `value` is a DOM element (or wrapped jQuery element).
 */
  function isElement(node) {
    return !!(node && (node.nodeName || node.prop && node.attr && node.find));  // we have an on and find method part of jQuery API
  }
  /**
 * @param str 'key1,key2,...'
 * @returns {object} in the form of {key1:true, key2:true, ...}
 */
  function makeMap(str) {
    var obj = {}, items = str.split(','), i;
    for (i = 0; i < items.length; i++)
      obj[items[i]] = true;
    return obj;
  }
  if (msie < 9) {
    nodeName_ = function (element) {
      element = element.nodeName ? element : element[0];
      return element.scopeName && element.scopeName != 'HTML' ? uppercase(element.scopeName + ':' + element.nodeName) : element.nodeName;
    };
  } else {
    nodeName_ = function (element) {
      return element.nodeName ? element.nodeName : element[0].nodeName;
    };
  }
  function map(obj, iterator, context) {
    var results = [];
    forEach(obj, function (value, index, list) {
      results.push(iterator.call(context, value, index, list));
    });
    return results;
  }
  /**
 * @description
 * Determines the number of elements in an array, the number of properties an object has, or
 * the length of a string.
 *
 * Note: This function is used to augment the Object type in Angular expressions. See
 * {@link angular.Object} for more information about Angular arrays.
 *
 * @param {Object|Array|string} obj Object, array, or string to inspect.
 * @param {boolean} [ownPropsOnly=false] Count only "own" properties in an object
 * @returns {number} The size of `obj` or `0` if `obj` is neither an object nor an array.
 */
  function size(obj, ownPropsOnly) {
    var count = 0, key;
    if (isArray(obj) || isString(obj)) {
      return obj.length;
    } else if (isObject(obj)) {
      for (key in obj)
        if (!ownPropsOnly || obj.hasOwnProperty(key))
          count++;
    }
    return count;
  }
  function includes(array, obj) {
    return indexOf(array, obj) != -1;
  }
  function indexOf(array, obj) {
    if (array.indexOf)
      return array.indexOf(obj);
    for (var i = 0; i < array.length; i++) {
      if (obj === array[i])
        return i;
    }
    return -1;
  }
  function arrayRemove(array, value) {
    var index = indexOf(array, value);
    if (index >= 0)
      array.splice(index, 1);
    return value;
  }
  function isLeafNode(node) {
    if (node) {
      switch (node.nodeName) {
      case 'OPTION':
      case 'PRE':
      case 'TITLE':
        return true;
      }
    }
    return false;
  }
  /**
 * @ngdoc function
 * @name angular.copy
 * @module ng
 * @kind function
 *
 * @description
 * Creates a deep copy of `source`, which should be an object or an array.
 *
 * * If no destination is supplied, a copy of the object or array is created.
 * * If a destination is provided, all of its elements (for array) or properties (for objects)
 *   are deleted and then all elements/properties from the source are copied to it.
 * * If `source` is not an object or array (inc. `null` and `undefined`), `source` is returned.
 * * If `source` is identical to 'destination' an exception will be thrown.
 *
 * @param {*} source The source that will be used to make a copy.
 *                   Can be any type, including primitives, `null`, and `undefined`.
 * @param {(Object|Array)=} destination Destination into which the source is copied. If
 *     provided, must be of the same type as `source`.
 * @returns {*} The copy or updated `destination`, if `destination` was specified.
 *
 * @example
 <example module="copyExample">
 <file name="index.html">
 <div ng-controller="ExampleController">
 <form novalidate class="simple-form">
 Name: <input type="text" ng-model="user.name" /><br />
 E-mail: <input type="email" ng-model="user.email" /><br />
 Gender: <input type="radio" ng-model="user.gender" value="male" />male
 <input type="radio" ng-model="user.gender" value="female" />female<br />
 <button ng-click="reset()">RESET</button>
 <button ng-click="update(user)">SAVE</button>
 </form>
 <pre>form = {{user | json}}</pre>
 <pre>master = {{master | json}}</pre>
 </div>

 <script>
  angular.module('copyExample', [])
    .controller('ExampleController', ['$scope', function($scope) {
      $scope.master= {};

      $scope.update = function(user) {
        // Example with 1 argument
        $scope.master= angular.copy(user);
      };

      $scope.reset = function() {
        // Example with 2 arguments
        angular.copy($scope.master, $scope.user);
      };

      $scope.reset();
    }]);
 </script>
 </file>
 </example>
 */
  function copy(source, destination, stackSource, stackDest) {
    if (isWindow(source) || isScope(source)) {
      throw ngMinErr('cpws', 'Can\'t copy! Making copies of Window or Scope instances is not supported.');
    }
    if (!destination) {
      destination = source;
      if (source) {
        if (isArray(source)) {
          destination = copy(source, [], stackSource, stackDest);
        } else if (isDate(source)) {
          destination = new Date(source.getTime());
        } else if (isRegExp(source)) {
          destination = new RegExp(source.source, source.toString().match(/[^\/]*$/)[0]);
          destination.lastIndex = source.lastIndex;
        } else if (isObject(source)) {
          destination = copy(source, {}, stackSource, stackDest);
        }
      }
    } else {
      if (source === destination)
        throw ngMinErr('cpi', 'Can\'t copy! Source and destination are identical.');
      stackSource = stackSource || [];
      stackDest = stackDest || [];
      if (isObject(source)) {
        var index = indexOf(stackSource, source);
        if (index !== -1)
          return stackDest[index];
        stackSource.push(source);
        stackDest.push(destination);
      }
      var result;
      if (isArray(source)) {
        destination.length = 0;
        for (var i = 0; i < source.length; i++) {
          result = copy(source[i], null, stackSource, stackDest);
          if (isObject(source[i])) {
            stackSource.push(source[i]);
            stackDest.push(result);
          }
          destination.push(result);
        }
      } else {
        var h = destination.$$hashKey;
        if (isArray(destination)) {
          destination.length = 0;
        } else {
          forEach(destination, function (value, key) {
            delete destination[key];
          });
        }
        for (var key in source) {
          result = copy(source[key], null, stackSource, stackDest);
          if (isObject(source[key])) {
            stackSource.push(source[key]);
            stackDest.push(result);
          }
          destination[key] = result;
        }
        setHashKey(destination, h);
      }
    }
    return destination;
  }
  /**
 * Creates a shallow copy of an object, an array or a primitive
 */
  function shallowCopy(src, dst) {
    if (isArray(src)) {
      dst = dst || [];
      for (var i = 0; i < src.length; i++) {
        dst[i] = src[i];
      }
    } else if (isObject(src)) {
      dst = dst || {};
      for (var key in src) {
        if (hasOwnProperty.call(src, key) && !(key.charAt(0) === '$' && key.charAt(1) === '$')) {
          dst[key] = src[key];
        }
      }
    }
    return dst || src;
  }
  /**
 * @ngdoc function
 * @name angular.equals
 * @module ng
 * @kind function
 *
 * @description
 * Determines if two objects or two values are equivalent. Supports value types, regular
 * expressions, arrays and objects.
 *
 * Two objects or values are considered equivalent if at least one of the following is true:
 *
 * * Both objects or values pass `===` comparison.
 * * Both objects or values are of the same type and all of their properties are equal by
 *   comparing them with `angular.equals`.
 * * Both values are NaN. (In JavaScript, NaN == NaN => false. But we consider two NaN as equal)
 * * Both values represent the same regular expression (In JavaScript,
 *   /abc/ == /abc/ => false. But we consider two regular expressions as equal when their textual
 *   representation matches).
 *
 * During a property comparison, properties of `function` type and properties with names
 * that begin with `$` are ignored.
 *
 * Scope and DOMWindow objects are being compared only by identify (`===`).
 *
 * @param {*} o1 Object or value to compare.
 * @param {*} o2 Object or value to compare.
 * @returns {boolean} True if arguments are equal.
 */
  function equals(o1, o2) {
    if (o1 === o2)
      return true;
    if (o1 === null || o2 === null)
      return false;
    if (o1 !== o1 && o2 !== o2)
      return true;
    // NaN === NaN
    var t1 = typeof o1, t2 = typeof o2, length, key, keySet;
    if (t1 == t2) {
      if (t1 == 'object') {
        if (isArray(o1)) {
          if (!isArray(o2))
            return false;
          if ((length = o1.length) == o2.length) {
            for (key = 0; key < length; key++) {
              if (!equals(o1[key], o2[key]))
                return false;
            }
            return true;
          }
        } else if (isDate(o1)) {
          if (!isDate(o2))
            return false;
          return isNaN(o1.getTime()) && isNaN(o2.getTime()) || o1.getTime() === o2.getTime();
        } else if (isRegExp(o1) && isRegExp(o2)) {
          return o1.toString() == o2.toString();
        } else {
          if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2) || isArray(o2))
            return false;
          keySet = {};
          for (key in o1) {
            if (key.charAt(0) === '$' || isFunction(o1[key]))
              continue;
            if (!equals(o1[key], o2[key]))
              return false;
            keySet[key] = true;
          }
          for (key in o2) {
            if (!keySet.hasOwnProperty(key) && key.charAt(0) !== '$' && o2[key] !== undefined && !isFunction(o2[key]))
              return false;
          }
          return true;
        }
      }
    }
    return false;
  }
  var csp = function () {
    if (isDefined(csp.isActive_))
      return csp.isActive_;
    var active = !!(document.querySelector('[ng-csp]') || document.querySelector('[data-ng-csp]'));
    if (!active) {
      try {
        /* jshint -W031, -W054 */
        new Function('');  /* jshint +W031, +W054 */
      } catch (e) {
        active = true;
      }
    }
    return csp.isActive_ = active;
  };
  function concat(array1, array2, index) {
    return array1.concat(slice.call(array2, index));
  }
  function sliceArgs(args, startIndex) {
    return slice.call(args, startIndex || 0);
  }
  /* jshint -W101 */
  /**
 * @ngdoc function
 * @name angular.bind
 * @module ng
 * @kind function
 *
 * @description
 * Returns a function which calls function `fn` bound to `self` (`self` becomes the `this` for
 * `fn`). You can supply optional `args` that are prebound to the function. This feature is also
 * known as [partial application](http://en.wikipedia.org/wiki/Partial_application), as
 * distinguished from [function currying](http://en.wikipedia.org/wiki/Currying#Contrast_with_partial_function_application).
 *
 * @param {Object} self Context which `fn` should be evaluated in.
 * @param {function()} fn Function to be bound.
 * @param {...*} args Optional arguments to be prebound to the `fn` function call.
 * @returns {function()} Function that wraps the `fn` with all the specified bindings.
 */
  /* jshint +W101 */
  function bind(self, fn) {
    var curryArgs = arguments.length > 2 ? sliceArgs(arguments, 2) : [];
    if (isFunction(fn) && !(fn instanceof RegExp)) {
      return curryArgs.length ? function () {
        return arguments.length ? fn.apply(self, curryArgs.concat(slice.call(arguments, 0))) : fn.apply(self, curryArgs);
      } : function () {
        return arguments.length ? fn.apply(self, arguments) : fn.call(self);
      };
    } else {
      // in IE, native methods are not functions so they cannot be bound (note: they don't need to be)
      return fn;
    }
  }
  function toJsonReplacer(key, value) {
    var val = value;
    if (typeof key === 'string' && key.charAt(0) === '$') {
      val = undefined;
    } else if (isWindow(value)) {
      val = '$WINDOW';
    } else if (value && document === value) {
      val = '$DOCUMENT';
    } else if (isScope(value)) {
      val = '$SCOPE';
    }
    return val;
  }
  /**
 * @ngdoc function
 * @name angular.toJson
 * @module ng
 * @kind function
 *
 * @description
 * Serializes input into a JSON-formatted string. Properties with leading $ characters will be
 * stripped since angular uses this notation internally.
 *
 * @param {Object|Array|Date|string|number} obj Input to be serialized into JSON.
 * @param {boolean=} pretty If set to true, the JSON output will contain newlines and whitespace.
 * @returns {string|undefined} JSON-ified string representing `obj`.
 */
  function toJson(obj, pretty) {
    if (typeof obj === 'undefined')
      return undefined;
    return JSON.stringify(obj, toJsonReplacer, pretty ? '  ' : null);
  }
  /**
 * @ngdoc function
 * @name angular.fromJson
 * @module ng
 * @kind function
 *
 * @description
 * Deserializes a JSON string.
 *
 * @param {string} json JSON string to deserialize.
 * @returns {Object|Array|string|number} Deserialized thingy.
 */
  function fromJson(json) {
    return isString(json) ? JSON.parse(json) : json;
  }
  function toBoolean(value) {
    if (typeof value === 'function') {
      value = true;
    } else if (value && value.length !== 0) {
      var v = lowercase('' + value);
      value = !(v == 'f' || v == '0' || v == 'false' || v == 'no' || v == 'n' || v == '[]');
    } else {
      value = false;
    }
    return value;
  }
  /**
 * @returns {string} Returns the string representation of the element.
 */
  function startingTag(element) {
    element = jqLite(element).clone();
    try {
      // turns out IE does not let you set .html() on elements which
      // are not allowed to have children. So we just ignore it.
      element.empty();
    } catch (e) {
    }
    // As Per DOM Standards
    var TEXT_NODE = 3;
    var elemHtml = jqLite('<div>').append(element).html();
    try {
      return element[0].nodeType === TEXT_NODE ? lowercase(elemHtml) : elemHtml.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/, function (match, nodeName) {
        return '<' + lowercase(nodeName);
      });
    } catch (e) {
      return lowercase(elemHtml);
    }
  }
  /////////////////////////////////////////////////
  /**
 * Tries to decode the URI component without throwing an exception.
 *
 * @private
 * @param str value potential URI component to check.
 * @returns {boolean} True if `value` can be decoded
 * with the decodeURIComponent function.
 */
  function tryDecodeURIComponent(value) {
    try {
      return decodeURIComponent(value);
    } catch (e) {
    }
  }
  /**
 * Parses an escaped url query string into key-value pairs.
 * @returns {Object.<string,boolean|Array>}
 */
  function parseKeyValue(keyValue) {
    var obj = {}, key_value, key;
    forEach((keyValue || '').split('&'), function (keyValue) {
      if (keyValue) {
        key_value = keyValue.replace(/\+/g, '%20').split('=');
        key = tryDecodeURIComponent(key_value[0]);
        if (isDefined(key)) {
          var val = isDefined(key_value[1]) ? tryDecodeURIComponent(key_value[1]) : true;
          if (!hasOwnProperty.call(obj, key)) {
            obj[key] = val;
          } else if (isArray(obj[key])) {
            obj[key].push(val);
          } else {
            obj[key] = [
              obj[key],
              val
            ];
          }
        }
      }
    });
    return obj;
  }
  function toKeyValue(obj) {
    var parts = [];
    forEach(obj, function (value, key) {
      if (isArray(value)) {
        forEach(value, function (arrayValue) {
          parts.push(encodeUriQuery(key, true) + (arrayValue === true ? '' : '=' + encodeUriQuery(arrayValue, true)));
        });
      } else {
        parts.push(encodeUriQuery(key, true) + (value === true ? '' : '=' + encodeUriQuery(value, true)));
      }
    });
    return parts.length ? parts.join('&') : '';
  }
  /**
 * We need our custom method because encodeURIComponent is too aggressive and doesn't follow
 * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path
 * segments:
 *    segment       = *pchar
 *    pchar         = unreserved / pct-encoded / sub-delims / ":" / "@"
 *    pct-encoded   = "%" HEXDIG HEXDIG
 *    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
 *    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
 *                     / "*" / "+" / "," / ";" / "="
 */
  function encodeUriSegment(val) {
    return encodeUriQuery(val, true).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+');
  }
  /**
 * This method is intended for encoding *key* or *value* parts of query component. We need a custom
 * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be
 * encoded per http://tools.ietf.org/html/rfc3986:
 *    query       = *( pchar / "/" / "?" )
 *    pchar         = unreserved / pct-encoded / sub-delims / ":" / "@"
 *    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
 *    pct-encoded   = "%" HEXDIG HEXDIG
 *    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
 *                     / "*" / "+" / "," / ";" / "="
 */
  function encodeUriQuery(val, pctEncodeSpaces) {
    return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, pctEncodeSpaces ? '%20' : '+');
  }
  /**
 * @ngdoc directive
 * @name ngApp
 * @module ng
 *
 * @element ANY
 * @param {angular.Module} ngApp an optional application
 *   {@link angular.module module} name to load.
 *
 * @description
 *
 * Use this directive to **auto-bootstrap** an AngularJS application. The `ngApp` directive
 * designates the **root element** of the application and is typically placed near the root element
 * of the page - e.g. on the `<body>` or `<html>` tags.
 *
 * Only one AngularJS application can be auto-bootstrapped per HTML document. The first `ngApp`
 * found in the document will be used to define the root element to auto-bootstrap as an
 * application. To run multiple applications in an HTML document you must manually bootstrap them using
 * {@link angular.bootstrap} instead. AngularJS applications cannot be nested within each other.
 *
 * You can specify an **AngularJS module** to be used as the root module for the application.  This
 * module will be loaded into the {@link auto.$injector} when the application is bootstrapped and
 * should contain the application code needed or have dependencies on other modules that will
 * contain the code. See {@link angular.module} for more information.
 *
 * In the example below if the `ngApp` directive were not placed on the `html` element then the
 * document would not be compiled, the `AppController` would not be instantiated and the `{{ a+b }}`
 * would not be resolved to `3`.
 *
 * `ngApp` is the easiest, and most common, way to bootstrap an application.
 *
 <example module="ngAppDemo">
   <file name="index.html">
   <div ng-controller="ngAppDemoController">
     I can add: {{a}} + {{b}} =  {{ a+b }}
   </div>
   </file>
   <file name="script.js">
   angular.module('ngAppDemo', []).controller('ngAppDemoController', function($scope) {
     $scope.a = 1;
     $scope.b = 2;
   });
   </file>
 </example>
 *
 */
  function angularInit(element, bootstrap) {
    var elements = [element], appElement, module, names = [
        'ng:app',
        'ng-app',
        'x-ng-app',
        'data-ng-app'
      ], NG_APP_CLASS_REGEXP = /\sng[:\-]app(:\s*([\w\d_]+);?)?\s/;
    function append(element) {
      element && elements.push(element);
    }
    forEach(names, function (name) {
      names[name] = true;
      append(document.getElementById(name));
      name = name.replace(':', '\\:');
      if (element.querySelectorAll) {
        forEach(element.querySelectorAll('.' + name), append);
        forEach(element.querySelectorAll('.' + name + '\\:'), append);
        forEach(element.querySelectorAll('[' + name + ']'), append);
      }
    });
    forEach(elements, function (element) {
      if (!appElement) {
        var className = ' ' + element.className + ' ';
        var match = NG_APP_CLASS_REGEXP.exec(className);
        if (match) {
          appElement = element;
          module = (match[2] || '').replace(/\s+/g, ',');
        } else {
          forEach(element.attributes, function (attr) {
            if (!appElement && names[attr.name]) {
              appElement = element;
              module = attr.value;
            }
          });
        }
      }
    });
    if (appElement) {
      bootstrap(appElement, module ? [module] : []);
    }
  }
  /**
 * @ngdoc function
 * @name angular.bootstrap
 * @module ng
 * @description
 * Use this function to manually start up angular application.
 *
 * See: {@link guide/bootstrap Bootstrap}
 *
 * Note that ngScenario-based end-to-end tests cannot use this function to bootstrap manually.
 * They must use {@link ng.directive:ngApp ngApp}.
 *
 * Angular will detect if it has been loaded into the browser more than once and only allow the
 * first loaded script to be bootstrapped and will report a warning to the browser console for
 * each of the subsequent scripts. This prevents strange results in applications, where otherwise
 * multiple instances of Angular try to work on the DOM.
 *
 * <example name="multi-bootstrap" module="multi-bootstrap">
 * <file name="index.html">
 * <script src="../../../angular.js"></script>
 * <div ng-controller="BrokenTable">
 *   <table>
 *   <tr>
 *     <th ng-repeat="heading in headings">{{heading}}</th>
 *   </tr>
 *   <tr ng-repeat="filling in fillings">
 *     <td ng-repeat="fill in filling">{{fill}}</td>
 *   </tr>
 * </table>
 * </div>
 * </file>
 * <file name="controller.js">
 * var app = angular.module('multi-bootstrap', [])
 *
 * .controller('BrokenTable', function($scope) {
 *     $scope.headings = ['One', 'Two', 'Three'];
 *     $scope.fillings = [[1, 2, 3], ['A', 'B', 'C'], [7, 8, 9]];
 * });
 * </file>
 * <file name="protractor.js" type="protractor">
 * it('should only insert one table cell for each item in $scope.fillings', function() {
 *  expect(element.all(by.css('td')).count())
 *      .toBe(9);
 * });
 * </file>
 * </example>
 *
 * @param {DOMElement} element DOM element which is the root of angular application.
 * @param {Array<String|Function|Array>=} modules an array of modules to load into the application.
 *     Each item in the array should be the name of a predefined module or a (DI annotated)
 *     function that will be invoked by the injector as a run block.
 *     See: {@link angular.module modules}
 * @returns {auto.$injector} Returns the newly created injector for this app.
 */
  function bootstrap(element, modules) {
    var doBootstrap = function () {
      element = jqLite(element);
      if (element.injector()) {
        var tag = element[0] === document ? 'document' : startingTag(element);
        //Encode angle brackets to prevent input from being sanitized to empty string #8683
        throw ngMinErr('btstrpd', 'App Already Bootstrapped with this Element \'{0}\'', tag.replace(/</, '&lt;').replace(/>/, '&gt;'));
      }
      modules = modules || [];
      modules.unshift([
        '$provide',
        function ($provide) {
          $provide.value('$rootElement', element);
        }
      ]);
      modules.unshift('ng');
      var injector = createInjector(modules);
      injector.invoke([
        '$rootScope',
        '$rootElement',
        '$compile',
        '$injector',
        '$animate',
        function (scope, element, compile, injector, animate) {
          scope.$apply(function () {
            element.data('$injector', injector);
            compile(element)(scope);
          });
        }
      ]);
      return injector;
    };
    var NG_DEFER_BOOTSTRAP = /^NG_DEFER_BOOTSTRAP!/;
    if (window && !NG_DEFER_BOOTSTRAP.test(window.name)) {
      return doBootstrap();
    }
    window.name = window.name.replace(NG_DEFER_BOOTSTRAP, '');
    angular.resumeBootstrap = function (extraModules) {
      forEach(extraModules, function (module) {
        modules.push(module);
      });
      doBootstrap();
    };
  }
  var SNAKE_CASE_REGEXP = /[A-Z]/g;
  function snake_case(name, separator) {
    separator = separator || '_';
    return name.replace(SNAKE_CASE_REGEXP, function (letter, pos) {
      return (pos ? separator : '') + letter.toLowerCase();
    });
  }
  function bindJQuery() {
    // bind to jQuery if present;
    jQuery = window.jQuery;
    // Use jQuery if it exists with proper functionality, otherwise default to us.
    // Angular 1.2+ requires jQuery 1.7.1+ for on()/off() support.
    if (jQuery && jQuery.fn.on) {
      jqLite = jQuery;
      extend(jQuery.fn, {
        scope: JQLitePrototype.scope,
        isolateScope: JQLitePrototype.isolateScope,
        controller: JQLitePrototype.controller,
        injector: JQLitePrototype.injector,
        inheritedData: JQLitePrototype.inheritedData
      });
      // Method signature:
      //     jqLitePatchJQueryRemove(name, dispatchThis, filterElems, getterIfNoArguments)
      jqLitePatchJQueryRemove('remove', true, true, false);
      jqLitePatchJQueryRemove('empty', false, false, false);
      jqLitePatchJQueryRemove('html', false, false, true);
    } else {
      jqLite = JQLite;
    }
    angular.element = jqLite;
  }
  /**
 * throw error if the argument is falsy.
 */
  function assertArg(arg, name, reason) {
    if (!arg) {
      throw ngMinErr('areq', 'Argument \'{0}\' is {1}', name || '?', reason || 'required');
    }
    return arg;
  }
  function assertArgFn(arg, name, acceptArrayAnnotation) {
    if (acceptArrayAnnotation && isArray(arg)) {
      arg = arg[arg.length - 1];
    }
    assertArg(isFunction(arg), name, 'not a function, got ' + (arg && typeof arg === 'object' ? arg.constructor.name || 'Object' : typeof arg));
    return arg;
  }
  /**
 * throw error if the name given is hasOwnProperty
 * @param  {String} name    the name to test
 * @param  {String} context the context in which the name is used, such as module or directive
 */
  function assertNotHasOwnProperty(name, context) {
    if (name === 'hasOwnProperty') {
      throw ngMinErr('badname', 'hasOwnProperty is not a valid {0} name', context);
    }
  }
  /**
 * Return the value accessible from the object by path. Any undefined traversals are ignored
 * @param {Object} obj starting object
 * @param {String} path path to traverse
 * @param {boolean} [bindFnToScope=true]
 * @returns {Object} value as accessible by path
 */
  //TODO(misko): this function needs to be removed
  function getter(obj, path, bindFnToScope) {
    if (!path)
      return obj;
    var keys = path.split('.');
    var key;
    var lastInstance = obj;
    var len = keys.length;
    for (var i = 0; i < len; i++) {
      key = keys[i];
      if (obj) {
        obj = (lastInstance = obj)[key];
      }
    }
    if (!bindFnToScope && isFunction(obj)) {
      return bind(lastInstance, obj);
    }
    return obj;
  }
  /**
 * Return the DOM siblings between the first and last node in the given array.
 * @param {Array} array like object
 * @returns {DOMElement} object containing the elements
 */
  function getBlockElements(nodes) {
    var startNode = nodes[0], endNode = nodes[nodes.length - 1];
    if (startNode === endNode) {
      return jqLite(startNode);
    }
    var element = startNode;
    var elements = [element];
    do {
      element = element.nextSibling;
      if (!element)
        break;
      elements.push(element);
    } while (element !== endNode);
    return jqLite(elements);
  }
  /**
 * @ngdoc type
 * @name angular.Module
 * @module ng
 * @description
 *
 * Interface for configuring angular {@link angular.module modules}.
 */
  function setupModuleLoader(window) {
    var $injectorMinErr = minErr('$injector');
    var ngMinErr = minErr('ng');
    function ensure(obj, name, factory) {
      return obj[name] || (obj[name] = factory());
    }
    var angular = ensure(window, 'angular', Object);
    // We need to expose `angular.$$minErr` to modules such as `ngResource` that reference it during bootstrap
    angular.$$minErr = angular.$$minErr || minErr;
    return ensure(angular, 'module', function () {
      /** @type {Object.<string, angular.Module>} */
      var modules = {};
      /**
     * @ngdoc function
     * @name angular.module
     * @module ng
     * @description
     *
     * The `angular.module` is a global place for creating, registering and retrieving Angular
     * modules.
     * All modules (angular core or 3rd party) that should be available to an application must be
     * registered using this mechanism.
     *
     * When passed two or more arguments, a new module is created.  If passed only one argument, an
     * existing module (the name passed as the first argument to `module`) is retrieved.
     *
     *
     * # Module
     *
     * A module is a collection of services, directives, controllers, filters, and configuration information.
     * `angular.module` is used to configure the {@link auto.$injector $injector}.
     *
     * ```js
     * // Create a new module
     * var myModule = angular.module('myModule', []);
     *
     * // register a new service
     * myModule.value('appName', 'MyCoolApp');
     *
     * // configure existing services inside initialization blocks.
     * myModule.config(['$locationProvider', function($locationProvider) {
     *   // Configure existing providers
     *   $locationProvider.hashPrefix('!');
     * }]);
     * ```
     *
     * Then you can create an injector and load your modules like this:
     *
     * ```js
     * var injector = angular.injector(['ng', 'myModule'])
     * ```
     *
     * However it's more likely that you'll just use
     * {@link ng.directive:ngApp ngApp} or
     * {@link angular.bootstrap} to simplify this process for you.
     *
     * @param {!string} name The name of the module to create or retrieve.
     * @param {!Array.<string>=} requires If specified then new module is being created. If
     *        unspecified then the module is being retrieved for further configuration.
     * @param {Function=} configFn Optional configuration function for the module. Same as
     *        {@link angular.Module#config Module#config()}.
     * @returns {module} new module with the {@link angular.Module} api.
     */
      return function module(name, requires, configFn) {
        var assertNotHasOwnProperty = function (name, context) {
          if (name === 'hasOwnProperty') {
            throw ngMinErr('badname', 'hasOwnProperty is not a valid {0} name', context);
          }
        };
        assertNotHasOwnProperty(name, 'module');
        if (requires && modules.hasOwnProperty(name)) {
          modules[name] = null;
        }
        return ensure(modules, name, function () {
          if (!requires) {
            throw $injectorMinErr('nomod', 'Module \'{0}\' is not available! You either misspelled ' + 'the module name or forgot to load it. If registering a module ensure that you ' + 'specify the dependencies as the second argument.', name);
          }
          /** @type {!Array.<Array.<*>>} */
          var invokeQueue = [];
          /** @type {!Array.<Function>} */
          var runBlocks = [];
          var config = invokeLater('$injector', 'invoke');
          /** @type {angular.Module} */
          var moduleInstance = {
              _invokeQueue: invokeQueue,
              _runBlocks: runBlocks,
              requires: requires,
              name: name,
              provider: invokeLater('$provide', 'provider'),
              factory: invokeLater('$provide', 'factory'),
              service: invokeLater('$provide', 'service'),
              value: invokeLater('$provide', 'value'),
              constant: invokeLater('$provide', 'constant', 'unshift'),
              animation: invokeLater('$animateProvider', 'register'),
              filter: invokeLater('$filterProvider', 'register'),
              controller: invokeLater('$controllerProvider', 'register'),
              directive: invokeLater('$compileProvider', 'directive'),
              config: config,
              run: function (block) {
                runBlocks.push(block);
                return this;
              }
            };
          if (configFn) {
            config(configFn);
          }
          return moduleInstance;
          /**
         * @param {string} provider
         * @param {string} method
         * @param {String=} insertMethod
         * @returns {angular.Module}
         */
          function invokeLater(provider, method, insertMethod) {
            return function () {
              invokeQueue[insertMethod || 'push']([
                provider,
                method,
                arguments
              ]);
              return moduleInstance;
            };
          }
        });
      };
    });
  }
  /* global angularModule: true,
  version: true,

  $LocaleProvider,
  $CompileProvider,

    htmlAnchorDirective,
    inputDirective,
    inputDirective,
    formDirective,
    scriptDirective,
    selectDirective,
    styleDirective,
    optionDirective,
    ngBindDirective,
    ngBindHtmlDirective,
    ngBindTemplateDirective,
    ngClassDirective,
    ngClassEvenDirective,
    ngClassOddDirective,
    ngCspDirective,
    ngCloakDirective,
    ngControllerDirective,
    ngFormDirective,
    ngHideDirective,
    ngIfDirective,
    ngIncludeDirective,
    ngIncludeFillContentDirective,
    ngInitDirective,
    ngNonBindableDirective,
    ngPluralizeDirective,
    ngRepeatDirective,
    ngShowDirective,
    ngStyleDirective,
    ngSwitchDirective,
    ngSwitchWhenDirective,
    ngSwitchDefaultDirective,
    ngOptionsDirective,
    ngTranscludeDirective,
    ngModelDirective,
    ngListDirective,
    ngChangeDirective,
    requiredDirective,
    requiredDirective,
    ngValueDirective,
    ngAttributeAliasDirectives,
    ngEventDirectives,

    $AnchorScrollProvider,
    $AnimateProvider,
    $BrowserProvider,
    $CacheFactoryProvider,
    $ControllerProvider,
    $DocumentProvider,
    $ExceptionHandlerProvider,
    $FilterProvider,
    $InterpolateProvider,
    $IntervalProvider,
    $HttpProvider,
    $HttpBackendProvider,
    $LocationProvider,
    $LogProvider,
    $ParseProvider,
    $RootScopeProvider,
    $QProvider,
    $$SanitizeUriProvider,
    $SceProvider,
    $SceDelegateProvider,
    $SnifferProvider,
    $TemplateCacheProvider,
    $TimeoutProvider,
    $$RAFProvider,
    $$AsyncCallbackProvider,
    $WindowProvider
*/
  /**
 * @ngdoc object
 * @name angular.version
 * @module ng
 * @description
 * An object that contains information about the current AngularJS version. This object has the
 * following properties:
 *
 * - `full` – `{string}` – Full version string, such as "0.9.18".
 * - `major` – `{number}` – Major version number, such as "0".
 * - `minor` – `{number}` – Minor version number, such as "9".
 * - `dot` – `{number}` – Dot version number, such as "18".
 * - `codeName` – `{string}` – Code name of the release, such as "jiggling-armfat".
 */
  var version = {
      full: '1.2.28',
      major: 1,
      minor: 2,
      dot: 28,
      codeName: 'finnish-disembarkation'
    };
  function publishExternalAPI(angular) {
    extend(angular, {
      'bootstrap': bootstrap,
      'copy': copy,
      'extend': extend,
      'equals': equals,
      'element': jqLite,
      'forEach': forEach,
      'injector': createInjector,
      'noop': noop,
      'bind': bind,
      'toJson': toJson,
      'fromJson': fromJson,
      'identity': identity,
      'isUndefined': isUndefined,
      'isDefined': isDefined,
      'isString': isString,
      'isFunction': isFunction,
      'isObject': isObject,
      'isNumber': isNumber,
      'isElement': isElement,
      'isArray': isArray,
      'version': version,
      'isDate': isDate,
      'lowercase': lowercase,
      'uppercase': uppercase,
      'callbacks': { counter: 0 },
      '$$minErr': minErr,
      '$$csp': csp
    });
    angularModule = setupModuleLoader(window);
    try {
      angularModule('ngLocale');
    } catch (e) {
      angularModule('ngLocale', []).provider('$locale', $LocaleProvider);
    }
    angularModule('ng', ['ngLocale'], [
      '$provide',
      function ngModule($provide) {
        // $$sanitizeUriProvider needs to be before $compileProvider as it is used by it.
        $provide.provider({ $$sanitizeUri: $$SanitizeUriProvider });
        $provide.provider('$compile', $CompileProvider).directive({
          a: htmlAnchorDirective,
          input: inputDirective,
          textarea: inputDirective,
          form: formDirective,
          script: scriptDirective,
          select: selectDirective,
          style: styleDirective,
          option: optionDirective,
          ngBind: ngBindDirective,
          ngBindHtml: ngBindHtmlDirective,
          ngBindTemplate: ngBindTemplateDirective,
          ngClass: ngClassDirective,
          ngClassEven: ngClassEvenDirective,
          ngClassOdd: ngClassOddDirective,
          ngCloak: ngCloakDirective,
          ngController: ngControllerDirective,
          ngForm: ngFormDirective,
          ngHide: ngHideDirective,
          ngIf: ngIfDirective,
          ngInclude: ngIncludeDirective,
          ngInit: ngInitDirective,
          ngNonBindable: ngNonBindableDirective,
          ngPluralize: ngPluralizeDirective,
          ngRepeat: ngRepeatDirective,
          ngShow: ngShowDirective,
          ngStyle: ngStyleDirective,
          ngSwitch: ngSwitchDirective,
          ngSwitchWhen: ngSwitchWhenDirective,
          ngSwitchDefault: ngSwitchDefaultDirective,
          ngOptions: ngOptionsDirective,
          ngTransclude: ngTranscludeDirective,
          ngModel: ngModelDirective,
          ngList: ngListDirective,
          ngChange: ngChangeDirective,
          required: requiredDirective,
          ngRequired: requiredDirective,
          ngValue: ngValueDirective
        }).directive({ ngInclude: ngIncludeFillContentDirective }).directive(ngAttributeAliasDirectives).directive(ngEventDirectives);
        $provide.provider({
          $anchorScroll: $AnchorScrollProvider,
          $animate: $AnimateProvider,
          $browser: $BrowserProvider,
          $cacheFactory: $CacheFactoryProvider,
          $controller: $ControllerProvider,
          $document: $DocumentProvider,
          $exceptionHandler: $ExceptionHandlerProvider,
          $filter: $FilterProvider,
          $interpolate: $InterpolateProvider,
          $interval: $IntervalProvider,
          $http: $HttpProvider,
          $httpBackend: $HttpBackendProvider,
          $location: $LocationProvider,
          $log: $LogProvider,
          $parse: $ParseProvider,
          $rootScope: $RootScopeProvider,
          $q: $QProvider,
          $sce: $SceProvider,
          $sceDelegate: $SceDelegateProvider,
          $sniffer: $SnifferProvider,
          $templateCache: $TemplateCacheProvider,
          $timeout: $TimeoutProvider,
          $window: $WindowProvider,
          $$rAF: $$RAFProvider,
          $$asyncCallback: $$AsyncCallbackProvider
        });
      }
    ]);
  }
  /* global JQLitePrototype: true,
  addEventListenerFn: true,
  removeEventListenerFn: true,
  BOOLEAN_ATTR: true
*/
  //////////////////////////////////
  //JQLite
  //////////////////////////////////
  /**
 * @ngdoc function
 * @name angular.element
 * @module ng
 * @kind function
 *
 * @description
 * Wraps a raw DOM element or HTML string as a [jQuery](http://jquery.com) element.
 *
 * If jQuery is available, `angular.element` is an alias for the
 * [jQuery](http://api.jquery.com/jQuery/) function. If jQuery is not available, `angular.element`
 * delegates to Angular's built-in subset of jQuery, called "jQuery lite" or "jqLite."
 *
 * <div class="alert alert-success">jqLite is a tiny, API-compatible subset of jQuery that allows
 * Angular to manipulate the DOM in a cross-browser compatible way. **jqLite** implements only the most
 * commonly needed functionality with the goal of having a very small footprint.</div>
 *
 * To use jQuery, simply load it before `DOMContentLoaded` event fired.
 *
 * <div class="alert">**Note:** all element references in Angular are always wrapped with jQuery or
 * jqLite; they are never raw DOM references.</div>
 *
 * ## Angular's jqLite
 * jqLite provides only the following jQuery methods:
 *
 * - [`addClass()`](http://api.jquery.com/addClass/)
 * - [`after()`](http://api.jquery.com/after/)
 * - [`append()`](http://api.jquery.com/append/)
 * - [`attr()`](http://api.jquery.com/attr/)
 * - [`bind()`](http://api.jquery.com/bind/) - Does not support namespaces, selectors or eventData
 * - [`children()`](http://api.jquery.com/children/) - Does not support selectors
 * - [`clone()`](http://api.jquery.com/clone/)
 * - [`contents()`](http://api.jquery.com/contents/)
 * - [`css()`](http://api.jquery.com/css/) - Only retrieves inline-styles, does not call `getComputedStyles()`
 * - [`data()`](http://api.jquery.com/data/)
 * - [`empty()`](http://api.jquery.com/empty/)
 * - [`eq()`](http://api.jquery.com/eq/)
 * - [`find()`](http://api.jquery.com/find/) - Limited to lookups by tag name
 * - [`hasClass()`](http://api.jquery.com/hasClass/)
 * - [`html()`](http://api.jquery.com/html/)
 * - [`next()`](http://api.jquery.com/next/) - Does not support selectors
 * - [`on()`](http://api.jquery.com/on/) - Does not support namespaces, selectors or eventData
 * - [`off()`](http://api.jquery.com/off/) - Does not support namespaces or selectors
 * - [`one()`](http://api.jquery.com/one/) - Does not support namespaces or selectors
 * - [`parent()`](http://api.jquery.com/parent/) - Does not support selectors
 * - [`prepend()`](http://api.jquery.com/prepend/)
 * - [`prop()`](http://api.jquery.com/prop/)
 * - [`ready()`](http://api.jquery.com/ready/)
 * - [`remove()`](http://api.jquery.com/remove/)
 * - [`removeAttr()`](http://api.jquery.com/removeAttr/)
 * - [`removeClass()`](http://api.jquery.com/removeClass/)
 * - [`removeData()`](http://api.jquery.com/removeData/)
 * - [`replaceWith()`](http://api.jquery.com/replaceWith/)
 * - [`text()`](http://api.jquery.com/text/)
 * - [`toggleClass()`](http://api.jquery.com/toggleClass/)
 * - [`triggerHandler()`](http://api.jquery.com/triggerHandler/) - Passes a dummy event object to handlers.
 * - [`unbind()`](http://api.jquery.com/unbind/) - Does not support namespaces
 * - [`val()`](http://api.jquery.com/val/)
 * - [`wrap()`](http://api.jquery.com/wrap/)
 *
 * ## jQuery/jqLite Extras
 * Angular also provides the following additional methods and events to both jQuery and jqLite:
 *
 * ### Events
 * - `$destroy` - AngularJS intercepts all jqLite/jQuery's DOM destruction apis and fires this event
 *    on all DOM nodes being removed.  This can be used to clean up any 3rd party bindings to the DOM
 *    element before it is removed.
 *
 * ### Methods
 * - `controller(name)` - retrieves the controller of the current element or its parent. By default
 *   retrieves controller associated with the `ngController` directive. If `name` is provided as
 *   camelCase directive name, then the controller for this directive will be retrieved (e.g.
 *   `'ngModel'`).
 * - `injector()` - retrieves the injector of the current element or its parent.
 * - `scope()` - retrieves the {@link ng.$rootScope.Scope scope} of the current
 *   element or its parent.
 * - `isolateScope()` - retrieves an isolate {@link ng.$rootScope.Scope scope} if one is attached directly to the
 *   current element. This getter should be used only on elements that contain a directive which starts a new isolate
 *   scope. Calling `scope()` on this element always returns the original non-isolate scope.
 * - `inheritedData()` - same as `data()`, but walks up the DOM until a value is found or the top
 *   parent element is reached.
 *
 * @param {string|DOMElement} element HTML string or DOMElement to be wrapped into jQuery.
 * @returns {Object} jQuery object.
 */
  JQLite.expando = 'ng339';
  var jqCache = JQLite.cache = {}, jqId = 1, addEventListenerFn = window.document.addEventListener ? function (element, type, fn) {
      element.addEventListener(type, fn, false);
    } : function (element, type, fn) {
      element.attachEvent('on' + type, fn);
    }, removeEventListenerFn = window.document.removeEventListener ? function (element, type, fn) {
      element.removeEventListener(type, fn, false);
    } : function (element, type, fn) {
      element.detachEvent('on' + type, fn);
    };
  /*
 * !!! This is an undocumented "private" function !!!
 */
  var jqData = JQLite._data = function (node) {
      //jQuery always returns an object on cache miss
      return this.cache[node[this.expando]] || {};
    };
  function jqNextId() {
    return ++jqId;
  }
  var SPECIAL_CHARS_REGEXP = /([\:\-\_]+(.))/g;
  var MOZ_HACK_REGEXP = /^moz([A-Z])/;
  var jqLiteMinErr = minErr('jqLite');
  /**
 * Converts snake_case to camelCase.
 * Also there is special case for Moz prefix starting with upper case letter.
 * @param name Name to normalize
 */
  function camelCase(name) {
    return name.replace(SPECIAL_CHARS_REGEXP, function (_, separator, letter, offset) {
      return offset ? letter.toUpperCase() : letter;
    }).replace(MOZ_HACK_REGEXP, 'Moz$1');
  }
  /////////////////////////////////////////////
  // jQuery mutation patch
  //
  // In conjunction with bindJQuery intercepts all jQuery's DOM destruction apis and fires a
  // $destroy event on all DOM nodes being removed.
  //
  /////////////////////////////////////////////
  function jqLitePatchJQueryRemove(name, dispatchThis, filterElems, getterIfNoArguments) {
    var originalJqFn = jQuery.fn[name];
    originalJqFn = originalJqFn.$original || originalJqFn;
    removePatch.$original = originalJqFn;
    jQuery.fn[name] = removePatch;
    function removePatch(param) {
      // jshint -W040
      var list = filterElems && param ? [this.filter(param)] : [this], fireEvent = dispatchThis, set, setIndex, setLength, element, childIndex, childLength, children;
      if (!getterIfNoArguments || param != null) {
        while (list.length) {
          set = list.shift();
          for (setIndex = 0, setLength = set.length; setIndex < setLength; setIndex++) {
            element = jqLite(set[setIndex]);
            if (fireEvent) {
              element.triggerHandler('$destroy');
            } else {
              fireEvent = !fireEvent;
            }
            for (childIndex = 0, childLength = (children = element.children()).length; childIndex < childLength; childIndex++) {
              list.push(jQuery(children[childIndex]));
            }
          }
        }
      }
      return originalJqFn.apply(this, arguments);
    }
  }
  var SINGLE_TAG_REGEXP = /^<(\w+)\s*\/?>(?:<\/\1>|)$/;
  var HTML_REGEXP = /<|&#?\w+;/;
  var TAG_NAME_REGEXP = /<([\w:]+)/;
  var XHTML_TAG_REGEXP = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi;
  var wrapMap = {
      'option': [
        1,
        '<select multiple="multiple">',
        '</select>'
      ],
      'thead': [
        1,
        '<table>',
        '</table>'
      ],
      'col': [
        2,
        '<table><colgroup>',
        '</colgroup></table>'
      ],
      'tr': [
        2,
        '<table><tbody>',
        '</tbody></table>'
      ],
      'td': [
        3,
        '<table><tbody><tr>',
        '</tr></tbody></table>'
      ],
      '_default': [
        0,
        '',
        ''
      ]
    };
  wrapMap.optgroup = wrapMap.option;
  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
  wrapMap.th = wrapMap.td;
  function jqLiteIsTextNode(html) {
    return !HTML_REGEXP.test(html);
  }
  function jqLiteBuildFragment(html, context) {
    var elem, tmp, tag, wrap, fragment = context.createDocumentFragment(), nodes = [], i, j, jj;
    if (jqLiteIsTextNode(html)) {
      // Convert non-html into a text node
      nodes.push(context.createTextNode(html));
    } else {
      tmp = fragment.appendChild(context.createElement('div'));
      // Convert html into DOM nodes
      tag = (TAG_NAME_REGEXP.exec(html) || [
        '',
        ''
      ])[1].toLowerCase();
      wrap = wrapMap[tag] || wrapMap._default;
      tmp.innerHTML = '<div>&#160;</div>' + wrap[1] + html.replace(XHTML_TAG_REGEXP, '<$1></$2>') + wrap[2];
      tmp.removeChild(tmp.firstChild);
      // Descend through wrappers to the right content
      i = wrap[0];
      while (i--) {
        tmp = tmp.lastChild;
      }
      for (j = 0, jj = tmp.childNodes.length; j < jj; ++j)
        nodes.push(tmp.childNodes[j]);
      tmp = fragment.firstChild;
      tmp.textContent = '';
    }
    // Remove wrapper from fragment
    fragment.textContent = '';
    fragment.innerHTML = '';
    // Clear inner HTML
    return nodes;
  }
  function jqLiteParseHTML(html, context) {
    context = context || document;
    var parsed;
    if (parsed = SINGLE_TAG_REGEXP.exec(html)) {
      return [context.createElement(parsed[1])];
    }
    return jqLiteBuildFragment(html, context);
  }
  /////////////////////////////////////////////
  function JQLite(element) {
    if (element instanceof JQLite) {
      return element;
    }
    if (isString(element)) {
      element = trim(element);
    }
    if (!(this instanceof JQLite)) {
      if (isString(element) && element.charAt(0) != '<') {
        throw jqLiteMinErr('nosel', 'Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api/angular.element');
      }
      return new JQLite(element);
    }
    if (isString(element)) {
      jqLiteAddNodes(this, jqLiteParseHTML(element));
      var fragment = jqLite(document.createDocumentFragment());
      fragment.append(this);
    } else {
      jqLiteAddNodes(this, element);
    }
  }
  function jqLiteClone(element) {
    return element.cloneNode(true);
  }
  function jqLiteDealoc(element) {
    jqLiteRemoveData(element);
    for (var i = 0, children = element.childNodes || []; i < children.length; i++) {
      jqLiteDealoc(children[i]);
    }
  }
  function jqLiteOff(element, type, fn, unsupported) {
    if (isDefined(unsupported))
      throw jqLiteMinErr('offargs', 'jqLite#off() does not support the `selector` argument');
    var events = jqLiteExpandoStore(element, 'events'), handle = jqLiteExpandoStore(element, 'handle');
    if (!handle)
      return;
    //no listeners registered
    if (isUndefined(type)) {
      forEach(events, function (eventHandler, type) {
        removeEventListenerFn(element, type, eventHandler);
        delete events[type];
      });
    } else {
      forEach(type.split(' '), function (type) {
        if (isUndefined(fn)) {
          removeEventListenerFn(element, type, events[type]);
          delete events[type];
        } else {
          arrayRemove(events[type] || [], fn);
        }
      });
    }
  }
  function jqLiteRemoveData(element, name) {
    var expandoId = element.ng339, expandoStore = jqCache[expandoId];
    if (expandoStore) {
      if (name) {
        delete jqCache[expandoId].data[name];
        return;
      }
      if (expandoStore.handle) {
        expandoStore.events.$destroy && expandoStore.handle({}, '$destroy');
        jqLiteOff(element);
      }
      delete jqCache[expandoId];
      element.ng339 = undefined;  // don't delete DOM expandos. IE and Chrome don't like it
    }
  }
  function jqLiteExpandoStore(element, key, value) {
    var expandoId = element.ng339, expandoStore = jqCache[expandoId || -1];
    if (isDefined(value)) {
      if (!expandoStore) {
        element.ng339 = expandoId = jqNextId();
        expandoStore = jqCache[expandoId] = {};
      }
      expandoStore[key] = value;
    } else {
      return expandoStore && expandoStore[key];
    }
  }
  function jqLiteData(element, key, value) {
    var data = jqLiteExpandoStore(element, 'data'), isSetter = isDefined(value), keyDefined = !isSetter && isDefined(key), isSimpleGetter = keyDefined && !isObject(key);
    if (!data && !isSimpleGetter) {
      jqLiteExpandoStore(element, 'data', data = {});
    }
    if (isSetter) {
      data[key] = value;
    } else {
      if (keyDefined) {
        if (isSimpleGetter) {
          // don't create data in this case.
          return data && data[key];
        } else {
          extend(data, key);
        }
      } else {
        return data;
      }
    }
  }
  function jqLiteHasClass(element, selector) {
    if (!element.getAttribute)
      return false;
    return (' ' + (element.getAttribute('class') || '') + ' ').replace(/[\n\t]/g, ' ').indexOf(' ' + selector + ' ') > -1;
  }
  function jqLiteRemoveClass(element, cssClasses) {
    if (cssClasses && element.setAttribute) {
      forEach(cssClasses.split(' '), function (cssClass) {
        element.setAttribute('class', trim((' ' + (element.getAttribute('class') || '') + ' ').replace(/[\n\t]/g, ' ').replace(' ' + trim(cssClass) + ' ', ' ')));
      });
    }
  }
  function jqLiteAddClass(element, cssClasses) {
    if (cssClasses && element.setAttribute) {
      var existingClasses = (' ' + (element.getAttribute('class') || '') + ' ').replace(/[\n\t]/g, ' ');
      forEach(cssClasses.split(' '), function (cssClass) {
        cssClass = trim(cssClass);
        if (existingClasses.indexOf(' ' + cssClass + ' ') === -1) {
          existingClasses += cssClass + ' ';
        }
      });
      element.setAttribute('class', trim(existingClasses));
    }
  }
  function jqLiteAddNodes(root, elements) {
    if (elements) {
      elements = !elements.nodeName && isDefined(elements.length) && !isWindow(elements) ? elements : [elements];
      for (var i = 0; i < elements.length; i++) {
        root.push(elements[i]);
      }
    }
  }
  function jqLiteController(element, name) {
    return jqLiteInheritedData(element, '$' + (name || 'ngController') + 'Controller');
  }
  function jqLiteInheritedData(element, name, value) {
    // if element is the document object work with the html element instead
    // this makes $(document).scope() possible
    if (element.nodeType == 9) {
      element = element.documentElement;
    }
    var names = isArray(name) ? name : [name];
    while (element) {
      for (var i = 0, ii = names.length; i < ii; i++) {
        if ((value = jqLite.data(element, names[i])) !== undefined)
          return value;
      }
      // If dealing with a document fragment node with a host element, and no parent, use the host
      // element as the parent. This enables directives within a Shadow DOM or polyfilled Shadow DOM
      // to lookup parent controllers.
      element = element.parentNode || element.nodeType === 11 && element.host;
    }
  }
  function jqLiteEmpty(element) {
    for (var i = 0, childNodes = element.childNodes; i < childNodes.length; i++) {
      jqLiteDealoc(childNodes[i]);
    }
    while (element.firstChild) {
      element.removeChild(element.firstChild);
    }
  }
  //////////////////////////////////////////
  // Functions which are declared directly.
  //////////////////////////////////////////
  var JQLitePrototype = JQLite.prototype = {
      ready: function (fn) {
        var fired = false;
        function trigger() {
          if (fired)
            return;
          fired = true;
          fn();
        }
        // check if document already is loaded
        if (document.readyState === 'complete') {
          setTimeout(trigger);
        } else {
          this.on('DOMContentLoaded', trigger);
          // works for modern browsers and IE9
          // we can not use jqLite since we are not done loading and jQuery could be loaded later.
          // jshint -W064
          JQLite(window).on('load', trigger);  // fallback to window.onload for others
                                               // jshint +W064
        }
      },
      toString: function () {
        var value = [];
        forEach(this, function (e) {
          value.push('' + e);
        });
        return '[' + value.join(', ') + ']';
      },
      eq: function (index) {
        return index >= 0 ? jqLite(this[index]) : jqLite(this[this.length + index]);
      },
      length: 0,
      push: push,
      sort: [].sort,
      splice: [].splice
    };
  //////////////////////////////////////////
  // Functions iterating getter/setters.
  // these functions return self on setter and
  // value on get.
  //////////////////////////////////////////
  var BOOLEAN_ATTR = {};
  forEach('multiple,selected,checked,disabled,readOnly,required,open'.split(','), function (value) {
    BOOLEAN_ATTR[lowercase(value)] = value;
  });
  var BOOLEAN_ELEMENTS = {};
  forEach('input,select,option,textarea,button,form,details'.split(','), function (value) {
    BOOLEAN_ELEMENTS[uppercase(value)] = true;
  });
  function getBooleanAttrName(element, name) {
    // check dom last since we will most likely fail on name
    var booleanAttr = BOOLEAN_ATTR[name.toLowerCase()];
    // booleanAttr is here twice to minimize DOM access
    return booleanAttr && BOOLEAN_ELEMENTS[element.nodeName] && booleanAttr;
  }
  forEach({
    data: jqLiteData,
    removeData: jqLiteRemoveData
  }, function (fn, name) {
    JQLite[name] = fn;
  });
  forEach({
    data: jqLiteData,
    inheritedData: jqLiteInheritedData,
    scope: function (element) {
      // Can't use jqLiteData here directly so we stay compatible with jQuery!
      return jqLite.data(element, '$scope') || jqLiteInheritedData(element.parentNode || element, [
        '$isolateScope',
        '$scope'
      ]);
    },
    isolateScope: function (element) {
      // Can't use jqLiteData here directly so we stay compatible with jQuery!
      return jqLite.data(element, '$isolateScope') || jqLite.data(element, '$isolateScopeNoTemplate');
    },
    controller: jqLiteController,
    injector: function (element) {
      return jqLiteInheritedData(element, '$injector');
    },
    removeAttr: function (element, name) {
      element.removeAttribute(name);
    },
    hasClass: jqLiteHasClass,
    css: function (element, name, value) {
      name = camelCase(name);
      if (isDefined(value)) {
        element.style[name] = value;
      } else {
        var val;
        if (msie <= 8) {
          // this is some IE specific weirdness that jQuery 1.6.4 does not sure why
          val = element.currentStyle && element.currentStyle[name];
          if (val === '')
            val = 'auto';
        }
        val = val || element.style[name];
        if (msie <= 8) {
          // jquery weirdness :-/
          val = val === '' ? undefined : val;
        }
        return val;
      }
    },
    attr: function (element, name, value) {
      var lowercasedName = lowercase(name);
      if (BOOLEAN_ATTR[lowercasedName]) {
        if (isDefined(value)) {
          if (!!value) {
            element[name] = true;
            element.setAttribute(name, lowercasedName);
          } else {
            element[name] = false;
            element.removeAttribute(lowercasedName);
          }
        } else {
          return element[name] || (element.attributes.getNamedItem(name) || noop).specified ? lowercasedName : undefined;
        }
      } else if (isDefined(value)) {
        element.setAttribute(name, value);
      } else if (element.getAttribute) {
        // the extra argument "2" is to get the right thing for a.href in IE, see jQuery code
        // some elements (e.g. Document) don't have get attribute, so return undefined
        var ret = element.getAttribute(name, 2);
        // normalize non-existing attributes to undefined (as jQuery)
        return ret === null ? undefined : ret;
      }
    },
    prop: function (element, name, value) {
      if (isDefined(value)) {
        element[name] = value;
      } else {
        return element[name];
      }
    },
    text: function () {
      var NODE_TYPE_TEXT_PROPERTY = [];
      if (msie < 9) {
        NODE_TYPE_TEXT_PROPERTY[1] = 'innerText';
        /** Element **/
        NODE_TYPE_TEXT_PROPERTY[3] = 'nodeValue';  /** Text **/
      } else {
        NODE_TYPE_TEXT_PROPERTY[1] = NODE_TYPE_TEXT_PROPERTY[3] = 'textContent';  /** Text **/
      }
      getText.$dv = '';
      return getText;
      function getText(element, value) {
        var textProp = NODE_TYPE_TEXT_PROPERTY[element.nodeType];
        if (isUndefined(value)) {
          return textProp ? element[textProp] : '';
        }
        element[textProp] = value;
      }
    }(),
    val: function (element, value) {
      if (isUndefined(value)) {
        if (nodeName_(element) === 'SELECT' && element.multiple) {
          var result = [];
          forEach(element.options, function (option) {
            if (option.selected) {
              result.push(option.value || option.text);
            }
          });
          return result.length === 0 ? null : result;
        }
        return element.value;
      }
      element.value = value;
    },
    html: function (element, value) {
      if (isUndefined(value)) {
        return element.innerHTML;
      }
      for (var i = 0, childNodes = element.childNodes; i < childNodes.length; i++) {
        jqLiteDealoc(childNodes[i]);
      }
      element.innerHTML = value;
    },
    empty: jqLiteEmpty
  }, function (fn, name) {
    /**
   * Properties: writes return selection, reads return first value
   */
    JQLite.prototype[name] = function (arg1, arg2) {
      var i, key;
      var nodeCount = this.length;
      // jqLiteHasClass has only two arguments, but is a getter-only fn, so we need to special-case it
      // in a way that survives minification.
      // jqLiteEmpty takes no arguments but is a setter.
      if (fn !== jqLiteEmpty && (fn.length == 2 && (fn !== jqLiteHasClass && fn !== jqLiteController) ? arg1 : arg2) === undefined) {
        if (isObject(arg1)) {
          // we are a write, but the object properties are the key/values
          for (i = 0; i < nodeCount; i++) {
            if (fn === jqLiteData) {
              // data() takes the whole object in jQuery
              fn(this[i], arg1);
            } else {
              for (key in arg1) {
                fn(this[i], key, arg1[key]);
              }
            }
          }
          // return self for chaining
          return this;
        } else {
          // we are a read, so read the first child.
          // TODO: do we still need this?
          var value = fn.$dv;
          // Only if we have $dv do we iterate over all, otherwise it is just the first element.
          var jj = value === undefined ? Math.min(nodeCount, 1) : nodeCount;
          for (var j = 0; j < jj; j++) {
            var nodeValue = fn(this[j], arg1, arg2);
            value = value ? value + nodeValue : nodeValue;
          }
          return value;
        }
      } else {
        // we are a write, so apply to all children
        for (i = 0; i < nodeCount; i++) {
          fn(this[i], arg1, arg2);
        }
        // return self for chaining
        return this;
      }
    };
  });
  function createEventHandler(element, events) {
    var eventHandler = function (event, type) {
      if (!event.preventDefault) {
        event.preventDefault = function () {
          event.returnValue = false;  //ie
        };
      }
      if (!event.stopPropagation) {
        event.stopPropagation = function () {
          event.cancelBubble = true;  //ie
        };
      }
      if (!event.target) {
        event.target = event.srcElement || document;
      }
      if (isUndefined(event.defaultPrevented)) {
        var prevent = event.preventDefault;
        event.preventDefault = function () {
          event.defaultPrevented = true;
          prevent.call(event);
        };
        event.defaultPrevented = false;
      }
      event.isDefaultPrevented = function () {
        return event.defaultPrevented || event.returnValue === false;
      };
      // Copy event handlers in case event handlers array is modified during execution.
      var eventHandlersCopy = shallowCopy(events[type || event.type] || []);
      forEach(eventHandlersCopy, function (fn) {
        fn.call(element, event);
      });
      // Remove monkey-patched methods (IE),
      // as they would cause memory leaks in IE8.
      if (msie <= 8) {
        // IE7/8 does not allow to delete property on native object
        event.preventDefault = null;
        event.stopPropagation = null;
        event.isDefaultPrevented = null;
      } else {
        // It shouldn't affect normal browsers (native methods are defined on prototype).
        delete event.preventDefault;
        delete event.stopPropagation;
        delete event.isDefaultPrevented;
      }
    };
    eventHandler.elem = element;
    return eventHandler;
  }
  //////////////////////////////////////////
  // Functions iterating traversal.
  // These functions chain results into a single
  // selector.
  //////////////////////////////////////////
  forEach({
    removeData: jqLiteRemoveData,
    dealoc: jqLiteDealoc,
    on: function onFn(element, type, fn, unsupported) {
      if (isDefined(unsupported))
        throw jqLiteMinErr('onargs', 'jqLite#on() does not support the `selector` or `eventData` parameters');
      var events = jqLiteExpandoStore(element, 'events'), handle = jqLiteExpandoStore(element, 'handle');
      if (!events)
        jqLiteExpandoStore(element, 'events', events = {});
      if (!handle)
        jqLiteExpandoStore(element, 'handle', handle = createEventHandler(element, events));
      forEach(type.split(' '), function (type) {
        var eventFns = events[type];
        if (!eventFns) {
          if (type == 'mouseenter' || type == 'mouseleave') {
            var contains = document.body.contains || document.body.compareDocumentPosition ? function (a, b) {
                // jshint bitwise: false
                var adown = a.nodeType === 9 ? a.documentElement : a, bup = b && b.parentNode;
                return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
              } : function (a, b) {
                if (b) {
                  while (b = b.parentNode) {
                    if (b === a) {
                      return true;
                    }
                  }
                }
                return false;
              };
            events[type] = [];
            // Refer to jQuery's implementation of mouseenter & mouseleave
            // Read about mouseenter and mouseleave:
            // http://www.quirksmode.org/js/events_mouse.html#link8
            var eventmap = {
                mouseleave: 'mouseout',
                mouseenter: 'mouseover'
              };
            onFn(element, eventmap[type], function (event) {
              var target = this, related = event.relatedTarget;
              // For mousenter/leave call the handler if related is outside the target.
              // NB: No relatedTarget if the mouse left/entered the browser window
              if (!related || related !== target && !contains(target, related)) {
                handle(event, type);
              }
            });
          } else {
            addEventListenerFn(element, type, handle);
            events[type] = [];
          }
          eventFns = events[type];
        }
        eventFns.push(fn);
      });
    },
    off: jqLiteOff,
    one: function (element, type, fn) {
      element = jqLite(element);
      //add the listener twice so that when it is called
      //you can remove the original function and still be
      //able to call element.off(ev, fn) normally
      element.on(type, function onFn() {
        element.off(type, fn);
        element.off(type, onFn);
      });
      element.on(type, fn);
    },
    replaceWith: function (element, replaceNode) {
      var index, parent = element.parentNode;
      jqLiteDealoc(element);
      forEach(new JQLite(replaceNode), function (node) {
        if (index) {
          parent.insertBefore(node, index.nextSibling);
        } else {
          parent.replaceChild(node, element);
        }
        index = node;
      });
    },
    children: function (element) {
      var children = [];
      forEach(element.childNodes, function (element) {
        if (element.nodeType === 1)
          children.push(element);
      });
      return children;
    },
    contents: function (element) {
      return element.contentDocument || element.childNodes || [];
    },
    append: function (element, node) {
      forEach(new JQLite(node), function (child) {
        if (element.nodeType === 1 || element.nodeType === 11) {
          element.appendChild(child);
        }
      });
    },
    prepend: function (element, node) {
      if (element.nodeType === 1) {
        var index = element.firstChild;
        forEach(new JQLite(node), function (child) {
          element.insertBefore(child, index);
        });
      }
    },
    wrap: function (element, wrapNode) {
      wrapNode = jqLite(wrapNode)[0];
      var parent = element.parentNode;
      if (parent) {
        parent.replaceChild(wrapNode, element);
      }
      wrapNode.appendChild(element);
    },
    remove: function (element) {
      jqLiteDealoc(element);
      var parent = element.parentNode;
      if (parent)
        parent.removeChild(element);
    },
    after: function (element, newElement) {
      var index = element, parent = element.parentNode;
      forEach(new JQLite(newElement), function (node) {
        parent.insertBefore(node, index.nextSibling);
        index = node;
      });
    },
    addClass: jqLiteAddClass,
    removeClass: jqLiteRemoveClass,
    toggleClass: function (element, selector, condition) {
      if (selector) {
        forEach(selector.split(' '), function (className) {
          var classCondition = condition;
          if (isUndefined(classCondition)) {
            classCondition = !jqLiteHasClass(element, className);
          }
          (classCondition ? jqLiteAddClass : jqLiteRemoveClass)(element, className);
        });
      }
    },
    parent: function (element) {
      var parent = element.parentNode;
      return parent && parent.nodeType !== 11 ? parent : null;
    },
    next: function (element) {
      if (element.nextElementSibling) {
        return element.nextElementSibling;
      }
      // IE8 doesn't have nextElementSibling
      var elm = element.nextSibling;
      while (elm != null && elm.nodeType !== 1) {
        elm = elm.nextSibling;
      }
      return elm;
    },
    find: function (element, selector) {
      if (element.getElementsByTagName) {
        return element.getElementsByTagName(selector);
      } else {
        return [];
      }
    },
    clone: jqLiteClone,
    triggerHandler: function (element, event, extraParameters) {
      var dummyEvent, eventFnsCopy, handlerArgs;
      var eventName = event.type || event;
      var eventFns = (jqLiteExpandoStore(element, 'events') || {})[eventName];
      if (eventFns) {
        // Create a dummy event to pass to the handlers
        dummyEvent = {
          preventDefault: function () {
            this.defaultPrevented = true;
          },
          isDefaultPrevented: function () {
            return this.defaultPrevented === true;
          },
          stopPropagation: noop,
          type: eventName,
          target: element
        };
        // If a custom event was provided then extend our dummy event with it
        if (event.type) {
          dummyEvent = extend(dummyEvent, event);
        }
        // Copy event handlers in case event handlers array is modified during execution.
        eventFnsCopy = shallowCopy(eventFns);
        handlerArgs = extraParameters ? [dummyEvent].concat(extraParameters) : [dummyEvent];
        forEach(eventFnsCopy, function (fn) {
          fn.apply(element, handlerArgs);
        });
      }
    }
  }, function (fn, name) {
    /**
   * chaining functions
   */
    JQLite.prototype[name] = function (arg1, arg2, arg3) {
      var value;
      for (var i = 0; i < this.length; i++) {
        if (isUndefined(value)) {
          value = fn(this[i], arg1, arg2, arg3);
          if (isDefined(value)) {
            // any function which returns a value needs to be wrapped
            value = jqLite(value);
          }
        } else {
          jqLiteAddNodes(value, fn(this[i], arg1, arg2, arg3));
        }
      }
      return isDefined(value) ? value : this;
    };
    // bind legacy bind/unbind to on/off
    JQLite.prototype.bind = JQLite.prototype.on;
    JQLite.prototype.unbind = JQLite.prototype.off;
  });
  /**
 * Computes a hash of an 'obj'.
 * Hash of a:
 *  string is string
 *  number is number as string
 *  object is either result of calling $$hashKey function on the object or uniquely generated id,
 *         that is also assigned to the $$hashKey property of the object.
 *
 * @param obj
 * @returns {string} hash string such that the same input will have the same hash string.
 *         The resulting string key is in 'type:hashKey' format.
 */
  function hashKey(obj, nextUidFn) {
    var objType = typeof obj, key;
    if (objType == 'function' || objType == 'object' && obj !== null) {
      if (typeof (key = obj.$$hashKey) == 'function') {
        // must invoke on object to keep the right this
        key = obj.$$hashKey();
      } else if (key === undefined) {
        key = obj.$$hashKey = (nextUidFn || nextUid)();
      }
    } else {
      key = obj;
    }
    return objType + ':' + key;
  }
  /**
 * HashMap which can use objects as keys
 */
  function HashMap(array, isolatedUid) {
    if (isolatedUid) {
      var uid = 0;
      this.nextUid = function () {
        return ++uid;
      };
    }
    forEach(array, this.put, this);
  }
  HashMap.prototype = {
    put: function (key, value) {
      this[hashKey(key, this.nextUid)] = value;
    },
    get: function (key) {
      return this[hashKey(key, this.nextUid)];
    },
    remove: function (key) {
      var value = this[key = hashKey(key, this.nextUid)];
      delete this[key];
      return value;
    }
  };
  /**
 * @ngdoc function
 * @module ng
 * @name angular.injector
 * @kind function
 *
 * @description
 * Creates an injector object that can be used for retrieving services as well as for
 * dependency injection (see {@link guide/di dependency injection}).
 *

 * @param {Array.<string|Function>} modules A list of module functions or their aliases. See
 *        {@link angular.module}. The `ng` module must be explicitly added.
 * @returns {injector} Injector object. See {@link auto.$injector $injector}.
 *
 * @example
 * Typical usage
 * ```js
 *   // create an injector
 *   var $injector = angular.injector(['ng']);
 *
 *   // use the injector to kick off your application
 *   // use the type inference to auto inject arguments, or use implicit injection
 *   $injector.invoke(function($rootScope, $compile, $document){
 *     $compile($document)($rootScope);
 *     $rootScope.$digest();
 *   });
 * ```
 *
 * Sometimes you want to get access to the injector of a currently running Angular app
 * from outside Angular. Perhaps, you want to inject and compile some markup after the
 * application has been bootstrapped. You can do this using the extra `injector()` added
 * to JQuery/jqLite elements. See {@link angular.element}.
 *
 * *This is fairly rare but could be the case if a third party library is injecting the
 * markup.*
 *
 * In the following example a new block of HTML containing a `ng-controller`
 * directive is added to the end of the document body by JQuery. We then compile and link
 * it into the current AngularJS scope.
 *
 * ```js
 * var $div = $('<div ng-controller="MyCtrl">{{content.label}}</div>');
 * $(document.body).append($div);
 *
 * angular.element(document).injector().invoke(function($compile) {
 *   var scope = angular.element($div).scope();
 *   $compile($div)(scope);
 * });
 * ```
 */
  /**
 * @ngdoc module
 * @name auto
 * @description
 *
 * Implicit module which gets automatically added to each {@link auto.$injector $injector}.
 */
  var FN_ARGS = /^function\s*[^\(]*\(\s*([^\)]*)\)/m;
  var FN_ARG_SPLIT = /,/;
  var FN_ARG = /^\s*(_?)(\S+?)\1\s*$/;
  var STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm;
  var $injectorMinErr = minErr('$injector');
  function annotate(fn) {
    var $inject, fnText, argDecl, last;
    if (typeof fn === 'function') {
      if (!($inject = fn.$inject)) {
        $inject = [];
        if (fn.length) {
          fnText = fn.toString().replace(STRIP_COMMENTS, '');
          argDecl = fnText.match(FN_ARGS);
          forEach(argDecl[1].split(FN_ARG_SPLIT), function (arg) {
            arg.replace(FN_ARG, function (all, underscore, name) {
              $inject.push(name);
            });
          });
        }
        fn.$inject = $inject;
      }
    } else if (isArray(fn)) {
      last = fn.length - 1;
      assertArgFn(fn[last], 'fn');
      $inject = fn.slice(0, last);
    } else {
      assertArgFn(fn, 'fn', true);
    }
    return $inject;
  }
  ///////////////////////////////////////
  /**
 * @ngdoc service
 * @name $injector
 *
 * @description
 *
 * `$injector` is used to retrieve object instances as defined by
 * {@link auto.$provide provider}, instantiate types, invoke methods,
 * and load modules.
 *
 * The following always holds true:
 *
 * ```js
 *   var $injector = angular.injector();
 *   expect($injector.get('$injector')).toBe($injector);
 *   expect($injector.invoke(function($injector){
 *     return $injector;
 *   })).toBe($injector);
 * ```
 *
 * # Injection Function Annotation
 *
 * JavaScript does not have annotations, and annotations are needed for dependency injection. The
 * following are all valid ways of annotating function with injection arguments and are equivalent.
 *
 * ```js
 *   // inferred (only works if code not minified/obfuscated)
 *   $injector.invoke(function(serviceA){});
 *
 *   // annotated
 *   function explicit(serviceA) {};
 *   explicit.$inject = ['serviceA'];
 *   $injector.invoke(explicit);
 *
 *   // inline
 *   $injector.invoke(['serviceA', function(serviceA){}]);
 * ```
 *
 * ## Inference
 *
 * In JavaScript calling `toString()` on a function returns the function definition. The definition
 * can then be parsed and the function arguments can be extracted. *NOTE:* This does not work with
 * minification, and obfuscation tools since these tools change the argument names.
 *
 * ## `$inject` Annotation
 * By adding an `$inject` property onto a function the injection parameters can be specified.
 *
 * ## Inline
 * As an array of injection names, where the last item in the array is the function to call.
 */
  /**
 * @ngdoc method
 * @name $injector#get
 *
 * @description
 * Return an instance of the service.
 *
 * @param {string} name The name of the instance to retrieve.
 * @return {*} The instance.
 */
  /**
 * @ngdoc method
 * @name $injector#invoke
 *
 * @description
 * Invoke the method and supply the method arguments from the `$injector`.
 *
 * @param {!Function} fn The function to invoke. Function parameters are injected according to the
 *   {@link guide/di $inject Annotation} rules.
 * @param {Object=} self The `this` for the invoked method.
 * @param {Object=} locals Optional object. If preset then any argument names are read from this
 *                         object first, before the `$injector` is consulted.
 * @returns {*} the value returned by the invoked `fn` function.
 */
  /**
 * @ngdoc method
 * @name $injector#has
 *
 * @description
 * Allows the user to query if the particular service exists.
 *
 * @param {string} name Name of the service to query.
 * @returns {boolean} `true` if injector has given service.
 */
  /**
 * @ngdoc method
 * @name $injector#instantiate
 * @description
 * Create a new instance of JS type. The method takes a constructor function, invokes the new
 * operator, and supplies all of the arguments to the constructor function as specified by the
 * constructor annotation.
 *
 * @param {Function} Type Annotated constructor function.
 * @param {Object=} locals Optional object. If preset then any argument names are read from this
 * object first, before the `$injector` is consulted.
 * @returns {Object} new instance of `Type`.
 */
  /**
 * @ngdoc method
 * @name $injector#annotate
 *
 * @description
 * Returns an array of service names which the function is requesting for injection. This API is
 * used by the injector to determine which services need to be injected into the function when the
 * function is invoked. There are three ways in which the function can be annotated with the needed
 * dependencies.
 *
 * # Argument names
 *
 * The simplest form is to extract the dependencies from the arguments of the function. This is done
 * by converting the function into a string using `toString()` method and extracting the argument
 * names.
 * ```js
 *   // Given
 *   function MyController($scope, $route) {
 *     // ...
 *   }
 *
 *   // Then
 *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);
 * ```
 *
 * This method does not work with code minification / obfuscation. For this reason the following
 * annotation strategies are supported.
 *
 * # The `$inject` property
 *
 * If a function has an `$inject` property and its value is an array of strings, then the strings
 * represent names of services to be injected into the function.
 * ```js
 *   // Given
 *   var MyController = function(obfuscatedScope, obfuscatedRoute) {
 *     // ...
 *   }
 *   // Define function dependencies
 *   MyController['$inject'] = ['$scope', '$route'];
 *
 *   // Then
 *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);
 * ```
 *
 * # The array notation
 *
 * It is often desirable to inline Injected functions and that's when setting the `$inject` property
 * is very inconvenient. In these situations using the array notation to specify the dependencies in
 * a way that survives minification is a better choice:
 *
 * ```js
 *   // We wish to write this (not minification / obfuscation safe)
 *   injector.invoke(function($compile, $rootScope) {
 *     // ...
 *   });
 *
 *   // We are forced to write break inlining
 *   var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {
 *     // ...
 *   };
 *   tmpFn.$inject = ['$compile', '$rootScope'];
 *   injector.invoke(tmpFn);
 *
 *   // To better support inline function the inline annotation is supported
 *   injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {
 *     // ...
 *   }]);
 *
 *   // Therefore
 *   expect(injector.annotate(
 *      ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])
 *    ).toEqual(['$compile', '$rootScope']);
 * ```
 *
 * @param {Function|Array.<string|Function>} fn Function for which dependent service names need to
 * be retrieved as described above.
 *
 * @returns {Array.<string>} The names of the services which the function requires.
 */
  /**
 * @ngdoc service
 * @name $provide
 *
 * @description
 *
 * The {@link auto.$provide $provide} service has a number of methods for registering components
 * with the {@link auto.$injector $injector}. Many of these functions are also exposed on
 * {@link angular.Module}.
 *
 * An Angular **service** is a singleton object created by a **service factory**.  These **service
 * factories** are functions which, in turn, are created by a **service provider**.
 * The **service providers** are constructor functions. When instantiated they must contain a
 * property called `$get`, which holds the **service factory** function.
 *
 * When you request a service, the {@link auto.$injector $injector} is responsible for finding the
 * correct **service provider**, instantiating it and then calling its `$get` **service factory**
 * function to get the instance of the **service**.
 *
 * Often services have no configuration options and there is no need to add methods to the service
 * provider.  The provider will be no more than a constructor function with a `$get` property. For
 * these cases the {@link auto.$provide $provide} service has additional helper methods to register
 * services without specifying a provider.
 *
 * * {@link auto.$provide#provider provider(provider)} - registers a **service provider** with the
 *     {@link auto.$injector $injector}
 * * {@link auto.$provide#constant constant(obj)} - registers a value/object that can be accessed by
 *     providers and services.
 * * {@link auto.$provide#value value(obj)} - registers a value/object that can only be accessed by
 *     services, not providers.
 * * {@link auto.$provide#factory factory(fn)} - registers a service **factory function**, `fn`,
 *     that will be wrapped in a **service provider** object, whose `$get` property will contain the
 *     given factory function.
 * * {@link auto.$provide#service service(class)} - registers a **constructor function**, `class`
 *     that will be wrapped in a **service provider** object, whose `$get` property will instantiate
 *      a new object using the given constructor function.
 *
 * See the individual methods for more information and examples.
 */
  /**
 * @ngdoc method
 * @name $provide#provider
 * @description
 *
 * Register a **provider function** with the {@link auto.$injector $injector}. Provider functions
 * are constructor functions, whose instances are responsible for "providing" a factory for a
 * service.
 *
 * Service provider names start with the name of the service they provide followed by `Provider`.
 * For example, the {@link ng.$log $log} service has a provider called
 * {@link ng.$logProvider $logProvider}.
 *
 * Service provider objects can have additional methods which allow configuration of the provider
 * and its service. Importantly, you can configure what kind of service is created by the `$get`
 * method, or how that service will act. For example, the {@link ng.$logProvider $logProvider} has a
 * method {@link ng.$logProvider#debugEnabled debugEnabled}
 * which lets you specify whether the {@link ng.$log $log} service will log debug messages to the
 * console or not.
 *
 * @param {string} name The name of the instance. NOTE: the provider will be available under `name +
                        'Provider'` key.
 * @param {(Object|function())} provider If the provider is:
 *
 *   - `Object`: then it should have a `$get` method. The `$get` method will be invoked using
 *     {@link auto.$injector#invoke $injector.invoke()} when an instance needs to be created.
 *   - `Constructor`: a new instance of the provider will be created using
 *     {@link auto.$injector#instantiate $injector.instantiate()}, then treated as `object`.
 *
 * @returns {Object} registered provider instance

 * @example
 *
 * The following example shows how to create a simple event tracking service and register it using
 * {@link auto.$provide#provider $provide.provider()}.
 *
 * ```js
 *  // Define the eventTracker provider
 *  function EventTrackerProvider() {
 *    var trackingUrl = '/track';
 *
 *    // A provider method for configuring where the tracked events should been saved
 *    this.setTrackingUrl = function(url) {
 *      trackingUrl = url;
 *    };
 *
 *    // The service factory function
 *    this.$get = ['$http', function($http) {
 *      var trackedEvents = {};
 *      return {
 *        // Call this to track an event
 *        event: function(event) {
 *          var count = trackedEvents[event] || 0;
 *          count += 1;
 *          trackedEvents[event] = count;
 *          return count;
 *        },
 *        // Call this to save the tracked events to the trackingUrl
 *        save: function() {
 *          $http.post(trackingUrl, trackedEvents);
 *        }
 *      };
 *    }];
 *  }
 *
 *  describe('eventTracker', function() {
 *    var postSpy;
 *
 *    beforeEach(module(function($provide) {
 *      // Register the eventTracker provider
 *      $provide.provider('eventTracker', EventTrackerProvider);
 *    }));
 *
 *    beforeEach(module(function(eventTrackerProvider) {
 *      // Configure eventTracker provider
 *      eventTrackerProvider.setTrackingUrl('/custom-track');
 *    }));
 *
 *    it('tracks events', inject(function(eventTracker) {
 *      expect(eventTracker.event('login')).toEqual(1);
 *      expect(eventTracker.event('login')).toEqual(2);
 *    }));
 *
 *    it('saves to the tracking url', inject(function(eventTracker, $http) {
 *      postSpy = spyOn($http, 'post');
 *      eventTracker.event('login');
 *      eventTracker.save();
 *      expect(postSpy).toHaveBeenCalled();
 *      expect(postSpy.mostRecentCall.args[0]).not.toEqual('/track');
 *      expect(postSpy.mostRecentCall.args[0]).toEqual('/custom-track');
 *      expect(postSpy.mostRecentCall.args[1]).toEqual({ 'login': 1 });
 *    }));
 *  });
 * ```
 */
  /**
 * @ngdoc method
 * @name $provide#factory
 * @description
 *
 * Register a **service factory**, which will be called to return the service instance.
 * This is short for registering a service where its provider consists of only a `$get` property,
 * which is the given service factory function.
 * You should use {@link auto.$provide#factory $provide.factory(getFn)} if you do not need to
 * configure your service in a provider.
 *
 * @param {string} name The name of the instance.
 * @param {function()} $getFn The $getFn for the instance creation. Internally this is a short hand
 *                            for `$provide.provider(name, {$get: $getFn})`.
 * @returns {Object} registered provider instance
 *
 * @example
 * Here is an example of registering a service
 * ```js
 *   $provide.factory('ping', ['$http', function($http) {
 *     return function ping() {
 *       return $http.send('/ping');
 *     };
 *   }]);
 * ```
 * You would then inject and use this service like this:
 * ```js
 *   someModule.controller('Ctrl', ['ping', function(ping) {
 *     ping();
 *   }]);
 * ```
 */
  /**
 * @ngdoc method
 * @name $provide#service
 * @description
 *
 * Register a **service constructor**, which will be invoked with `new` to create the service
 * instance.
 * This is short for registering a service where its provider's `$get` property is the service
 * constructor function that will be used to instantiate the service instance.
 *
 * You should use {@link auto.$provide#service $provide.service(class)} if you define your service
 * as a type/class.
 *
 * @param {string} name The name of the instance.
 * @param {Function} constructor A class (constructor function) that will be instantiated.
 * @returns {Object} registered provider instance
 *
 * @example
 * Here is an example of registering a service using
 * {@link auto.$provide#service $provide.service(class)}.
 * ```js
 *   var Ping = function($http) {
 *     this.$http = $http;
 *   };
 *
 *   Ping.$inject = ['$http'];
 *
 *   Ping.prototype.send = function() {
 *     return this.$http.get('/ping');
 *   };
 *   $provide.service('ping', Ping);
 * ```
 * You would then inject and use this service like this:
 * ```js
 *   someModule.controller('Ctrl', ['ping', function(ping) {
 *     ping.send();
 *   }]);
 * ```
 */
  /**
 * @ngdoc method
 * @name $provide#value
 * @description
 *
 * Register a **value service** with the {@link auto.$injector $injector}, such as a string, a
 * number, an array, an object or a function.  This is short for registering a service where its
 * provider's `$get` property is a factory function that takes no arguments and returns the **value
 * service**.
 *
 * Value services are similar to constant services, except that they cannot be injected into a
 * module configuration function (see {@link angular.Module#config}) but they can be overridden by
 * an Angular
 * {@link auto.$provide#decorator decorator}.
 *
 * @param {string} name The name of the instance.
 * @param {*} value The value.
 * @returns {Object} registered provider instance
 *
 * @example
 * Here are some examples of creating value services.
 * ```js
 *   $provide.value('ADMIN_USER', 'admin');
 *
 *   $provide.value('RoleLookup', { admin: 0, writer: 1, reader: 2 });
 *
 *   $provide.value('halfOf', function(value) {
 *     return value / 2;
 *   });
 * ```
 */
  /**
 * @ngdoc method
 * @name $provide#constant
 * @description
 *
 * Register a **constant service**, such as a string, a number, an array, an object or a function,
 * with the {@link auto.$injector $injector}. Unlike {@link auto.$provide#value value} it can be
 * injected into a module configuration function (see {@link angular.Module#config}) and it cannot
 * be overridden by an Angular {@link auto.$provide#decorator decorator}.
 *
 * @param {string} name The name of the constant.
 * @param {*} value The constant value.
 * @returns {Object} registered instance
 *
 * @example
 * Here a some examples of creating constants:
 * ```js
 *   $provide.constant('SHARD_HEIGHT', 306);
 *
 *   $provide.constant('MY_COLOURS', ['red', 'blue', 'grey']);
 *
 *   $provide.constant('double', function(value) {
 *     return value * 2;
 *   });
 * ```
 */
  /**
 * @ngdoc method
 * @name $provide#decorator
 * @description
 *
 * Register a **service decorator** with the {@link auto.$injector $injector}. A service decorator
 * intercepts the creation of a service, allowing it to override or modify the behaviour of the
 * service. The object returned by the decorator may be the original service, or a new service
 * object which replaces or wraps and delegates to the original service.
 *
 * @param {string} name The name of the service to decorate.
 * @param {function()} decorator This function will be invoked when the service needs to be
 *    instantiated and should return the decorated service instance. The function is called using
 *    the {@link auto.$injector#invoke injector.invoke} method and is therefore fully injectable.
 *    Local injection arguments:
 *
 *    * `$delegate` - The original service instance, which can be monkey patched, configured,
 *      decorated or delegated to.
 *
 * @example
 * Here we decorate the {@link ng.$log $log} service to convert warnings to errors by intercepting
 * calls to {@link ng.$log#error $log.warn()}.
 * ```js
 *   $provide.decorator('$log', ['$delegate', function($delegate) {
 *     $delegate.warn = $delegate.error;
 *     return $delegate;
 *   }]);
 * ```
 */
  function createInjector(modulesToLoad) {
    var INSTANTIATING = {}, providerSuffix = 'Provider', path = [], loadedModules = new HashMap([], true), providerCache = {
        $provide: {
          provider: supportObject(provider),
          factory: supportObject(factory),
          service: supportObject(service),
          value: supportObject(value),
          constant: supportObject(constant),
          decorator: decorator
        }
      }, providerInjector = providerCache.$injector = createInternalInjector(providerCache, function () {
        throw $injectorMinErr('unpr', 'Unknown provider: {0}', path.join(' <- '));
      }), instanceCache = {}, instanceInjector = instanceCache.$injector = createInternalInjector(instanceCache, function (servicename) {
        var provider = providerInjector.get(servicename + providerSuffix);
        return instanceInjector.invoke(provider.$get, provider);
      });
    forEach(loadModules(modulesToLoad), function (fn) {
      instanceInjector.invoke(fn || noop);
    });
    return instanceInjector;
    ////////////////////////////////////
    // $provider
    ////////////////////////////////////
    function supportObject(delegate) {
      return function (key, value) {
        if (isObject(key)) {
          forEach(key, reverseParams(delegate));
        } else {
          return delegate(key, value);
        }
      };
    }
    function provider(name, provider_) {
      assertNotHasOwnProperty(name, 'service');
      if (isFunction(provider_) || isArray(provider_)) {
        provider_ = providerInjector.instantiate(provider_);
      }
      if (!provider_.$get) {
        throw $injectorMinErr('pget', 'Provider \'{0}\' must define $get factory method.', name);
      }
      return providerCache[name + providerSuffix] = provider_;
    }
    function factory(name, factoryFn) {
      return provider(name, { $get: factoryFn });
    }
    function service(name, constructor) {
      return factory(name, [
        '$injector',
        function ($injector) {
          return $injector.instantiate(constructor);
        }
      ]);
    }
    function value(name, val) {
      return factory(name, valueFn(val));
    }
    function constant(name, value) {
      assertNotHasOwnProperty(name, 'constant');
      providerCache[name] = value;
      instanceCache[name] = value;
    }
    function decorator(serviceName, decorFn) {
      var origProvider = providerInjector.get(serviceName + providerSuffix), orig$get = origProvider.$get;
      origProvider.$get = function () {
        var origInstance = instanceInjector.invoke(orig$get, origProvider);
        return instanceInjector.invoke(decorFn, null, { $delegate: origInstance });
      };
    }
    ////////////////////////////////////
    // Module Loading
    ////////////////////////////////////
    function loadModules(modulesToLoad) {
      var runBlocks = [], moduleFn, invokeQueue, i, ii;
      forEach(modulesToLoad, function (module) {
        if (loadedModules.get(module))
          return;
        loadedModules.put(module, true);
        try {
          if (isString(module)) {
            moduleFn = angularModule(module);
            runBlocks = runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks);
            for (invokeQueue = moduleFn._invokeQueue, i = 0, ii = invokeQueue.length; i < ii; i++) {
              var invokeArgs = invokeQueue[i], provider = providerInjector.get(invokeArgs[0]);
              provider[invokeArgs[1]].apply(provider, invokeArgs[2]);
            }
          } else if (isFunction(module)) {
            runBlocks.push(providerInjector.invoke(module));
          } else if (isArray(module)) {
            runBlocks.push(providerInjector.invoke(module));
          } else {
            assertArgFn(module, 'module');
          }
        } catch (e) {
          if (isArray(module)) {
            module = module[module.length - 1];
          }
          if (e.message && e.stack && e.stack.indexOf(e.message) == -1) {
            // Safari & FF's stack traces don't contain error.message content
            // unlike those of Chrome and IE
            // So if stack doesn't contain message, we create a new string that contains both.
            // Since error.stack is read-only in Safari, I'm overriding e and not e.stack here.
            /* jshint -W022 */
            e = e.message + '\n' + e.stack;
          }
          throw $injectorMinErr('modulerr', 'Failed to instantiate module {0} due to:\n{1}', module, e.stack || e.message || e);
        }
      });
      return runBlocks;
    }
    ////////////////////////////////////
    // internal Injector
    ////////////////////////////////////
    function createInternalInjector(cache, factory) {
      function getService(serviceName) {
        if (cache.hasOwnProperty(serviceName)) {
          if (cache[serviceName] === INSTANTIATING) {
            throw $injectorMinErr('cdep', 'Circular dependency found: {0}', serviceName + ' <- ' + path.join(' <- '));
          }
          return cache[serviceName];
        } else {
          try {
            path.unshift(serviceName);
            cache[serviceName] = INSTANTIATING;
            return cache[serviceName] = factory(serviceName);
          } catch (err) {
            if (cache[serviceName] === INSTANTIATING) {
              delete cache[serviceName];
            }
            throw err;
          } finally {
            path.shift();
          }
        }
      }
      function invoke(fn, self, locals) {
        var args = [], $inject = annotate(fn), length, i, key;
        for (i = 0, length = $inject.length; i < length; i++) {
          key = $inject[i];
          if (typeof key !== 'string') {
            throw $injectorMinErr('itkn', 'Incorrect injection token! Expected service name as string, got {0}', key);
          }
          args.push(locals && locals.hasOwnProperty(key) ? locals[key] : getService(key));
        }
        if (isArray(fn)) {
          fn = fn[length];
        }
        // http://jsperf.com/angularjs-invoke-apply-vs-switch
        // #5388
        return fn.apply(self, args);
      }
      function instantiate(Type, locals) {
        var Constructor = function () {
          }, instance, returnedValue;
        // Check if Type is annotated and use just the given function at n-1 as parameter
        // e.g. someModule.factory('greeter', ['$window', function(renamed$window) {}]);
        Constructor.prototype = (isArray(Type) ? Type[Type.length - 1] : Type).prototype;
        instance = new Constructor();
        returnedValue = invoke(Type, instance, locals);
        return isObject(returnedValue) || isFunction(returnedValue) ? returnedValue : instance;
      }
      return {
        invoke: invoke,
        instantiate: instantiate,
        get: getService,
        annotate: annotate,
        has: function (name) {
          return providerCache.hasOwnProperty(name + providerSuffix) || cache.hasOwnProperty(name);
        }
      };
    }
  }
  /**
 * @ngdoc service
 * @name $anchorScroll
 * @kind function
 * @requires $window
 * @requires $location
 * @requires $rootScope
 *
 * @description
 * When called, it checks current value of `$location.hash()` and scrolls to the related element,
 * according to rules specified in
 * [Html5 spec](http://dev.w3.org/html5/spec/Overview.html#the-indicated-part-of-the-document).
 *
 * It also watches the `$location.hash()` and scrolls whenever it changes to match any anchor.
 * This can be disabled by calling `$anchorScrollProvider.disableAutoScrolling()`.
 *
 * @example
   <example>
     <file name="index.html">
       <div id="scrollArea" ng-controller="ScrollCtrl">
         <a ng-click="gotoBottom()">Go to bottom</a>
         <a id="bottom"></a> You're at the bottom!
       </div>
     </file>
     <file name="script.js">
       function ScrollCtrl($scope, $location, $anchorScroll) {
         $scope.gotoBottom = function (){
           // set the location.hash to the id of
           // the element you wish to scroll to.
           $location.hash('bottom');

           // call $anchorScroll()
           $anchorScroll();
         };
       }
     </file>
     <file name="style.css">
       #scrollArea {
         height: 350px;
         overflow: auto;
       }

       #bottom {
         display: block;
         margin-top: 2000px;
       }
     </file>
   </example>
 */
  function $AnchorScrollProvider() {
    var autoScrollingEnabled = true;
    /**
   * @ngdoc method
   * @name $anchorScrollProvider#disableAutoScrolling
   *
   * @description
   * By default, {@link ng.$anchorScroll $anchorScroll()} will automatically detect changes to
   * {@link ng.$location#hash $location.hash()} and scroll to the element matching the new hash.<br />
   * Use this method to disable automatic scrolling.
   *
   * If automatic scrolling is disabled, one must explicitly call
   * {@link ng.$anchorScroll $anchorScroll()} in order to scroll to the element related to the
   * current hash.
   */
    this.disableAutoScrolling = function () {
      autoScrollingEnabled = false;
    };
    this.$get = [
      '$window',
      '$location',
      '$rootScope',
      function ($window, $location, $rootScope) {
        var document = $window.document;
        // helper function to get first anchor from a NodeList
        // can't use filter.filter, as it accepts only instances of Array
        // and IE can't convert NodeList to an array using [].slice
        // TODO(vojta): use filter if we change it to accept lists as well
        function getFirstAnchor(list) {
          var result = null;
          forEach(list, function (element) {
            if (!result && lowercase(element.nodeName) === 'a')
              result = element;
          });
          return result;
        }
        function scroll() {
          var hash = $location.hash(), elm;
          // empty hash, scroll to the top of the page
          if (!hash)
            $window.scrollTo(0, 0);  // element with given id
          else if (elm = document.getElementById(hash))
            elm.scrollIntoView();  // first anchor with given name :-D
          else if (elm = getFirstAnchor(document.getElementsByName(hash)))
            elm.scrollIntoView();  // no element and hash == 'top', scroll to the top of the page
          else if (hash === 'top')
            $window.scrollTo(0, 0);
        }
        // does not scroll when user clicks on anchor link that is currently on
        // (no url change, no $location.hash() change), browser native does scroll
        if (autoScrollingEnabled) {
          $rootScope.$watch(function autoScrollWatch() {
            return $location.hash();
          }, function autoScrollWatchAction() {
            $rootScope.$evalAsync(scroll);
          });
        }
        return scroll;
      }
    ];
  }
  var $animateMinErr = minErr('$animate');
  /**
 * @ngdoc provider
 * @name $animateProvider
 *
 * @description
 * Default implementation of $animate that doesn't perform any animations, instead just
 * synchronously performs DOM
 * updates and calls done() callbacks.
 *
 * In order to enable animations the ngAnimate module has to be loaded.
 *
 * To see the functional implementation check out src/ngAnimate/animate.js
 */
  var $AnimateProvider = [
      '$provide',
      function ($provide) {
        this.$$selectors = {};
        /**
   * @ngdoc method
   * @name $animateProvider#register
   *
   * @description
   * Registers a new injectable animation factory function. The factory function produces the
   * animation object which contains callback functions for each event that is expected to be
   * animated.
   *
   *   * `eventFn`: `function(Element, doneFunction)` The element to animate, the `doneFunction`
   *   must be called once the element animation is complete. If a function is returned then the
   *   animation service will use this function to cancel the animation whenever a cancel event is
   *   triggered.
   *
   *
   * ```js
   *   return {
     *     eventFn : function(element, done) {
     *       //code to run the animation
     *       //once complete, then run done()
     *       return function cancellationFunction() {
     *         //code to cancel the animation
     *       }
     *     }
     *   }
   * ```
   *
   * @param {string} name The name of the animation.
   * @param {Function} factory The factory function that will be executed to return the animation
   *                           object.
   */
        this.register = function (name, factory) {
          var key = name + '-animation';
          if (name && name.charAt(0) != '.')
            throw $animateMinErr('notcsel', 'Expecting class selector starting with \'.\' got \'{0}\'.', name);
          this.$$selectors[name.substr(1)] = key;
          $provide.factory(key, factory);
        };
        /**
   * @ngdoc method
   * @name $animateProvider#classNameFilter
   *
   * @description
   * Sets and/or returns the CSS class regular expression that is checked when performing
   * an animation. Upon bootstrap the classNameFilter value is not set at all and will
   * therefore enable $animate to attempt to perform an animation on any element.
   * When setting the classNameFilter value, animations will only be performed on elements
   * that successfully match the filter expression. This in turn can boost performance
   * for low-powered devices as well as applications containing a lot of structural operations.
   * @param {RegExp=} expression The className expression which will be checked against all animations
   * @return {RegExp} The current CSS className expression value. If null then there is no expression value
   */
        this.classNameFilter = function (expression) {
          if (arguments.length === 1) {
            this.$$classNameFilter = expression instanceof RegExp ? expression : null;
          }
          return this.$$classNameFilter;
        };
        this.$get = [
          '$timeout',
          '$$asyncCallback',
          function ($timeout, $$asyncCallback) {
            function async(fn) {
              fn && $$asyncCallback(fn);
            }
            /**
     *
     * @ngdoc service
     * @name $animate
     * @description The $animate service provides rudimentary DOM manipulation functions to
     * insert, remove and move elements within the DOM, as well as adding and removing classes.
     * This service is the core service used by the ngAnimate $animator service which provides
     * high-level animation hooks for CSS and JavaScript.
     *
     * $animate is available in the AngularJS core, however, the ngAnimate module must be included
     * to enable full out animation support. Otherwise, $animate will only perform simple DOM
     * manipulation operations.
     *
     * To learn more about enabling animation support, click here to visit the {@link ngAnimate
     * ngAnimate module page} as well as the {@link ngAnimate.$animate ngAnimate $animate service
     * page}.
     */
            return {
              enter: function (element, parent, after, done) {
                if (after) {
                  after.after(element);
                } else {
                  if (!parent || !parent[0]) {
                    parent = after.parent();
                  }
                  parent.append(element);
                }
                async(done);
              },
              leave: function (element, done) {
                element.remove();
                async(done);
              },
              move: function (element, parent, after, done) {
                // Do not remove element before insert. Removing will cause data associated with the
                // element to be dropped. Insert will implicitly do the remove.
                this.enter(element, parent, after, done);
              },
              addClass: function (element, className, done) {
                className = isString(className) ? className : isArray(className) ? className.join(' ') : '';
                forEach(element, function (element) {
                  jqLiteAddClass(element, className);
                });
                async(done);
              },
              removeClass: function (element, className, done) {
                className = isString(className) ? className : isArray(className) ? className.join(' ') : '';
                forEach(element, function (element) {
                  jqLiteRemoveClass(element, className);
                });
                async(done);
              },
              setClass: function (element, add, remove, done) {
                forEach(element, function (element) {
                  jqLiteAddClass(element, add);
                  jqLiteRemoveClass(element, remove);
                });
                async(done);
              },
              enabled: noop
            };
          }
        ];
      }
    ];
  function $$AsyncCallbackProvider() {
    this.$get = [
      '$$rAF',
      '$timeout',
      function ($$rAF, $timeout) {
        return $$rAF.supported ? function (fn) {
          return $$rAF(fn);
        } : function (fn) {
          return $timeout(fn, 0, false);
        };
      }
    ];
  }
  /* global stripHash: true */
  /**
 * ! This is a private undocumented service !
 *
 * @name $browser
 * @requires $log
 * @description
 * This object has two goals:
 *
 * - hide all the global state in the browser caused by the window object
 * - abstract away all the browser specific features and inconsistencies
 *
 * For tests we provide {@link ngMock.$browser mock implementation} of the `$browser`
 * service, which can be used for convenient testing of the application without the interaction with
 * the real browser apis.
 */
  /**
 * @param {object} window The global window object.
 * @param {object} document jQuery wrapped document.
 * @param {function()} XHR XMLHttpRequest constructor.
 * @param {object} $log console.log or an object with the same interface.
 * @param {object} $sniffer $sniffer service
 */
  function Browser(window, document, $log, $sniffer) {
    var self = this, rawDocument = document[0], location = window.location, history = window.history, setTimeout = window.setTimeout, clearTimeout = window.clearTimeout, pendingDeferIds = {};
    self.isMock = false;
    var outstandingRequestCount = 0;
    var outstandingRequestCallbacks = [];
    // TODO(vojta): remove this temporary api
    self.$$completeOutstandingRequest = completeOutstandingRequest;
    self.$$incOutstandingRequestCount = function () {
      outstandingRequestCount++;
    };
    /**
   * Executes the `fn` function(supports currying) and decrements the `outstandingRequestCallbacks`
   * counter. If the counter reaches 0, all the `outstandingRequestCallbacks` are executed.
   */
    function completeOutstandingRequest(fn) {
      try {
        fn.apply(null, sliceArgs(arguments, 1));
      } finally {
        outstandingRequestCount--;
        if (outstandingRequestCount === 0) {
          while (outstandingRequestCallbacks.length) {
            try {
              outstandingRequestCallbacks.pop()();
            } catch (e) {
              $log.error(e);
            }
          }
        }
      }
    }
    /**
   * @private
   * Note: this method is used only by scenario runner
   * TODO(vojta): prefix this method with $$ ?
   * @param {function()} callback Function that will be called when no outstanding request
   */
    self.notifyWhenNoOutstandingRequests = function (callback) {
      // force browser to execute all pollFns - this is needed so that cookies and other pollers fire
      // at some deterministic time in respect to the test runner's actions. Leaving things up to the
      // regular poller would result in flaky tests.
      forEach(pollFns, function (pollFn) {
        pollFn();
      });
      if (outstandingRequestCount === 0) {
        callback();
      } else {
        outstandingRequestCallbacks.push(callback);
      }
    };
    //////////////////////////////////////////////////////////////
    // Poll Watcher API
    //////////////////////////////////////////////////////////////
    var pollFns = [], pollTimeout;
    /**
   * @name $browser#addPollFn
   *
   * @param {function()} fn Poll function to add
   *
   * @description
   * Adds a function to the list of functions that poller periodically executes,
   * and starts polling if not started yet.
   *
   * @returns {function()} the added function
   */
    self.addPollFn = function (fn) {
      if (isUndefined(pollTimeout))
        startPoller(100, setTimeout);
      pollFns.push(fn);
      return fn;
    };
    /**
   * @param {number} interval How often should browser call poll functions (ms)
   * @param {function()} setTimeout Reference to a real or fake `setTimeout` function.
   *
   * @description
   * Configures the poller to run in the specified intervals, using the specified
   * setTimeout fn and kicks it off.
   */
    function startPoller(interval, setTimeout) {
      (function check() {
        forEach(pollFns, function (pollFn) {
          pollFn();
        });
        pollTimeout = setTimeout(check, interval);
      }());
    }
    //////////////////////////////////////////////////////////////
    // URL API
    //////////////////////////////////////////////////////////////
    var lastBrowserUrl = location.href, baseElement = document.find('base'), reloadLocation = null;
    /**
   * @name $browser#url
   *
   * @description
   * GETTER:
   * Without any argument, this method just returns current value of location.href.
   *
   * SETTER:
   * With at least one argument, this method sets url to new value.
   * If html5 history api supported, pushState/replaceState is used, otherwise
   * location.href/location.replace is used.
   * Returns its own instance to allow chaining
   *
   * NOTE: this api is intended for use only by the $location service. Please use the
   * {@link ng.$location $location service} to change url.
   *
   * @param {string} url New url (when used as setter)
   * @param {boolean=} replace Should new url replace current history record ?
   */
    self.url = function (url, replace) {
      // Android Browser BFCache causes location, history reference to become stale.
      if (location !== window.location)
        location = window.location;
      if (history !== window.history)
        history = window.history;
      // setter
      if (url) {
        if (lastBrowserUrl == url)
          return;
        var sameBase = lastBrowserUrl && stripHash(lastBrowserUrl) === stripHash(url);
        lastBrowserUrl = url;
        // Don't use history API if only the hash changed
        // due to a bug in IE10/IE11 which leads
        // to not firing a `hashchange` nor `popstate` event
        // in some cases (see #9143).
        if (!sameBase && $sniffer.history) {
          if (replace)
            history.replaceState(null, '', url);
          else {
            history.pushState(null, '', url);
            // Crazy Opera Bug: http://my.opera.com/community/forums/topic.dml?id=1185462
            baseElement.attr('href', baseElement.attr('href'));
          }
        } else {
          if (!sameBase) {
            reloadLocation = url;
          }
          if (replace) {
            location.replace(url);
          } else {
            location.href = url;
          }
        }
        return self;  // getter
      } else {
        // - reloadLocation is needed as browsers don't allow to read out
        //   the new location.href if a reload happened.
        // - the replacement is a workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=407172
        return reloadLocation || location.href.replace(/%27/g, '\'');
      }
    };
    var urlChangeListeners = [], urlChangeInit = false;
    function fireUrlChange() {
      if (lastBrowserUrl == self.url())
        return;
      lastBrowserUrl = self.url();
      forEach(urlChangeListeners, function (listener) {
        listener(self.url());
      });
    }
    /**
   * @name $browser#onUrlChange
   *
   * @description
   * Register callback function that will be called, when url changes.
   *
   * It's only called when the url is changed from outside of angular:
   * - user types different url into address bar
   * - user clicks on history (forward/back) button
   * - user clicks on a link
   *
   * It's not called when url is changed by $browser.url() method
   *
   * The listener gets called with new url as parameter.
   *
   * NOTE: this api is intended for use only by the $location service. Please use the
   * {@link ng.$location $location service} to monitor url changes in angular apps.
   *
   * @param {function(string)} listener Listener function to be called when url changes.
   * @return {function(string)} Returns the registered listener fn - handy if the fn is anonymous.
   */
    self.onUrlChange = function (callback) {
      // TODO(vojta): refactor to use node's syntax for events
      if (!urlChangeInit) {
        // We listen on both (hashchange/popstate) when available, as some browsers (e.g. Opera)
        // don't fire popstate when user change the address bar and don't fire hashchange when url
        // changed by push/replaceState
        // html5 history api - popstate event
        if ($sniffer.history)
          jqLite(window).on('popstate', fireUrlChange);
        // hashchange event
        if ($sniffer.hashchange)
          jqLite(window).on('hashchange', fireUrlChange);  // polling
        else
          self.addPollFn(fireUrlChange);
        urlChangeInit = true;
      }
      urlChangeListeners.push(callback);
      return callback;
    };
    /**
   * Checks whether the url has changed outside of Angular.
   * Needs to be exported to be able to check for changes that have been done in sync,
   * as hashchange/popstate events fire in async.
   */
    self.$$checkUrlChange = fireUrlChange;
    //////////////////////////////////////////////////////////////
    // Misc API
    //////////////////////////////////////////////////////////////
    /**
   * @name $browser#baseHref
   *
   * @description
   * Returns current <base href>
   * (always relative - without domain)
   *
   * @returns {string} The current base href
   */
    self.baseHref = function () {
      var href = baseElement.attr('href');
      return href ? href.replace(/^(https?\:)?\/\/[^\/]*/, '') : '';
    };
    //////////////////////////////////////////////////////////////
    // Cookies API
    //////////////////////////////////////////////////////////////
    var lastCookies = {};
    var lastCookieString = '';
    var cookiePath = self.baseHref();
    /**
   * @name $browser#cookies
   *
   * @param {string=} name Cookie name
   * @param {string=} value Cookie value
   *
   * @description
   * The cookies method provides a 'private' low level access to browser cookies.
   * It is not meant to be used directly, use the $cookie service instead.
   *
   * The return values vary depending on the arguments that the method was called with as follows:
   *
   * - cookies() -> hash of all cookies, this is NOT a copy of the internal state, so do not modify
   *   it
   * - cookies(name, value) -> set name to value, if value is undefined delete the cookie
   * - cookies(name) -> the same as (name, undefined) == DELETES (no one calls it right now that
   *   way)
   *
   * @returns {Object} Hash of all cookies (if called without any parameter)
   */
    self.cookies = function (name, value) {
      /* global escape: false, unescape: false */
      var cookieLength, cookieArray, cookie, i, index;
      if (name) {
        if (value === undefined) {
          rawDocument.cookie = escape(name) + '=;path=' + cookiePath + ';expires=Thu, 01 Jan 1970 00:00:00 GMT';
        } else {
          if (isString(value)) {
            cookieLength = (rawDocument.cookie = escape(name) + '=' + escape(value) + ';path=' + cookiePath).length + 1;
            // per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:
            // - 300 cookies
            // - 20 cookies per unique domain
            // - 4096 bytes per cookie
            if (cookieLength > 4096) {
              $log.warn('Cookie \'' + name + '\' possibly not set or overflowed because it was too large (' + cookieLength + ' > 4096 bytes)!');
            }
          }
        }
      } else {
        if (rawDocument.cookie !== lastCookieString) {
          lastCookieString = rawDocument.cookie;
          cookieArray = lastCookieString.split('; ');
          lastCookies = {};
          for (i = 0; i < cookieArray.length; i++) {
            cookie = cookieArray[i];
            index = cookie.indexOf('=');
            if (index > 0) {
              //ignore nameless cookies
              name = unescape(cookie.substring(0, index));
              // the first value that is seen for a cookie is the most
              // specific one.  values for the same cookie name that
              // follow are for less specific paths.
              if (lastCookies[name] === undefined) {
                lastCookies[name] = unescape(cookie.substring(index + 1));
              }
            }
          }
        }
        return lastCookies;
      }
    };
    /**
   * @name $browser#defer
   * @param {function()} fn A function, who's execution should be deferred.
   * @param {number=} [delay=0] of milliseconds to defer the function execution.
   * @returns {*} DeferId that can be used to cancel the task via `$browser.defer.cancel()`.
   *
   * @description
   * Executes a fn asynchronously via `setTimeout(fn, delay)`.
   *
   * Unlike when calling `setTimeout` directly, in test this function is mocked and instead of using
   * `setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed
   * via `$browser.defer.flush()`.
   *
   */
    self.defer = function (fn, delay) {
      var timeoutId;
      outstandingRequestCount++;
      timeoutId = setTimeout(function () {
        delete pendingDeferIds[timeoutId];
        completeOutstandingRequest(fn);
      }, delay || 0);
      pendingDeferIds[timeoutId] = true;
      return timeoutId;
    };
    /**
   * @name $browser#defer.cancel
   *
   * @description
   * Cancels a deferred task identified with `deferId`.
   *
   * @param {*} deferId Token returned by the `$browser.defer` function.
   * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully
   *                    canceled.
   */
    self.defer.cancel = function (deferId) {
      if (pendingDeferIds[deferId]) {
        delete pendingDeferIds[deferId];
        clearTimeout(deferId);
        completeOutstandingRequest(noop);
        return true;
      }
      return false;
    };
  }
  function $BrowserProvider() {
    this.$get = [
      '$window',
      '$log',
      '$sniffer',
      '$document',
      function ($window, $log, $sniffer, $document) {
        return new Browser($window, $document, $log, $sniffer);
      }
    ];
  }
  /**
 * @ngdoc service
 * @name $cacheFactory
 *
 * @description
 * Factory that constructs {@link $cacheFactory.Cache Cache} objects and gives access to
 * them.
 *
 * ```js
 *
 *  var cache = $cacheFactory('cacheId');
 *  expect($cacheFactory.get('cacheId')).toBe(cache);
 *  expect($cacheFactory.get('noSuchCacheId')).not.toBeDefined();
 *
 *  cache.put("key", "value");
 *  cache.put("another key", "another value");
 *
 *  // We've specified no options on creation
 *  expect(cache.info()).toEqual({id: 'cacheId', size: 2});
 *
 * ```
 *
 *
 * @param {string} cacheId Name or id of the newly created cache.
 * @param {object=} options Options object that specifies the cache behavior. Properties:
 *
 *   - `{number=}` `capacity` — turns the cache into LRU cache.
 *
 * @returns {object} Newly created cache object with the following set of methods:
 *
 * - `{object}` `info()` — Returns id, size, and options of cache.
 * - `{{*}}` `put({string} key, {*} value)` — Puts a new key-value pair into the cache and returns
 *   it.
 * - `{{*}}` `get({string} key)` — Returns cached value for `key` or undefined for cache miss.
 * - `{void}` `remove({string} key)` — Removes a key-value pair from the cache.
 * - `{void}` `removeAll()` — Removes all cached values.
 * - `{void}` `destroy()` — Removes references to this cache from $cacheFactory.
 *
 * @example
   <example module="cacheExampleApp">
     <file name="index.html">
       <div ng-controller="CacheController">
         <input ng-model="newCacheKey" placeholder="Key">
         <input ng-model="newCacheValue" placeholder="Value">
         <button ng-click="put(newCacheKey, newCacheValue)">Cache</button>

         <p ng-if="keys.length">Cached Values</p>
         <div ng-repeat="key in keys">
           <span ng-bind="key"></span>
           <span>: </span>
           <b ng-bind="cache.get(key)"></b>
         </div>

         <p>Cache Info</p>
         <div ng-repeat="(key, value) in cache.info()">
           <span ng-bind="key"></span>
           <span>: </span>
           <b ng-bind="value"></b>
         </div>
       </div>
     </file>
     <file name="script.js">
       angular.module('cacheExampleApp', []).
         controller('CacheController', ['$scope', '$cacheFactory', function($scope, $cacheFactory) {
           $scope.keys = [];
           $scope.cache = $cacheFactory('cacheId');
           $scope.put = function(key, value) {
             if ($scope.cache.get(key) === undefined) {
               $scope.keys.push(key);
             }
             $scope.cache.put(key, value === undefined ? null : value);
           };
         }]);
     </file>
     <file name="style.css">
       p {
         margin: 10px 0 3px;
       }
     </file>
   </example>
 */
  function $CacheFactoryProvider() {
    this.$get = function () {
      var caches = {};
      function cacheFactory(cacheId, options) {
        if (cacheId in caches) {
          throw minErr('$cacheFactory')('iid', 'CacheId \'{0}\' is already taken!', cacheId);
        }
        var size = 0, stats = extend({}, options, { id: cacheId }), data = {}, capacity = options && options.capacity || Number.MAX_VALUE, lruHash = {}, freshEnd = null, staleEnd = null;
        /**
       * @ngdoc type
       * @name $cacheFactory.Cache
       *
       * @description
       * A cache object used to store and retrieve data, primarily used by
       * {@link $http $http} and the {@link ng.directive:script script} directive to cache
       * templates and other data.
       *
       * ```js
       *  angular.module('superCache')
       *    .factory('superCache', ['$cacheFactory', function($cacheFactory) {
       *      return $cacheFactory('super-cache');
       *    }]);
       * ```
       *
       * Example test:
       *
       * ```js
       *  it('should behave like a cache', inject(function(superCache) {
       *    superCache.put('key', 'value');
       *    superCache.put('another key', 'another value');
       *
       *    expect(superCache.info()).toEqual({
       *      id: 'super-cache',
       *      size: 2
       *    });
       *
       *    superCache.remove('another key');
       *    expect(superCache.get('another key')).toBeUndefined();
       *
       *    superCache.removeAll();
       *    expect(superCache.info()).toEqual({
       *      id: 'super-cache',
       *      size: 0
       *    });
       *  }));
       * ```
       */
        return caches[cacheId] = {
          put: function (key, value) {
            if (capacity < Number.MAX_VALUE) {
              var lruEntry = lruHash[key] || (lruHash[key] = { key: key });
              refresh(lruEntry);
            }
            if (isUndefined(value))
              return;
            if (!(key in data))
              size++;
            data[key] = value;
            if (size > capacity) {
              this.remove(staleEnd.key);
            }
            return value;
          },
          get: function (key) {
            if (capacity < Number.MAX_VALUE) {
              var lruEntry = lruHash[key];
              if (!lruEntry)
                return;
              refresh(lruEntry);
            }
            return data[key];
          },
          remove: function (key) {
            if (capacity < Number.MAX_VALUE) {
              var lruEntry = lruHash[key];
              if (!lruEntry)
                return;
              if (lruEntry == freshEnd)
                freshEnd = lruEntry.p;
              if (lruEntry == staleEnd)
                staleEnd = lruEntry.n;
              link(lruEntry.n, lruEntry.p);
              delete lruHash[key];
            }
            delete data[key];
            size--;
          },
          removeAll: function () {
            data = {};
            size = 0;
            lruHash = {};
            freshEnd = staleEnd = null;
          },
          destroy: function () {
            data = null;
            stats = null;
            lruHash = null;
            delete caches[cacheId];
          },
          info: function () {
            return extend({}, stats, { size: size });
          }
        };
        /**
       * makes the `entry` the freshEnd of the LRU linked list
       */
        function refresh(entry) {
          if (entry != freshEnd) {
            if (!staleEnd) {
              staleEnd = entry;
            } else if (staleEnd == entry) {
              staleEnd = entry.n;
            }
            link(entry.n, entry.p);
            link(entry, freshEnd);
            freshEnd = entry;
            freshEnd.n = null;
          }
        }
        /**
       * bidirectionally links two entries of the LRU linked list
       */
        function link(nextEntry, prevEntry) {
          if (nextEntry != prevEntry) {
            if (nextEntry)
              nextEntry.p = prevEntry;
            //p stands for previous, 'prev' didn't minify
            if (prevEntry)
              prevEntry.n = nextEntry;  //n stands for next, 'next' didn't minify
          }
        }
      }
      /**
   * @ngdoc method
   * @name $cacheFactory#info
   *
   * @description
   * Get information about all the caches that have been created
   *
   * @returns {Object} - key-value map of `cacheId` to the result of calling `cache#info`
   */
      cacheFactory.info = function () {
        var info = {};
        forEach(caches, function (cache, cacheId) {
          info[cacheId] = cache.info();
        });
        return info;
      };
      /**
   * @ngdoc method
   * @name $cacheFactory#get
   *
   * @description
   * Get access to a cache object by the `cacheId` used when it was created.
   *
   * @param {string} cacheId Name or id of a cache to access.
   * @returns {object} Cache object identified by the cacheId or undefined if no such cache.
   */
      cacheFactory.get = function (cacheId) {
        return caches[cacheId];
      };
      return cacheFactory;
    };
  }
  /**
 * @ngdoc service
 * @name $templateCache
 *
 * @description
 * The first time a template is used, it is loaded in the template cache for quick retrieval. You
 * can load templates directly into the cache in a `script` tag, or by consuming the
 * `$templateCache` service directly.
 *
 * Adding via the `script` tag:
 *
 * ```html
 *   <script type="text/ng-template" id="templateId.html">
 *     <p>This is the content of the template</p>
 *   </script>
 * ```
 *
 * **Note:** the `script` tag containing the template does not need to be included in the `head` of
 * the document, but it must be a descendent of the {@link ng.$rootElement $rootElement} (IE,
 * element with ng-app attribute), otherwise the template will be ignored.
 *
 * Adding via the $templateCache service:
 *
 * ```js
 * var myApp = angular.module('myApp', []);
 * myApp.run(function($templateCache) {
 *   $templateCache.put('templateId.html', 'This is the content of the template');
 * });
 * ```
 *
 * To retrieve the template later, simply use it in your HTML:
 * ```html
 * <div ng-include=" 'templateId.html' "></div>
 * ```
 *
 * or get it via Javascript:
 * ```js
 * $templateCache.get('templateId.html')
 * ```
 *
 * See {@link ng.$cacheFactory $cacheFactory}.
 *
 */
  function $TemplateCacheProvider() {
    this.$get = [
      '$cacheFactory',
      function ($cacheFactory) {
        return $cacheFactory('templates');
      }
    ];
  }
  /* ! VARIABLE/FUNCTION NAMING CONVENTIONS THAT APPLY TO THIS FILE!
 *
 * DOM-related variables:
 *
 * - "node" - DOM Node
 * - "element" - DOM Element or Node
 * - "$node" or "$element" - jqLite-wrapped node or element
 *
 *
 * Compiler related stuff:
 *
 * - "linkFn" - linking fn of a single directive
 * - "nodeLinkFn" - function that aggregates all linking fns for a particular node
 * - "childLinkFn" -  function that aggregates all linking fns for child nodes of a particular node
 * - "compositeLinkFn" - function that aggregates all linking fns for a compilation root (nodeList)
 */
  /**
 * @ngdoc service
 * @name $compile
 * @kind function
 *
 * @description
 * Compiles an HTML string or DOM into a template and produces a template function, which
 * can then be used to link {@link ng.$rootScope.Scope `scope`} and the template together.
 *
 * The compilation is a process of walking the DOM tree and matching DOM elements to
 * {@link ng.$compileProvider#directive directives}.
 *
 * <div class="alert alert-warning">
 * **Note:** This document is an in-depth reference of all directive options.
 * For a gentle introduction to directives with examples of common use cases,
 * see the {@link guide/directive directive guide}.
 * </div>
 *
 * ## Comprehensive Directive API
 *
 * There are many different options for a directive.
 *
 * The difference resides in the return value of the factory function.
 * You can either return a "Directive Definition Object" (see below) that defines the directive properties,
 * or just the `postLink` function (all other properties will have the default values).
 *
 * <div class="alert alert-success">
 * **Best Practice:** It's recommended to use the "directive definition object" form.
 * </div>
 *
 * Here's an example directive declared with a Directive Definition Object:
 *
 * ```js
 *   var myModule = angular.module(...);
 *
 *   myModule.directive('directiveName', function factory(injectables) {
 *     var directiveDefinitionObject = {
 *       priority: 0,
 *       template: '<div></div>', // or // function(tElement, tAttrs) { ... },
 *       // or
 *       // templateUrl: 'directive.html', // or // function(tElement, tAttrs) { ... },
 *       transclude: false,
 *       restrict: 'A',
 *       scope: false,
 *       controller: function($scope, $element, $attrs, $transclude, otherInjectables) { ... },
 *       controllerAs: 'stringAlias',
 *       require: 'siblingDirectiveName', // or // ['^parentDirectiveName', '?optionalDirectiveName', '?^optionalParent'],
 *       compile: function compile(tElement, tAttrs, transclude) {
 *         return {
 *           pre: function preLink(scope, iElement, iAttrs, controller) { ... },
 *           post: function postLink(scope, iElement, iAttrs, controller) { ... }
 *         }
 *         // or
 *         // return function postLink( ... ) { ... }
 *       },
 *       // or
 *       // link: {
 *       //  pre: function preLink(scope, iElement, iAttrs, controller) { ... },
 *       //  post: function postLink(scope, iElement, iAttrs, controller) { ... }
 *       // }
 *       // or
 *       // link: function postLink( ... ) { ... }
 *     };
 *     return directiveDefinitionObject;
 *   });
 * ```
 *
 * <div class="alert alert-warning">
 * **Note:** Any unspecified options will use the default value. You can see the default values below.
 * </div>
 *
 * Therefore the above can be simplified as:
 *
 * ```js
 *   var myModule = angular.module(...);
 *
 *   myModule.directive('directiveName', function factory(injectables) {
 *     var directiveDefinitionObject = {
 *       link: function postLink(scope, iElement, iAttrs) { ... }
 *     };
 *     return directiveDefinitionObject;
 *     // or
 *     // return function postLink(scope, iElement, iAttrs) { ... }
 *   });
 * ```
 *
 *
 *
 * ### Directive Definition Object
 *
 * The directive definition object provides instructions to the {@link ng.$compile
 * compiler}. The attributes are:
 *
 * #### `priority`
 * When there are multiple directives defined on a single DOM element, sometimes it
 * is necessary to specify the order in which the directives are applied. The `priority` is used
 * to sort the directives before their `compile` functions get called. Priority is defined as a
 * number. Directives with greater numerical `priority` are compiled first. Pre-link functions
 * are also run in priority order, but post-link functions are run in reverse order. The order
 * of directives with the same priority is undefined. The default priority is `0`.
 *
 * #### `terminal`
 * If set to true then the current `priority` will be the last set of directives
 * which will execute (any directives at the current priority will still execute
 * as the order of execution on same `priority` is undefined).
 *
 * #### `scope`
 * **If set to `true`,** then a new scope will be created for this directive. If multiple directives on the
 * same element request a new scope, only one new scope is created. The new scope rule does not
 * apply for the root of the template since the root of the template always gets a new scope.
 *
 * **If set to `{}` (object hash),** then a new "isolate" scope is created. The 'isolate' scope differs from
 * normal scope in that it does not prototypically inherit from the parent scope. This is useful
 * when creating reusable components, which should not accidentally read or modify data in the
 * parent scope.
 *
 * The 'isolate' scope takes an object hash which defines a set of local scope properties
 * derived from the parent scope. These local properties are useful for aliasing values for
 * templates. Locals definition is a hash of local scope property to its source:
 *
 * * `@` or `@attr` - bind a local scope property to the value of DOM attribute. The result is
 *   always a string since DOM attributes are strings. If no `attr` name is specified  then the
 *   attribute name is assumed to be the same as the local name.
 *   Given `<widget my-attr="hello {{name}}">` and widget definition
 *   of `scope: { localName:'@myAttr' }`, then widget scope property `localName` will reflect
 *   the interpolated value of `hello {{name}}`. As the `name` attribute changes so will the
 *   `localName` property on the widget scope. The `name` is read from the parent scope (not
 *   component scope).
 *
 * * `=` or `=attr` - set up bi-directional binding between a local scope property and the
 *   parent scope property of name defined via the value of the `attr` attribute. If no `attr`
 *   name is specified then the attribute name is assumed to be the same as the local name.
 *   Given `<widget my-attr="parentModel">` and widget definition of
 *   `scope: { localModel:'=myAttr' }`, then widget scope property `localModel` will reflect the
 *   value of `parentModel` on the parent scope. Any changes to `parentModel` will be reflected
 *   in `localModel` and any changes in `localModel` will reflect in `parentModel`. If the parent
 *   scope property doesn't exist, it will throw a NON_ASSIGNABLE_MODEL_EXPRESSION exception. You
 *   can avoid this behavior using `=?` or `=?attr` in order to flag the property as optional.
 *
 * * `&` or `&attr` - provides a way to execute an expression in the context of the parent scope.
 *   If no `attr` name is specified then the attribute name is assumed to be the same as the
 *   local name. Given `<widget my-attr="count = count + value">` and widget definition of
 *   `scope: { localFn:'&myAttr' }`, then isolate scope property `localFn` will point to
 *   a function wrapper for the `count = count + value` expression. Often it's desirable to
 *   pass data from the isolated scope via an expression to the parent scope, this can be
 *   done by passing a map of local variable names and values into the expression wrapper fn.
 *   For example, if the expression is `increment(amount)` then we can specify the amount value
 *   by calling the `localFn` as `localFn({amount: 22})`.
 *
 *
 *
 * #### `controller`
 * Controller constructor function. The controller is instantiated before the
 * pre-linking phase and it is shared with other directives (see
 * `require` attribute). This allows the directives to communicate with each other and augment
 * each other's behavior. The controller is injectable (and supports bracket notation) with the following locals:
 *
 * * `$scope` - Current scope associated with the element
 * * `$element` - Current element
 * * `$attrs` - Current attributes object for the element
 * * `$transclude` - A transclude linking function pre-bound to the correct transclusion scope.
 *    The scope can be overridden by an optional first argument.
 *   `function([scope], cloneLinkingFn)`.
 *
 *
 * #### `require`
 * Require another directive and inject its controller as the fourth argument to the linking function. The
 * `require` takes a string name (or array of strings) of the directive(s) to pass in. If an array is used, the
 * injected argument will be an array in corresponding order. If no such directive can be
 * found, or if the directive does not have a controller, then an error is raised. The name can be prefixed with:
 *
 * * (no prefix) - Locate the required controller on the current element. Throw an error if not found.
 * * `?` - Attempt to locate the required controller or pass `null` to the `link` fn if not found.
 * * `^` - Locate the required controller by searching the element and its parents. Throw an error if not found.
 * * `?^` - Attempt to locate the required controller by searching the element and its parents or pass
 *   `null` to the `link` fn if not found.
 *
 *
 * #### `controllerAs`
 * Controller alias at the directive scope. An alias for the controller so it
 * can be referenced at the directive template. The directive needs to define a scope for this
 * configuration to be used. Useful in the case when directive is used as component.
 *
 *
 * #### `restrict`
 * String of subset of `EACM` which restricts the directive to a specific directive
 * declaration style. If omitted, the default (attributes only) is used.
 *
 * * `E` - Element name: `<my-directive></my-directive>`
 * * `A` - Attribute (default): `<div my-directive="exp"></div>`
 * * `C` - Class: `<div class="my-directive: exp;"></div>`
 * * `M` - Comment: `<!-- directive: my-directive exp -->`
 *
 *
 * #### `template`
 * HTML markup that may:
 * * Replace the contents of the directive's element (default).
 * * Replace the directive's element itself (if `replace` is true - DEPRECATED).
 * * Wrap the contents of the directive's element (if `transclude` is true).
 *
 * Value may be:
 *
 * * A string. For example `<div red-on-hover>{{delete_str}}</div>`.
 * * A function which takes two arguments `tElement` and `tAttrs` (described in the `compile`
 *   function api below) and returns a string value.
 *
 *
 * #### `templateUrl`
 * Same as `template` but the template is loaded from the specified URL. Because
 * the template loading is asynchronous the compilation/linking is suspended until the template
 * is loaded.
 *
 * You can specify `templateUrl` as a string representing the URL or as a function which takes two
 * arguments `tElement` and `tAttrs` (described in the `compile` function api below) and returns
 * a string value representing the url.  In either case, the template URL is passed through {@link
 * api/ng.$sce#getTrustedResourceUrl $sce.getTrustedResourceUrl}.
 *
 *
 * #### `replace` ([*DEPRECATED*!], will be removed in next major release)
 * specify what the template should replace. Defaults to `false`.
 *
 * * `true` - the template will replace the directive's element.
 * * `false` - the template will replace the contents of the directive's element.
 *
 * The replacement process migrates all of the attributes / classes from the old element to the new
 * one. See the {@link guide/directive#creating-custom-directives_creating-directives_template-expanding-directive
 * Directives Guide} for an example.
 *
 * #### `transclude`
 * compile the content of the element and make it available to the directive.
 * Typically used with {@link ng.directive:ngTransclude
 * ngTransclude}. The advantage of transclusion is that the linking function receives a
 * transclusion function which is pre-bound to the correct scope. In a typical setup the widget
 * creates an `isolate` scope, but the transclusion is not a child, but a sibling of the `isolate`
 * scope. This makes it possible for the widget to have private state, and the transclusion to
 * be bound to the parent (pre-`isolate`) scope.
 *
 * There are two kinds of transclusion depending upon whether you want to transclude just the contents of the
 * directive's element or the entire element:
 *
 * * `true` - transclude the content (i.e. the child nodes) of the directive's element.
 * * `'element'` - transclude the whole of the directive's element including any directives on this
 *   element that defined at a lower priority than this directive. When used, the `template`
 *   property is ignored.
 *
 * <div class="alert alert-warning">
 * **Note:** When testing an element transclude directive you must not place the directive at the root of the
 * DOM fragment that is being compiled. See {@link guide/unit-testing#testing-transclusion-directives
 * Testing Transclusion Directives}.
 * </div>
 *
 * #### `compile`
 *
 * ```js
 *   function compile(tElement, tAttrs, transclude) { ... }
 * ```
 *
 * The compile function deals with transforming the template DOM. Since most directives do not do
 * template transformation, it is not used often. The compile function takes the following arguments:
 *
 *   * `tElement` - template element - The element where the directive has been declared. It is
 *     safe to do template transformation on the element and child elements only.
 *
 *   * `tAttrs` - template attributes - Normalized list of attributes declared on this element shared
 *     between all directive compile functions.
 *
 *   * `transclude` -  [*DEPRECATED*!] A transclude linking function: `function(scope, cloneLinkingFn)`
 *
 * <div class="alert alert-warning">
 * **Note:** The template instance and the link instance may be different objects if the template has
 * been cloned. For this reason it is **not** safe to do anything other than DOM transformations that
 * apply to all cloned DOM nodes within the compile function. Specifically, DOM listener registration
 * should be done in a linking function rather than in a compile function.
 * </div>

 * <div class="alert alert-warning">
 * **Note:** The compile function cannot handle directives that recursively use themselves in their
 * own templates or compile functions. Compiling these directives results in an infinite loop and a
 * stack overflow errors.
 *
 * This can be avoided by manually using $compile in the postLink function to imperatively compile
 * a directive's template instead of relying on automatic template compilation via `template` or
 * `templateUrl` declaration or manual compilation inside the compile function.
 * </div>
 *
 * <div class="alert alert-error">
 * **Note:** The `transclude` function that is passed to the compile function is deprecated, as it
 *   e.g. does not know about the right outer scope. Please use the transclude function that is passed
 *   to the link function instead.
 * </div>

 * A compile function can have a return value which can be either a function or an object.
 *
 * * returning a (post-link) function - is equivalent to registering the linking function via the
 *   `link` property of the config object when the compile function is empty.
 *
 * * returning an object with function(s) registered via `pre` and `post` properties - allows you to
 *   control when a linking function should be called during the linking phase. See info about
 *   pre-linking and post-linking functions below.
 *
 *
 * #### `link`
 * This property is used only if the `compile` property is not defined.
 *
 * ```js
 *   function link(scope, iElement, iAttrs, controller, transcludeFn) { ... }
 * ```
 *
 * The link function is responsible for registering DOM listeners as well as updating the DOM. It is
 * executed after the template has been cloned. This is where most of the directive logic will be
 * put.
 *
 *   * `scope` - {@link ng.$rootScope.Scope Scope} - The scope to be used by the
 *     directive for registering {@link ng.$rootScope.Scope#$watch watches}.
 *
 *   * `iElement` - instance element - The element where the directive is to be used. It is safe to
 *     manipulate the children of the element only in `postLink` function since the children have
 *     already been linked.
 *
 *   * `iAttrs` - instance attributes - Normalized list of attributes declared on this element shared
 *     between all directive linking functions.
 *
 *   * `controller` - a controller instance - A controller instance if at least one directive on the
 *     element defines a controller. The controller is shared among all the directives, which allows
 *     the directives to use the controllers as a communication channel.
 *
 *   * `transcludeFn` - A transclude linking function pre-bound to the correct transclusion scope.
 *     The scope can be overridden by an optional first argument. This is the same as the `$transclude`
 *     parameter of directive controllers.
 *     `function([scope], cloneLinkingFn)`.
 *
 *
 * #### Pre-linking function
 *
 * Executed before the child elements are linked. Not safe to do DOM transformation since the
 * compiler linking function will fail to locate the correct elements for linking.
 *
 * #### Post-linking function
 *
 * Executed after the child elements are linked. It is safe to do DOM transformation in the post-linking function.
 *
 * <a name="Attributes"></a>
 * ### Attributes
 *
 * The {@link ng.$compile.directive.Attributes Attributes} object - passed as a parameter in the
 * `link()` or `compile()` functions. It has a variety of uses.
 *
 * accessing *Normalized attribute names:*
 * Directives like 'ngBind' can be expressed in many ways: 'ng:bind', `data-ng-bind`, or 'x-ng-bind'.
 * the attributes object allows for normalized access to
 *   the attributes.
 *
 * * *Directive inter-communication:* All directives share the same instance of the attributes
 *   object which allows the directives to use the attributes object as inter directive
 *   communication.
 *
 * * *Supports interpolation:* Interpolation attributes are assigned to the attribute object
 *   allowing other directives to read the interpolated value.
 *
 * * *Observing interpolated attributes:* Use `$observe` to observe the value changes of attributes
 *   that contain interpolation (e.g. `src="{{bar}}"`). Not only is this very efficient but it's also
 *   the only way to easily get the actual value because during the linking phase the interpolation
 *   hasn't been evaluated yet and so the value is at this time set to `undefined`.
 *
 * ```js
 * function linkingFn(scope, elm, attrs, ctrl) {
 *   // get the attribute value
 *   console.log(attrs.ngModel);
 *
 *   // change the attribute
 *   attrs.$set('ngModel', 'new value');
 *
 *   // observe changes to interpolated attribute
 *   attrs.$observe('ngModel', function(value) {
 *     console.log('ngModel has changed value to ' + value);
 *   });
 * }
 * ```
 *
 * ## Example
 *
 * <div class="alert alert-warning">
 * **Note**: Typically directives are registered with `module.directive`. The example below is
 * to illustrate how `$compile` works.
 * </div>
 *
 <example module="compileExample">
   <file name="index.html">
    <script>
      angular.module('compileExample', [], function($compileProvider) {
        // configure new 'compile' directive by passing a directive
        // factory function. The factory function injects the '$compile'
        $compileProvider.directive('compile', function($compile) {
          // directive factory creates a link function
          return function(scope, element, attrs) {
            scope.$watch(
              function(scope) {
                 // watch the 'compile' expression for changes
                return scope.$eval(attrs.compile);
              },
              function(value) {
                // when the 'compile' expression changes
                // assign it into the current DOM
                element.html(value);

                // compile the new DOM and link it to the current
                // scope.
                // NOTE: we only compile .childNodes so that
                // we don't get into infinite loop compiling ourselves
                $compile(element.contents())(scope);
              }
            );
          };
        });
      })
      .controller('GreeterController', ['$scope', function($scope) {
        $scope.name = 'Angular';
        $scope.html = 'Hello {{name}}';
      }]);
    </script>
    <div ng-controller="GreeterController">
      <input ng-model="name"> <br>
      <textarea ng-model="html"></textarea> <br>
      <div compile="html"></div>
    </div>
   </file>
   <file name="protractor.js" type="protractor">
     it('should auto compile', function() {
       var textarea = $('textarea');
       var output = $('div[compile]');
       // The initial state reads 'Hello Angular'.
       expect(output.getText()).toBe('Hello Angular');
       textarea.clear();
       textarea.sendKeys('{{name}}!');
       expect(output.getText()).toBe('Angular!');
     });
   </file>
 </example>

 *
 *
 * @param {string|DOMElement} element Element or HTML string to compile into a template function.
 * @param {function(angular.Scope, cloneAttachFn=)} transclude function available to directives.
 * @param {number} maxPriority only apply directives lower than given priority (Only effects the
 *                 root element(s), not their children)
 * @returns {function(scope, cloneAttachFn=)} a link function which is used to bind template
 * (a DOM element/tree) to a scope. Where:
 *
 *  * `scope` - A {@link ng.$rootScope.Scope Scope} to bind to.
 *  * `cloneAttachFn` - If `cloneAttachFn` is provided, then the link function will clone the
 *  `template` and call the `cloneAttachFn` function allowing the caller to attach the
 *  cloned elements to the DOM document at the appropriate place. The `cloneAttachFn` is
 *  called as: <br> `cloneAttachFn(clonedElement, scope)` where:
 *
 *      * `clonedElement` - is a clone of the original `element` passed into the compiler.
 *      * `scope` - is the current scope with which the linking function is working with.
 *
 * Calling the linking function returns the element of the template. It is either the original
 * element passed in, or the clone of the element if the `cloneAttachFn` is provided.
 *
 * After linking the view is not updated until after a call to $digest which typically is done by
 * Angular automatically.
 *
 * If you need access to the bound view, there are two ways to do it:
 *
 * - If you are not asking the linking function to clone the template, create the DOM element(s)
 *   before you send them to the compiler and keep this reference around.
 *   ```js
 *     var element = $compile('<p>{{total}}</p>')(scope);
 *   ```
 *
 * - if on the other hand, you need the element to be cloned, the view reference from the original
 *   example would not point to the clone, but rather to the original template that was cloned. In
 *   this case, you can access the clone via the cloneAttachFn:
 *   ```js
 *     var templateElement = angular.element('<p>{{total}}</p>'),
 *         scope = ....;
 *
 *     var clonedElement = $compile(templateElement)(scope, function(clonedElement, scope) {
 *       //attach the clone to DOM document at the right place
 *     });
 *
 *     //now we have reference to the cloned DOM via `clonedElement`
 *   ```
 *
 *
 * For information on how the compiler works, see the
 * {@link guide/compiler Angular HTML Compiler} section of the Developer Guide.
 */
  var $compileMinErr = minErr('$compile');
  /**
 * @ngdoc provider
 * @name $compileProvider
 * @kind function
 *
 * @description
 */
  $CompileProvider.$inject = [
    '$provide',
    '$$sanitizeUriProvider'
  ];
  function $CompileProvider($provide, $$sanitizeUriProvider) {
    var hasDirectives = {}, Suffix = 'Directive', COMMENT_DIRECTIVE_REGEXP = /^\s*directive\:\s*([\d\w_\-]+)\s+(.*)$/, CLASS_DIRECTIVE_REGEXP = /(([\d\w_\-]+)(?:\:([^;]+))?;?)/;
    // Ref: http://developers.whatwg.org/webappapis.html#event-handler-idl-attributes
    // The assumption is that future DOM event attribute names will begin with
    // 'on' and be composed of only English letters.
    var EVENT_HANDLER_ATTR_REGEXP = /^(on[a-z]+|formaction)$/;
    /**
   * @ngdoc method
   * @name $compileProvider#directive
   * @kind function
   *
   * @description
   * Register a new directive with the compiler.
   *
   * @param {string|Object} name Name of the directive in camel-case (i.e. <code>ngBind</code> which
   *    will match as <code>ng-bind</code>), or an object map of directives where the keys are the
   *    names and the values are the factories.
   * @param {Function|Array} directiveFactory An injectable directive factory function. See
   *    {@link guide/directive} for more info.
   * @returns {ng.$compileProvider} Self for chaining.
   */
    this.directive = function registerDirective(name, directiveFactory) {
      assertNotHasOwnProperty(name, 'directive');
      if (isString(name)) {
        assertArg(directiveFactory, 'directiveFactory');
        if (!hasDirectives.hasOwnProperty(name)) {
          hasDirectives[name] = [];
          $provide.factory(name + Suffix, [
            '$injector',
            '$exceptionHandler',
            function ($injector, $exceptionHandler) {
              var directives = [];
              forEach(hasDirectives[name], function (directiveFactory, index) {
                try {
                  var directive = $injector.invoke(directiveFactory);
                  if (isFunction(directive)) {
                    directive = { compile: valueFn(directive) };
                  } else if (!directive.compile && directive.link) {
                    directive.compile = valueFn(directive.link);
                  }
                  directive.priority = directive.priority || 0;
                  directive.index = index;
                  directive.name = directive.name || name;
                  directive.require = directive.require || directive.controller && directive.name;
                  directive.restrict = directive.restrict || 'A';
                  directives.push(directive);
                } catch (e) {
                  $exceptionHandler(e);
                }
              });
              return directives;
            }
          ]);
        }
        hasDirectives[name].push(directiveFactory);
      } else {
        forEach(name, reverseParams(registerDirective));
      }
      return this;
    };
    /**
   * @ngdoc method
   * @name $compileProvider#aHrefSanitizationWhitelist
   * @kind function
   *
   * @description
   * Retrieves or overrides the default regular expression that is used for whitelisting of safe
   * urls during a[href] sanitization.
   *
   * The sanitization is a security measure aimed at prevent XSS attacks via html links.
   *
   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into
   * an absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`
   * regular expression. If a match is found, the original url is written into the dom. Otherwise,
   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.
   *
   * @param {RegExp=} regexp New regexp to whitelist urls with.
   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for
   *    chaining otherwise.
   */
    this.aHrefSanitizationWhitelist = function (regexp) {
      if (isDefined(regexp)) {
        $$sanitizeUriProvider.aHrefSanitizationWhitelist(regexp);
        return this;
      } else {
        return $$sanitizeUriProvider.aHrefSanitizationWhitelist();
      }
    };
    /**
   * @ngdoc method
   * @name $compileProvider#imgSrcSanitizationWhitelist
   * @kind function
   *
   * @description
   * Retrieves or overrides the default regular expression that is used for whitelisting of safe
   * urls during img[src] sanitization.
   *
   * The sanitization is a security measure aimed at prevent XSS attacks via html links.
   *
   * Any url about to be assigned to img[src] via data-binding is first normalized and turned into
   * an absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`
   * regular expression. If a match is found, the original url is written into the dom. Otherwise,
   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.
   *
   * @param {RegExp=} regexp New regexp to whitelist urls with.
   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for
   *    chaining otherwise.
   */
    this.imgSrcSanitizationWhitelist = function (regexp) {
      if (isDefined(regexp)) {
        $$sanitizeUriProvider.imgSrcSanitizationWhitelist(regexp);
        return this;
      } else {
        return $$sanitizeUriProvider.imgSrcSanitizationWhitelist();
      }
    };
    this.$get = [
      '$injector',
      '$interpolate',
      '$exceptionHandler',
      '$http',
      '$templateCache',
      '$parse',
      '$controller',
      '$rootScope',
      '$document',
      '$sce',
      '$animate',
      '$$sanitizeUri',
      function ($injector, $interpolate, $exceptionHandler, $http, $templateCache, $parse, $controller, $rootScope, $document, $sce, $animate, $$sanitizeUri) {
        var Attributes = function (element, attr) {
          this.$$element = element;
          this.$attr = attr || {};
        };
        Attributes.prototype = {
          $normalize: directiveNormalize,
          $addClass: function (classVal) {
            if (classVal && classVal.length > 0) {
              $animate.addClass(this.$$element, classVal);
            }
          },
          $removeClass: function (classVal) {
            if (classVal && classVal.length > 0) {
              $animate.removeClass(this.$$element, classVal);
            }
          },
          $updateClass: function (newClasses, oldClasses) {
            var toAdd = tokenDifference(newClasses, oldClasses);
            var toRemove = tokenDifference(oldClasses, newClasses);
            if (toAdd.length === 0) {
              $animate.removeClass(this.$$element, toRemove);
            } else if (toRemove.length === 0) {
              $animate.addClass(this.$$element, toAdd);
            } else {
              $animate.setClass(this.$$element, toAdd, toRemove);
            }
          },
          $set: function (key, value, writeAttr, attrName) {
            // TODO: decide whether or not to throw an error if "class"
            //is set through this function since it may cause $updateClass to
            //become unstable.
            var booleanKey = getBooleanAttrName(this.$$element[0], key), normalizedVal, nodeName;
            if (booleanKey) {
              this.$$element.prop(key, value);
              attrName = booleanKey;
            }
            this[key] = value;
            // translate normalized key to actual key
            if (attrName) {
              this.$attr[key] = attrName;
            } else {
              attrName = this.$attr[key];
              if (!attrName) {
                this.$attr[key] = attrName = snake_case(key, '-');
              }
            }
            nodeName = nodeName_(this.$$element);
            // sanitize a[href] and img[src] values
            if (nodeName === 'A' && key === 'href' || nodeName === 'IMG' && key === 'src') {
              this[key] = value = $$sanitizeUri(value, key === 'src');
            }
            if (writeAttr !== false) {
              if (value === null || value === undefined) {
                this.$$element.removeAttr(attrName);
              } else {
                this.$$element.attr(attrName, value);
              }
            }
            // fire observers
            var $$observers = this.$$observers;
            $$observers && forEach($$observers[key], function (fn) {
              try {
                fn(value);
              } catch (e) {
                $exceptionHandler(e);
              }
            });
          },
          $observe: function (key, fn) {
            var attrs = this, $$observers = attrs.$$observers || (attrs.$$observers = {}), listeners = $$observers[key] || ($$observers[key] = []);
            listeners.push(fn);
            $rootScope.$evalAsync(function () {
              if (!listeners.$$inter) {
                // no one registered attribute interpolation function, so lets call it manually
                fn(attrs[key]);
              }
            });
            return fn;
          }
        };
        var startSymbol = $interpolate.startSymbol(), endSymbol = $interpolate.endSymbol(), denormalizeTemplate = startSymbol == '{{' || endSymbol == '}}' ? identity : function denormalizeTemplate(template) {
            return template.replace(/\{\{/g, startSymbol).replace(/}}/g, endSymbol);
          }, NG_ATTR_BINDING = /^ngAttr[A-Z]/;
        return compile;
        //================================
        function compile($compileNodes, transcludeFn, maxPriority, ignoreDirective, previousCompileContext) {
          if (!($compileNodes instanceof jqLite)) {
            // jquery always rewraps, whereas we need to preserve the original selector so that we can
            // modify it.
            $compileNodes = jqLite($compileNodes);
          }
          // We can not compile top level text elements since text nodes can be merged and we will
          // not be able to attach scope data to them, so we will wrap them in <span>
          forEach($compileNodes, function (node, index) {
            if (node.nodeType == 3 && node.nodeValue.match(/\S+/)) {
              $compileNodes[index] = node = jqLite(node).wrap('<span></span>').parent()[0];
            }
          });
          var compositeLinkFn = compileNodes($compileNodes, transcludeFn, $compileNodes, maxPriority, ignoreDirective, previousCompileContext);
          safeAddClass($compileNodes, 'ng-scope');
          return function publicLinkFn(scope, cloneConnectFn, transcludeControllers, parentBoundTranscludeFn) {
            assertArg(scope, 'scope');
            // important!!: we must call our jqLite.clone() since the jQuery one is trying to be smart
            // and sometimes changes the structure of the DOM.
            var $linkNode = cloneConnectFn ? JQLitePrototype.clone.call($compileNodes) : $compileNodes;
            forEach(transcludeControllers, function (instance, name) {
              $linkNode.data('$' + name + 'Controller', instance);
            });
            // Attach scope only to non-text nodes.
            for (var i = 0, ii = $linkNode.length; i < ii; i++) {
              var node = $linkNode[i], nodeType = node.nodeType;
              if (nodeType === 1 || nodeType === 9) {
                $linkNode.eq(i).data('$scope', scope);
              }
            }
            if (cloneConnectFn)
              cloneConnectFn($linkNode, scope);
            if (compositeLinkFn)
              compositeLinkFn(scope, $linkNode, $linkNode, parentBoundTranscludeFn);
            return $linkNode;
          };
        }
        function safeAddClass($element, className) {
          try {
            $element.addClass(className);
          } catch (e) {
          }
        }
        /**
     * Compile function matches each node in nodeList against the directives. Once all directives
     * for a particular node are collected their compile functions are executed. The compile
     * functions return values - the linking functions - are combined into a composite linking
     * function, which is the a linking function for the node.
     *
     * @param {NodeList} nodeList an array of nodes or NodeList to compile
     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the
     *        scope argument is auto-generated to the new child of the transcluded parent scope.
     * @param {DOMElement=} $rootElement If the nodeList is the root of the compilation tree then
     *        the rootElement must be set the jqLite collection of the compile root. This is
     *        needed so that the jqLite collection items can be replaced with widgets.
     * @param {number=} maxPriority Max directive priority.
     * @returns {Function} A composite linking function of all of the matched directives or null.
     */
        function compileNodes(nodeList, transcludeFn, $rootElement, maxPriority, ignoreDirective, previousCompileContext) {
          var linkFns = [], attrs, directives, nodeLinkFn, childNodes, childLinkFn, linkFnFound;
          for (var i = 0; i < nodeList.length; i++) {
            attrs = new Attributes();
            // we must always refer to nodeList[i] since the nodes can be replaced underneath us.
            directives = collectDirectives(nodeList[i], [], attrs, i === 0 ? maxPriority : undefined, ignoreDirective);
            nodeLinkFn = directives.length ? applyDirectivesToNode(directives, nodeList[i], attrs, transcludeFn, $rootElement, null, [], [], previousCompileContext) : null;
            if (nodeLinkFn && nodeLinkFn.scope) {
              safeAddClass(attrs.$$element, 'ng-scope');
            }
            childLinkFn = nodeLinkFn && nodeLinkFn.terminal || !(childNodes = nodeList[i].childNodes) || !childNodes.length ? null : compileNodes(childNodes, nodeLinkFn ? (nodeLinkFn.transcludeOnThisElement || !nodeLinkFn.templateOnThisElement) && nodeLinkFn.transclude : transcludeFn);
            linkFns.push(nodeLinkFn, childLinkFn);
            linkFnFound = linkFnFound || nodeLinkFn || childLinkFn;
            //use the previous context only for the first element in the virtual group
            previousCompileContext = null;
          }
          // return a linking function if we have found anything, null otherwise
          return linkFnFound ? compositeLinkFn : null;
          function compositeLinkFn(scope, nodeList, $rootElement, parentBoundTranscludeFn) {
            var nodeLinkFn, childLinkFn, node, childScope, i, ii, n, childBoundTranscludeFn;
            // copy nodeList so that linking doesn't break due to live list updates.
            var nodeListLength = nodeList.length, stableNodeList = new Array(nodeListLength);
            for (i = 0; i < nodeListLength; i++) {
              stableNodeList[i] = nodeList[i];
            }
            for (i = 0, n = 0, ii = linkFns.length; i < ii; n++) {
              node = stableNodeList[n];
              nodeLinkFn = linkFns[i++];
              childLinkFn = linkFns[i++];
              if (nodeLinkFn) {
                if (nodeLinkFn.scope) {
                  childScope = scope.$new();
                  jqLite.data(node, '$scope', childScope);
                } else {
                  childScope = scope;
                }
                if (nodeLinkFn.transcludeOnThisElement) {
                  childBoundTranscludeFn = createBoundTranscludeFn(scope, nodeLinkFn.transclude, parentBoundTranscludeFn);
                } else if (!nodeLinkFn.templateOnThisElement && parentBoundTranscludeFn) {
                  childBoundTranscludeFn = parentBoundTranscludeFn;
                } else if (!parentBoundTranscludeFn && transcludeFn) {
                  childBoundTranscludeFn = createBoundTranscludeFn(scope, transcludeFn);
                } else {
                  childBoundTranscludeFn = null;
                }
                nodeLinkFn(childLinkFn, childScope, node, $rootElement, childBoundTranscludeFn);
              } else if (childLinkFn) {
                childLinkFn(scope, node.childNodes, undefined, parentBoundTranscludeFn);
              }
            }
          }
        }
        function createBoundTranscludeFn(scope, transcludeFn, previousBoundTranscludeFn) {
          var boundTranscludeFn = function (transcludedScope, cloneFn, controllers) {
            var scopeCreated = false;
            if (!transcludedScope) {
              transcludedScope = scope.$new();
              transcludedScope.$$transcluded = true;
              scopeCreated = true;
            }
            var clone = transcludeFn(transcludedScope, cloneFn, controllers, previousBoundTranscludeFn);
            if (scopeCreated) {
              clone.on('$destroy', function () {
                transcludedScope.$destroy();
              });
            }
            return clone;
          };
          return boundTranscludeFn;
        }
        /**
     * Looks for directives on the given node and adds them to the directive collection which is
     * sorted.
     *
     * @param node Node to search.
     * @param directives An array to which the directives are added to. This array is sorted before
     *        the function returns.
     * @param attrs The shared attrs object which is used to populate the normalized attributes.
     * @param {number=} maxPriority Max directive priority.
     */
        function collectDirectives(node, directives, attrs, maxPriority, ignoreDirective) {
          var nodeType = node.nodeType, attrsMap = attrs.$attr, match, className;
          switch (nodeType) {
          case 1:
            /* Element */
            // use the node name: <directive>
            addDirective(directives, directiveNormalize(nodeName_(node).toLowerCase()), 'E', maxPriority, ignoreDirective);
            // iterate over the attributes
            for (var attr, name, nName, ngAttrName, value, isNgAttr, nAttrs = node.attributes, j = 0, jj = nAttrs && nAttrs.length; j < jj; j++) {
              var attrStartName = false;
              var attrEndName = false;
              attr = nAttrs[j];
              if (!msie || msie >= 8 || attr.specified) {
                name = attr.name;
                value = trim(attr.value);
                // support ngAttr attribute binding
                ngAttrName = directiveNormalize(name);
                if (isNgAttr = NG_ATTR_BINDING.test(ngAttrName)) {
                  name = snake_case(ngAttrName.substr(6), '-');
                }
                var directiveNName = ngAttrName.replace(/(Start|End)$/, '');
                if (ngAttrName === directiveNName + 'Start') {
                  attrStartName = name;
                  attrEndName = name.substr(0, name.length - 5) + 'end';
                  name = name.substr(0, name.length - 6);
                }
                nName = directiveNormalize(name.toLowerCase());
                attrsMap[nName] = name;
                if (isNgAttr || !attrs.hasOwnProperty(nName)) {
                  attrs[nName] = value;
                  if (getBooleanAttrName(node, nName)) {
                    attrs[nName] = true;  // presence means true
                  }
                }
                addAttrInterpolateDirective(node, directives, value, nName);
                addDirective(directives, nName, 'A', maxPriority, ignoreDirective, attrStartName, attrEndName);
              }
            }
            // use class as directive
            className = node.className;
            if (isString(className) && className !== '') {
              while (match = CLASS_DIRECTIVE_REGEXP.exec(className)) {
                nName = directiveNormalize(match[2]);
                if (addDirective(directives, nName, 'C', maxPriority, ignoreDirective)) {
                  attrs[nName] = trim(match[3]);
                }
                className = className.substr(match.index + match[0].length);
              }
            }
            break;
          case 3:
            /* Text Node */
            addTextInterpolateDirective(directives, node.nodeValue);
            break;
          case 8:
            /* Comment */
            try {
              match = COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue);
              if (match) {
                nName = directiveNormalize(match[1]);
                if (addDirective(directives, nName, 'M', maxPriority, ignoreDirective)) {
                  attrs[nName] = trim(match[2]);
                }
              }
            } catch (e) {
            }
            break;
          }
          directives.sort(byPriority);
          return directives;
        }
        /**
     * Given a node with an directive-start it collects all of the siblings until it finds
     * directive-end.
     * @param node
     * @param attrStart
     * @param attrEnd
     * @returns {*}
     */
        function groupScan(node, attrStart, attrEnd) {
          var nodes = [];
          var depth = 0;
          if (attrStart && node.hasAttribute && node.hasAttribute(attrStart)) {
            var startNode = node;
            do {
              if (!node) {
                throw $compileMinErr('uterdir', 'Unterminated attribute, found \'{0}\' but no matching \'{1}\' found.', attrStart, attrEnd);
              }
              if (node.nodeType == 1) {
                if (node.hasAttribute(attrStart))
                  depth++;
                if (node.hasAttribute(attrEnd))
                  depth--;
              }
              nodes.push(node);
              node = node.nextSibling;
            } while (depth > 0);
          } else {
            nodes.push(node);
          }
          return jqLite(nodes);
        }
        /**
     * Wrapper for linking function which converts normal linking function into a grouped
     * linking function.
     * @param linkFn
     * @param attrStart
     * @param attrEnd
     * @returns {Function}
     */
        function groupElementsLinkFnWrapper(linkFn, attrStart, attrEnd) {
          return function (scope, element, attrs, controllers, transcludeFn) {
            element = groupScan(element[0], attrStart, attrEnd);
            return linkFn(scope, element, attrs, controllers, transcludeFn);
          };
        }
        /**
     * Once the directives have been collected, their compile functions are executed. This method
     * is responsible for inlining directive templates as well as terminating the application
     * of the directives if the terminal directive has been reached.
     *
     * @param {Array} directives Array of collected directives to execute their compile function.
     *        this needs to be pre-sorted by priority order.
     * @param {Node} compileNode The raw DOM node to apply the compile functions to
     * @param {Object} templateAttrs The shared attribute function
     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the
     *                                                  scope argument is auto-generated to the new
     *                                                  child of the transcluded parent scope.
     * @param {JQLite} jqCollection If we are working on the root of the compile tree then this
     *                              argument has the root jqLite array so that we can replace nodes
     *                              on it.
     * @param {Object=} originalReplaceDirective An optional directive that will be ignored when
     *                                           compiling the transclusion.
     * @param {Array.<Function>} preLinkFns
     * @param {Array.<Function>} postLinkFns
     * @param {Object} previousCompileContext Context used for previous compilation of the current
     *                                        node
     * @returns {Function} linkFn
     */
        function applyDirectivesToNode(directives, compileNode, templateAttrs, transcludeFn, jqCollection, originalReplaceDirective, preLinkFns, postLinkFns, previousCompileContext) {
          previousCompileContext = previousCompileContext || {};
          var terminalPriority = -Number.MAX_VALUE, newScopeDirective, controllerDirectives = previousCompileContext.controllerDirectives, newIsolateScopeDirective = previousCompileContext.newIsolateScopeDirective, templateDirective = previousCompileContext.templateDirective, nonTlbTranscludeDirective = previousCompileContext.nonTlbTranscludeDirective, hasTranscludeDirective = false, hasTemplate = false, hasElementTranscludeDirective = previousCompileContext.hasElementTranscludeDirective, $compileNode = templateAttrs.$$element = jqLite(compileNode), directive, directiveName, $template, replaceDirective = originalReplaceDirective, childTranscludeFn = transcludeFn, linkFn, directiveValue;
          // executes all directives on the current element
          for (var i = 0, ii = directives.length; i < ii; i++) {
            directive = directives[i];
            var attrStart = directive.$$start;
            var attrEnd = directive.$$end;
            // collect multiblock sections
            if (attrStart) {
              $compileNode = groupScan(compileNode, attrStart, attrEnd);
            }
            $template = undefined;
            if (terminalPriority > directive.priority) {
              break;  // prevent further processing of directives
            }
            if (directiveValue = directive.scope) {
              newScopeDirective = newScopeDirective || directive;
              // skip the check for directives with async templates, we'll check the derived sync
              // directive when the template arrives
              if (!directive.templateUrl) {
                assertNoDuplicate('new/isolated scope', newIsolateScopeDirective, directive, $compileNode);
                if (isObject(directiveValue)) {
                  newIsolateScopeDirective = directive;
                }
              }
            }
            directiveName = directive.name;
            if (!directive.templateUrl && directive.controller) {
              directiveValue = directive.controller;
              controllerDirectives = controllerDirectives || {};
              assertNoDuplicate('\'' + directiveName + '\' controller', controllerDirectives[directiveName], directive, $compileNode);
              controllerDirectives[directiveName] = directive;
            }
            if (directiveValue = directive.transclude) {
              hasTranscludeDirective = true;
              // Special case ngIf and ngRepeat so that we don't complain about duplicate transclusion.
              // This option should only be used by directives that know how to safely handle element transclusion,
              // where the transcluded nodes are added or replaced after linking.
              if (!directive.$$tlb) {
                assertNoDuplicate('transclusion', nonTlbTranscludeDirective, directive, $compileNode);
                nonTlbTranscludeDirective = directive;
              }
              if (directiveValue == 'element') {
                hasElementTranscludeDirective = true;
                terminalPriority = directive.priority;
                $template = $compileNode;
                $compileNode = templateAttrs.$$element = jqLite(document.createComment(' ' + directiveName + ': ' + templateAttrs[directiveName] + ' '));
                compileNode = $compileNode[0];
                replaceWith(jqCollection, sliceArgs($template), compileNode);
                childTranscludeFn = compile($template, transcludeFn, terminalPriority, replaceDirective && replaceDirective.name, { nonTlbTranscludeDirective: nonTlbTranscludeDirective });
              } else {
                $template = jqLite(jqLiteClone(compileNode)).contents();
                $compileNode.empty();
                // clear contents
                childTranscludeFn = compile($template, transcludeFn);
              }
            }
            if (directive.template) {
              hasTemplate = true;
              assertNoDuplicate('template', templateDirective, directive, $compileNode);
              templateDirective = directive;
              directiveValue = isFunction(directive.template) ? directive.template($compileNode, templateAttrs) : directive.template;
              directiveValue = denormalizeTemplate(directiveValue);
              if (directive.replace) {
                replaceDirective = directive;
                if (jqLiteIsTextNode(directiveValue)) {
                  $template = [];
                } else {
                  $template = jqLite(trim(directiveValue));
                }
                compileNode = $template[0];
                if ($template.length != 1 || compileNode.nodeType !== 1) {
                  throw $compileMinErr('tplrt', 'Template for directive \'{0}\' must have exactly one root element. {1}', directiveName, '');
                }
                replaceWith(jqCollection, $compileNode, compileNode);
                var newTemplateAttrs = { $attr: {} };
                // combine directives from the original node and from the template:
                // - take the array of directives for this element
                // - split it into two parts, those that already applied (processed) and those that weren't (unprocessed)
                // - collect directives from the template and sort them by priority
                // - combine directives as: processed + template + unprocessed
                var templateDirectives = collectDirectives(compileNode, [], newTemplateAttrs);
                var unprocessedDirectives = directives.splice(i + 1, directives.length - (i + 1));
                if (newIsolateScopeDirective) {
                  markDirectivesAsIsolate(templateDirectives);
                }
                directives = directives.concat(templateDirectives).concat(unprocessedDirectives);
                mergeTemplateAttributes(templateAttrs, newTemplateAttrs);
                ii = directives.length;
              } else {
                $compileNode.html(directiveValue);
              }
            }
            if (directive.templateUrl) {
              hasTemplate = true;
              assertNoDuplicate('template', templateDirective, directive, $compileNode);
              templateDirective = directive;
              if (directive.replace) {
                replaceDirective = directive;
              }
              nodeLinkFn = compileTemplateUrl(directives.splice(i, directives.length - i), $compileNode, templateAttrs, jqCollection, hasTranscludeDirective && childTranscludeFn, preLinkFns, postLinkFns, {
                controllerDirectives: controllerDirectives,
                newIsolateScopeDirective: newIsolateScopeDirective,
                templateDirective: templateDirective,
                nonTlbTranscludeDirective: nonTlbTranscludeDirective
              });
              ii = directives.length;
            } else if (directive.compile) {
              try {
                linkFn = directive.compile($compileNode, templateAttrs, childTranscludeFn);
                if (isFunction(linkFn)) {
                  addLinkFns(null, linkFn, attrStart, attrEnd);
                } else if (linkFn) {
                  addLinkFns(linkFn.pre, linkFn.post, attrStart, attrEnd);
                }
              } catch (e) {
                $exceptionHandler(e, startingTag($compileNode));
              }
            }
            if (directive.terminal) {
              nodeLinkFn.terminal = true;
              terminalPriority = Math.max(terminalPriority, directive.priority);
            }
          }
          nodeLinkFn.scope = newScopeDirective && newScopeDirective.scope === true;
          nodeLinkFn.transcludeOnThisElement = hasTranscludeDirective;
          nodeLinkFn.templateOnThisElement = hasTemplate;
          nodeLinkFn.transclude = childTranscludeFn;
          previousCompileContext.hasElementTranscludeDirective = hasElementTranscludeDirective;
          // might be normal or delayed nodeLinkFn depending on if templateUrl is present
          return nodeLinkFn;
          ////////////////////
          function addLinkFns(pre, post, attrStart, attrEnd) {
            if (pre) {
              if (attrStart)
                pre = groupElementsLinkFnWrapper(pre, attrStart, attrEnd);
              pre.require = directive.require;
              pre.directiveName = directiveName;
              if (newIsolateScopeDirective === directive || directive.$$isolateScope) {
                pre = cloneAndAnnotateFn(pre, { isolateScope: true });
              }
              preLinkFns.push(pre);
            }
            if (post) {
              if (attrStart)
                post = groupElementsLinkFnWrapper(post, attrStart, attrEnd);
              post.require = directive.require;
              post.directiveName = directiveName;
              if (newIsolateScopeDirective === directive || directive.$$isolateScope) {
                post = cloneAndAnnotateFn(post, { isolateScope: true });
              }
              postLinkFns.push(post);
            }
          }
          function getControllers(directiveName, require, $element, elementControllers) {
            var value, retrievalMethod = 'data', optional = false;
            if (isString(require)) {
              while ((value = require.charAt(0)) == '^' || value == '?') {
                require = require.substr(1);
                if (value == '^') {
                  retrievalMethod = 'inheritedData';
                }
                optional = optional || value == '?';
              }
              value = null;
              if (elementControllers && retrievalMethod === 'data') {
                value = elementControllers[require];
              }
              value = value || $element[retrievalMethod]('$' + require + 'Controller');
              if (!value && !optional) {
                throw $compileMinErr('ctreq', 'Controller \'{0}\', required by directive \'{1}\', can\'t be found!', require, directiveName);
              }
              return value;
            } else if (isArray(require)) {
              value = [];
              forEach(require, function (require) {
                value.push(getControllers(directiveName, require, $element, elementControllers));
              });
            }
            return value;
          }
          function nodeLinkFn(childLinkFn, scope, linkNode, $rootElement, boundTranscludeFn) {
            var attrs, $element, i, ii, linkFn, controller, isolateScope, elementControllers = {}, transcludeFn;
            attrs = compileNode === linkNode ? templateAttrs : shallowCopy(templateAttrs, new Attributes(jqLite(linkNode), templateAttrs.$attr));
            $element = attrs.$$element;
            if (newIsolateScopeDirective) {
              var LOCAL_REGEXP = /^\s*([@=&])(\??)\s*(\w*)\s*$/;
              isolateScope = scope.$new(true);
              if (templateDirective && (templateDirective === newIsolateScopeDirective || templateDirective === newIsolateScopeDirective.$$originalDirective)) {
                $element.data('$isolateScope', isolateScope);
              } else {
                $element.data('$isolateScopeNoTemplate', isolateScope);
              }
              safeAddClass($element, 'ng-isolate-scope');
              forEach(newIsolateScopeDirective.scope, function (definition, scopeName) {
                var match = definition.match(LOCAL_REGEXP) || [], attrName = match[3] || scopeName, optional = match[2] == '?', mode = match[1],
                  // @, =, or &
                  lastValue, parentGet, parentSet, compare;
                isolateScope.$$isolateBindings[scopeName] = mode + attrName;
                switch (mode) {
                case '@':
                  attrs.$observe(attrName, function (value) {
                    isolateScope[scopeName] = value;
                  });
                  attrs.$$observers[attrName].$$scope = scope;
                  if (attrs[attrName]) {
                    // If the attribute has been provided then we trigger an interpolation to ensure
                    // the value is there for use in the link fn
                    isolateScope[scopeName] = $interpolate(attrs[attrName])(scope);
                  }
                  break;
                case '=':
                  if (optional && !attrs[attrName]) {
                    return;
                  }
                  parentGet = $parse(attrs[attrName]);
                  if (parentGet.literal) {
                    compare = equals;
                  } else {
                    compare = function (a, b) {
                      return a === b || a !== a && b !== b;
                    };
                  }
                  parentSet = parentGet.assign || function () {
                    // reset the change, or we will throw this exception on every $digest
                    lastValue = isolateScope[scopeName] = parentGet(scope);
                    throw $compileMinErr('nonassign', 'Expression \'{0}\' used with directive \'{1}\' is non-assignable!', attrs[attrName], newIsolateScopeDirective.name);
                  };
                  lastValue = isolateScope[scopeName] = parentGet(scope);
                  isolateScope.$watch(function parentValueWatch() {
                    var parentValue = parentGet(scope);
                    if (!compare(parentValue, isolateScope[scopeName])) {
                      // we are out of sync and need to copy
                      if (!compare(parentValue, lastValue)) {
                        // parent changed and it has precedence
                        isolateScope[scopeName] = parentValue;
                      } else {
                        // if the parent can be assigned then do so
                        parentSet(scope, parentValue = isolateScope[scopeName]);
                      }
                    }
                    return lastValue = parentValue;
                  }, null, parentGet.literal);
                  break;
                case '&':
                  parentGet = $parse(attrs[attrName]);
                  isolateScope[scopeName] = function (locals) {
                    return parentGet(scope, locals);
                  };
                  break;
                default:
                  throw $compileMinErr('iscp', 'Invalid isolate scope definition for directive \'{0}\'.' + ' Definition: {... {1}: \'{2}\' ...}', newIsolateScopeDirective.name, scopeName, definition);
                }
              });
            }
            transcludeFn = boundTranscludeFn && controllersBoundTransclude;
            if (controllerDirectives) {
              forEach(controllerDirectives, function (directive) {
                var locals = {
                    $scope: directive === newIsolateScopeDirective || directive.$$isolateScope ? isolateScope : scope,
                    $element: $element,
                    $attrs: attrs,
                    $transclude: transcludeFn
                  }, controllerInstance;
                controller = directive.controller;
                if (controller == '@') {
                  controller = attrs[directive.name];
                }
                controllerInstance = $controller(controller, locals);
                // For directives with element transclusion the element is a comment,
                // but jQuery .data doesn't support attaching data to comment nodes as it's hard to
                // clean up (http://bugs.jquery.com/ticket/8335).
                // Instead, we save the controllers for the element in a local hash and attach to .data
                // later, once we have the actual element.
                elementControllers[directive.name] = controllerInstance;
                if (!hasElementTranscludeDirective) {
                  $element.data('$' + directive.name + 'Controller', controllerInstance);
                }
                if (directive.controllerAs) {
                  locals.$scope[directive.controllerAs] = controllerInstance;
                }
              });
            }
            // PRELINKING
            for (i = 0, ii = preLinkFns.length; i < ii; i++) {
              try {
                linkFn = preLinkFns[i];
                linkFn(linkFn.isolateScope ? isolateScope : scope, $element, attrs, linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers), transcludeFn);
              } catch (e) {
                $exceptionHandler(e, startingTag($element));
              }
            }
            // RECURSION
            // We only pass the isolate scope, if the isolate directive has a template,
            // otherwise the child elements do not belong to the isolate directive.
            var scopeToChild = scope;
            if (newIsolateScopeDirective && (newIsolateScopeDirective.template || newIsolateScopeDirective.templateUrl === null)) {
              scopeToChild = isolateScope;
            }
            childLinkFn && childLinkFn(scopeToChild, linkNode.childNodes, undefined, boundTranscludeFn);
            // POSTLINKING
            for (i = postLinkFns.length - 1; i >= 0; i--) {
              try {
                linkFn = postLinkFns[i];
                linkFn(linkFn.isolateScope ? isolateScope : scope, $element, attrs, linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers), transcludeFn);
              } catch (e) {
                $exceptionHandler(e, startingTag($element));
              }
            }
            // This is the function that is injected as `$transclude`.
            function controllersBoundTransclude(scope, cloneAttachFn) {
              var transcludeControllers;
              // no scope passed
              if (arguments.length < 2) {
                cloneAttachFn = scope;
                scope = undefined;
              }
              if (hasElementTranscludeDirective) {
                transcludeControllers = elementControllers;
              }
              return boundTranscludeFn(scope, cloneAttachFn, transcludeControllers);
            }
          }
        }
        function markDirectivesAsIsolate(directives) {
          // mark all directives as needing isolate scope.
          for (var j = 0, jj = directives.length; j < jj; j++) {
            directives[j] = inherit(directives[j], { $$isolateScope: true });
          }
        }
        /**
     * looks up the directive and decorates it with exception handling and proper parameters. We
     * call this the boundDirective.
     *
     * @param {string} name name of the directive to look up.
     * @param {string} location The directive must be found in specific format.
     *   String containing any of theses characters:
     *
     *   * `E`: element name
     *   * `A': attribute
     *   * `C`: class
     *   * `M`: comment
     * @returns {boolean} true if directive was added.
     */
        function addDirective(tDirectives, name, location, maxPriority, ignoreDirective, startAttrName, endAttrName) {
          if (name === ignoreDirective)
            return null;
          var match = null;
          if (hasDirectives.hasOwnProperty(name)) {
            for (var directive, directives = $injector.get(name + Suffix), i = 0, ii = directives.length; i < ii; i++) {
              try {
                directive = directives[i];
                if ((maxPriority === undefined || maxPriority > directive.priority) && directive.restrict.indexOf(location) != -1) {
                  if (startAttrName) {
                    directive = inherit(directive, {
                      $$start: startAttrName,
                      $$end: endAttrName
                    });
                  }
                  tDirectives.push(directive);
                  match = directive;
                }
              } catch (e) {
                $exceptionHandler(e);
              }
            }
          }
          return match;
        }
        /**
     * When the element is replaced with HTML template then the new attributes
     * on the template need to be merged with the existing attributes in the DOM.
     * The desired effect is to have both of the attributes present.
     *
     * @param {object} dst destination attributes (original DOM)
     * @param {object} src source attributes (from the directive template)
     */
        function mergeTemplateAttributes(dst, src) {
          var srcAttr = src.$attr, dstAttr = dst.$attr, $element = dst.$$element;
          // reapply the old attributes to the new element
          forEach(dst, function (value, key) {
            if (key.charAt(0) != '$') {
              if (src[key] && src[key] !== value) {
                value += (key === 'style' ? ';' : ' ') + src[key];
              }
              dst.$set(key, value, true, srcAttr[key]);
            }
          });
          // copy the new attributes on the old attrs object
          forEach(src, function (value, key) {
            if (key == 'class') {
              safeAddClass($element, value);
              dst['class'] = (dst['class'] ? dst['class'] + ' ' : '') + value;
            } else if (key == 'style') {
              $element.attr('style', $element.attr('style') + ';' + value);
              dst['style'] = (dst['style'] ? dst['style'] + ';' : '') + value;  // `dst` will never contain hasOwnProperty as DOM parser won't let it.
                                                                                // You will get an "InvalidCharacterError: DOM Exception 5" error if you
                                                                                // have an attribute like "has-own-property" or "data-has-own-property", etc.
            } else if (key.charAt(0) != '$' && !dst.hasOwnProperty(key)) {
              dst[key] = value;
              dstAttr[key] = srcAttr[key];
            }
          });
        }
        function compileTemplateUrl(directives, $compileNode, tAttrs, $rootElement, childTranscludeFn, preLinkFns, postLinkFns, previousCompileContext) {
          var linkQueue = [], afterTemplateNodeLinkFn, afterTemplateChildLinkFn, beforeTemplateCompileNode = $compileNode[0], origAsyncDirective = directives.shift(),
            // The fact that we have to copy and patch the directive seems wrong!
            derivedSyncDirective = extend({}, origAsyncDirective, {
              templateUrl: null,
              transclude: null,
              replace: null,
              $$originalDirective: origAsyncDirective
            }), templateUrl = isFunction(origAsyncDirective.templateUrl) ? origAsyncDirective.templateUrl($compileNode, tAttrs) : origAsyncDirective.templateUrl;
          $compileNode.empty();
          $http.get($sce.getTrustedResourceUrl(templateUrl), { cache: $templateCache }).success(function (content) {
            var compileNode, tempTemplateAttrs, $template, childBoundTranscludeFn;
            content = denormalizeTemplate(content);
            if (origAsyncDirective.replace) {
              if (jqLiteIsTextNode(content)) {
                $template = [];
              } else {
                $template = jqLite(trim(content));
              }
              compileNode = $template[0];
              if ($template.length != 1 || compileNode.nodeType !== 1) {
                throw $compileMinErr('tplrt', 'Template for directive \'{0}\' must have exactly one root element. {1}', origAsyncDirective.name, templateUrl);
              }
              tempTemplateAttrs = { $attr: {} };
              replaceWith($rootElement, $compileNode, compileNode);
              var templateDirectives = collectDirectives(compileNode, [], tempTemplateAttrs);
              if (isObject(origAsyncDirective.scope)) {
                markDirectivesAsIsolate(templateDirectives);
              }
              directives = templateDirectives.concat(directives);
              mergeTemplateAttributes(tAttrs, tempTemplateAttrs);
            } else {
              compileNode = beforeTemplateCompileNode;
              $compileNode.html(content);
            }
            directives.unshift(derivedSyncDirective);
            afterTemplateNodeLinkFn = applyDirectivesToNode(directives, compileNode, tAttrs, childTranscludeFn, $compileNode, origAsyncDirective, preLinkFns, postLinkFns, previousCompileContext);
            forEach($rootElement, function (node, i) {
              if (node == compileNode) {
                $rootElement[i] = $compileNode[0];
              }
            });
            afterTemplateChildLinkFn = compileNodes($compileNode[0].childNodes, childTranscludeFn);
            while (linkQueue.length) {
              var scope = linkQueue.shift(), beforeTemplateLinkNode = linkQueue.shift(), linkRootElement = linkQueue.shift(), boundTranscludeFn = linkQueue.shift(), linkNode = $compileNode[0];
              if (beforeTemplateLinkNode !== beforeTemplateCompileNode) {
                var oldClasses = beforeTemplateLinkNode.className;
                if (!(previousCompileContext.hasElementTranscludeDirective && origAsyncDirective.replace)) {
                  // it was cloned therefore we have to clone as well.
                  linkNode = jqLiteClone(compileNode);
                }
                replaceWith(linkRootElement, jqLite(beforeTemplateLinkNode), linkNode);
                // Copy in CSS classes from original node
                safeAddClass(jqLite(linkNode), oldClasses);
              }
              if (afterTemplateNodeLinkFn.transcludeOnThisElement) {
                childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn);
              } else {
                childBoundTranscludeFn = boundTranscludeFn;
              }
              afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, linkNode, $rootElement, childBoundTranscludeFn);
            }
            linkQueue = null;
          }).error(function (response, code, headers, config) {
            throw $compileMinErr('tpload', 'Failed to load template: {0}', config.url);
          });
          return function delayedNodeLinkFn(ignoreChildLinkFn, scope, node, rootElement, boundTranscludeFn) {
            var childBoundTranscludeFn = boundTranscludeFn;
            if (linkQueue) {
              linkQueue.push(scope);
              linkQueue.push(node);
              linkQueue.push(rootElement);
              linkQueue.push(childBoundTranscludeFn);
            } else {
              if (afterTemplateNodeLinkFn.transcludeOnThisElement) {
                childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn);
              }
              afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, node, rootElement, childBoundTranscludeFn);
            }
          };
        }
        /**
     * Sorting function for bound directives.
     */
        function byPriority(a, b) {
          var diff = b.priority - a.priority;
          if (diff !== 0)
            return diff;
          if (a.name !== b.name)
            return a.name < b.name ? -1 : 1;
          return a.index - b.index;
        }
        function assertNoDuplicate(what, previousDirective, directive, element) {
          if (previousDirective) {
            throw $compileMinErr('multidir', 'Multiple directives [{0}, {1}] asking for {2} on: {3}', previousDirective.name, directive.name, what, startingTag(element));
          }
        }
        function addTextInterpolateDirective(directives, text) {
          var interpolateFn = $interpolate(text, true);
          if (interpolateFn) {
            directives.push({
              priority: 0,
              compile: function textInterpolateCompileFn(templateNode) {
                // when transcluding a template that has bindings in the root
                // then we don't have a parent and should do this in the linkFn
                var parent = templateNode.parent(), hasCompileParent = parent.length;
                if (hasCompileParent)
                  safeAddClass(templateNode.parent(), 'ng-binding');
                return function textInterpolateLinkFn(scope, node) {
                  var parent = node.parent(), bindings = parent.data('$binding') || [];
                  bindings.push(interpolateFn);
                  parent.data('$binding', bindings);
                  if (!hasCompileParent)
                    safeAddClass(parent, 'ng-binding');
                  scope.$watch(interpolateFn, function interpolateFnWatchAction(value) {
                    node[0].nodeValue = value;
                  });
                };
              }
            });
          }
        }
        function getTrustedContext(node, attrNormalizedName) {
          if (attrNormalizedName == 'srcdoc') {
            return $sce.HTML;
          }
          var tag = nodeName_(node);
          // maction[xlink:href] can source SVG.  It's not limited to <maction>.
          if (attrNormalizedName == 'xlinkHref' || tag == 'FORM' && attrNormalizedName == 'action' || tag != 'IMG' && (attrNormalizedName == 'src' || attrNormalizedName == 'ngSrc')) {
            return $sce.RESOURCE_URL;
          }
        }
        function addAttrInterpolateDirective(node, directives, value, name) {
          var interpolateFn = $interpolate(value, true);
          // no interpolation found -> ignore
          if (!interpolateFn)
            return;
          if (name === 'multiple' && nodeName_(node) === 'SELECT') {
            throw $compileMinErr('selmulti', 'Binding to the \'multiple\' attribute is not supported. Element: {0}', startingTag(node));
          }
          directives.push({
            priority: 100,
            compile: function () {
              return {
                pre: function attrInterpolatePreLinkFn(scope, element, attr) {
                  var $$observers = attr.$$observers || (attr.$$observers = {});
                  if (EVENT_HANDLER_ATTR_REGEXP.test(name)) {
                    throw $compileMinErr('nodomevents', 'Interpolations for HTML DOM event attributes are disallowed.  Please use the ' + 'ng- versions (such as ng-click instead of onclick) instead.');
                  }
                  // we need to interpolate again, in case the attribute value has been updated
                  // (e.g. by another directive's compile function)
                  interpolateFn = $interpolate(attr[name], true, getTrustedContext(node, name));
                  // if attribute was updated so that there is no interpolation going on we don't want to
                  // register any observers
                  if (!interpolateFn)
                    return;
                  // TODO(i): this should likely be attr.$set(name, iterpolateFn(scope) so that we reset the
                  // actual attr value
                  attr[name] = interpolateFn(scope);
                  ($$observers[name] || ($$observers[name] = [])).$$inter = true;
                  (attr.$$observers && attr.$$observers[name].$$scope || scope).$watch(interpolateFn, function interpolateFnWatchAction(newValue, oldValue) {
                    //special case for class attribute addition + removal
                    //so that class changes can tap into the animation
                    //hooks provided by the $animate service. Be sure to
                    //skip animations when the first digest occurs (when
                    //both the new and the old values are the same) since
                    //the CSS classes are the non-interpolated values
                    if (name === 'class' && newValue != oldValue) {
                      attr.$updateClass(newValue, oldValue);
                    } else {
                      attr.$set(name, newValue);
                    }
                  });
                }
              };
            }
          });
        }
        /**
     * This is a special jqLite.replaceWith, which can replace items which
     * have no parents, provided that the containing jqLite collection is provided.
     *
     * @param {JqLite=} $rootElement The root of the compile tree. Used so that we can replace nodes
     *                               in the root of the tree.
     * @param {JqLite} elementsToRemove The jqLite element which we are going to replace. We keep
     *                                  the shell, but replace its DOM node reference.
     * @param {Node} newNode The new DOM node.
     */
        function replaceWith($rootElement, elementsToRemove, newNode) {
          var firstElementToRemove = elementsToRemove[0], removeCount = elementsToRemove.length, parent = firstElementToRemove.parentNode, i, ii;
          if ($rootElement) {
            for (i = 0, ii = $rootElement.length; i < ii; i++) {
              if ($rootElement[i] == firstElementToRemove) {
                $rootElement[i++] = newNode;
                for (var j = i, j2 = j + removeCount - 1, jj = $rootElement.length; j < jj; j++, j2++) {
                  if (j2 < jj) {
                    $rootElement[j] = $rootElement[j2];
                  } else {
                    delete $rootElement[j];
                  }
                }
                $rootElement.length -= removeCount - 1;
                break;
              }
            }
          }
          if (parent) {
            parent.replaceChild(newNode, firstElementToRemove);
          }
          var fragment = document.createDocumentFragment();
          fragment.appendChild(firstElementToRemove);
          newNode[jqLite.expando] = firstElementToRemove[jqLite.expando];
          for (var k = 1, kk = elementsToRemove.length; k < kk; k++) {
            var element = elementsToRemove[k];
            jqLite(element).remove();
            // must do this way to clean up expando
            fragment.appendChild(element);
            delete elementsToRemove[k];
          }
          elementsToRemove[0] = newNode;
          elementsToRemove.length = 1;
        }
        function cloneAndAnnotateFn(fn, annotation) {
          return extend(function () {
            return fn.apply(null, arguments);
          }, fn, annotation);
        }
      }
    ];
  }
  var PREFIX_REGEXP = /^(x[\:\-_]|data[\:\-_])/i;
  /**
 * Converts all accepted directives format into proper directive name.
 * @param name Name to normalize
 */
  function directiveNormalize(name) {
    return camelCase(name.replace(PREFIX_REGEXP, ''));
  }
  /**
 * @ngdoc type
 * @name $compile.directive.Attributes
 *
 * @description
 * A shared object between directive compile / linking functions which contains normalized DOM
 * element attributes. The values reflect current binding state `{{ }}`. The normalization is
 * needed since all of these are treated as equivalent in Angular:
 *
 * ```
 *    <span ng:bind="a" ng-bind="a" data-ng-bind="a" x-ng-bind="a">
 * ```
 */
  /**
 * @ngdoc property
 * @name $compile.directive.Attributes#$attr
 *
 * @description
 * A map of DOM element attribute names to the normalized name. This is
 * needed to do reverse lookup from normalized name back to actual name.
 */
  /**
 * @ngdoc method
 * @name $compile.directive.Attributes#$set
 * @kind function
 *
 * @description
 * Set DOM element attribute value.
 *
 *
 * @param {string} name Normalized element attribute name of the property to modify. The name is
 *          reverse-translated using the {@link ng.$compile.directive.Attributes#$attr $attr}
 *          property to the original name.
 * @param {string} value Value to set the attribute to. The value can be an interpolated string.
 */
  /**
 * Closure compiler type information
 */
  function nodesetLinkingFn(scope, nodeList, rootElement, boundTranscludeFn) {
  }
  function directiveLinkingFn(nodesetLinkingFn, scope, node, rootElement, boundTranscludeFn) {
  }
  function tokenDifference(str1, str2) {
    var values = '', tokens1 = str1.split(/\s+/), tokens2 = str2.split(/\s+/);
    outer:
      for (var i = 0; i < tokens1.length; i++) {
        var token = tokens1[i];
        for (var j = 0; j < tokens2.length; j++) {
          if (token == tokens2[j])
            continue outer;
        }
        values += (values.length > 0 ? ' ' : '') + token;
      }
    return values;
  }
  /**
 * @ngdoc provider
 * @name $controllerProvider
 * @description
 * The {@link ng.$controller $controller service} is used by Angular to create new
 * controllers.
 *
 * This provider allows controller registration via the
 * {@link ng.$controllerProvider#register register} method.
 */
  function $ControllerProvider() {
    var controllers = {}, CNTRL_REG = /^(\S+)(\s+as\s+(\w+))?$/;
    /**
   * @ngdoc method
   * @name $controllerProvider#register
   * @param {string|Object} name Controller name, or an object map of controllers where the keys are
   *    the names and the values are the constructors.
   * @param {Function|Array} constructor Controller constructor fn (optionally decorated with DI
   *    annotations in the array notation).
   */
    this.register = function (name, constructor) {
      assertNotHasOwnProperty(name, 'controller');
      if (isObject(name)) {
        extend(controllers, name);
      } else {
        controllers[name] = constructor;
      }
    };
    this.$get = [
      '$injector',
      '$window',
      function ($injector, $window) {
        /**
     * @ngdoc service
     * @name $controller
     * @requires $injector
     *
     * @param {Function|string} constructor If called with a function then it's considered to be the
     *    controller constructor function. Otherwise it's considered to be a string which is used
     *    to retrieve the controller constructor using the following steps:
     *
     *    * check if a controller with given name is registered via `$controllerProvider`
     *    * check if evaluating the string on the current scope returns a constructor
     *    * check `window[constructor]` on the global `window` object
     *
     * @param {Object} locals Injection locals for Controller.
     * @return {Object} Instance of given controller.
     *
     * @description
     * `$controller` service is responsible for instantiating controllers.
     *
     * It's just a simple call to {@link auto.$injector $injector}, but extracted into
     * a service, so that one can override this service with [BC version](https://gist.github.com/1649788).
     */
        return function (expression, locals) {
          var instance, match, constructor, identifier;
          if (isString(expression)) {
            match = expression.match(CNTRL_REG), constructor = match[1], identifier = match[3];
            expression = controllers.hasOwnProperty(constructor) ? controllers[constructor] : getter(locals.$scope, constructor, true) || getter($window, constructor, true);
            assertArgFn(expression, constructor, true);
          }
          instance = $injector.instantiate(expression, locals);
          if (identifier) {
            if (!(locals && typeof locals.$scope === 'object')) {
              throw minErr('$controller')('noscp', 'Cannot export controller \'{0}\' as \'{1}\'! No $scope object provided via `locals`.', constructor || expression.name, identifier);
            }
            locals.$scope[identifier] = instance;
          }
          return instance;
        };
      }
    ];
  }
  /**
 * @ngdoc service
 * @name $document
 * @requires $window
 *
 * @description
 * A {@link angular.element jQuery or jqLite} wrapper for the browser's `window.document` object.
 *
 * @example
   <example module="documentExample">
     <file name="index.html">
       <div ng-controller="ExampleController">
         <p>$document title: <b ng-bind="title"></b></p>
         <p>window.document title: <b ng-bind="windowTitle"></b></p>
       </div>
     </file>
     <file name="script.js">
       angular.module('documentExample', [])
         .controller('ExampleController', ['$scope', '$document', function($scope, $document) {
           $scope.title = $document[0].title;
           $scope.windowTitle = angular.element(window.document)[0].title;
         }]);
     </file>
   </example>
 */
  function $DocumentProvider() {
    this.$get = [
      '$window',
      function (window) {
        return jqLite(window.document);
      }
    ];
  }
  /**
 * @ngdoc service
 * @name $exceptionHandler
 * @requires ng.$log
 *
 * @description
 * Any uncaught exception in angular expressions is delegated to this service.
 * The default implementation simply delegates to `$log.error` which logs it into
 * the browser console.
 *
 * In unit tests, if `angular-mocks.js` is loaded, this service is overridden by
 * {@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.
 *
 * ## Example:
 *
 * ```js
 *   angular.module('exceptionOverride', []).factory('$exceptionHandler', function () {
 *     return function (exception, cause) {
 *       exception.message += ' (caused by "' + cause + '")';
 *       throw exception;
 *     };
 *   });
 * ```
 *
 * This example will override the normal action of `$exceptionHandler`, to make angular
 * exceptions fail hard when they happen, instead of just logging to the console.
 *
 * @param {Error} exception Exception associated with the error.
 * @param {string=} cause optional information about the context in which
 *       the error was thrown.
 *
 */
  function $ExceptionHandlerProvider() {
    this.$get = [
      '$log',
      function ($log) {
        return function (exception, cause) {
          $log.error.apply($log, arguments);
        };
      }
    ];
  }
  /**
 * Parse headers into key value object
 *
 * @param {string} headers Raw headers as a string
 * @returns {Object} Parsed headers as key value object
 */
  function parseHeaders(headers) {
    var parsed = {}, key, val, i;
    if (!headers)
      return parsed;
    forEach(headers.split('\n'), function (line) {
      i = line.indexOf(':');
      key = lowercase(trim(line.substr(0, i)));
      val = trim(line.substr(i + 1));
      if (key) {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    });
    return parsed;
  }
  /**
 * Returns a function that provides access to parsed headers.
 *
 * Headers are lazy parsed when first requested.
 * @see parseHeaders
 *
 * @param {(string|Object)} headers Headers to provide access to.
 * @returns {function(string=)} Returns a getter function which if called with:
 *
 *   - if called with single an argument returns a single header value or null
 *   - if called with no arguments returns an object containing all headers.
 */
  function headersGetter(headers) {
    var headersObj = isObject(headers) ? headers : undefined;
    return function (name) {
      if (!headersObj)
        headersObj = parseHeaders(headers);
      if (name) {
        return headersObj[lowercase(name)] || null;
      }
      return headersObj;
    };
  }
  /**
 * Chain all given functions
 *
 * This function is used for both request and response transforming
 *
 * @param {*} data Data to transform.
 * @param {function(string=)} headers Http headers getter fn.
 * @param {(Function|Array.<Function>)} fns Function or an array of functions.
 * @returns {*} Transformed data.
 */
  function transformData(data, headers, fns) {
    if (isFunction(fns))
      return fns(data, headers);
    forEach(fns, function (fn) {
      data = fn(data, headers);
    });
    return data;
  }
  function isSuccess(status) {
    return 200 <= status && status < 300;
  }
  /**
 * @ngdoc provider
 * @name $httpProvider
 * @description
 * Use `$httpProvider` to change the default behavior of the {@link ng.$http $http} service.
 * */
  function $HttpProvider() {
    var JSON_START = /^\s*(\[|\{[^\{])/, JSON_END = /[\}\]]\s*$/, PROTECTION_PREFIX = /^\)\]\}',?\n/, CONTENT_TYPE_APPLICATION_JSON = { 'Content-Type': 'application/json;charset=utf-8' };
    /**
   * @ngdoc property
   * @name $httpProvider#defaults
   * @description
   *
   * Object containing default values for all {@link ng.$http $http} requests.
   *
   * - **`defaults.xsrfCookieName`** - {string} - Name of cookie containing the XSRF token.
   * Defaults value is `'XSRF-TOKEN'`.
   *
   * - **`defaults.xsrfHeaderName`** - {string} - Name of HTTP header to populate with the
   * XSRF token. Defaults value is `'X-XSRF-TOKEN'`.
   *
   * - **`defaults.headers`** - {Object} - Default headers for all $http requests.
   * Refer to {@link ng.$http#setting-http-headers $http} for documentation on
   * setting default headers.
   *     - **`defaults.headers.common`**
   *     - **`defaults.headers.post`**
   *     - **`defaults.headers.put`**
   *     - **`defaults.headers.patch`**
   **/
    var defaults = this.defaults = {
        transformResponse: [function (data) {
            if (isString(data)) {
              // strip json vulnerability protection prefix
              data = data.replace(PROTECTION_PREFIX, '');
              if (JSON_START.test(data) && JSON_END.test(data))
                data = fromJson(data);
            }
            return data;
          }],
        transformRequest: [function (d) {
            return isObject(d) && !isFile(d) && !isBlob(d) ? toJson(d) : d;
          }],
        headers: {
          common: { 'Accept': 'application/json, text/plain, */*' },
          post: shallowCopy(CONTENT_TYPE_APPLICATION_JSON),
          put: shallowCopy(CONTENT_TYPE_APPLICATION_JSON),
          patch: shallowCopy(CONTENT_TYPE_APPLICATION_JSON)
        },
        xsrfCookieName: 'XSRF-TOKEN',
        xsrfHeaderName: 'X-XSRF-TOKEN'
      };
    /**
   * @ngdoc property
   * @name $httpProvider#interceptors
   * @description
   *
   * Array containing service factories for all synchronous or asynchronous {@link ng.$http $http}
   * pre-processing of request or postprocessing of responses.
   *
   * These service factories are ordered by request, i.e. they are applied in the same order as the
   * array, on request, but reverse order, on response.
   *
   * {@link ng.$http#interceptors Interceptors detailed info}
   **/
    var interceptorFactories = this.interceptors = [];
    /**
   * For historical reasons, response interceptors are ordered by the order in which
   * they are applied to the response. (This is the opposite of interceptorFactories)
   */
    var responseInterceptorFactories = this.responseInterceptors = [];
    this.$get = [
      '$httpBackend',
      '$browser',
      '$cacheFactory',
      '$rootScope',
      '$q',
      '$injector',
      function ($httpBackend, $browser, $cacheFactory, $rootScope, $q, $injector) {
        var defaultCache = $cacheFactory('$http');
        /**
     * Interceptors stored in reverse order. Inner interceptors before outer interceptors.
     * The reversal is needed so that we can build up the interception chain around the
     * server request.
     */
        var reversedInterceptors = [];
        forEach(interceptorFactories, function (interceptorFactory) {
          reversedInterceptors.unshift(isString(interceptorFactory) ? $injector.get(interceptorFactory) : $injector.invoke(interceptorFactory));
        });
        forEach(responseInterceptorFactories, function (interceptorFactory, index) {
          var responseFn = isString(interceptorFactory) ? $injector.get(interceptorFactory) : $injector.invoke(interceptorFactory);
          /**
       * Response interceptors go before "around" interceptors (no real reason, just
       * had to pick one.) But they are already reversed, so we can't use unshift, hence
       * the splice.
       */
          reversedInterceptors.splice(index, 0, {
            response: function (response) {
              return responseFn($q.when(response));
            },
            responseError: function (response) {
              return responseFn($q.reject(response));
            }
          });
        });
        /**
     * @ngdoc service
     * @kind function
     * @name $http
     * @requires ng.$httpBackend
     * @requires $cacheFactory
     * @requires $rootScope
     * @requires $q
     * @requires $injector
     *
     * @description
     * The `$http` service is a core Angular service that facilitates communication with the remote
     * HTTP servers via the browser's [XMLHttpRequest](https://developer.mozilla.org/en/xmlhttprequest)
     * object or via [JSONP](http://en.wikipedia.org/wiki/JSONP).
     *
     * For unit testing applications that use `$http` service, see
     * {@link ngMock.$httpBackend $httpBackend mock}.
     *
     * For a higher level of abstraction, please check out the {@link ngResource.$resource
     * $resource} service.
     *
     * The $http API is based on the {@link ng.$q deferred/promise APIs} exposed by
     * the $q service. While for simple usage patterns this doesn't matter much, for advanced usage
     * it is important to familiarize yourself with these APIs and the guarantees they provide.
     *
     *
     * # General usage
     * The `$http` service is a function which takes a single argument — a configuration object —
     * that is used to generate an HTTP request and returns  a {@link ng.$q promise}
     * with two $http specific methods: `success` and `error`.
     *
     * ```js
     *   $http({method: 'GET', url: '/someUrl'}).
     *     success(function(data, status, headers, config) {
     *       // this callback will be called asynchronously
     *       // when the response is available
     *     }).
     *     error(function(data, status, headers, config) {
     *       // called asynchronously if an error occurs
     *       // or server returns response with an error status.
     *     });
     * ```
     *
     * Since the returned value of calling the $http function is a `promise`, you can also use
     * the `then` method to register callbacks, and these callbacks will receive a single argument –
     * an object representing the response. See the API signature and type info below for more
     * details.
     *
     * A response status code between 200 and 299 is considered a success status and
     * will result in the success callback being called. Note that if the response is a redirect,
     * XMLHttpRequest will transparently follow it, meaning that the error callback will not be
     * called for such responses.
     *
     * # Writing Unit Tests that use $http
     * When unit testing (using {@link ngMock ngMock}), it is necessary to call
     * {@link ngMock.$httpBackend#flush $httpBackend.flush()} to flush each pending
     * request using trained responses.
     *
     * ```
     * $httpBackend.expectGET(...);
     * $http.get(...);
     * $httpBackend.flush();
     * ```
     *
     * # Shortcut methods
     *
     * Shortcut methods are also available. All shortcut methods require passing in the URL, and
     * request data must be passed in for POST/PUT requests.
     *
     * ```js
     *   $http.get('/someUrl').success(successCallback);
     *   $http.post('/someUrl', data).success(successCallback);
     * ```
     *
     * Complete list of shortcut methods:
     *
     * - {@link ng.$http#get $http.get}
     * - {@link ng.$http#head $http.head}
     * - {@link ng.$http#post $http.post}
     * - {@link ng.$http#put $http.put}
     * - {@link ng.$http#delete $http.delete}
     * - {@link ng.$http#jsonp $http.jsonp}
     * - {@link ng.$http#patch $http.patch}
     *
     *
     * # Setting HTTP Headers
     *
     * The $http service will automatically add certain HTTP headers to all requests. These defaults
     * can be fully configured by accessing the `$httpProvider.defaults.headers` configuration
     * object, which currently contains this default configuration:
     *
     * - `$httpProvider.defaults.headers.common` (headers that are common for all requests):
     *   - `Accept: application/json, text/plain, * / *`
     * - `$httpProvider.defaults.headers.post`: (header defaults for POST requests)
     *   - `Content-Type: application/json`
     * - `$httpProvider.defaults.headers.put` (header defaults for PUT requests)
     *   - `Content-Type: application/json`
     *
     * To add or overwrite these defaults, simply add or remove a property from these configuration
     * objects. To add headers for an HTTP method other than POST or PUT, simply add a new object
     * with the lowercased HTTP method name as the key, e.g.
     * `$httpProvider.defaults.headers.get = { 'My-Header' : 'value' }.
     *
     * The defaults can also be set at runtime via the `$http.defaults` object in the same
     * fashion. For example:
     *
     * ```
     * module.run(function($http) {
     *   $http.defaults.headers.common.Authorization = 'Basic YmVlcDpib29w'
     * });
     * ```
     *
     * In addition, you can supply a `headers` property in the config object passed when
     * calling `$http(config)`, which overrides the defaults without changing them globally.
     *
     * To explicitly remove a header automatically added via $httpProvider.defaults.headers on a per request basis,
     * Use the `headers` property, setting the desired header to `undefined`. For example:
     *
     * ```js
     * var req = {
     *  method: 'POST',
     *  url: 'http://example.com',
     *  headers: {
     *    'Content-Type': undefined
     *  },
     *  data: { test: 'test' },
     * }
     *
     * $http(req).success(function(){...}).error(function(){...});
     * ```
     *
     * # Transforming Requests and Responses
     *
     * Both requests and responses can be transformed using transform functions. By default, Angular
     * applies these transformations:
     *
     * Request transformations:
     *
     * - If the `data` property of the request configuration object contains an object, serialize it
     *   into JSON format.
     *
     * Response transformations:
     *
     *  - If XSRF prefix is detected, strip it (see Security Considerations section below).
     *  - If JSON response is detected, deserialize it using a JSON parser.
     *
     * To globally augment or override the default transforms, modify the
     * `$httpProvider.defaults.transformRequest` and `$httpProvider.defaults.transformResponse`
     * properties. These properties are by default an array of transform functions, which allows you
     * to `push` or `unshift` a new transformation function into the transformation chain. You can
     * also decide to completely override any default transformations by assigning your
     * transformation functions to these properties directly without the array wrapper.  These defaults
     * are again available on the $http factory at run-time, which may be useful if you have run-time
     * services you wish to be involved in your transformations.
     *
     * Similarly, to locally override the request/response transforms, augment the
     * `transformRequest` and/or `transformResponse` properties of the configuration object passed
     * into `$http`.
     *
     *
     * # Caching
     *
     * To enable caching, set the request configuration `cache` property to `true` (to use default
     * cache) or to a custom cache object (built with {@link ng.$cacheFactory `$cacheFactory`}).
     * When the cache is enabled, `$http` stores the response from the server in the specified
     * cache. The next time the same request is made, the response is served from the cache without
     * sending a request to the server.
     *
     * Note that even if the response is served from cache, delivery of the data is asynchronous in
     * the same way that real requests are.
     *
     * If there are multiple GET requests for the same URL that should be cached using the same
     * cache, but the cache is not populated yet, only one request to the server will be made and
     * the remaining requests will be fulfilled using the response from the first request.
     *
     * You can change the default cache to a new object (built with
     * {@link ng.$cacheFactory `$cacheFactory`}) by updating the
     * {@link ng.$http#properties_defaults `$http.defaults.cache`} property. All requests who set
     * their `cache` property to `true` will now use this cache object.
     *
     * If you set the default cache to `false` then only requests that specify their own custom
     * cache object will be cached.
     *
     * # Interceptors
     *
     * Before you start creating interceptors, be sure to understand the
     * {@link ng.$q $q and deferred/promise APIs}.
     *
     * For purposes of global error handling, authentication, or any kind of synchronous or
     * asynchronous pre-processing of request or postprocessing of responses, it is desirable to be
     * able to intercept requests before they are handed to the server and
     * responses before they are handed over to the application code that
     * initiated these requests. The interceptors leverage the {@link ng.$q
     * promise APIs} to fulfill this need for both synchronous and asynchronous pre-processing.
     *
     * The interceptors are service factories that are registered with the `$httpProvider` by
     * adding them to the `$httpProvider.interceptors` array. The factory is called and
     * injected with dependencies (if specified) and returns the interceptor.
     *
     * There are two kinds of interceptors (and two kinds of rejection interceptors):
     *
     *   * `request`: interceptors get called with a http `config` object. The function is free to
     *     modify the `config` object or create a new one. The function needs to return the `config`
     *     object directly, or a promise containing the `config` or a new `config` object.
     *   * `requestError`: interceptor gets called when a previous interceptor threw an error or
     *     resolved with a rejection.
     *   * `response`: interceptors get called with http `response` object. The function is free to
     *     modify the `response` object or create a new one. The function needs to return the `response`
     *     object directly, or as a promise containing the `response` or a new `response` object.
     *   * `responseError`: interceptor gets called when a previous interceptor threw an error or
     *     resolved with a rejection.
     *
     *
     * ```js
     *   // register the interceptor as a service
     *   $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {
     *     return {
     *       // optional method
     *       'request': function(config) {
     *         // do something on success
     *         return config;
     *       },
     *
     *       // optional method
     *      'requestError': function(rejection) {
     *         // do something on error
     *         if (canRecover(rejection)) {
     *           return responseOrNewPromise
     *         }
     *         return $q.reject(rejection);
     *       },
     *
     *
     *
     *       // optional method
     *       'response': function(response) {
     *         // do something on success
     *         return response;
     *       },
     *
     *       // optional method
     *      'responseError': function(rejection) {
     *         // do something on error
     *         if (canRecover(rejection)) {
     *           return responseOrNewPromise
     *         }
     *         return $q.reject(rejection);
     *       }
     *     };
     *   });
     *
     *   $httpProvider.interceptors.push('myHttpInterceptor');
     *
     *
     *   // alternatively, register the interceptor via an anonymous factory
     *   $httpProvider.interceptors.push(function($q, dependency1, dependency2) {
     *     return {
     *      'request': function(config) {
     *          // same as above
     *       },
     *
     *       'response': function(response) {
     *          // same as above
     *       }
     *     };
     *   });
     * ```
     *
     * # Response interceptors (DEPRECATED)
     *
     * Before you start creating interceptors, be sure to understand the
     * {@link ng.$q $q and deferred/promise APIs}.
     *
     * For purposes of global error handling, authentication or any kind of synchronous or
     * asynchronous preprocessing of received responses, it is desirable to be able to intercept
     * responses for http requests before they are handed over to the application code that
     * initiated these requests. The response interceptors leverage the {@link ng.$q
     * promise apis} to fulfil this need for both synchronous and asynchronous preprocessing.
     *
     * The interceptors are service factories that are registered with the $httpProvider by
     * adding them to the `$httpProvider.responseInterceptors` array. The factory is called and
     * injected with dependencies (if specified) and returns the interceptor  — a function that
     * takes a {@link ng.$q promise} and returns the original or a new promise.
     *
     * ```js
     *   // register the interceptor as a service
     *   $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {
     *     return function(promise) {
     *       return promise.then(function(response) {
     *         // do something on success
     *         return response;
     *       }, function(response) {
     *         // do something on error
     *         if (canRecover(response)) {
     *           return responseOrNewPromise
     *         }
     *         return $q.reject(response);
     *       });
     *     }
     *   });
     *
     *   $httpProvider.responseInterceptors.push('myHttpInterceptor');
     *
     *
     *   // register the interceptor via an anonymous factory
     *   $httpProvider.responseInterceptors.push(function($q, dependency1, dependency2) {
     *     return function(promise) {
     *       // same as above
     *     }
     *   });
     * ```
     *
     *
     * # Security Considerations
     *
     * When designing web applications, consider security threats from:
     *
     * - [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)
     * - [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)
     *
     * Both server and the client must cooperate in order to eliminate these threats. Angular comes
     * pre-configured with strategies that address these issues, but for this to work backend server
     * cooperation is required.
     *
     * ## JSON Vulnerability Protection
     *
     * A [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)
     * allows third party website to turn your JSON resource URL into
     * [JSONP](http://en.wikipedia.org/wiki/JSONP) request under some conditions. To
     * counter this your server can prefix all JSON requests with following string `")]}',\n"`.
     * Angular will automatically strip the prefix before processing it as JSON.
     *
     * For example if your server needs to return:
     * ```js
     * ['one','two']
     * ```
     *
     * which is vulnerable to attack, your server can return:
     * ```js
     * )]}',
     * ['one','two']
     * ```
     *
     * Angular will strip the prefix, before processing the JSON.
     *
     *
     * ## Cross Site Request Forgery (XSRF) Protection
     *
     * [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery) is a technique by which
     * an unauthorized site can gain your user's private data. Angular provides a mechanism
     * to counter XSRF. When performing XHR requests, the $http service reads a token from a cookie
     * (by default, `XSRF-TOKEN`) and sets it as an HTTP header (`X-XSRF-TOKEN`). Since only
     * JavaScript that runs on your domain could read the cookie, your server can be assured that
     * the XHR came from JavaScript running on your domain. The header will not be set for
     * cross-domain requests.
     *
     * To take advantage of this, your server needs to set a token in a JavaScript readable session
     * cookie called `XSRF-TOKEN` on the first HTTP GET request. On subsequent XHR requests the
     * server can verify that the cookie matches `X-XSRF-TOKEN` HTTP header, and therefore be sure
     * that only JavaScript running on your domain could have sent the request. The token must be
     * unique for each user and must be verifiable by the server (to prevent the JavaScript from
     * making up its own tokens). We recommend that the token is a digest of your site's
     * authentication cookie with a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography&#41;)
     * for added security.
     *
     * The name of the headers can be specified using the xsrfHeaderName and xsrfCookieName
     * properties of either $httpProvider.defaults at config-time, $http.defaults at run-time,
     * or the per-request config object.
     *
     *
     * @param {object} config Object describing the request to be made and how it should be
     *    processed. The object has following properties:
     *
     *    - **method** – `{string}` – HTTP method (e.g. 'GET', 'POST', etc)
     *    - **url** – `{string}` – Absolute or relative URL of the resource that is being requested.
     *    - **params** – `{Object.<string|Object>}` – Map of strings or objects which will be turned
     *      to `?key1=value1&key2=value2` after the url. If the value is not a string, it will be
     *      JSONified.
     *    - **data** – `{string|Object}` – Data to be sent as the request message data.
     *    - **headers** – `{Object}` – Map of strings or functions which return strings representing
     *      HTTP headers to send to the server. If the return value of a function is null, the
     *      header will not be sent.
     *    - **xsrfHeaderName** – `{string}` – Name of HTTP header to populate with the XSRF token.
     *    - **xsrfCookieName** – `{string}` – Name of cookie containing the XSRF token.
     *    - **transformRequest** –
     *      `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –
     *      transform function or an array of such functions. The transform function takes the http
     *      request body and headers and returns its transformed (typically serialized) version.
     *    - **transformResponse** –
     *      `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –
     *      transform function or an array of such functions. The transform function takes the http
     *      response body and headers and returns its transformed (typically deserialized) version.
     *    - **cache** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the
     *      GET request, otherwise if a cache instance built with
     *      {@link ng.$cacheFactory $cacheFactory}, this cache will be used for
     *      caching.
     *    - **timeout** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise}
     *      that should abort the request when resolved.
     *    - **withCredentials** - `{boolean}` - whether to set the `withCredentials` flag on the
     *      XHR object. See [requests with credentials](https://developer.mozilla.org/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials)
     *      for more information.
     *    - **responseType** - `{string}` - see
     *      [requestType](https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType).
     *
     * @returns {HttpPromise} Returns a {@link ng.$q promise} object with the
     *   standard `then` method and two http specific methods: `success` and `error`. The `then`
     *   method takes two arguments a success and an error callback which will be called with a
     *   response object. The `success` and `error` methods take a single argument - a function that
     *   will be called when the request succeeds or fails respectively. The arguments passed into
     *   these functions are destructured representation of the response object passed into the
     *   `then` method. The response object has these properties:
     *
     *   - **data** – `{string|Object}` – The response body transformed with the transform
     *     functions.
     *   - **status** – `{number}` – HTTP status code of the response.
     *   - **headers** – `{function([headerName])}` – Header getter function.
     *   - **config** – `{Object}` – The configuration object that was used to generate the request.
     *   - **statusText** – `{string}` – HTTP status text of the response.
     *
     * @property {Array.<Object>} pendingRequests Array of config objects for currently pending
     *   requests. This is primarily meant to be used for debugging purposes.
     *
     *
     * @example
<example module="httpExample">
<file name="index.html">
  <div ng-controller="FetchController">
    <select ng-model="method">
      <option>GET</option>
      <option>JSONP</option>
    </select>
    <input type="text" ng-model="url" size="80"/>
    <button id="fetchbtn" ng-click="fetch()">fetch</button><br>
    <button id="samplegetbtn" ng-click="updateModel('GET', 'http-hello.html')">Sample GET</button>
    <button id="samplejsonpbtn"
      ng-click="updateModel('JSONP',
                    'https://angularjs.org/greet.php?callback=JSON_CALLBACK&name=Super%20Hero')">
      Sample JSONP
    </button>
    <button id="invalidjsonpbtn"
      ng-click="updateModel('JSONP', 'https://angularjs.org/doesntexist&callback=JSON_CALLBACK')">
        Invalid JSONP
      </button>
    <pre>http status code: {{status}}</pre>
    <pre>http response data: {{data}}</pre>
  </div>
</file>
<file name="script.js">
  angular.module('httpExample', [])
    .controller('FetchController', ['$scope', '$http', '$templateCache',
      function($scope, $http, $templateCache) {
        $scope.method = 'GET';
        $scope.url = 'http-hello.html';

        $scope.fetch = function() {
          $scope.code = null;
          $scope.response = null;

          $http({method: $scope.method, url: $scope.url, cache: $templateCache}).
            success(function(data, status) {
              $scope.status = status;
              $scope.data = data;
            }).
            error(function(data, status) {
              $scope.data = data || "Request failed";
              $scope.status = status;
          });
        };

        $scope.updateModel = function(method, url) {
          $scope.method = method;
          $scope.url = url;
        };
      }]);
</file>
<file name="http-hello.html">
  Hello, $http!
</file>
<file name="protractor.js" type="protractor">
  var status = element(by.binding('status'));
  var data = element(by.binding('data'));
  var fetchBtn = element(by.id('fetchbtn'));
  var sampleGetBtn = element(by.id('samplegetbtn'));
  var sampleJsonpBtn = element(by.id('samplejsonpbtn'));
  var invalidJsonpBtn = element(by.id('invalidjsonpbtn'));

  it('should make an xhr GET request', function() {
    sampleGetBtn.click();
    fetchBtn.click();
    expect(status.getText()).toMatch('200');
    expect(data.getText()).toMatch(/Hello, \$http!/);
  });

// Commented out due to flakes. See https://github.com/angular/angular.js/issues/9185
// it('should make a JSONP request to angularjs.org', function() {
//   sampleJsonpBtn.click();
//   fetchBtn.click();
//   expect(status.getText()).toMatch('200');
//   expect(data.getText()).toMatch(/Super Hero!/);
// });

  it('should make JSONP request to invalid URL and invoke the error handler',
      function() {
    invalidJsonpBtn.click();
    fetchBtn.click();
    expect(status.getText()).toMatch('0');
    expect(data.getText()).toMatch('Request failed');
  });
</file>
</example>
     */
        function $http(requestConfig) {
          var config = {
              method: 'get',
              transformRequest: defaults.transformRequest,
              transformResponse: defaults.transformResponse
            };
          var headers = mergeHeaders(requestConfig);
          extend(config, requestConfig);
          config.headers = headers;
          config.method = uppercase(config.method);
          var serverRequest = function (config) {
            headers = config.headers;
            var reqData = transformData(config.data, headersGetter(headers), config.transformRequest);
            // strip content-type if data is undefined
            if (isUndefined(reqData)) {
              forEach(headers, function (value, header) {
                if (lowercase(header) === 'content-type') {
                  delete headers[header];
                }
              });
            }
            if (isUndefined(config.withCredentials) && !isUndefined(defaults.withCredentials)) {
              config.withCredentials = defaults.withCredentials;
            }
            // send request
            return sendReq(config, reqData, headers).then(transformResponse, transformResponse);
          };
          var chain = [
              serverRequest,
              undefined
            ];
          var promise = $q.when(config);
          // apply interceptors
          forEach(reversedInterceptors, function (interceptor) {
            if (interceptor.request || interceptor.requestError) {
              chain.unshift(interceptor.request, interceptor.requestError);
            }
            if (interceptor.response || interceptor.responseError) {
              chain.push(interceptor.response, interceptor.responseError);
            }
          });
          while (chain.length) {
            var thenFn = chain.shift();
            var rejectFn = chain.shift();
            promise = promise.then(thenFn, rejectFn);
          }
          promise.success = function (fn) {
            promise.then(function (response) {
              fn(response.data, response.status, response.headers, config);
            });
            return promise;
          };
          promise.error = function (fn) {
            promise.then(null, function (response) {
              fn(response.data, response.status, response.headers, config);
            });
            return promise;
          };
          return promise;
          function transformResponse(response) {
            // make a copy since the response must be cacheable
            var resp = extend({}, response, { data: transformData(response.data, response.headers, config.transformResponse) });
            return isSuccess(response.status) ? resp : $q.reject(resp);
          }
          function mergeHeaders(config) {
            var defHeaders = defaults.headers, reqHeaders = extend({}, config.headers), defHeaderName, lowercaseDefHeaderName, reqHeaderName;
            defHeaders = extend({}, defHeaders.common, defHeaders[lowercase(config.method)]);
            // using for-in instead of forEach to avoid unecessary iteration after header has been found
            defaultHeadersIteration:
              for (defHeaderName in defHeaders) {
                lowercaseDefHeaderName = lowercase(defHeaderName);
                for (reqHeaderName in reqHeaders) {
                  if (lowercase(reqHeaderName) === lowercaseDefHeaderName) {
                    continue defaultHeadersIteration;
                  }
                }
                reqHeaders[defHeaderName] = defHeaders[defHeaderName];
              }
            // execute if header value is a function for merged headers
            execHeaders(reqHeaders);
            return reqHeaders;
            function execHeaders(headers) {
              var headerContent;
              forEach(headers, function (headerFn, header) {
                if (isFunction(headerFn)) {
                  headerContent = headerFn();
                  if (headerContent != null) {
                    headers[header] = headerContent;
                  } else {
                    delete headers[header];
                  }
                }
              });
            }
          }
        }
        $http.pendingRequests = [];
        /**
     * @ngdoc method
     * @name $http#get
     *
     * @description
     * Shortcut method to perform `GET` request.
     *
     * @param {string} url Relative or absolute URL specifying the destination of the request
     * @param {Object=} config Optional configuration object
     * @returns {HttpPromise} Future object
     */
        /**
     * @ngdoc method
     * @name $http#delete
     *
     * @description
     * Shortcut method to perform `DELETE` request.
     *
     * @param {string} url Relative or absolute URL specifying the destination of the request
     * @param {Object=} config Optional configuration object
     * @returns {HttpPromise} Future object
     */
        /**
     * @ngdoc method
     * @name $http#head
     *
     * @description
     * Shortcut method to perform `HEAD` request.
     *
     * @param {string} url Relative or absolute URL specifying the destination of the request
     * @param {Object=} config Optional configuration object
     * @returns {HttpPromise} Future object
     */
        /**
     * @ngdoc method
     * @name $http#jsonp
     *
     * @description
     * Shortcut method to perform `JSONP` request.
     *
     * @param {string} url Relative or absolute URL specifying the destination of the request.
     *                     The name of the callback should be the string `JSON_CALLBACK`.
     * @param {Object=} config Optional configuration object
     * @returns {HttpPromise} Future object
     */
        createShortMethods('get', 'delete', 'head', 'jsonp');
        /**
     * @ngdoc method
     * @name $http#post
     *
     * @description
     * Shortcut method to perform `POST` request.
     *
     * @param {string} url Relative or absolute URL specifying the destination of the request
     * @param {*} data Request content
     * @param {Object=} config Optional configuration object
     * @returns {HttpPromise} Future object
     */
        /**
     * @ngdoc method
     * @name $http#put
     *
     * @description
     * Shortcut method to perform `PUT` request.
     *
     * @param {string} url Relative or absolute URL specifying the destination of the request
     * @param {*} data Request content
     * @param {Object=} config Optional configuration object
     * @returns {HttpPromise} Future object
     */
        /**
     * @ngdoc method
     * @name $http#patch
     *
     * @description
     * Shortcut method to perform `PATCH` request.
     *
     * @param {string} url Relative or absolute URL specifying the destination of the request
     * @param {*} data Request content
     * @param {Object=} config Optional configuration object
     * @returns {HttpPromise} Future object
     */
        createShortMethodsWithData('post', 'put', 'patch');
        /**
     * @ngdoc property
     * @name $http#defaults
     *
     * @description
     * Runtime equivalent of the `$httpProvider.defaults` property. Allows configuration of
     * default headers, withCredentials as well as request and response transformations.
     *
     * See "Setting HTTP Headers" and "Transforming Requests and Responses" sections above.
     */
        $http.defaults = defaults;
        return $http;
        function createShortMethods(names) {
          forEach(arguments, function (name) {
            $http[name] = function (url, config) {
              return $http(extend(config || {}, {
                method: name,
                url: url
              }));
            };
          });
        }
        function createShortMethodsWithData(name) {
          forEach(arguments, function (name) {
            $http[name] = function (url, data, config) {
              return $http(extend(config || {}, {
                method: name,
                url: url,
                data: data
              }));
            };
          });
        }
        /**
     * Makes the request.
     *
     * !!! ACCESSES CLOSURE VARS:
     * $httpBackend, defaults, $log, $rootScope, defaultCache, $http.pendingRequests
     */
        function sendReq(config, reqData, reqHeaders) {
          var deferred = $q.defer(), promise = deferred.promise, cache, cachedResp, url = buildUrl(config.url, config.params);
          $http.pendingRequests.push(config);
          promise.then(removePendingReq, removePendingReq);
          if ((config.cache || defaults.cache) && config.cache !== false && (config.method === 'GET' || config.method === 'JSONP')) {
            cache = isObject(config.cache) ? config.cache : isObject(defaults.cache) ? defaults.cache : defaultCache;
          }
          if (cache) {
            cachedResp = cache.get(url);
            if (isDefined(cachedResp)) {
              if (isPromiseLike(cachedResp)) {
                // cached request has already been sent, but there is no response yet
                cachedResp.then(removePendingReq, removePendingReq);
                return cachedResp;
              } else {
                // serving from cache
                if (isArray(cachedResp)) {
                  resolvePromise(cachedResp[1], cachedResp[0], shallowCopy(cachedResp[2]), cachedResp[3]);
                } else {
                  resolvePromise(cachedResp, 200, {}, 'OK');
                }
              }
            } else {
              // put the promise for the non-transformed response into cache as a placeholder
              cache.put(url, promise);
            }
          }
          // if we won't have the response in cache, set the xsrf headers and
          // send the request to the backend
          if (isUndefined(cachedResp)) {
            var xsrfValue = urlIsSameOrigin(config.url) ? $browser.cookies()[config.xsrfCookieName || defaults.xsrfCookieName] : undefined;
            if (xsrfValue) {
              reqHeaders[config.xsrfHeaderName || defaults.xsrfHeaderName] = xsrfValue;
            }
            $httpBackend(config.method, url, reqData, done, reqHeaders, config.timeout, config.withCredentials, config.responseType);
          }
          return promise;
          /**
       * Callback registered to $httpBackend():
       *  - caches the response if desired
       *  - resolves the raw $http promise
       *  - calls $apply
       */
          function done(status, response, headersString, statusText) {
            if (cache) {
              if (isSuccess(status)) {
                cache.put(url, [
                  status,
                  response,
                  parseHeaders(headersString),
                  statusText
                ]);
              } else {
                // remove promise from the cache
                cache.remove(url);
              }
            }
            resolvePromise(response, status, headersString, statusText);
            if (!$rootScope.$$phase)
              $rootScope.$apply();
          }
          /**
       * Resolves the raw $http promise.
       */
          function resolvePromise(response, status, headers, statusText) {
            // normalize internal statuses to 0
            status = Math.max(status, 0);
            (isSuccess(status) ? deferred.resolve : deferred.reject)({
              data: response,
              status: status,
              headers: headersGetter(headers),
              config: config,
              statusText: statusText
            });
          }
          function removePendingReq() {
            var idx = indexOf($http.pendingRequests, config);
            if (idx !== -1)
              $http.pendingRequests.splice(idx, 1);
          }
        }
        function buildUrl(url, params) {
          if (!params)
            return url;
          var parts = [];
          forEachSorted(params, function (value, key) {
            if (value === null || isUndefined(value))
              return;
            if (!isArray(value))
              value = [value];
            forEach(value, function (v) {
              if (isObject(v)) {
                if (isDate(v)) {
                  v = v.toISOString();
                } else {
                  v = toJson(v);
                }
              }
              parts.push(encodeUriQuery(key) + '=' + encodeUriQuery(v));
            });
          });
          if (parts.length > 0) {
            url += (url.indexOf('?') == -1 ? '?' : '&') + parts.join('&');
          }
          return url;
        }
      }
    ];
  }
  function createXhr(method) {
    //if IE and the method is not RFC2616 compliant, or if XMLHttpRequest
    //is not available, try getting an ActiveXObject. Otherwise, use XMLHttpRequest
    //if it is available
    if (msie <= 8 && (!method.match(/^(get|post|head|put|delete|options)$/i) || !window.XMLHttpRequest)) {
      return new window.ActiveXObject('Microsoft.XMLHTTP');
    } else if (window.XMLHttpRequest) {
      return new window.XMLHttpRequest();
    }
    throw minErr('$httpBackend')('noxhr', 'This browser does not support XMLHttpRequest.');
  }
  /**
 * @ngdoc service
 * @name $httpBackend
 * @requires $window
 * @requires $document
 *
 * @description
 * HTTP backend used by the {@link ng.$http service} that delegates to
 * XMLHttpRequest object or JSONP and deals with browser incompatibilities.
 *
 * You should never need to use this service directly, instead use the higher-level abstractions:
 * {@link ng.$http $http} or {@link ngResource.$resource $resource}.
 *
 * During testing this implementation is swapped with {@link ngMock.$httpBackend mock
 * $httpBackend} which can be trained with responses.
 */
  function $HttpBackendProvider() {
    this.$get = [
      '$browser',
      '$window',
      '$document',
      function ($browser, $window, $document) {
        return createHttpBackend($browser, createXhr, $browser.defer, $window.angular.callbacks, $document[0]);
      }
    ];
  }
  function createHttpBackend($browser, createXhr, $browserDefer, callbacks, rawDocument) {
    var ABORTED = -1;
    // TODO(vojta): fix the signature
    return function (method, url, post, callback, headers, timeout, withCredentials, responseType) {
      var status;
      $browser.$$incOutstandingRequestCount();
      url = url || $browser.url();
      if (lowercase(method) == 'jsonp') {
        var callbackId = '_' + (callbacks.counter++).toString(36);
        callbacks[callbackId] = function (data) {
          callbacks[callbackId].data = data;
          callbacks[callbackId].called = true;
        };
        var jsonpDone = jsonpReq(url.replace('JSON_CALLBACK', 'angular.callbacks.' + callbackId), callbackId, function (status, text) {
            completeRequest(callback, status, callbacks[callbackId].data, '', text);
            callbacks[callbackId] = noop;
          });
      } else {
        var xhr = createXhr(method);
        xhr.open(method, url, true);
        forEach(headers, function (value, key) {
          if (isDefined(value)) {
            xhr.setRequestHeader(key, value);
          }
        });
        // In IE6 and 7, this might be called synchronously when xhr.send below is called and the
        // response is in the cache. the promise api will ensure that to the app code the api is
        // always async
        xhr.onreadystatechange = function () {
          // onreadystatechange might get called multiple times with readyState === 4 on mobile webkit caused by
          // xhrs that are resolved while the app is in the background (see #5426).
          // since calling completeRequest sets the `xhr` variable to null, we just check if it's not null before
          // continuing
          //
          // we can't set xhr.onreadystatechange to undefined or delete it because that breaks IE8 (method=PATCH) and
          // Safari respectively.
          if (xhr && xhr.readyState == 4) {
            var responseHeaders = null, response = null, statusText = '';
            if (status !== ABORTED) {
              responseHeaders = xhr.getAllResponseHeaders();
              // responseText is the old-school way of retrieving response (supported by IE8 & 9)
              // response/responseType properties were introduced in XHR Level2 spec (supported by IE10)
              response = 'response' in xhr ? xhr.response : xhr.responseText;
            }
            // Accessing statusText on an aborted xhr object will
            // throw an 'c00c023f error' in IE9 and lower, don't touch it.
            if (!(status === ABORTED && msie < 10)) {
              statusText = xhr.statusText;
            }
            completeRequest(callback, status || xhr.status, response, responseHeaders, statusText);
          }
        };
        if (withCredentials) {
          xhr.withCredentials = true;
        }
        if (responseType) {
          try {
            xhr.responseType = responseType;
          } catch (e) {
            // WebKit added support for the json responseType value on 09/03/2013
            // https://bugs.webkit.org/show_bug.cgi?id=73648. Versions of Safari prior to 7 are
            // known to throw when setting the value "json" as the response type. Other older
            // browsers implementing the responseType
            //
            // The json response type can be ignored if not supported, because JSON payloads are
            // parsed on the client-side regardless.
            if (responseType !== 'json') {
              throw e;
            }
          }
        }
        xhr.send(post || null);
      }
      if (timeout > 0) {
        var timeoutId = $browserDefer(timeoutRequest, timeout);
      } else if (isPromiseLike(timeout)) {
        timeout.then(timeoutRequest);
      }
      function timeoutRequest() {
        status = ABORTED;
        jsonpDone && jsonpDone();
        xhr && xhr.abort();
      }
      function completeRequest(callback, status, response, headersString, statusText) {
        // cancel timeout and subsequent timeout promise resolution
        timeoutId && $browserDefer.cancel(timeoutId);
        jsonpDone = xhr = null;
        // fix status code when it is 0 (0 status is undocumented).
        // Occurs when accessing file resources or on Android 4.1 stock browser
        // while retrieving files from application cache.
        if (status === 0) {
          status = response ? 200 : urlResolve(url).protocol == 'file' ? 404 : 0;
        }
        // normalize IE bug (http://bugs.jquery.com/ticket/1450)
        status = status === 1223 ? 204 : status;
        statusText = statusText || '';
        callback(status, response, headersString, statusText);
        $browser.$$completeOutstandingRequest(noop);
      }
    };
    function jsonpReq(url, callbackId, done) {
      // we can't use jQuery/jqLite here because jQuery does crazy shit with script elements, e.g.:
      // - fetches local scripts via XHR and evals them
      // - adds and immediately removes script elements from the document
      var script = rawDocument.createElement('script'), callback = null;
      script.type = 'text/javascript';
      script.src = url;
      script.async = true;
      callback = function (event) {
        removeEventListenerFn(script, 'load', callback);
        removeEventListenerFn(script, 'error', callback);
        rawDocument.body.removeChild(script);
        script = null;
        var status = -1;
        var text = 'unknown';
        if (event) {
          if (event.type === 'load' && !callbacks[callbackId].called) {
            event = { type: 'error' };
          }
          text = event.type;
          status = event.type === 'error' ? 404 : 200;
        }
        if (done) {
          done(status, text);
        }
      };
      addEventListenerFn(script, 'load', callback);
      addEventListenerFn(script, 'error', callback);
      if (msie <= 8) {
        script.onreadystatechange = function () {
          if (isString(script.readyState) && /loaded|complete/.test(script.readyState)) {
            script.onreadystatechange = null;
            callback({ type: 'load' });
          }
        };
      }
      rawDocument.body.appendChild(script);
      return callback;
    }
  }
  var $interpolateMinErr = minErr('$interpolate');
  /**
 * @ngdoc provider
 * @name $interpolateProvider
 * @kind function
 *
 * @description
 *
 * Used for configuring the interpolation markup. Defaults to `{{` and `}}`.
 *
 * @example
<example module="customInterpolationApp">
<file name="index.html">
<script>
  var customInterpolationApp = angular.module('customInterpolationApp', []);

  customInterpolationApp.config(function($interpolateProvider) {
    $interpolateProvider.startSymbol('//');
    $interpolateProvider.endSymbol('//');
  });


  customInterpolationApp.controller('DemoController', function() {
      this.label = "This binding is brought you by // interpolation symbols.";
  });
</script>
<div ng-app="App" ng-controller="DemoController as demo">
    //demo.label//
</div>
</file>
<file name="protractor.js" type="protractor">
  it('should interpolate binding with custom symbols', function() {
    expect(element(by.binding('demo.label')).getText()).toBe('This binding is brought you by // interpolation symbols.');
  });
</file>
</example>
 */
  function $InterpolateProvider() {
    var startSymbol = '{{';
    var endSymbol = '}}';
    /**
   * @ngdoc method
   * @name $interpolateProvider#startSymbol
   * @description
   * Symbol to denote start of expression in the interpolated string. Defaults to `{{`.
   *
   * @param {string=} value new value to set the starting symbol to.
   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.
   */
    this.startSymbol = function (value) {
      if (value) {
        startSymbol = value;
        return this;
      } else {
        return startSymbol;
      }
    };
    /**
   * @ngdoc method
   * @name $interpolateProvider#endSymbol
   * @description
   * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.
   *
   * @param {string=} value new value to set the ending symbol to.
   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.
   */
    this.endSymbol = function (value) {
      if (value) {
        endSymbol = value;
        return this;
      } else {
        return endSymbol;
      }
    };
    this.$get = [
      '$parse',
      '$exceptionHandler',
      '$sce',
      function ($parse, $exceptionHandler, $sce) {
        var startSymbolLength = startSymbol.length, endSymbolLength = endSymbol.length;
        /**
     * @ngdoc service
     * @name $interpolate
     * @kind function
     *
     * @requires $parse
     * @requires $sce
     *
     * @description
     *
     * Compiles a string with markup into an interpolation function. This service is used by the
     * HTML {@link ng.$compile $compile} service for data binding. See
     * {@link ng.$interpolateProvider $interpolateProvider} for configuring the
     * interpolation markup.
     *
     *
     * ```js
     *   var $interpolate = ...; // injected
     *   var exp = $interpolate('Hello {{name | uppercase}}!');
     *   expect(exp({name:'Angular'}).toEqual('Hello ANGULAR!');
     * ```
     *
     *
     * @param {string} text The text with markup to interpolate.
     * @param {boolean=} mustHaveExpression if set to true then the interpolation string must have
     *    embedded expression in order to return an interpolation function. Strings with no
     *    embedded expression will return null for the interpolation function.
     * @param {string=} trustedContext when provided, the returned function passes the interpolated
     *    result through {@link ng.$sce#getTrusted $sce.getTrusted(interpolatedResult,
     *    trustedContext)} before returning it.  Refer to the {@link ng.$sce $sce} service that
     *    provides Strict Contextual Escaping for details.
     * @returns {function(context)} an interpolation function which is used to compute the
     *    interpolated string. The function has these parameters:
     *
     *    * `context`: an object against which any expressions embedded in the strings are evaluated
     *      against.
     *
     */
        function $interpolate(text, mustHaveExpression, trustedContext) {
          var startIndex, endIndex, index = 0, parts = [], length = text.length, hasInterpolation = false, fn, exp, concat = [];
          while (index < length) {
            if ((startIndex = text.indexOf(startSymbol, index)) != -1 && (endIndex = text.indexOf(endSymbol, startIndex + startSymbolLength)) != -1) {
              index != startIndex && parts.push(text.substring(index, startIndex));
              parts.push(fn = $parse(exp = text.substring(startIndex + startSymbolLength, endIndex)));
              fn.exp = exp;
              index = endIndex + endSymbolLength;
              hasInterpolation = true;
            } else {
              // we did not find anything, so we have to add the remainder to the parts array
              index != length && parts.push(text.substring(index));
              index = length;
            }
          }
          if (!(length = parts.length)) {
            // we added, nothing, must have been an empty string.
            parts.push('');
            length = 1;
          }
          // Concatenating expressions makes it hard to reason about whether some combination of
          // concatenated values are unsafe to use and could easily lead to XSS.  By requiring that a
          // single expression be used for iframe[src], object[src], etc., we ensure that the value
          // that's used is assigned or constructed by some JS code somewhere that is more testable or
          // make it obvious that you bound the value to some user controlled value.  This helps reduce
          // the load when auditing for XSS issues.
          if (trustedContext && parts.length > 1) {
            throw $interpolateMinErr('noconcat', 'Error while interpolating: {0}\nStrict Contextual Escaping disallows ' + 'interpolations that concatenate multiple expressions when a trusted value is ' + 'required.  See http://docs.angularjs.org/api/ng.$sce', text);
          }
          if (!mustHaveExpression || hasInterpolation) {
            concat.length = length;
            fn = function (context) {
              try {
                for (var i = 0, ii = length, part; i < ii; i++) {
                  if (typeof (part = parts[i]) == 'function') {
                    part = part(context);
                    if (trustedContext) {
                      part = $sce.getTrusted(trustedContext, part);
                    } else {
                      part = $sce.valueOf(part);
                    }
                    if (part == null) {
                      // null || undefined
                      part = '';
                    } else {
                      switch (typeof part) {
                      case 'string': {
                          break;
                        }
                      case 'number': {
                          part = '' + part;
                          break;
                        }
                      default: {
                          part = toJson(part);
                        }
                      }
                    }
                  }
                  concat[i] = part;
                }
                return concat.join('');
              } catch (err) {
                var newErr = $interpolateMinErr('interr', 'Can\'t interpolate: {0}\n{1}', text, err.toString());
                $exceptionHandler(newErr);
              }
            };
            fn.exp = text;
            fn.parts = parts;
            return fn;
          }
        }
        /**
     * @ngdoc method
     * @name $interpolate#startSymbol
     * @description
     * Symbol to denote the start of expression in the interpolated string. Defaults to `{{`.
     *
     * Use {@link ng.$interpolateProvider#startSymbol `$interpolateProvider.startSymbol`} to change
     * the symbol.
     *
     * @returns {string} start symbol.
     */
        $interpolate.startSymbol = function () {
          return startSymbol;
        };
        /**
     * @ngdoc method
     * @name $interpolate#endSymbol
     * @description
     * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.
     *
     * Use {@link ng.$interpolateProvider#endSymbol `$interpolateProvider.endSymbol`} to change
     * the symbol.
     *
     * @returns {string} end symbol.
     */
        $interpolate.endSymbol = function () {
          return endSymbol;
        };
        return $interpolate;
      }
    ];
  }
  function $IntervalProvider() {
    this.$get = [
      '$rootScope',
      '$window',
      '$q',
      function ($rootScope, $window, $q) {
        var intervals = {};
        /**
      * @ngdoc service
      * @name $interval
      *
      * @description
      * Angular's wrapper for `window.setInterval`. The `fn` function is executed every `delay`
      * milliseconds.
      *
      * The return value of registering an interval function is a promise. This promise will be
      * notified upon each tick of the interval, and will be resolved after `count` iterations, or
      * run indefinitely if `count` is not defined. The value of the notification will be the
      * number of iterations that have run.
      * To cancel an interval, call `$interval.cancel(promise)`.
      *
      * In tests you can use {@link ngMock.$interval#flush `$interval.flush(millis)`} to
      * move forward by `millis` milliseconds and trigger any functions scheduled to run in that
      * time.
      *
      * <div class="alert alert-warning">
      * **Note**: Intervals created by this service must be explicitly destroyed when you are finished
      * with them.  In particular they are not automatically destroyed when a controller's scope or a
      * directive's element are destroyed.
      * You should take this into consideration and make sure to always cancel the interval at the
      * appropriate moment.  See the example below for more details on how and when to do this.
      * </div>
      *
      * @param {function()} fn A function that should be called repeatedly.
      * @param {number} delay Number of milliseconds between each function call.
      * @param {number=} [count=0] Number of times to repeat. If not set, or 0, will repeat
      *   indefinitely.
      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise
      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.
      * @returns {promise} A promise which will be notified on each iteration.
      *
      * @example
      * <example module="intervalExample">
      * <file name="index.html">
      *   <script>
      *     angular.module('intervalExample', [])
      *       .controller('ExampleController', ['$scope', '$interval',
      *         function($scope, $interval) {
      *           $scope.format = 'M/d/yy h:mm:ss a';
      *           $scope.blood_1 = 100;
      *           $scope.blood_2 = 120;
      *
      *           var stop;
      *           $scope.fight = function() {
      *             // Don't start a new fight if we are already fighting
      *             if ( angular.isDefined(stop) ) return;
      *
      *             stop = $interval(function() {
      *               if ($scope.blood_1 > 0 && $scope.blood_2 > 0) {
      *                 $scope.blood_1 = $scope.blood_1 - 3;
      *                 $scope.blood_2 = $scope.blood_2 - 4;
      *               } else {
      *                 $scope.stopFight();
      *               }
      *             }, 100);
      *           };
      *
      *           $scope.stopFight = function() {
      *             if (angular.isDefined(stop)) {
      *               $interval.cancel(stop);
      *               stop = undefined;
      *             }
      *           };
      *
      *           $scope.resetFight = function() {
      *             $scope.blood_1 = 100;
      *             $scope.blood_2 = 120;
      *           };
      *
      *           $scope.$on('$destroy', function() {
      *             // Make sure that the interval is destroyed too
      *             $scope.stopFight();
      *           });
      *         }])
      *       // Register the 'myCurrentTime' directive factory method.
      *       // We inject $interval and dateFilter service since the factory method is DI.
      *       .directive('myCurrentTime', ['$interval', 'dateFilter',
      *         function($interval, dateFilter) {
      *           // return the directive link function. (compile function not needed)
      *           return function(scope, element, attrs) {
      *             var format,  // date format
      *                 stopTime; // so that we can cancel the time updates
      *
      *             // used to update the UI
      *             function updateTime() {
      *               element.text(dateFilter(new Date(), format));
      *             }
      *
      *             // watch the expression, and update the UI on change.
      *             scope.$watch(attrs.myCurrentTime, function(value) {
      *               format = value;
      *               updateTime();
      *             });
      *
      *             stopTime = $interval(updateTime, 1000);
      *
      *             // listen on DOM destroy (removal) event, and cancel the next UI update
      *             // to prevent updating time after the DOM element was removed.
      *             element.bind('$destroy', function() {
      *               $interval.cancel(stopTime);
      *             });
      *           }
      *         }]);
      *   </script>
      *
      *   <div>
      *     <div ng-controller="ExampleController">
      *       Date format: <input ng-model="format"> <hr/>
      *       Current time is: <span my-current-time="format"></span>
      *       <hr/>
      *       Blood 1 : <font color='red'>{{blood_1}}</font>
      *       Blood 2 : <font color='red'>{{blood_2}}</font>
      *       <button type="button" data-ng-click="fight()">Fight</button>
      *       <button type="button" data-ng-click="stopFight()">StopFight</button>
      *       <button type="button" data-ng-click="resetFight()">resetFight</button>
      *     </div>
      *   </div>
      *
      * </file>
      * </example>
      */
        function interval(fn, delay, count, invokeApply) {
          var setInterval = $window.setInterval, clearInterval = $window.clearInterval, deferred = $q.defer(), promise = deferred.promise, iteration = 0, skipApply = isDefined(invokeApply) && !invokeApply;
          count = isDefined(count) ? count : 0;
          promise.then(null, null, fn);
          promise.$$intervalId = setInterval(function tick() {
            deferred.notify(iteration++);
            if (count > 0 && iteration >= count) {
              deferred.resolve(iteration);
              clearInterval(promise.$$intervalId);
              delete intervals[promise.$$intervalId];
            }
            if (!skipApply)
              $rootScope.$apply();
          }, delay);
          intervals[promise.$$intervalId] = deferred;
          return promise;
        }
        /**
      * @ngdoc method
      * @name $interval#cancel
      *
      * @description
      * Cancels a task associated with the `promise`.
      *
      * @param {promise} promise returned by the `$interval` function.
      * @returns {boolean} Returns `true` if the task was successfully canceled.
      */
        interval.cancel = function (promise) {
          if (promise && promise.$$intervalId in intervals) {
            intervals[promise.$$intervalId].reject('canceled');
            $window.clearInterval(promise.$$intervalId);
            delete intervals[promise.$$intervalId];
            return true;
          }
          return false;
        };
        return interval;
      }
    ];
  }
  /**
 * @ngdoc service
 * @name $locale
 *
 * @description
 * $locale service provides localization rules for various Angular components. As of right now the
 * only public api is:
 *
 * * `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)
 */
  function $LocaleProvider() {
    this.$get = function () {
      return {
        id: 'en-us',
        NUMBER_FORMATS: {
          DECIMAL_SEP: '.',
          GROUP_SEP: ',',
          PATTERNS: [
            {
              minInt: 1,
              minFrac: 0,
              maxFrac: 3,
              posPre: '',
              posSuf: '',
              negPre: '-',
              negSuf: '',
              gSize: 3,
              lgSize: 3
            },
            {
              minInt: 1,
              minFrac: 2,
              maxFrac: 2,
              posPre: '\xa4',
              posSuf: '',
              negPre: '(\xa4',
              negSuf: ')',
              gSize: 3,
              lgSize: 3
            }
          ],
          CURRENCY_SYM: '$'
        },
        DATETIME_FORMATS: {
          MONTH: 'January,February,March,April,May,June,July,August,September,October,November,December'.split(','),
          SHORTMONTH: 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'.split(','),
          DAY: 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday'.split(','),
          SHORTDAY: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'.split(','),
          AMPMS: [
            'AM',
            'PM'
          ],
          medium: 'MMM d, y h:mm:ss a',
          short: 'M/d/yy h:mm a',
          fullDate: 'EEEE, MMMM d, y',
          longDate: 'MMMM d, y',
          mediumDate: 'MMM d, y',
          shortDate: 'M/d/yy',
          mediumTime: 'h:mm:ss a',
          shortTime: 'h:mm a'
        },
        pluralCat: function (num) {
          if (num === 1) {
            return 'one';
          }
          return 'other';
        }
      };
    };
  }
  var PATH_MATCH = /^([^\?#]*)(\?([^#]*))?(#(.*))?$/, DEFAULT_PORTS = {
      'http': 80,
      'https': 443,
      'ftp': 21
    };
  var $locationMinErr = minErr('$location');
  /**
 * Encode path using encodeUriSegment, ignoring forward slashes
 *
 * @param {string} path Path to encode
 * @returns {string}
 */
  function encodePath(path) {
    var segments = path.split('/'), i = segments.length;
    while (i--) {
      segments[i] = encodeUriSegment(segments[i]);
    }
    return segments.join('/');
  }
  function parseAbsoluteUrl(absoluteUrl, locationObj, appBase) {
    var parsedUrl = urlResolve(absoluteUrl, appBase);
    locationObj.$$protocol = parsedUrl.protocol;
    locationObj.$$host = parsedUrl.hostname;
    locationObj.$$port = int(parsedUrl.port) || DEFAULT_PORTS[parsedUrl.protocol] || null;
  }
  function parseAppUrl(relativeUrl, locationObj, appBase) {
    var prefixed = relativeUrl.charAt(0) !== '/';
    if (prefixed) {
      relativeUrl = '/' + relativeUrl;
    }
    var match = urlResolve(relativeUrl, appBase);
    locationObj.$$path = decodeURIComponent(prefixed && match.pathname.charAt(0) === '/' ? match.pathname.substring(1) : match.pathname);
    locationObj.$$search = parseKeyValue(match.search);
    locationObj.$$hash = decodeURIComponent(match.hash);
    // make sure path starts with '/';
    if (locationObj.$$path && locationObj.$$path.charAt(0) != '/') {
      locationObj.$$path = '/' + locationObj.$$path;
    }
  }
  /**
 *
 * @param {string} begin
 * @param {string} whole
 * @returns {string} returns text from whole after begin or undefined if it does not begin with
 *                   expected string.
 */
  function beginsWith(begin, whole) {
    if (whole.indexOf(begin) === 0) {
      return whole.substr(begin.length);
    }
  }
  function stripHash(url) {
    var index = url.indexOf('#');
    return index == -1 ? url : url.substr(0, index);
  }
  function stripFile(url) {
    return url.substr(0, stripHash(url).lastIndexOf('/') + 1);
  }
  /* return the server only (scheme://host:port) */
  function serverBase(url) {
    return url.substring(0, url.indexOf('/', url.indexOf('//') + 2));
  }
  /**
 * LocationHtml5Url represents an url
 * This object is exposed as $location service when HTML5 mode is enabled and supported
 *
 * @constructor
 * @param {string} appBase application base URL
 * @param {string} basePrefix url path prefix
 */
  function LocationHtml5Url(appBase, basePrefix) {
    this.$$html5 = true;
    basePrefix = basePrefix || '';
    var appBaseNoFile = stripFile(appBase);
    parseAbsoluteUrl(appBase, this, appBase);
    /**
   * Parse given html5 (regular) url string into properties
   * @param {string} newAbsoluteUrl HTML5 url
   * @private
   */
    this.$$parse = function (url) {
      var pathUrl = beginsWith(appBaseNoFile, url);
      if (!isString(pathUrl)) {
        throw $locationMinErr('ipthprfx', 'Invalid url "{0}", missing path prefix "{1}".', url, appBaseNoFile);
      }
      parseAppUrl(pathUrl, this, appBase);
      if (!this.$$path) {
        this.$$path = '/';
      }
      this.$$compose();
    };
    /**
   * Compose url and update `absUrl` property
   * @private
   */
    this.$$compose = function () {
      var search = toKeyValue(this.$$search), hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';
      this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;
      this.$$absUrl = appBaseNoFile + this.$$url.substr(1);  // first char is always '/'
    };
    this.$$parseLinkUrl = function (url, relHref) {
      var appUrl, prevAppUrl;
      var rewrittenUrl;
      if ((appUrl = beginsWith(appBase, url)) !== undefined) {
        prevAppUrl = appUrl;
        if ((appUrl = beginsWith(basePrefix, appUrl)) !== undefined) {
          rewrittenUrl = appBaseNoFile + (beginsWith('/', appUrl) || appUrl);
        } else {
          rewrittenUrl = appBase + prevAppUrl;
        }
      } else if ((appUrl = beginsWith(appBaseNoFile, url)) !== undefined) {
        rewrittenUrl = appBaseNoFile + appUrl;
      } else if (appBaseNoFile == url + '/') {
        rewrittenUrl = appBaseNoFile;
      }
      if (rewrittenUrl) {
        this.$$parse(rewrittenUrl);
      }
      return !!rewrittenUrl;
    };
  }
  /**
 * LocationHashbangUrl represents url
 * This object is exposed as $location service when developer doesn't opt into html5 mode.
 * It also serves as the base class for html5 mode fallback on legacy browsers.
 *
 * @constructor
 * @param {string} appBase application base URL
 * @param {string} hashPrefix hashbang prefix
 */
  function LocationHashbangUrl(appBase, hashPrefix) {
    var appBaseNoFile = stripFile(appBase);
    parseAbsoluteUrl(appBase, this, appBase);
    /**
   * Parse given hashbang url into properties
   * @param {string} url Hashbang url
   * @private
   */
    this.$$parse = function (url) {
      var withoutBaseUrl = beginsWith(appBase, url) || beginsWith(appBaseNoFile, url);
      var withoutHashUrl = withoutBaseUrl.charAt(0) == '#' ? beginsWith(hashPrefix, withoutBaseUrl) : this.$$html5 ? withoutBaseUrl : '';
      if (!isString(withoutHashUrl)) {
        throw $locationMinErr('ihshprfx', 'Invalid url "{0}", missing hash prefix "{1}".', url, hashPrefix);
      }
      parseAppUrl(withoutHashUrl, this, appBase);
      this.$$path = removeWindowsDriveName(this.$$path, withoutHashUrl, appBase);
      this.$$compose();
      /*
     * In Windows, on an anchor node on documents loaded from
     * the filesystem, the browser will return a pathname
     * prefixed with the drive name ('/C:/path') when a
     * pathname without a drive is set:
     *  * a.setAttribute('href', '/foo')
     *   * a.pathname === '/C:/foo' //true
     *
     * Inside of Angular, we're always using pathnames that
     * do not include drive names for routing.
     */
      function removeWindowsDriveName(path, url, base) {
        /*
      Matches paths for file protocol on windows,
      such as /C:/foo/bar, and captures only /foo/bar.
      */
        var windowsFilePathExp = /^\/[A-Z]:(\/.*)/;
        var firstPathSegmentMatch;
        //Get the relative path from the input URL.
        if (url.indexOf(base) === 0) {
          url = url.replace(base, '');
        }
        // The input URL intentionally contains a first path segment that ends with a colon.
        if (windowsFilePathExp.exec(url)) {
          return path;
        }
        firstPathSegmentMatch = windowsFilePathExp.exec(path);
        return firstPathSegmentMatch ? firstPathSegmentMatch[1] : path;
      }
    };
    /**
   * Compose hashbang url and update `absUrl` property
   * @private
   */
    this.$$compose = function () {
      var search = toKeyValue(this.$$search), hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';
      this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;
      this.$$absUrl = appBase + (this.$$url ? hashPrefix + this.$$url : '');
    };
    this.$$parseLinkUrl = function (url, relHref) {
      if (stripHash(appBase) == stripHash(url)) {
        this.$$parse(url);
        return true;
      }
      return false;
    };
  }
  /**
 * LocationHashbangUrl represents url
 * This object is exposed as $location service when html5 history api is enabled but the browser
 * does not support it.
 *
 * @constructor
 * @param {string} appBase application base URL
 * @param {string} hashPrefix hashbang prefix
 */
  function LocationHashbangInHtml5Url(appBase, hashPrefix) {
    this.$$html5 = true;
    LocationHashbangUrl.apply(this, arguments);
    var appBaseNoFile = stripFile(appBase);
    this.$$parseLinkUrl = function (url, relHref) {
      var rewrittenUrl;
      var appUrl;
      if (appBase == stripHash(url)) {
        rewrittenUrl = url;
      } else if (appUrl = beginsWith(appBaseNoFile, url)) {
        rewrittenUrl = appBase + hashPrefix + appUrl;
      } else if (appBaseNoFile === url + '/') {
        rewrittenUrl = appBaseNoFile;
      }
      if (rewrittenUrl) {
        this.$$parse(rewrittenUrl);
      }
      return !!rewrittenUrl;
    };
    this.$$compose = function () {
      var search = toKeyValue(this.$$search), hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';
      this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;
      // include hashPrefix in $$absUrl when $$url is empty so IE8 & 9 do not reload page because of removal of '#'
      this.$$absUrl = appBase + hashPrefix + this.$$url;
    };
  }
  LocationHashbangInHtml5Url.prototype = LocationHashbangUrl.prototype = LocationHtml5Url.prototype = {
    $$html5: false,
    $$replace: false,
    absUrl: locationGetter('$$absUrl'),
    url: function (url) {
      if (isUndefined(url))
        return this.$$url;
      var match = PATH_MATCH.exec(url);
      if (match[1])
        this.path(decodeURIComponent(match[1]));
      if (match[2] || match[1])
        this.search(match[3] || '');
      this.hash(match[5] || '');
      return this;
    },
    protocol: locationGetter('$$protocol'),
    host: locationGetter('$$host'),
    port: locationGetter('$$port'),
    path: locationGetterSetter('$$path', function (path) {
      path = path !== null ? path.toString() : '';
      return path.charAt(0) == '/' ? path : '/' + path;
    }),
    search: function (search, paramValue) {
      switch (arguments.length) {
      case 0:
        return this.$$search;
      case 1:
        if (isString(search) || isNumber(search)) {
          search = search.toString();
          this.$$search = parseKeyValue(search);
        } else if (isObject(search)) {
          // remove object undefined or null properties
          forEach(search, function (value, key) {
            if (value == null)
              delete search[key];
          });
          this.$$search = search;
        } else {
          throw $locationMinErr('isrcharg', 'The first argument of the `$location#search()` call must be a string or an object.');
        }
        break;
      default:
        if (isUndefined(paramValue) || paramValue === null) {
          delete this.$$search[search];
        } else {
          this.$$search[search] = paramValue;
        }
      }
      this.$$compose();
      return this;
    },
    hash: locationGetterSetter('$$hash', function (hash) {
      return hash !== null ? hash.toString() : '';
    }),
    replace: function () {
      this.$$replace = true;
      return this;
    }
  };
  function locationGetter(property) {
    return function () {
      return this[property];
    };
  }
  function locationGetterSetter(property, preprocess) {
    return function (value) {
      if (isUndefined(value))
        return this[property];
      this[property] = preprocess(value);
      this.$$compose();
      return this;
    };
  }
  /**
 * @ngdoc service
 * @name $location
 *
 * @requires $rootElement
 *
 * @description
 * The $location service parses the URL in the browser address bar (based on the
 * [window.location](https://developer.mozilla.org/en/window.location)) and makes the URL
 * available to your application. Changes to the URL in the address bar are reflected into
 * $location service and changes to $location are reflected into the browser address bar.
 *
 * **The $location service:**
 *
 * - Exposes the current URL in the browser address bar, so you can
 *   - Watch and observe the URL.
 *   - Change the URL.
 * - Synchronizes the URL with the browser when the user
 *   - Changes the address bar.
 *   - Clicks the back or forward button (or clicks a History link).
 *   - Clicks on a link.
 * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).
 *
 * For more information see {@link guide/$location Developer Guide: Using $location}
 */
  /**
 * @ngdoc provider
 * @name $locationProvider
 * @description
 * Use the `$locationProvider` to configure how the application deep linking paths are stored.
 */
  function $LocationProvider() {
    var hashPrefix = '', html5Mode = false;
    /**
   * @ngdoc method
   * @name $locationProvider#hashPrefix
   * @description
   * @param {string=} prefix Prefix for hash part (containing path and search)
   * @returns {*} current value if used as getter or itself (chaining) if used as setter
   */
    this.hashPrefix = function (prefix) {
      if (isDefined(prefix)) {
        hashPrefix = prefix;
        return this;
      } else {
        return hashPrefix;
      }
    };
    /**
   * @ngdoc method
   * @name $locationProvider#html5Mode
   * @description
   * @param {boolean=} mode Use HTML5 strategy if available.
   * @returns {*} current value if used as getter or itself (chaining) if used as setter
   */
    this.html5Mode = function (mode) {
      if (isDefined(mode)) {
        html5Mode = mode;
        return this;
      } else {
        return html5Mode;
      }
    };
    /**
   * @ngdoc event
   * @name $location#$locationChangeStart
   * @eventType broadcast on root scope
   * @description
   * Broadcasted before a URL will change. This change can be prevented by calling
   * `preventDefault` method of the event. See {@link ng.$rootScope.Scope#$on} for more
   * details about event object. Upon successful change
   * {@link ng.$location#events_$locationChangeSuccess $locationChangeSuccess} is fired.
   *
   * @param {Object} angularEvent Synthetic event object.
   * @param {string} newUrl New URL
   * @param {string=} oldUrl URL that was before it was changed.
   */
    /**
   * @ngdoc event
   * @name $location#$locationChangeSuccess
   * @eventType broadcast on root scope
   * @description
   * Broadcasted after a URL was changed.
   *
   * @param {Object} angularEvent Synthetic event object.
   * @param {string} newUrl New URL
   * @param {string=} oldUrl URL that was before it was changed.
   */
    this.$get = [
      '$rootScope',
      '$browser',
      '$sniffer',
      '$rootElement',
      function ($rootScope, $browser, $sniffer, $rootElement) {
        var $location, LocationMode, baseHref = $browser.baseHref(),
          // if base[href] is undefined, it defaults to ''
          initialUrl = $browser.url(), appBase;
        if (html5Mode) {
          appBase = serverBase(initialUrl) + (baseHref || '/');
          LocationMode = $sniffer.history ? LocationHtml5Url : LocationHashbangInHtml5Url;
        } else {
          appBase = stripHash(initialUrl);
          LocationMode = LocationHashbangUrl;
        }
        $location = new LocationMode(appBase, '#' + hashPrefix);
        $location.$$parseLinkUrl(initialUrl, initialUrl);
        var IGNORE_URI_REGEXP = /^\s*(javascript|mailto):/i;
        $rootElement.on('click', function (event) {
          // TODO(vojta): rewrite link when opening in new tab/window (in legacy browser)
          // currently we open nice url link and redirect then
          if (event.ctrlKey || event.metaKey || event.which == 2)
            return;
          var elm = jqLite(event.target);
          // traverse the DOM up to find first A tag
          while (lowercase(elm[0].nodeName) !== 'a') {
            // ignore rewriting if no A tag (reached root element, or no parent - removed from document)
            if (elm[0] === $rootElement[0] || !(elm = elm.parent())[0])
              return;
          }
          var absHref = elm.prop('href');
          // get the actual href attribute - see
          // http://msdn.microsoft.com/en-us/library/ie/dd347148(v=vs.85).aspx
          var relHref = elm.attr('href') || elm.attr('xlink:href');
          if (isObject(absHref) && absHref.toString() === '[object SVGAnimatedString]') {
            // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal, unless during
            // an animation.
            absHref = urlResolve(absHref.animVal).href;
          }
          // Ignore when url is started with javascript: or mailto:
          if (IGNORE_URI_REGEXP.test(absHref))
            return;
          if (absHref && !elm.attr('target') && !event.isDefaultPrevented()) {
            if ($location.$$parseLinkUrl(absHref, relHref)) {
              // We do a preventDefault for all urls that are part of the angular application,
              // in html5mode and also without, so that we are able to abort navigation without
              // getting double entries in the location history.
              event.preventDefault();
              // update location manually
              if ($location.absUrl() != $browser.url()) {
                $rootScope.$apply();
                // hack to work around FF6 bug 684208 when scenario runner clicks on links
                window.angular['ff-684208-preventDefault'] = true;
              }
            }
          }
        });
        // rewrite hashbang url <> html5 url
        if ($location.absUrl() != initialUrl) {
          $browser.url($location.absUrl(), true);
        }
        // update $location when $browser url changes
        $browser.onUrlChange(function (newUrl) {
          if ($location.absUrl() != newUrl) {
            $rootScope.$evalAsync(function () {
              var oldUrl = $location.absUrl();
              $location.$$parse(newUrl);
              if ($rootScope.$broadcast('$locationChangeStart', newUrl, oldUrl).defaultPrevented) {
                $location.$$parse(oldUrl);
                $browser.url(oldUrl);
              } else {
                afterLocationChange(oldUrl);
              }
            });
            if (!$rootScope.$$phase)
              $rootScope.$digest();
          }
        });
        // update browser
        var changeCounter = 0;
        $rootScope.$watch(function $locationWatch() {
          var oldUrl = $browser.url();
          var currentReplace = $location.$$replace;
          if (!changeCounter || oldUrl != $location.absUrl()) {
            changeCounter++;
            $rootScope.$evalAsync(function () {
              if ($rootScope.$broadcast('$locationChangeStart', $location.absUrl(), oldUrl).defaultPrevented) {
                $location.$$parse(oldUrl);
              } else {
                $browser.url($location.absUrl(), currentReplace);
                afterLocationChange(oldUrl);
              }
            });
          }
          $location.$$replace = false;
          return changeCounter;
        });
        return $location;
        function afterLocationChange(oldUrl) {
          $rootScope.$broadcast('$locationChangeSuccess', $location.absUrl(), oldUrl);
        }
      }
    ];
  }
  /**
 * @ngdoc service
 * @name $log
 * @requires $window
 *
 * @description
 * Simple service for logging. Default implementation safely writes the message
 * into the browser's console (if present).
 *
 * The main purpose of this service is to simplify debugging and troubleshooting.
 *
 * The default is to log `debug` messages. You can use
 * {@link ng.$logProvider ng.$logProvider#debugEnabled} to change this.
 *
 * @example
   <example module="logExample">
     <file name="script.js">
       angular.module('logExample', [])
         .controller('LogController', ['$scope', '$log', function($scope, $log) {
           $scope.$log = $log;
           $scope.message = 'Hello World!';
         }]);
     </file>
     <file name="index.html">
       <div ng-controller="LogController">
         <p>Reload this page with open console, enter text and hit the log button...</p>
         Message:
         <input type="text" ng-model="message"/>
         <button ng-click="$log.log(message)">log</button>
         <button ng-click="$log.warn(message)">warn</button>
         <button ng-click="$log.info(message)">info</button>
         <button ng-click="$log.error(message)">error</button>
       </div>
     </file>
   </example>
 */
  /**
 * @ngdoc provider
 * @name $logProvider
 * @description
 * Use the `$logProvider` to configure how the application logs messages
 */
  function $LogProvider() {
    var debug = true, self = this;
    /**
   * @ngdoc method
   * @name $logProvider#debugEnabled
   * @description
   * @param {boolean=} flag enable or disable debug level messages
   * @returns {*} current value if used as getter or itself (chaining) if used as setter
   */
    this.debugEnabled = function (flag) {
      if (isDefined(flag)) {
        debug = flag;
        return this;
      } else {
        return debug;
      }
    };
    this.$get = [
      '$window',
      function ($window) {
        return {
          log: consoleLog('log'),
          info: consoleLog('info'),
          warn: consoleLog('warn'),
          error: consoleLog('error'),
          debug: function () {
            var fn = consoleLog('debug');
            return function () {
              if (debug) {
                fn.apply(self, arguments);
              }
            };
          }()
        };
        function formatError(arg) {
          if (arg instanceof Error) {
            if (arg.stack) {
              arg = arg.message && arg.stack.indexOf(arg.message) === -1 ? 'Error: ' + arg.message + '\n' + arg.stack : arg.stack;
            } else if (arg.sourceURL) {
              arg = arg.message + '\n' + arg.sourceURL + ':' + arg.line;
            }
          }
          return arg;
        }
        function consoleLog(type) {
          var console = $window.console || {}, logFn = console[type] || console.log || noop, hasApply = false;
          // Note: reading logFn.apply throws an error in IE11 in IE8 document mode.
          // The reason behind this is that console.log has type "object" in IE8...
          try {
            hasApply = !!logFn.apply;
          } catch (e) {
          }
          if (hasApply) {
            return function () {
              var args = [];
              forEach(arguments, function (arg) {
                args.push(formatError(arg));
              });
              return logFn.apply(console, args);
            };
          }
          // we are IE which either doesn't have window.console => this is noop and we do nothing,
          // or we are IE where console.log doesn't have apply so we log at least first 2 args
          return function (arg1, arg2) {
            logFn(arg1, arg2 == null ? '' : arg2);
          };
        }
      }
    ];
  }
  var $parseMinErr = minErr('$parse');
  var promiseWarningCache = {};
  var promiseWarning;
  // Sandboxing Angular Expressions
  // ------------------------------
  // Angular expressions are generally considered safe because these expressions only have direct
  // access to `$scope` and locals. However, one can obtain the ability to execute arbitrary JS code by
  // obtaining a reference to native JS functions such as the Function constructor.
  //
  // As an example, consider the following Angular expression:
  //
  //   {}.toString.constructor('alert("evil JS code")')
  //
  // This sandboxing technique is not perfect and doesn't aim to be. The goal is to prevent exploits
  // against the expression language, but not to prevent exploits that were enabled by exposing
  // sensitive JavaScript or browser APIs on Scope. Exposing such objects on a Scope is never a good
  // practice and therefore we are not even trying to protect against interaction with an object
  // explicitly exposed in this way.
  //
  // In general, it is not possible to access a Window object from an angular expression unless a
  // window or some DOM object that has a reference to window is published onto a Scope.
  // Similarly we prevent invocations of function known to be dangerous, as well as assignments to
  // native objects.
  //
  // See https://docs.angularjs.org/guide/security
  function ensureSafeMemberName(name, fullExpression) {
    if (name === '__defineGetter__' || name === '__defineSetter__' || name === '__lookupGetter__' || name === '__lookupSetter__' || name === '__proto__') {
      throw $parseMinErr('isecfld', 'Attempting to access a disallowed field in Angular expressions! ' + 'Expression: {0}', fullExpression);
    }
    return name;
  }
  function ensureSafeObject(obj, fullExpression) {
    // nifty check if obj is Function that is fast and works across iframes and other contexts
    if (obj) {
      if (obj.constructor === obj) {
        throw $parseMinErr('isecfn', 'Referencing Function in Angular expressions is disallowed! Expression: {0}', fullExpression);
      } else if (obj.document && obj.location && obj.alert && obj.setInterval) {
        throw $parseMinErr('isecwindow', 'Referencing the Window in Angular expressions is disallowed! Expression: {0}', fullExpression);
      } else if (obj.children && (obj.nodeName || obj.prop && obj.attr && obj.find)) {
        throw $parseMinErr('isecdom', 'Referencing DOM nodes in Angular expressions is disallowed! Expression: {0}', fullExpression);
      } else if (obj === Object) {
        throw $parseMinErr('isecobj', 'Referencing Object in Angular expressions is disallowed! Expression: {0}', fullExpression);
      }
    }
    return obj;
  }
  var CALL = Function.prototype.call;
  var APPLY = Function.prototype.apply;
  var BIND = Function.prototype.bind;
  function ensureSafeFunction(obj, fullExpression) {
    if (obj) {
      if (obj.constructor === obj) {
        throw $parseMinErr('isecfn', 'Referencing Function in Angular expressions is disallowed! Expression: {0}', fullExpression);
      } else if (obj === CALL || obj === APPLY || BIND && obj === BIND) {
        throw $parseMinErr('isecff', 'Referencing call, apply or bind in Angular expressions is disallowed! Expression: {0}', fullExpression);
      }
    }
  }
  var OPERATORS = {
      'null': function () {
        return null;
      },
      'true': function () {
        return true;
      },
      'false': function () {
        return false;
      },
      undefined: noop,
      '+': function (self, locals, a, b) {
        a = a(self, locals);
        b = b(self, locals);
        if (isDefined(a)) {
          if (isDefined(b)) {
            return a + b;
          }
          return a;
        }
        return isDefined(b) ? b : undefined;
      },
      '-': function (self, locals, a, b) {
        a = a(self, locals);
        b = b(self, locals);
        return (isDefined(a) ? a : 0) - (isDefined(b) ? b : 0);
      },
      '*': function (self, locals, a, b) {
        return a(self, locals) * b(self, locals);
      },
      '/': function (self, locals, a, b) {
        return a(self, locals) / b(self, locals);
      },
      '%': function (self, locals, a, b) {
        return a(self, locals) % b(self, locals);
      },
      '^': function (self, locals, a, b) {
        return a(self, locals) ^ b(self, locals);
      },
      '=': noop,
      '===': function (self, locals, a, b) {
        return a(self, locals) === b(self, locals);
      },
      '!==': function (self, locals, a, b) {
        return a(self, locals) !== b(self, locals);
      },
      '==': function (self, locals, a, b) {
        return a(self, locals) == b(self, locals);
      },
      '!=': function (self, locals, a, b) {
        return a(self, locals) != b(self, locals);
      },
      '<': function (self, locals, a, b) {
        return a(self, locals) < b(self, locals);
      },
      '>': function (self, locals, a, b) {
        return a(self, locals) > b(self, locals);
      },
      '<=': function (self, locals, a, b) {
        return a(self, locals) <= b(self, locals);
      },
      '>=': function (self, locals, a, b) {
        return a(self, locals) >= b(self, locals);
      },
      '&&': function (self, locals, a, b) {
        return a(self, locals) && b(self, locals);
      },
      '||': function (self, locals, a, b) {
        return a(self, locals) || b(self, locals);
      },
      '&': function (self, locals, a, b) {
        return a(self, locals) & b(self, locals);
      },
      '|': function (self, locals, a, b) {
        return b(self, locals)(self, locals, a(self, locals));
      },
      '!': function (self, locals, a) {
        return !a(self, locals);
      }
    };
  /* jshint bitwise: true */
  var ESCAPE = {
      'n': '\n',
      'f': '\f',
      'r': '\r',
      't': '\t',
      'v': '\x0B',
      '\'': '\'',
      '"': '"'
    };
  /////////////////////////////////////////
  /**
 * @constructor
 */
  var Lexer = function (options) {
    this.options = options;
  };
  Lexer.prototype = {
    constructor: Lexer,
    lex: function (text) {
      this.text = text;
      this.index = 0;
      this.ch = undefined;
      this.lastCh = ':';
      // can start regexp
      this.tokens = [];
      while (this.index < this.text.length) {
        this.ch = this.text.charAt(this.index);
        if (this.is('"\'')) {
          this.readString(this.ch);
        } else if (this.isNumber(this.ch) || this.is('.') && this.isNumber(this.peek())) {
          this.readNumber();
        } else if (this.isIdent(this.ch)) {
          this.readIdent();
        } else if (this.is('(){}[].,;:?')) {
          this.tokens.push({
            index: this.index,
            text: this.ch
          });
          this.index++;
        } else if (this.isWhitespace(this.ch)) {
          this.index++;
          continue;
        } else {
          var ch2 = this.ch + this.peek();
          var ch3 = ch2 + this.peek(2);
          var fn = OPERATORS[this.ch];
          var fn2 = OPERATORS[ch2];
          var fn3 = OPERATORS[ch3];
          if (fn3) {
            this.tokens.push({
              index: this.index,
              text: ch3,
              fn: fn3
            });
            this.index += 3;
          } else if (fn2) {
            this.tokens.push({
              index: this.index,
              text: ch2,
              fn: fn2
            });
            this.index += 2;
          } else if (fn) {
            this.tokens.push({
              index: this.index,
              text: this.ch,
              fn: fn
            });
            this.index += 1;
          } else {
            this.throwError('Unexpected next character ', this.index, this.index + 1);
          }
        }
        this.lastCh = this.ch;
      }
      return this.tokens;
    },
    is: function (chars) {
      return chars.indexOf(this.ch) !== -1;
    },
    was: function (chars) {
      return chars.indexOf(this.lastCh) !== -1;
    },
    peek: function (i) {
      var num = i || 1;
      return this.index + num < this.text.length ? this.text.charAt(this.index + num) : false;
    },
    isNumber: function (ch) {
      return '0' <= ch && ch <= '9';
    },
    isWhitespace: function (ch) {
      // IE treats non-breaking space as \u00A0
      return ch === ' ' || ch === '\r' || ch === '\t' || ch === '\n' || ch === '\x0B' || ch === '\xa0';
    },
    isIdent: function (ch) {
      return 'a' <= ch && ch <= 'z' || 'A' <= ch && ch <= 'Z' || '_' === ch || ch === '$';
    },
    isExpOperator: function (ch) {
      return ch === '-' || ch === '+' || this.isNumber(ch);
    },
    throwError: function (error, start, end) {
      end = end || this.index;
      var colStr = isDefined(start) ? 's ' + start + '-' + this.index + ' [' + this.text.substring(start, end) + ']' : ' ' + end;
      throw $parseMinErr('lexerr', 'Lexer Error: {0} at column{1} in expression [{2}].', error, colStr, this.text);
    },
    readNumber: function () {
      var number = '';
      var start = this.index;
      while (this.index < this.text.length) {
        var ch = lowercase(this.text.charAt(this.index));
        if (ch == '.' || this.isNumber(ch)) {
          number += ch;
        } else {
          var peekCh = this.peek();
          if (ch == 'e' && this.isExpOperator(peekCh)) {
            number += ch;
          } else if (this.isExpOperator(ch) && peekCh && this.isNumber(peekCh) && number.charAt(number.length - 1) == 'e') {
            number += ch;
          } else if (this.isExpOperator(ch) && (!peekCh || !this.isNumber(peekCh)) && number.charAt(number.length - 1) == 'e') {
            this.throwError('Invalid exponent');
          } else {
            break;
          }
        }
        this.index++;
      }
      number = 1 * number;
      this.tokens.push({
        index: start,
        text: number,
        literal: true,
        constant: true,
        fn: function () {
          return number;
        }
      });
    },
    readIdent: function () {
      var parser = this;
      var ident = '';
      var start = this.index;
      var lastDot, peekIndex, methodName, ch;
      while (this.index < this.text.length) {
        ch = this.text.charAt(this.index);
        if (ch === '.' || this.isIdent(ch) || this.isNumber(ch)) {
          if (ch === '.')
            lastDot = this.index;
          ident += ch;
        } else {
          break;
        }
        this.index++;
      }
      //check if this is not a method invocation and if it is back out to last dot
      if (lastDot) {
        peekIndex = this.index;
        while (peekIndex < this.text.length) {
          ch = this.text.charAt(peekIndex);
          if (ch === '(') {
            methodName = ident.substr(lastDot - start + 1);
            ident = ident.substr(0, lastDot - start);
            this.index = peekIndex;
            break;
          }
          if (this.isWhitespace(ch)) {
            peekIndex++;
          } else {
            break;
          }
        }
      }
      var token = {
          index: start,
          text: ident
        };
      // OPERATORS is our own object so we don't need to use special hasOwnPropertyFn
      if (OPERATORS.hasOwnProperty(ident)) {
        token.fn = OPERATORS[ident];
        token.literal = true;
        token.constant = true;
      } else {
        var getter = getterFn(ident, this.options, this.text);
        token.fn = extend(function (self, locals) {
          return getter(self, locals);
        }, {
          assign: function (self, value) {
            return setter(self, ident, value, parser.text, parser.options);
          }
        });
      }
      this.tokens.push(token);
      if (methodName) {
        this.tokens.push({
          index: lastDot,
          text: '.'
        });
        this.tokens.push({
          index: lastDot + 1,
          text: methodName
        });
      }
    },
    readString: function (quote) {
      var start = this.index;
      this.index++;
      var string = '';
      var rawString = quote;
      var escape = false;
      while (this.index < this.text.length) {
        var ch = this.text.charAt(this.index);
        rawString += ch;
        if (escape) {
          if (ch === 'u') {
            var hex = this.text.substring(this.index + 1, this.index + 5);
            if (!hex.match(/[\da-f]{4}/i))
              this.throwError('Invalid unicode escape [\\u' + hex + ']');
            this.index += 4;
            string += String.fromCharCode(parseInt(hex, 16));
          } else {
            var rep = ESCAPE[ch];
            string = string + (rep || ch);
          }
          escape = false;
        } else if (ch === '\\') {
          escape = true;
        } else if (ch === quote) {
          this.index++;
          this.tokens.push({
            index: start,
            text: rawString,
            string: string,
            literal: true,
            constant: true,
            fn: function () {
              return string;
            }
          });
          return;
        } else {
          string += ch;
        }
        this.index++;
      }
      this.throwError('Unterminated quote', start);
    }
  };
  /**
 * @constructor
 */
  var Parser = function (lexer, $filter, options) {
    this.lexer = lexer;
    this.$filter = $filter;
    this.options = options;
  };
  Parser.ZERO = extend(function () {
    return 0;
  }, { constant: true });
  Parser.prototype = {
    constructor: Parser,
    parse: function (text) {
      this.text = text;
      this.tokens = this.lexer.lex(text);
      var value = this.statements();
      if (this.tokens.length !== 0) {
        this.throwError('is an unexpected token', this.tokens[0]);
      }
      value.literal = !!value.literal;
      value.constant = !!value.constant;
      return value;
    },
    primary: function () {
      var primary;
      if (this.expect('(')) {
        primary = this.filterChain();
        this.consume(')');
      } else if (this.expect('[')) {
        primary = this.arrayDeclaration();
      } else if (this.expect('{')) {
        primary = this.object();
      } else {
        var token = this.expect();
        primary = token.fn;
        if (!primary) {
          this.throwError('not a primary expression', token);
        }
        primary.literal = !!token.literal;
        primary.constant = !!token.constant;
      }
      var next, context;
      while (next = this.expect('(', '[', '.')) {
        if (next.text === '(') {
          primary = this.functionCall(primary, context);
          context = null;
        } else if (next.text === '[') {
          context = primary;
          primary = this.objectIndex(primary);
        } else if (next.text === '.') {
          context = primary;
          primary = this.fieldAccess(primary);
        } else {
          this.throwError('IMPOSSIBLE');
        }
      }
      return primary;
    },
    throwError: function (msg, token) {
      throw $parseMinErr('syntax', 'Syntax Error: Token \'{0}\' {1} at column {2} of the expression [{3}] starting at [{4}].', token.text, msg, token.index + 1, this.text, this.text.substring(token.index));
    },
    peekToken: function () {
      if (this.tokens.length === 0)
        throw $parseMinErr('ueoe', 'Unexpected end of expression: {0}', this.text);
      return this.tokens[0];
    },
    peek: function (e1, e2, e3, e4) {
      if (this.tokens.length > 0) {
        var token = this.tokens[0];
        var t = token.text;
        if (t === e1 || t === e2 || t === e3 || t === e4 || !e1 && !e2 && !e3 && !e4) {
          return token;
        }
      }
      return false;
    },
    expect: function (e1, e2, e3, e4) {
      var token = this.peek(e1, e2, e3, e4);
      if (token) {
        this.tokens.shift();
        return token;
      }
      return false;
    },
    consume: function (e1) {
      if (!this.expect(e1)) {
        this.throwError('is unexpected, expecting [' + e1 + ']', this.peek());
      }
    },
    unaryFn: function (fn, right) {
      return extend(function (self, locals) {
        return fn(self, locals, right);
      }, { constant: right.constant });
    },
    ternaryFn: function (left, middle, right) {
      return extend(function (self, locals) {
        return left(self, locals) ? middle(self, locals) : right(self, locals);
      }, { constant: left.constant && middle.constant && right.constant });
    },
    binaryFn: function (left, fn, right) {
      return extend(function (self, locals) {
        return fn(self, locals, left, right);
      }, { constant: left.constant && right.constant });
    },
    statements: function () {
      var statements = [];
      while (true) {
        if (this.tokens.length > 0 && !this.peek('}', ')', ';', ']'))
          statements.push(this.filterChain());
        if (!this.expect(';')) {
          // optimize for the common case where there is only one statement.
          // TODO(size): maybe we should not support multiple statements?
          return statements.length === 1 ? statements[0] : function (self, locals) {
            var value;
            for (var i = 0; i < statements.length; i++) {
              var statement = statements[i];
              if (statement) {
                value = statement(self, locals);
              }
            }
            return value;
          };
        }
      }
    },
    filterChain: function () {
      var left = this.expression();
      var token;
      while (true) {
        if (token = this.expect('|')) {
          left = this.binaryFn(left, token.fn, this.filter());
        } else {
          return left;
        }
      }
    },
    filter: function () {
      var token = this.expect();
      var fn = this.$filter(token.text);
      var argsFn = [];
      while (true) {
        if (token = this.expect(':')) {
          argsFn.push(this.expression());
        } else {
          var fnInvoke = function (self, locals, input) {
            var args = [input];
            for (var i = 0; i < argsFn.length; i++) {
              args.push(argsFn[i](self, locals));
            }
            return fn.apply(self, args);
          };
          return function () {
            return fnInvoke;
          };
        }
      }
    },
    expression: function () {
      return this.assignment();
    },
    assignment: function () {
      var left = this.ternary();
      var right;
      var token;
      if (token = this.expect('=')) {
        if (!left.assign) {
          this.throwError('implies assignment but [' + this.text.substring(0, token.index) + '] can not be assigned to', token);
        }
        right = this.ternary();
        return function (scope, locals) {
          return left.assign(scope, right(scope, locals), locals);
        };
      }
      return left;
    },
    ternary: function () {
      var left = this.logicalOR();
      var middle;
      var token;
      if (token = this.expect('?')) {
        middle = this.assignment();
        if (token = this.expect(':')) {
          return this.ternaryFn(left, middle, this.assignment());
        } else {
          this.throwError('expected :', token);
        }
      } else {
        return left;
      }
    },
    logicalOR: function () {
      var left = this.logicalAND();
      var token;
      while (true) {
        if (token = this.expect('||')) {
          left = this.binaryFn(left, token.fn, this.logicalAND());
        } else {
          return left;
        }
      }
    },
    logicalAND: function () {
      var left = this.equality();
      var token;
      if (token = this.expect('&&')) {
        left = this.binaryFn(left, token.fn, this.logicalAND());
      }
      return left;
    },
    equality: function () {
      var left = this.relational();
      var token;
      if (token = this.expect('==', '!=', '===', '!==')) {
        left = this.binaryFn(left, token.fn, this.equality());
      }
      return left;
    },
    relational: function () {
      var left = this.additive();
      var token;
      if (token = this.expect('<', '>', '<=', '>=')) {
        left = this.binaryFn(left, token.fn, this.relational());
      }
      return left;
    },
    additive: function () {
      var left = this.multiplicative();
      var token;
      while (token = this.expect('+', '-')) {
        left = this.binaryFn(left, token.fn, this.multiplicative());
      }
      return left;
    },
    multiplicative: function () {
      var left = this.unary();
      var token;
      while (token = this.expect('*', '/', '%')) {
        left = this.binaryFn(left, token.fn, this.unary());
      }
      return left;
    },
    unary: function () {
      var token;
      if (this.expect('+')) {
        return this.primary();
      } else if (token = this.expect('-')) {
        return this.binaryFn(Parser.ZERO, token.fn, this.unary());
      } else if (token = this.expect('!')) {
        return this.unaryFn(token.fn, this.unary());
      } else {
        return this.primary();
      }
    },
    fieldAccess: function (object) {
      var parser = this;
      var field = this.expect().text;
      var getter = getterFn(field, this.options, this.text);
      return extend(function (scope, locals, self) {
        return getter(self || object(scope, locals));
      }, {
        assign: function (scope, value, locals) {
          var o = object(scope, locals);
          if (!o)
            object.assign(scope, o = {});
          return setter(o, field, value, parser.text, parser.options);
        }
      });
    },
    objectIndex: function (obj) {
      var parser = this;
      var indexFn = this.expression();
      this.consume(']');
      return extend(function (self, locals) {
        var o = obj(self, locals), i = indexFn(self, locals), v, p;
        ensureSafeMemberName(i, parser.text);
        if (!o)
          return undefined;
        v = ensureSafeObject(o[i], parser.text);
        if (v && v.then && parser.options.unwrapPromises) {
          p = v;
          if (!('$$v' in v)) {
            p.$$v = undefined;
            p.then(function (val) {
              p.$$v = val;
            });
          }
          v = v.$$v;
        }
        return v;
      }, {
        assign: function (self, value, locals) {
          var key = ensureSafeMemberName(indexFn(self, locals), parser.text);
          // prevent overwriting of Function.constructor which would break ensureSafeObject check
          var o = ensureSafeObject(obj(self, locals), parser.text);
          if (!o)
            obj.assign(self, o = {});
          return o[key] = value;
        }
      });
    },
    functionCall: function (fn, contextGetter) {
      var argsFn = [];
      if (this.peekToken().text !== ')') {
        do {
          argsFn.push(this.expression());
        } while (this.expect(','));
      }
      this.consume(')');
      var parser = this;
      return function (scope, locals) {
        var args = [];
        var context = contextGetter ? contextGetter(scope, locals) : scope;
        for (var i = 0; i < argsFn.length; i++) {
          args.push(ensureSafeObject(argsFn[i](scope, locals), parser.text));
        }
        var fnPtr = fn(scope, locals, context) || noop;
        ensureSafeObject(context, parser.text);
        ensureSafeFunction(fnPtr, parser.text);
        // IE doesn't have apply for some native functions
        var v = fnPtr.apply ? fnPtr.apply(context, args) : fnPtr(args[0], args[1], args[2], args[3], args[4]);
        return ensureSafeObject(v, parser.text);
      };
    },
    arrayDeclaration: function () {
      var elementFns = [];
      var allConstant = true;
      if (this.peekToken().text !== ']') {
        do {
          if (this.peek(']')) {
            // Support trailing commas per ES5.1.
            break;
          }
          var elementFn = this.expression();
          elementFns.push(elementFn);
          if (!elementFn.constant) {
            allConstant = false;
          }
        } while (this.expect(','));
      }
      this.consume(']');
      return extend(function (self, locals) {
        var array = [];
        for (var i = 0; i < elementFns.length; i++) {
          array.push(elementFns[i](self, locals));
        }
        return array;
      }, {
        literal: true,
        constant: allConstant
      });
    },
    object: function () {
      var keyValues = [];
      var allConstant = true;
      if (this.peekToken().text !== '}') {
        do {
          if (this.peek('}')) {
            // Support trailing commas per ES5.1.
            break;
          }
          var token = this.expect(), key = token.string || token.text;
          this.consume(':');
          var value = this.expression();
          keyValues.push({
            key: key,
            value: value
          });
          if (!value.constant) {
            allConstant = false;
          }
        } while (this.expect(','));
      }
      this.consume('}');
      return extend(function (self, locals) {
        var object = {};
        for (var i = 0; i < keyValues.length; i++) {
          var keyValue = keyValues[i];
          object[keyValue.key] = keyValue.value(self, locals);
        }
        return object;
      }, {
        literal: true,
        constant: allConstant
      });
    }
  };
  //////////////////////////////////////////////////
  // Parser helper functions
  //////////////////////////////////////////////////
  function setter(obj, path, setValue, fullExp, options) {
    ensureSafeObject(obj, fullExp);
    //needed?
    options = options || {};
    var element = path.split('.'), key;
    for (var i = 0; element.length > 1; i++) {
      key = ensureSafeMemberName(element.shift(), fullExp);
      var propertyObj = ensureSafeObject(obj[key], fullExp);
      if (!propertyObj) {
        propertyObj = {};
        obj[key] = propertyObj;
      }
      obj = propertyObj;
      if (obj.then && options.unwrapPromises) {
        promiseWarning(fullExp);
        if (!('$$v' in obj)) {
          (function (promise) {
            promise.then(function (val) {
              promise.$$v = val;
            });
          }(obj));
        }
        if (obj.$$v === undefined) {
          obj.$$v = {};
        }
        obj = obj.$$v;
      }
    }
    key = ensureSafeMemberName(element.shift(), fullExp);
    ensureSafeObject(obj[key], fullExp);
    obj[key] = setValue;
    return setValue;
  }
  var getterFnCacheDefault = {};
  var getterFnCacheExpensive = {};
  function isPossiblyDangerousMemberName(name) {
    return name == 'constructor';
  }
  /**
 * Implementation of the "Black Hole" variant from:
 * - http://jsperf.com/angularjs-parse-getter/4
 * - http://jsperf.com/path-evaluation-simplified/7
 */
  function cspSafeGetterFn(key0, key1, key2, key3, key4, fullExp, options) {
    ensureSafeMemberName(key0, fullExp);
    ensureSafeMemberName(key1, fullExp);
    ensureSafeMemberName(key2, fullExp);
    ensureSafeMemberName(key3, fullExp);
    ensureSafeMemberName(key4, fullExp);
    var eso = function (o) {
      return ensureSafeObject(o, fullExp);
    };
    var expensiveChecks = options.expensiveChecks;
    var eso0 = expensiveChecks || isPossiblyDangerousMemberName(key0) ? eso : identity;
    var eso1 = expensiveChecks || isPossiblyDangerousMemberName(key1) ? eso : identity;
    var eso2 = expensiveChecks || isPossiblyDangerousMemberName(key2) ? eso : identity;
    var eso3 = expensiveChecks || isPossiblyDangerousMemberName(key3) ? eso : identity;
    var eso4 = expensiveChecks || isPossiblyDangerousMemberName(key4) ? eso : identity;
    return !options.unwrapPromises ? function cspSafeGetter(scope, locals) {
      var pathVal = locals && locals.hasOwnProperty(key0) ? locals : scope;
      if (pathVal == null)
        return pathVal;
      pathVal = eso0(pathVal[key0]);
      if (!key1)
        return pathVal;
      if (pathVal == null)
        return undefined;
      pathVal = eso1(pathVal[key1]);
      if (!key2)
        return pathVal;
      if (pathVal == null)
        return undefined;
      pathVal = eso2(pathVal[key2]);
      if (!key3)
        return pathVal;
      if (pathVal == null)
        return undefined;
      pathVal = eso3(pathVal[key3]);
      if (!key4)
        return pathVal;
      if (pathVal == null)
        return undefined;
      pathVal = eso4(pathVal[key4]);
      return pathVal;
    } : function cspSafePromiseEnabledGetter(scope, locals) {
      var pathVal = locals && locals.hasOwnProperty(key0) ? locals : scope, promise;
      if (pathVal == null)
        return pathVal;
      pathVal = eso0(pathVal[key0]);
      if (pathVal && pathVal.then) {
        promiseWarning(fullExp);
        if (!('$$v' in pathVal)) {
          promise = pathVal;
          promise.$$v = undefined;
          promise.then(function (val) {
            promise.$$v = eso0(val);
          });
        }
        pathVal = eso0(pathVal.$$v);
      }
      if (!key1)
        return pathVal;
      if (pathVal == null)
        return undefined;
      pathVal = eso1(pathVal[key1]);
      if (pathVal && pathVal.then) {
        promiseWarning(fullExp);
        if (!('$$v' in pathVal)) {
          promise = pathVal;
          promise.$$v = undefined;
          promise.then(function (val) {
            promise.$$v = eso1(val);
          });
        }
        pathVal = eso1(pathVal.$$v);
      }
      if (!key2)
        return pathVal;
      if (pathVal == null)
        return undefined;
      pathVal = eso2(pathVal[key2]);
      if (pathVal && pathVal.then) {
        promiseWarning(fullExp);
        if (!('$$v' in pathVal)) {
          promise = pathVal;
          promise.$$v = undefined;
          promise.then(function (val) {
            promise.$$v = eso2(val);
          });
        }
        pathVal = eso2(pathVal.$$v);
      }
      if (!key3)
        return pathVal;
      if (pathVal == null)
        return undefined;
      pathVal = eso3(pathVal[key3]);
      if (pathVal && pathVal.then) {
        promiseWarning(fullExp);
        if (!('$$v' in pathVal)) {
          promise = pathVal;
          promise.$$v = undefined;
          promise.then(function (val) {
            promise.$$v = eso3(val);
          });
        }
        pathVal = eso3(pathVal.$$v);
      }
      if (!key4)
        return pathVal;
      if (pathVal == null)
        return undefined;
      pathVal = eso4(pathVal[key4]);
      if (pathVal && pathVal.then) {
        promiseWarning(fullExp);
        if (!('$$v' in pathVal)) {
          promise = pathVal;
          promise.$$v = undefined;
          promise.then(function (val) {
            promise.$$v = eso4(val);
          });
        }
        pathVal = eso4(pathVal.$$v);
      }
      return pathVal;
    };
  }
  function getterFnWithExtraArgs(fn, fullExpression) {
    return function (s, l) {
      return fn(s, l, promiseWarning, ensureSafeObject, fullExpression);
    };
  }
  function getterFn(path, options, fullExp) {
    var expensiveChecks = options.expensiveChecks;
    var getterFnCache = expensiveChecks ? getterFnCacheExpensive : getterFnCacheDefault;
    // Check whether the cache has this getter already.
    // We can use hasOwnProperty directly on the cache because we ensure,
    // see below, that the cache never stores a path called 'hasOwnProperty'
    if (getterFnCache.hasOwnProperty(path)) {
      return getterFnCache[path];
    }
    var pathKeys = path.split('.'), pathKeysLength = pathKeys.length, fn;
    // http://jsperf.com/angularjs-parse-getter/6
    if (options.csp) {
      if (pathKeysLength < 6) {
        fn = cspSafeGetterFn(pathKeys[0], pathKeys[1], pathKeys[2], pathKeys[3], pathKeys[4], fullExp, options);
      } else {
        fn = function (scope, locals) {
          var i = 0, val;
          do {
            val = cspSafeGetterFn(pathKeys[i++], pathKeys[i++], pathKeys[i++], pathKeys[i++], pathKeys[i++], fullExp, options)(scope, locals);
            locals = undefined;
            // clear after first iteration
            scope = val;
          } while (i < pathKeysLength);
          return val;
        };
      }
    } else {
      var code = 'var p;\n';
      if (expensiveChecks) {
        code += 's = eso(s, fe);\nl = eso(l, fe);\n';
      }
      var needsEnsureSafeObject = expensiveChecks;
      forEach(pathKeys, function (key, index) {
        ensureSafeMemberName(key, fullExp);
        var lookupJs = (index ? 's' : '((l&&l.hasOwnProperty("' + key + '"))?l:s)') + '["' + key + '"]';
        var wrapWithEso = expensiveChecks || isPossiblyDangerousMemberName(key);
        if (wrapWithEso) {
          lookupJs = 'eso(' + lookupJs + ', fe)';
          needsEnsureSafeObject = true;
        }
        code += 'if(s == null) return undefined;\n' + 's=' + lookupJs + ';\n';
        if (options.unwrapPromises) {
          code += 'if (s && s.then) {\n' + ' pw("' + fullExp.replace(/(["\r\n])/g, '\\$1') + '");\n' + ' if (!("$$v" in s)) {\n' + ' p=s;\n' + ' p.$$v = undefined;\n' + ' p.then(function(v) {p.$$v=' + (wrapWithEso ? 'eso(v)' : 'v') + ';});\n' + '}\n' + ' s=' + (wrapWithEso ? 'eso(s.$$v)' : 's.$$v') + '\n' + '}\n';
        }
      });
      code += 'return s;';
      /* jshint -W054 */
      // s=scope, l=locals, pw=promiseWarning, eso=ensureSafeObject, fe=fullExpression
      var evaledFnGetter = new Function('s', 'l', 'pw', 'eso', 'fe', code);
      /* jshint +W054 */
      evaledFnGetter.toString = valueFn(code);
      if (needsEnsureSafeObject || options.unwrapPromises) {
        evaledFnGetter = getterFnWithExtraArgs(evaledFnGetter, fullExp);
      }
      fn = evaledFnGetter;
    }
    // Only cache the value if it's not going to mess up the cache object
    // This is more performant that using Object.prototype.hasOwnProperty.call
    if (path !== 'hasOwnProperty') {
      getterFnCache[path] = fn;
    }
    return fn;
  }
  ///////////////////////////////////
  /**
 * @ngdoc service
 * @name $parse
 * @kind function
 *
 * @description
 *
 * Converts Angular {@link guide/expression expression} into a function.
 *
 * ```js
 *   var getter = $parse('user.name');
 *   var setter = getter.assign;
 *   var context = {user:{name:'angular'}};
 *   var locals = {user:{name:'local'}};
 *
 *   expect(getter(context)).toEqual('angular');
 *   setter(context, 'newValue');
 *   expect(context.user.name).toEqual('newValue');
 *   expect(getter(context, locals)).toEqual('local');
 * ```
 *
 *
 * @param {string} expression String expression to compile.
 * @returns {function(context, locals)} a function which represents the compiled expression:
 *
 *    * `context` – `{object}` – an object against which any expressions embedded in the strings
 *      are evaluated against (typically a scope object).
 *    * `locals` – `{object=}` – local variables context object, useful for overriding values in
 *      `context`.
 *
 *    The returned function also has the following properties:
 *      * `literal` – `{boolean}` – whether the expression's top-level node is a JavaScript
 *        literal.
 *      * `constant` – `{boolean}` – whether the expression is made entirely of JavaScript
 *        constant literals.
 *      * `assign` – `{?function(context, value)}` – if the expression is assignable, this will be
 *        set to a function to change its value on the given context.
 *
 */
  /**
 * @ngdoc provider
 * @name $parseProvider
 * @kind function
 *
 * @description
 * `$parseProvider` can be used for configuring the default behavior of the {@link ng.$parse $parse}
 *  service.
 */
  function $ParseProvider() {
    var cacheDefault = {};
    var cacheExpensive = {};
    var $parseOptions = {
        csp: false,
        unwrapPromises: false,
        logPromiseWarnings: true,
        expensiveChecks: false
      };
    /**
   * @deprecated Promise unwrapping via $parse is deprecated and will be removed in the future.
   *
   * @ngdoc method
   * @name $parseProvider#unwrapPromises
   * @description
   *
   * **This feature is deprecated, see deprecation notes below for more info**
   *
   * If set to true (default is false), $parse will unwrap promises automatically when a promise is
   * found at any part of the expression. In other words, if set to true, the expression will always
   * result in a non-promise value.
   *
   * While the promise is unresolved, it's treated as undefined, but once resolved and fulfilled,
   * the fulfillment value is used in place of the promise while evaluating the expression.
   *
   * **Deprecation notice**
   *
   * This is a feature that didn't prove to be wildly useful or popular, primarily because of the
   * dichotomy between data access in templates (accessed as raw values) and controller code
   * (accessed as promises).
   *
   * In most code we ended up resolving promises manually in controllers anyway and thus unifying
   * the model access there.
   *
   * Other downsides of automatic promise unwrapping:
   *
   * - when building components it's often desirable to receive the raw promises
   * - adds complexity and slows down expression evaluation
   * - makes expression code pre-generation unattractive due to the amount of code that needs to be
   *   generated
   * - makes IDE auto-completion and tool support hard
   *
   * **Warning Logs**
   *
   * If the unwrapping is enabled, Angular will log a warning about each expression that unwraps a
   * promise (to reduce the noise, each expression is logged only once). To disable this logging use
   * `$parseProvider.logPromiseWarnings(false)` api.
   *
   *
   * @param {boolean=} value New value.
   * @returns {boolean|self} Returns the current setting when used as getter and self if used as
   *                         setter.
   */
    this.unwrapPromises = function (value) {
      if (isDefined(value)) {
        $parseOptions.unwrapPromises = !!value;
        return this;
      } else {
        return $parseOptions.unwrapPromises;
      }
    };
    /**
   * @deprecated Promise unwrapping via $parse is deprecated and will be removed in the future.
   *
   * @ngdoc method
   * @name $parseProvider#logPromiseWarnings
   * @description
   *
   * Controls whether Angular should log a warning on any encounter of a promise in an expression.
   *
   * The default is set to `true`.
   *
   * This setting applies only if `$parseProvider.unwrapPromises` setting is set to true as well.
   *
   * @param {boolean=} value New value.
   * @returns {boolean|self} Returns the current setting when used as getter and self if used as
   *                         setter.
   */
    this.logPromiseWarnings = function (value) {
      if (isDefined(value)) {
        $parseOptions.logPromiseWarnings = value;
        return this;
      } else {
        return $parseOptions.logPromiseWarnings;
      }
    };
    this.$get = [
      '$filter',
      '$sniffer',
      '$log',
      function ($filter, $sniffer, $log) {
        $parseOptions.csp = $sniffer.csp;
        var $parseOptionsExpensive = {
            csp: $parseOptions.csp,
            unwrapPromises: $parseOptions.unwrapPromises,
            logPromiseWarnings: $parseOptions.logPromiseWarnings,
            expensiveChecks: true
          };
        promiseWarning = function promiseWarningFn(fullExp) {
          if (!$parseOptions.logPromiseWarnings || promiseWarningCache.hasOwnProperty(fullExp))
            return;
          promiseWarningCache[fullExp] = true;
          $log.warn('[$parse] Promise found in the expression `' + fullExp + '`. ' + 'Automatic unwrapping of promises in Angular expressions is deprecated.');
        };
        return function (exp, expensiveChecks) {
          var parsedExpression;
          switch (typeof exp) {
          case 'string':
            var cache = expensiveChecks ? cacheExpensive : cacheDefault;
            if (cache.hasOwnProperty(exp)) {
              return cache[exp];
            }
            var parseOptions = expensiveChecks ? $parseOptionsExpensive : $parseOptions;
            var lexer = new Lexer(parseOptions);
            var parser = new Parser(lexer, $filter, parseOptions);
            parsedExpression = parser.parse(exp);
            if (exp !== 'hasOwnProperty') {
              // Only cache the value if it's not going to mess up the cache object
              // This is more performant that using Object.prototype.hasOwnProperty.call
              cache[exp] = parsedExpression;
            }
            return parsedExpression;
          case 'function':
            return exp;
          default:
            return noop;
          }
        };
      }
    ];
  }
  /**
 * @ngdoc service
 * @name $q
 * @requires $rootScope
 *
 * @description
 * A service that helps you run functions asynchronously, and use their return values (or exceptions)
 * when they are done processing.
 *
 * This is an implementation of promises/deferred objects inspired by
 * [Kris Kowal's Q](https://github.com/kriskowal/q).
 *
 * [The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an
 * interface for interacting with an object that represents the result of an action that is
 * performed asynchronously, and may or may not be finished at any given point in time.
 *
 * From the perspective of dealing with error handling, deferred and promise APIs are to
 * asynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.
 *
 * ```js
 *   // for the purpose of this example let's assume that variables `$q`, `scope` and `okToGreet`
 *   // are available in the current lexical scope (they could have been injected or passed in).
 *
 *   function asyncGreet(name) {
 *     var deferred = $q.defer();
 *
 *     setTimeout(function() {
 *       deferred.notify('About to greet ' + name + '.');
 *
 *       if (okToGreet(name)) {
 *         deferred.resolve('Hello, ' + name + '!');
 *       } else {
 *         deferred.reject('Greeting ' + name + ' is not allowed.');
 *       }
 *     }, 1000);
 *
 *     return deferred.promise;
 *   }
 *
 *   var promise = asyncGreet('Robin Hood');
 *   promise.then(function(greeting) {
 *     alert('Success: ' + greeting);
 *   }, function(reason) {
 *     alert('Failed: ' + reason);
 *   }, function(update) {
 *     alert('Got notification: ' + update);
 *   });
 * ```
 *
 * At first it might not be obvious why this extra complexity is worth the trouble. The payoff
 * comes in the way of guarantees that promise and deferred APIs make, see
 * https://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md.
 *
 * Additionally the promise api allows for composition that is very hard to do with the
 * traditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.
 * For more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the
 * section on serial or parallel joining of promises.
 *
 *
 * # The Deferred API
 *
 * A new instance of deferred is constructed by calling `$q.defer()`.
 *
 * The purpose of the deferred object is to expose the associated Promise instance as well as APIs
 * that can be used for signaling the successful or unsuccessful completion, as well as the status
 * of the task.
 *
 * **Methods**
 *
 * - `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection
 *   constructed via `$q.reject`, the promise will be rejected instead.
 * - `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to
 *   resolving it with a rejection constructed via `$q.reject`.
 * - `notify(value)` - provides updates on the status of the promise's execution. This may be called
 *   multiple times before the promise is either resolved or rejected.
 *
 * **Properties**
 *
 * - promise – `{Promise}` – promise object associated with this deferred.
 *
 *
 * # The Promise API
 *
 * A new promise instance is created when a deferred instance is created and can be retrieved by
 * calling `deferred.promise`.
 *
 * The purpose of the promise object is to allow for interested parties to get access to the result
 * of the deferred task when it completes.
 *
 * **Methods**
 *
 * - `then(successCallback, errorCallback, notifyCallback)` – regardless of when the promise was or
 *   will be resolved or rejected, `then` calls one of the success or error callbacks asynchronously
 *   as soon as the result is available. The callbacks are called with a single argument: the result
 *   or rejection reason. Additionally, the notify callback may be called zero or more times to
 *   provide a progress indication, before the promise is resolved or rejected.
 *
 *   This method *returns a new promise* which is resolved or rejected via the return value of the
 *   `successCallback`, `errorCallback`. It also notifies via the return value of the
 *   `notifyCallback` method. The promise can not be resolved or rejected from the notifyCallback
 *   method.
 *
 * - `catch(errorCallback)` – shorthand for `promise.then(null, errorCallback)`
 *
 *   Because `catch` is a reserved word in JavaScript and reserved keywords are not supported as
 *   property names by ES3, you'll need to invoke the method like `promise['catch'](callback)` or
 *  `promise.then(null, errorCallback)` to make your code IE8 and Android 2.x compatible.
 *
 * - `finally(callback)` – allows you to observe either the fulfillment or rejection of a promise,
 *   but to do so without modifying the final value. This is useful to release resources or do some
 *   clean-up that needs to be done whether the promise was rejected or resolved. See the [full
 *   specification](https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback) for
 *   more information.
 *
 *   Because `finally` is a reserved word in JavaScript and reserved keywords are not supported as
 *   property names by ES3, you'll need to invoke the method like `promise['finally'](callback)` to
 *   make your code IE8 and Android 2.x compatible.
 *
 * # Chaining promises
 *
 * Because calling the `then` method of a promise returns a new derived promise, it is easily
 * possible to create a chain of promises:
 *
 * ```js
 *   promiseB = promiseA.then(function(result) {
 *     return result + 1;
 *   });
 *
 *   // promiseB will be resolved immediately after promiseA is resolved and its value
 *   // will be the result of promiseA incremented by 1
 * ```
 *
 * It is possible to create chains of any length and since a promise can be resolved with another
 * promise (which will defer its resolution further), it is possible to pause/defer resolution of
 * the promises at any point in the chain. This makes it possible to implement powerful APIs like
 * $http's response interceptors.
 *
 *
 * # Differences between Kris Kowal's Q and $q
 *
 *  There are two main differences:
 *
 * - $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation
 *   mechanism in angular, which means faster propagation of resolution or rejection into your
 *   models and avoiding unnecessary browser repaints, which would result in flickering UI.
 * - Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains
 *   all the important functionality needed for common async tasks.
 *
 *  # Testing
 *
 *  ```js
 *    it('should simulate promise', inject(function($q, $rootScope) {
 *      var deferred = $q.defer();
 *      var promise = deferred.promise;
 *      var resolvedValue;
 *
 *      promise.then(function(value) { resolvedValue = value; });
 *      expect(resolvedValue).toBeUndefined();
 *
 *      // Simulate resolving of promise
 *      deferred.resolve(123);
 *      // Note that the 'then' function does not get called synchronously.
 *      // This is because we want the promise API to always be async, whether or not
 *      // it got called synchronously or asynchronously.
 *      expect(resolvedValue).toBeUndefined();
 *
 *      // Propagate promise resolution to 'then' functions using $apply().
 *      $rootScope.$apply();
 *      expect(resolvedValue).toEqual(123);
 *    }));
 *  ```
 */
  function $QProvider() {
    this.$get = [
      '$rootScope',
      '$exceptionHandler',
      function ($rootScope, $exceptionHandler) {
        return qFactory(function (callback) {
          $rootScope.$evalAsync(callback);
        }, $exceptionHandler);
      }
    ];
  }
  /**
 * Constructs a promise manager.
 *
 * @param {function(Function)} nextTick Function for executing functions in the next turn.
 * @param {function(...*)} exceptionHandler Function into which unexpected exceptions are passed for
 *     debugging purposes.
 * @returns {object} Promise manager.
 */
  function qFactory(nextTick, exceptionHandler) {
    /**
   * @ngdoc method
   * @name $q#defer
   * @kind function
   *
   * @description
   * Creates a `Deferred` object which represents a task which will finish in the future.
   *
   * @returns {Deferred} Returns a new instance of deferred.
   */
    var defer = function () {
      var pending = [], value, deferred;
      deferred = {
        resolve: function (val) {
          if (pending) {
            var callbacks = pending;
            pending = undefined;
            value = ref(val);
            if (callbacks.length) {
              nextTick(function () {
                var callback;
                for (var i = 0, ii = callbacks.length; i < ii; i++) {
                  callback = callbacks[i];
                  value.then(callback[0], callback[1], callback[2]);
                }
              });
            }
          }
        },
        reject: function (reason) {
          deferred.resolve(createInternalRejectedPromise(reason));
        },
        notify: function (progress) {
          if (pending) {
            var callbacks = pending;
            if (pending.length) {
              nextTick(function () {
                var callback;
                for (var i = 0, ii = callbacks.length; i < ii; i++) {
                  callback = callbacks[i];
                  callback[2](progress);
                }
              });
            }
          }
        },
        promise: {
          then: function (callback, errback, progressback) {
            var result = defer();
            var wrappedCallback = function (value) {
              try {
                result.resolve((isFunction(callback) ? callback : defaultCallback)(value));
              } catch (e) {
                result.reject(e);
                exceptionHandler(e);
              }
            };
            var wrappedErrback = function (reason) {
              try {
                result.resolve((isFunction(errback) ? errback : defaultErrback)(reason));
              } catch (e) {
                result.reject(e);
                exceptionHandler(e);
              }
            };
            var wrappedProgressback = function (progress) {
              try {
                result.notify((isFunction(progressback) ? progressback : defaultCallback)(progress));
              } catch (e) {
                exceptionHandler(e);
              }
            };
            if (pending) {
              pending.push([
                wrappedCallback,
                wrappedErrback,
                wrappedProgressback
              ]);
            } else {
              value.then(wrappedCallback, wrappedErrback, wrappedProgressback);
            }
            return result.promise;
          },
          'catch': function (callback) {
            return this.then(null, callback);
          },
          'finally': function (callback) {
            function makePromise(value, resolved) {
              var result = defer();
              if (resolved) {
                result.resolve(value);
              } else {
                result.reject(value);
              }
              return result.promise;
            }
            function handleCallback(value, isResolved) {
              var callbackOutput = null;
              try {
                callbackOutput = (callback || defaultCallback)();
              } catch (e) {
                return makePromise(e, false);
              }
              if (isPromiseLike(callbackOutput)) {
                return callbackOutput.then(function () {
                  return makePromise(value, isResolved);
                }, function (error) {
                  return makePromise(error, false);
                });
              } else {
                return makePromise(value, isResolved);
              }
            }
            return this.then(function (value) {
              return handleCallback(value, true);
            }, function (error) {
              return handleCallback(error, false);
            });
          }
        }
      };
      return deferred;
    };
    var ref = function (value) {
      if (isPromiseLike(value))
        return value;
      return {
        then: function (callback) {
          var result = defer();
          nextTick(function () {
            result.resolve(callback(value));
          });
          return result.promise;
        }
      };
    };
    /**
   * @ngdoc method
   * @name $q#reject
   * @kind function
   *
   * @description
   * Creates a promise that is resolved as rejected with the specified `reason`. This api should be
   * used to forward rejection in a chain of promises. If you are dealing with the last promise in
   * a promise chain, you don't need to worry about it.
   *
   * When comparing deferreds/promises to the familiar behavior of try/catch/throw, think of
   * `reject` as the `throw` keyword in JavaScript. This also means that if you "catch" an error via
   * a promise error callback and you want to forward the error to the promise derived from the
   * current promise, you have to "rethrow" the error by returning a rejection constructed via
   * `reject`.
   *
   * ```js
   *   promiseB = promiseA.then(function(result) {
   *     // success: do something and resolve promiseB
   *     //          with the old or a new result
   *     return result;
   *   }, function(reason) {
   *     // error: handle the error if possible and
   *     //        resolve promiseB with newPromiseOrValue,
   *     //        otherwise forward the rejection to promiseB
   *     if (canHandle(reason)) {
   *      // handle the error and recover
   *      return newPromiseOrValue;
   *     }
   *     return $q.reject(reason);
   *   });
   * ```
   *
   * @param {*} reason Constant, message, exception or an object representing the rejection reason.
   * @returns {Promise} Returns a promise that was already resolved as rejected with the `reason`.
   */
    var reject = function (reason) {
      var result = defer();
      result.reject(reason);
      return result.promise;
    };
    var createInternalRejectedPromise = function (reason) {
      return {
        then: function (callback, errback) {
          var result = defer();
          nextTick(function () {
            try {
              result.resolve((isFunction(errback) ? errback : defaultErrback)(reason));
            } catch (e) {
              result.reject(e);
              exceptionHandler(e);
            }
          });
          return result.promise;
        }
      };
    };
    /**
   * @ngdoc method
   * @name $q#when
   * @kind function
   *
   * @description
   * Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.
   * This is useful when you are dealing with an object that might or might not be a promise, or if
   * the promise comes from a source that can't be trusted.
   *
   * @param {*} value Value or a promise
   * @returns {Promise} Returns a promise of the passed value or promise
   */
    var when = function (value, callback, errback, progressback) {
      var result = defer(), done;
      var wrappedCallback = function (value) {
        try {
          return (isFunction(callback) ? callback : defaultCallback)(value);
        } catch (e) {
          exceptionHandler(e);
          return reject(e);
        }
      };
      var wrappedErrback = function (reason) {
        try {
          return (isFunction(errback) ? errback : defaultErrback)(reason);
        } catch (e) {
          exceptionHandler(e);
          return reject(e);
        }
      };
      var wrappedProgressback = function (progress) {
        try {
          return (isFunction(progressback) ? progressback : defaultCallback)(progress);
        } catch (e) {
          exceptionHandler(e);
        }
      };
      nextTick(function () {
        ref(value).then(function (value) {
          if (done)
            return;
          done = true;
          result.resolve(ref(value).then(wrappedCallback, wrappedErrback, wrappedProgressback));
        }, function (reason) {
          if (done)
            return;
          done = true;
          result.resolve(wrappedErrback(reason));
        }, function (progress) {
          if (done)
            return;
          result.notify(wrappedProgressback(progress));
        });
      });
      return result.promise;
    };
    function defaultCallback(value) {
      return value;
    }
    function defaultErrback(reason) {
      return reject(reason);
    }
    /**
   * @ngdoc method
   * @name $q#all
   * @kind function
   *
   * @description
   * Combines multiple promises into a single promise that is resolved when all of the input
   * promises are resolved.
   *
   * @param {Array.<Promise>|Object.<Promise>} promises An array or hash of promises.
   * @returns {Promise} Returns a single promise that will be resolved with an array/hash of values,
   *   each value corresponding to the promise at the same index/key in the `promises` array/hash.
   *   If any of the promises is resolved with a rejection, this resulting promise will be rejected
   *   with the same rejection value.
   */
    function all(promises) {
      var deferred = defer(), counter = 0, results = isArray(promises) ? [] : {};
      forEach(promises, function (promise, key) {
        counter++;
        ref(promise).then(function (value) {
          if (results.hasOwnProperty(key))
            return;
          results[key] = value;
          if (!--counter)
            deferred.resolve(results);
        }, function (reason) {
          if (results.hasOwnProperty(key))
            return;
          deferred.reject(reason);
        });
      });
      if (counter === 0) {
        deferred.resolve(results);
      }
      return deferred.promise;
    }
    return {
      defer: defer,
      reject: reject,
      when: when,
      all: all
    };
  }
  function $$RAFProvider() {
    //rAF
    this.$get = [
      '$window',
      '$timeout',
      function ($window, $timeout) {
        var requestAnimationFrame = $window.requestAnimationFrame || $window.webkitRequestAnimationFrame || $window.mozRequestAnimationFrame;
        var cancelAnimationFrame = $window.cancelAnimationFrame || $window.webkitCancelAnimationFrame || $window.mozCancelAnimationFrame || $window.webkitCancelRequestAnimationFrame;
        var rafSupported = !!requestAnimationFrame;
        var raf = rafSupported ? function (fn) {
            var id = requestAnimationFrame(fn);
            return function () {
              cancelAnimationFrame(id);
            };
          } : function (fn) {
            var timer = $timeout(fn, 16.66, false);
            // 1000 / 60 = 16.666
            return function () {
              $timeout.cancel(timer);
            };
          };
        raf.supported = rafSupported;
        return raf;
      }
    ];
  }
  /**
 * DESIGN NOTES
 *
 * The design decisions behind the scope are heavily favored for speed and memory consumption.
 *
 * The typical use of scope is to watch the expressions, which most of the time return the same
 * value as last time so we optimize the operation.
 *
 * Closures construction is expensive in terms of speed as well as memory:
 *   - No closures, instead use prototypical inheritance for API
 *   - Internal state needs to be stored on scope directly, which means that private state is
 *     exposed as $$____ properties
 *
 * Loop operations are optimized by using while(count--) { ... }
 *   - this means that in order to keep the same order of execution as addition we have to add
 *     items to the array at the beginning (unshift) instead of at the end (push)
 *
 * Child scopes are created and removed often
 *   - Using an array would be slow since inserts in middle are expensive so we use linked list
 *
 * There are few watches then a lot of observers. This is why you don't want the observer to be
 * implemented in the same way as watch. Watch requires return of initialization function which
 * are expensive to construct.
 */
  /**
 * @ngdoc provider
 * @name $rootScopeProvider
 * @description
 *
 * Provider for the $rootScope service.
 */
  /**
 * @ngdoc method
 * @name $rootScopeProvider#digestTtl
 * @description
 *
 * Sets the number of `$digest` iterations the scope should attempt to execute before giving up and
 * assuming that the model is unstable.
 *
 * The current default is 10 iterations.
 *
 * In complex applications it's possible that the dependencies between `$watch`s will result in
 * several digest iterations. However if an application needs more than the default 10 digest
 * iterations for its model to stabilize then you should investigate what is causing the model to
 * continuously change during the digest.
 *
 * Increasing the TTL could have performance implications, so you should not change it without
 * proper justification.
 *
 * @param {number} limit The number of digest iterations.
 */
  /**
 * @ngdoc service
 * @name $rootScope
 * @description
 *
 * Every application has a single root {@link ng.$rootScope.Scope scope}.
 * All other scopes are descendant scopes of the root scope. Scopes provide separation
 * between the model and the view, via a mechanism for watching the model for changes.
 * They also provide an event emission/broadcast and subscription facility. See the
 * {@link guide/scope developer guide on scopes}.
 */
  function $RootScopeProvider() {
    var TTL = 10;
    var $rootScopeMinErr = minErr('$rootScope');
    var lastDirtyWatch = null;
    this.digestTtl = function (value) {
      if (arguments.length) {
        TTL = value;
      }
      return TTL;
    };
    this.$get = [
      '$injector',
      '$exceptionHandler',
      '$parse',
      '$browser',
      function ($injector, $exceptionHandler, $parse, $browser) {
        /**
     * @ngdoc type
     * @name $rootScope.Scope
     *
     * @description
     * A root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the
     * {@link auto.$injector $injector}. Child scopes are created using the
     * {@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when
     * compiled HTML template is executed.)
     *
     * Here is a simple scope snippet to show how you can interact with the scope.
     * ```html
     * <file src="./test/ng/rootScopeSpec.js" tag="docs1" />
     * ```
     *
     * # Inheritance
     * A scope can inherit from a parent scope, as in this example:
     * ```js
         var parent = $rootScope;
         var child = parent.$new();

         parent.salutation = "Hello";
         child.name = "World";
         expect(child.salutation).toEqual('Hello');

         child.salutation = "Welcome";
         expect(child.salutation).toEqual('Welcome');
         expect(parent.salutation).toEqual('Hello');
     * ```
     *
     *
     * @param {Object.<string, function()>=} providers Map of service factory which need to be
     *                                       provided for the current scope. Defaults to {@link ng}.
     * @param {Object.<string, *>=} instanceCache Provides pre-instantiated services which should
     *                              append/override services provided by `providers`. This is handy
     *                              when unit-testing and having the need to override a default
     *                              service.
     * @returns {Object} Newly created scope.
     *
     */
        function Scope() {
          this.$id = nextUid();
          this.$$phase = this.$parent = this.$$watchers = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = null;
          this['this'] = this.$root = this;
          this.$$destroyed = false;
          this.$$asyncQueue = [];
          this.$$postDigestQueue = [];
          this.$$listeners = {};
          this.$$listenerCount = {};
          this.$$isolateBindings = {};
        }
        /**
     * @ngdoc property
     * @name $rootScope.Scope#$id
     *
     * @description
     * Unique scope ID (monotonically increasing) useful for debugging.
     */
        /**
      * @ngdoc property
      * @name $rootScope.Scope#$parent
      *
      * @description
      * Reference to the parent scope.
      */
        /**
       * @ngdoc property
       * @name $rootScope.Scope#$root
       *
       * @description
       * Reference to the root scope.
       */
        Scope.prototype = {
          constructor: Scope,
          $new: function (isolate) {
            var ChildScope, child;
            if (isolate) {
              child = new Scope();
              child.$root = this.$root;
              // ensure that there is just one async queue per $rootScope and its children
              child.$$asyncQueue = this.$$asyncQueue;
              child.$$postDigestQueue = this.$$postDigestQueue;
            } else {
              // Only create a child scope class if somebody asks for one,
              // but cache it to allow the VM to optimize lookups.
              if (!this.$$childScopeClass) {
                this.$$childScopeClass = function () {
                  this.$$watchers = this.$$nextSibling = this.$$childHead = this.$$childTail = null;
                  this.$$listeners = {};
                  this.$$listenerCount = {};
                  this.$id = nextUid();
                  this.$$childScopeClass = null;
                };
                this.$$childScopeClass.prototype = this;
              }
              child = new this.$$childScopeClass();
            }
            child['this'] = child;
            child.$parent = this;
            child.$$prevSibling = this.$$childTail;
            if (this.$$childHead) {
              this.$$childTail.$$nextSibling = child;
              this.$$childTail = child;
            } else {
              this.$$childHead = this.$$childTail = child;
            }
            return child;
          },
          $watch: function (watchExp, listener, objectEquality) {
            var scope = this, get = compileToFn(watchExp, 'watch'), array = scope.$$watchers, watcher = {
                fn: listener,
                last: initWatchVal,
                get: get,
                exp: watchExp,
                eq: !!objectEquality
              };
            lastDirtyWatch = null;
            // in the case user pass string, we need to compile it, do we really need this ?
            if (!isFunction(listener)) {
              var listenFn = compileToFn(listener || noop, 'listener');
              watcher.fn = function (newVal, oldVal, scope) {
                listenFn(scope);
              };
            }
            if (typeof watchExp == 'string' && get.constant) {
              var originalFn = watcher.fn;
              watcher.fn = function (newVal, oldVal, scope) {
                originalFn.call(this, newVal, oldVal, scope);
                arrayRemove(array, watcher);
              };
            }
            if (!array) {
              array = scope.$$watchers = [];
            }
            // we use unshift since we use a while loop in $digest for speed.
            // the while loop reads in reverse order.
            array.unshift(watcher);
            return function deregisterWatch() {
              arrayRemove(array, watcher);
              lastDirtyWatch = null;
            };
          },
          $watchCollection: function (obj, listener) {
            var self = this;
            // the current value, updated on each dirty-check run
            var newValue;
            // a shallow copy of the newValue from the last dirty-check run,
            // updated to match newValue during dirty-check run
            var oldValue;
            // a shallow copy of the newValue from when the last change happened
            var veryOldValue;
            // only track veryOldValue if the listener is asking for it
            var trackVeryOldValue = listener.length > 1;
            var changeDetected = 0;
            var objGetter = $parse(obj);
            var internalArray = [];
            var internalObject = {};
            var initRun = true;
            var oldLength = 0;
            function $watchCollectionWatch() {
              newValue = objGetter(self);
              var newLength, key, bothNaN;
              if (!isObject(newValue)) {
                // if primitive
                if (oldValue !== newValue) {
                  oldValue = newValue;
                  changeDetected++;
                }
              } else if (isArrayLike(newValue)) {
                if (oldValue !== internalArray) {
                  // we are transitioning from something which was not an array into array.
                  oldValue = internalArray;
                  oldLength = oldValue.length = 0;
                  changeDetected++;
                }
                newLength = newValue.length;
                if (oldLength !== newLength) {
                  // if lengths do not match we need to trigger change notification
                  changeDetected++;
                  oldValue.length = oldLength = newLength;
                }
                // copy the items to oldValue and look for changes.
                for (var i = 0; i < newLength; i++) {
                  bothNaN = oldValue[i] !== oldValue[i] && newValue[i] !== newValue[i];
                  if (!bothNaN && oldValue[i] !== newValue[i]) {
                    changeDetected++;
                    oldValue[i] = newValue[i];
                  }
                }
              } else {
                if (oldValue !== internalObject) {
                  // we are transitioning from something which was not an object into object.
                  oldValue = internalObject = {};
                  oldLength = 0;
                  changeDetected++;
                }
                // copy the items to oldValue and look for changes.
                newLength = 0;
                for (key in newValue) {
                  if (newValue.hasOwnProperty(key)) {
                    newLength++;
                    if (oldValue.hasOwnProperty(key)) {
                      bothNaN = oldValue[key] !== oldValue[key] && newValue[key] !== newValue[key];
                      if (!bothNaN && oldValue[key] !== newValue[key]) {
                        changeDetected++;
                        oldValue[key] = newValue[key];
                      }
                    } else {
                      oldLength++;
                      oldValue[key] = newValue[key];
                      changeDetected++;
                    }
                  }
                }
                if (oldLength > newLength) {
                  // we used to have more keys, need to find them and destroy them.
                  changeDetected++;
                  for (key in oldValue) {
                    if (oldValue.hasOwnProperty(key) && !newValue.hasOwnProperty(key)) {
                      oldLength--;
                      delete oldValue[key];
                    }
                  }
                }
              }
              return changeDetected;
            }
            function $watchCollectionAction() {
              if (initRun) {
                initRun = false;
                listener(newValue, newValue, self);
              } else {
                listener(newValue, veryOldValue, self);
              }
              // make a copy for the next time a collection is changed
              if (trackVeryOldValue) {
                if (!isObject(newValue)) {
                  //primitive
                  veryOldValue = newValue;
                } else if (isArrayLike(newValue)) {
                  veryOldValue = new Array(newValue.length);
                  for (var i = 0; i < newValue.length; i++) {
                    veryOldValue[i] = newValue[i];
                  }
                } else {
                  // if object
                  veryOldValue = {};
                  for (var key in newValue) {
                    if (hasOwnProperty.call(newValue, key)) {
                      veryOldValue[key] = newValue[key];
                    }
                  }
                }
              }
            }
            return this.$watch($watchCollectionWatch, $watchCollectionAction);
          },
          $digest: function () {
            var watch, value, last, watchers, asyncQueue = this.$$asyncQueue, postDigestQueue = this.$$postDigestQueue, length, dirty, ttl = TTL, next, current, target = this, watchLog = [], logIdx, logMsg, asyncTask;
            beginPhase('$digest');
            // Check for changes to browser url that happened in sync before the call to $digest
            $browser.$$checkUrlChange();
            lastDirtyWatch = null;
            do {
              // "while dirty" loop
              dirty = false;
              current = target;
              while (asyncQueue.length) {
                try {
                  asyncTask = asyncQueue.shift();
                  asyncTask.scope.$eval(asyncTask.expression);
                } catch (e) {
                  clearPhase();
                  $exceptionHandler(e);
                }
                lastDirtyWatch = null;
              }
              traverseScopesLoop:
                do {
                  // "traverse the scopes" loop
                  if (watchers = current.$$watchers) {
                    // process our watches
                    length = watchers.length;
                    while (length--) {
                      try {
                        watch = watchers[length];
                        // Most common watches are on primitives, in which case we can short
                        // circuit it with === operator, only when === fails do we use .equals
                        if (watch) {
                          if ((value = watch.get(current)) !== (last = watch.last) && !(watch.eq ? equals(value, last) : typeof value === 'number' && typeof last === 'number' && isNaN(value) && isNaN(last))) {
                            dirty = true;
                            lastDirtyWatch = watch;
                            watch.last = watch.eq ? copy(value, null) : value;
                            watch.fn(value, last === initWatchVal ? value : last, current);
                            if (ttl < 5) {
                              logIdx = 4 - ttl;
                              if (!watchLog[logIdx])
                                watchLog[logIdx] = [];
                              logMsg = isFunction(watch.exp) ? 'fn: ' + (watch.exp.name || watch.exp.toString()) : watch.exp;
                              logMsg += '; newVal: ' + toJson(value) + '; oldVal: ' + toJson(last);
                              watchLog[logIdx].push(logMsg);
                            }
                          } else if (watch === lastDirtyWatch) {
                            // If the most recently dirty watcher is now clean, short circuit since the remaining watchers
                            // have already been tested.
                            dirty = false;
                            break traverseScopesLoop;
                          }
                        }
                      } catch (e) {
                        clearPhase();
                        $exceptionHandler(e);
                      }
                    }
                  }
                  // Insanity Warning: scope depth-first traversal
                  // yes, this code is a bit crazy, but it works and we have tests to prove it!
                  // this piece should be kept in sync with the traversal in $broadcast
                  if (!(next = current.$$childHead || current !== target && current.$$nextSibling)) {
                    while (current !== target && !(next = current.$$nextSibling)) {
                      current = current.$parent;
                    }
                  }
                } while (current = next);
              // `break traverseScopesLoop;` takes us to here
              if ((dirty || asyncQueue.length) && !ttl--) {
                clearPhase();
                throw $rootScopeMinErr('infdig', '{0} $digest() iterations reached. Aborting!\n' + 'Watchers fired in the last 5 iterations: {1}', TTL, toJson(watchLog));
              }
            } while (dirty || asyncQueue.length);
            clearPhase();
            while (postDigestQueue.length) {
              try {
                postDigestQueue.shift()();
              } catch (e) {
                $exceptionHandler(e);
              }
            }
          },
          $destroy: function () {
            // we can't destroy the root scope or a scope that has been already destroyed
            if (this.$$destroyed)
              return;
            var parent = this.$parent;
            this.$broadcast('$destroy');
            this.$$destroyed = true;
            if (this === $rootScope)
              return;
            forEach(this.$$listenerCount, bind(null, decrementListenerCount, this));
            // sever all the references to parent scopes (after this cleanup, the current scope should
            // not be retained by any of our references and should be eligible for garbage collection)
            if (parent.$$childHead == this)
              parent.$$childHead = this.$$nextSibling;
            if (parent.$$childTail == this)
              parent.$$childTail = this.$$prevSibling;
            if (this.$$prevSibling)
              this.$$prevSibling.$$nextSibling = this.$$nextSibling;
            if (this.$$nextSibling)
              this.$$nextSibling.$$prevSibling = this.$$prevSibling;
            // All of the code below is bogus code that works around V8's memory leak via optimized code
            // and inline caches.
            //
            // see:
            // - https://code.google.com/p/v8/issues/detail?id=2073#c26
            // - https://github.com/angular/angular.js/issues/6794#issuecomment-38648909
            // - https://github.com/angular/angular.js/issues/1313#issuecomment-10378451
            this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = this.$root = null;
            // don't reset these to null in case some async task tries to register a listener/watch/task
            this.$$listeners = {};
            this.$$watchers = this.$$asyncQueue = this.$$postDigestQueue = [];
            // prevent NPEs since these methods have references to properties we nulled out
            this.$destroy = this.$digest = this.$apply = noop;
            this.$on = this.$watch = function () {
              return noop;
            };
          },
          $eval: function (expr, locals) {
            return $parse(expr)(this, locals);
          },
          $evalAsync: function (expr) {
            // if we are outside of an $digest loop and this is the first time we are scheduling async
            // task also schedule async auto-flush
            if (!$rootScope.$$phase && !$rootScope.$$asyncQueue.length) {
              $browser.defer(function () {
                if ($rootScope.$$asyncQueue.length) {
                  $rootScope.$digest();
                }
              });
            }
            this.$$asyncQueue.push({
              scope: this,
              expression: expr
            });
          },
          $$postDigest: function (fn) {
            this.$$postDigestQueue.push(fn);
          },
          $apply: function (expr) {
            try {
              beginPhase('$apply');
              return this.$eval(expr);
            } catch (e) {
              $exceptionHandler(e);
            } finally {
              clearPhase();
              try {
                $rootScope.$digest();
              } catch (e) {
                $exceptionHandler(e);
                throw e;
              }
            }
          },
          $on: function (name, listener) {
            var namedListeners = this.$$listeners[name];
            if (!namedListeners) {
              this.$$listeners[name] = namedListeners = [];
            }
            namedListeners.push(listener);
            var current = this;
            do {
              if (!current.$$listenerCount[name]) {
                current.$$listenerCount[name] = 0;
              }
              current.$$listenerCount[name]++;
            } while (current = current.$parent);
            var self = this;
            return function () {
              var indexOfListener = indexOf(namedListeners, listener);
              if (indexOfListener !== -1) {
                namedListeners[indexOfListener] = null;
                decrementListenerCount(self, 1, name);
              }
            };
          },
          $emit: function (name, args) {
            var empty = [], namedListeners, scope = this, stopPropagation = false, event = {
                name: name,
                targetScope: scope,
                stopPropagation: function () {
                  stopPropagation = true;
                },
                preventDefault: function () {
                  event.defaultPrevented = true;
                },
                defaultPrevented: false
              }, listenerArgs = concat([event], arguments, 1), i, length;
            do {
              namedListeners = scope.$$listeners[name] || empty;
              event.currentScope = scope;
              for (i = 0, length = namedListeners.length; i < length; i++) {
                // if listeners were deregistered, defragment the array
                if (!namedListeners[i]) {
                  namedListeners.splice(i, 1);
                  i--;
                  length--;
                  continue;
                }
                try {
                  //allow all listeners attached to the current scope to run
                  namedListeners[i].apply(null, listenerArgs);
                } catch (e) {
                  $exceptionHandler(e);
                }
              }
              //if any listener on the current scope stops propagation, prevent bubbling
              if (stopPropagation)
                return event;
              //traverse upwards
              scope = scope.$parent;
            } while (scope);
            return event;
          },
          $broadcast: function (name, args) {
            var target = this, current = target, next = target, event = {
                name: name,
                targetScope: target,
                preventDefault: function () {
                  event.defaultPrevented = true;
                },
                defaultPrevented: false
              }, listenerArgs = concat([event], arguments, 1), listeners, i, length;
            //down while you can, then up and next sibling or up and next sibling until back at root
            while (current = next) {
              event.currentScope = current;
              listeners = current.$$listeners[name] || [];
              for (i = 0, length = listeners.length; i < length; i++) {
                // if listeners were deregistered, defragment the array
                if (!listeners[i]) {
                  listeners.splice(i, 1);
                  i--;
                  length--;
                  continue;
                }
                try {
                  listeners[i].apply(null, listenerArgs);
                } catch (e) {
                  $exceptionHandler(e);
                }
              }
              // Insanity Warning: scope depth-first traversal
              // yes, this code is a bit crazy, but it works and we have tests to prove it!
              // this piece should be kept in sync with the traversal in $digest
              // (though it differs due to having the extra check for $$listenerCount)
              if (!(next = current.$$listenerCount[name] && current.$$childHead || current !== target && current.$$nextSibling)) {
                while (current !== target && !(next = current.$$nextSibling)) {
                  current = current.$parent;
                }
              }
            }
            return event;
          }
        };
        var $rootScope = new Scope();
        return $rootScope;
        function beginPhase(phase) {
          if ($rootScope.$$phase) {
            throw $rootScopeMinErr('inprog', '{0} already in progress', $rootScope.$$phase);
          }
          $rootScope.$$phase = phase;
        }
        function clearPhase() {
          $rootScope.$$phase = null;
        }
        function compileToFn(exp, name) {
          var fn = $parse(exp);
          assertArgFn(fn, name);
          return fn;
        }
        function decrementListenerCount(current, count, name) {
          do {
            current.$$listenerCount[name] -= count;
            if (current.$$listenerCount[name] === 0) {
              delete current.$$listenerCount[name];
            }
          } while (current = current.$parent);
        }
        /**
     * function used as an initial value for watchers.
     * because it's unique we can easily tell it apart from other values
     */
        function initWatchVal() {
        }
      }
    ];
  }
  /**
 * @description
 * Private service to sanitize uris for links and images. Used by $compile and $sanitize.
 */
  function $$SanitizeUriProvider() {
    var aHrefSanitizationWhitelist = /^\s*(https?|ftp|mailto|tel|file):/, imgSrcSanitizationWhitelist = /^\s*((https?|ftp|file):|data:image\/)/;
    /**
   * @description
   * Retrieves or overrides the default regular expression that is used for whitelisting of safe
   * urls during a[href] sanitization.
   *
   * The sanitization is a security measure aimed at prevent XSS attacks via html links.
   *
   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into
   * an absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`
   * regular expression. If a match is found, the original url is written into the dom. Otherwise,
   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.
   *
   * @param {RegExp=} regexp New regexp to whitelist urls with.
   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for
   *    chaining otherwise.
   */
    this.aHrefSanitizationWhitelist = function (regexp) {
      if (isDefined(regexp)) {
        aHrefSanitizationWhitelist = regexp;
        return this;
      }
      return aHrefSanitizationWhitelist;
    };
    /**
   * @description
   * Retrieves or overrides the default regular expression that is used for whitelisting of safe
   * urls during img[src] sanitization.
   *
   * The sanitization is a security measure aimed at prevent XSS attacks via html links.
   *
   * Any url about to be assigned to img[src] via data-binding is first normalized and turned into
   * an absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`
   * regular expression. If a match is found, the original url is written into the dom. Otherwise,
   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.
   *
   * @param {RegExp=} regexp New regexp to whitelist urls with.
   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for
   *    chaining otherwise.
   */
    this.imgSrcSanitizationWhitelist = function (regexp) {
      if (isDefined(regexp)) {
        imgSrcSanitizationWhitelist = regexp;
        return this;
      }
      return imgSrcSanitizationWhitelist;
    };
    this.$get = function () {
      return function sanitizeUri(uri, isImage) {
        var regex = isImage ? imgSrcSanitizationWhitelist : aHrefSanitizationWhitelist;
        var normalizedVal;
        // NOTE: urlResolve() doesn't support IE < 8 so we don't sanitize for that case.
        if (!msie || msie >= 8) {
          normalizedVal = urlResolve(uri).href;
          if (normalizedVal !== '' && !normalizedVal.match(regex)) {
            return 'unsafe:' + normalizedVal;
          }
        }
        return uri;
      };
    };
  }
  var $sceMinErr = minErr('$sce');
  var SCE_CONTEXTS = {
      HTML: 'html',
      CSS: 'css',
      URL: 'url',
      RESOURCE_URL: 'resourceUrl',
      JS: 'js'
    };
  // Helper functions follow.
  // Copied from:
  // http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962
  // Prereq: s is a string.
  function escapeForRegexp(s) {
    return s.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, '\\$1').replace(/\x08/g, '\\x08');
  }
  function adjustMatcher(matcher) {
    if (matcher === 'self') {
      return matcher;
    } else if (isString(matcher)) {
      // Strings match exactly except for 2 wildcards - '*' and '**'.
      // '*' matches any character except those from the set ':/.?&'.
      // '**' matches any character (like .* in a RegExp).
      // More than 2 *'s raises an error as it's ill defined.
      if (matcher.indexOf('***') > -1) {
        throw $sceMinErr('iwcard', 'Illegal sequence *** in string matcher.  String: {0}', matcher);
      }
      matcher = escapeForRegexp(matcher).replace('\\*\\*', '.*').replace('\\*', '[^:/.?&;]*');
      return new RegExp('^' + matcher + '$');
    } else if (isRegExp(matcher)) {
      // The only other type of matcher allowed is a Regexp.
      // Match entire URL / disallow partial matches.
      // Flags are reset (i.e. no global, ignoreCase or multiline)
      return new RegExp('^' + matcher.source + '$');
    } else {
      throw $sceMinErr('imatcher', 'Matchers may only be "self", string patterns or RegExp objects');
    }
  }
  function adjustMatchers(matchers) {
    var adjustedMatchers = [];
    if (isDefined(matchers)) {
      forEach(matchers, function (matcher) {
        adjustedMatchers.push(adjustMatcher(matcher));
      });
    }
    return adjustedMatchers;
  }
  /**
 * @ngdoc service
 * @name $sceDelegate
 * @kind function
 *
 * @description
 *
 * `$sceDelegate` is a service that is used by the `$sce` service to provide {@link ng.$sce Strict
 * Contextual Escaping (SCE)} services to AngularJS.
 *
 * Typically, you would configure or override the {@link ng.$sceDelegate $sceDelegate} instead of
 * the `$sce` service to customize the way Strict Contextual Escaping works in AngularJS.  This is
 * because, while the `$sce` provides numerous shorthand methods, etc., you really only need to
 * override 3 core functions (`trustAs`, `getTrusted` and `valueOf`) to replace the way things
 * work because `$sce` delegates to `$sceDelegate` for these operations.
 *
 * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} to configure this service.
 *
 * The default instance of `$sceDelegate` should work out of the box with little pain.  While you
 * can override it completely to change the behavior of `$sce`, the common case would
 * involve configuring the {@link ng.$sceDelegateProvider $sceDelegateProvider} instead by setting
 * your own whitelists and blacklists for trusting URLs used for loading AngularJS resources such as
 * templates.  Refer {@link ng.$sceDelegateProvider#resourceUrlWhitelist
 * $sceDelegateProvider.resourceUrlWhitelist} and {@link
 * ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}
 */
  /**
 * @ngdoc provider
 * @name $sceDelegateProvider
 * @description
 *
 * The `$sceDelegateProvider` provider allows developers to configure the {@link ng.$sceDelegate
 * $sceDelegate} service.  This allows one to get/set the whitelists and blacklists used to ensure
 * that the URLs used for sourcing Angular templates are safe.  Refer {@link
 * ng.$sceDelegateProvider#resourceUrlWhitelist $sceDelegateProvider.resourceUrlWhitelist} and
 * {@link ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}
 *
 * For the general details about this service in Angular, read the main page for {@link ng.$sce
 * Strict Contextual Escaping (SCE)}.
 *
 * **Example**:  Consider the following case. <a name="example"></a>
 *
 * - your app is hosted at url `http://myapp.example.com/`
 * - but some of your templates are hosted on other domains you control such as
 *   `http://srv01.assets.example.com/`,  `http://srv02.assets.example.com/`, etc.
 * - and you have an open redirect at `http://myapp.example.com/clickThru?...`.
 *
 * Here is what a secure configuration for this scenario might look like:
 *
 * ```
 *  angular.module('myApp', []).config(function($sceDelegateProvider) {
 *    $sceDelegateProvider.resourceUrlWhitelist([
 *      // Allow same origin resource loads.
 *      'self',
 *      // Allow loading from our assets domain.  Notice the difference between * and **.
 *      'http://srv*.assets.example.com/**'
 *    ]);
 *
 *    // The blacklist overrides the whitelist so the open redirect here is blocked.
 *    $sceDelegateProvider.resourceUrlBlacklist([
 *      'http://myapp.example.com/clickThru**'
 *    ]);
 *  });
 * ```
 */
  function $SceDelegateProvider() {
    this.SCE_CONTEXTS = SCE_CONTEXTS;
    // Resource URLs can also be trusted by policy.
    var resourceUrlWhitelist = ['self'], resourceUrlBlacklist = [];
    /**
   * @ngdoc method
   * @name $sceDelegateProvider#resourceUrlWhitelist
   * @kind function
   *
   * @param {Array=} whitelist When provided, replaces the resourceUrlWhitelist with the value
   *     provided.  This must be an array or null.  A snapshot of this array is used so further
   *     changes to the array are ignored.
   *
   *     Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items
   *     allowed in this array.
   *
   *     Note: **an empty whitelist array will block all URLs**!
   *
   * @return {Array} the currently set whitelist array.
   *
   * The **default value** when no whitelist has been explicitly set is `['self']` allowing only
   * same origin resource requests.
   *
   * @description
   * Sets/Gets the whitelist of trusted resource URLs.
   */
    this.resourceUrlWhitelist = function (value) {
      if (arguments.length) {
        resourceUrlWhitelist = adjustMatchers(value);
      }
      return resourceUrlWhitelist;
    };
    /**
   * @ngdoc method
   * @name $sceDelegateProvider#resourceUrlBlacklist
   * @kind function
   *
   * @param {Array=} blacklist When provided, replaces the resourceUrlBlacklist with the value
   *     provided.  This must be an array or null.  A snapshot of this array is used so further
   *     changes to the array are ignored.
   *
   *     Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items
   *     allowed in this array.
   *
   *     The typical usage for the blacklist is to **block
   *     [open redirects](http://cwe.mitre.org/data/definitions/601.html)** served by your domain as
   *     these would otherwise be trusted but actually return content from the redirected domain.
   *
   *     Finally, **the blacklist overrides the whitelist** and has the final say.
   *
   * @return {Array} the currently set blacklist array.
   *
   * The **default value** when no whitelist has been explicitly set is the empty array (i.e. there
   * is no blacklist.)
   *
   * @description
   * Sets/Gets the blacklist of trusted resource URLs.
   */
    this.resourceUrlBlacklist = function (value) {
      if (arguments.length) {
        resourceUrlBlacklist = adjustMatchers(value);
      }
      return resourceUrlBlacklist;
    };
    this.$get = [
      '$injector',
      function ($injector) {
        var htmlSanitizer = function htmlSanitizer(html) {
          throw $sceMinErr('unsafe', 'Attempting to use an unsafe value in a safe context.');
        };
        if ($injector.has('$sanitize')) {
          htmlSanitizer = $injector.get('$sanitize');
        }
        function matchUrl(matcher, parsedUrl) {
          if (matcher === 'self') {
            return urlIsSameOrigin(parsedUrl);
          } else {
            // definitely a regex.  See adjustMatchers()
            return !!matcher.exec(parsedUrl.href);
          }
        }
        function isResourceUrlAllowedByPolicy(url) {
          var parsedUrl = urlResolve(url.toString());
          var i, n, allowed = false;
          // Ensure that at least one item from the whitelist allows this url.
          for (i = 0, n = resourceUrlWhitelist.length; i < n; i++) {
            if (matchUrl(resourceUrlWhitelist[i], parsedUrl)) {
              allowed = true;
              break;
            }
          }
          if (allowed) {
            // Ensure that no item from the blacklist blocked this url.
            for (i = 0, n = resourceUrlBlacklist.length; i < n; i++) {
              if (matchUrl(resourceUrlBlacklist[i], parsedUrl)) {
                allowed = false;
                break;
              }
            }
          }
          return allowed;
        }
        function generateHolderType(Base) {
          var holderType = function TrustedValueHolderType(trustedValue) {
            this.$$unwrapTrustedValue = function () {
              return trustedValue;
            };
          };
          if (Base) {
            holderType.prototype = new Base();
          }
          holderType.prototype.valueOf = function sceValueOf() {
            return this.$$unwrapTrustedValue();
          };
          holderType.prototype.toString = function sceToString() {
            return this.$$unwrapTrustedValue().toString();
          };
          return holderType;
        }
        var trustedValueHolderBase = generateHolderType(), byType = {};
        byType[SCE_CONTEXTS.HTML] = generateHolderType(trustedValueHolderBase);
        byType[SCE_CONTEXTS.CSS] = generateHolderType(trustedValueHolderBase);
        byType[SCE_CONTEXTS.URL] = generateHolderType(trustedValueHolderBase);
        byType[SCE_CONTEXTS.JS] = generateHolderType(trustedValueHolderBase);
        byType[SCE_CONTEXTS.RESOURCE_URL] = generateHolderType(byType[SCE_CONTEXTS.URL]);
        /**
     * @ngdoc method
     * @name $sceDelegate#trustAs
     *
     * @description
     * Returns an object that is trusted by angular for use in specified strict
     * contextual escaping contexts (such as ng-bind-html, ng-include, any src
     * attribute interpolation, any dom event binding attribute interpolation
     * such as for onclick,  etc.) that uses the provided value.
     * See {@link ng.$sce $sce} for enabling strict contextual escaping.
     *
     * @param {string} type The kind of context in which this value is safe for use.  e.g. url,
     *   resourceUrl, html, js and css.
     * @param {*} value The value that that should be considered trusted/safe.
     * @returns {*} A value that can be used to stand in for the provided `value` in places
     * where Angular expects a $sce.trustAs() return value.
     */
        function trustAs(type, trustedValue) {
          var Constructor = byType.hasOwnProperty(type) ? byType[type] : null;
          if (!Constructor) {
            throw $sceMinErr('icontext', 'Attempted to trust a value in invalid context. Context: {0}; Value: {1}', type, trustedValue);
          }
          if (trustedValue === null || trustedValue === undefined || trustedValue === '') {
            return trustedValue;
          }
          // All the current contexts in SCE_CONTEXTS happen to be strings.  In order to avoid trusting
          // mutable objects, we ensure here that the value passed in is actually a string.
          if (typeof trustedValue !== 'string') {
            throw $sceMinErr('itype', 'Attempted to trust a non-string value in a content requiring a string: Context: {0}', type);
          }
          return new Constructor(trustedValue);
        }
        /**
     * @ngdoc method
     * @name $sceDelegate#valueOf
     *
     * @description
     * If the passed parameter had been returned by a prior call to {@link ng.$sceDelegate#trustAs
     * `$sceDelegate.trustAs`}, returns the value that had been passed to {@link
     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.
     *
     * If the passed parameter is not a value that had been returned by {@link
     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}, returns it as-is.
     *
     * @param {*} value The result of a prior {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}
     *      call or anything else.
     * @returns {*} The `value` that was originally provided to {@link ng.$sceDelegate#trustAs
     *     `$sceDelegate.trustAs`} if `value` is the result of such a call.  Otherwise, returns
     *     `value` unchanged.
     */
        function valueOf(maybeTrusted) {
          if (maybeTrusted instanceof trustedValueHolderBase) {
            return maybeTrusted.$$unwrapTrustedValue();
          } else {
            return maybeTrusted;
          }
        }
        /**
     * @ngdoc method
     * @name $sceDelegate#getTrusted
     *
     * @description
     * Takes the result of a {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`} call and
     * returns the originally supplied value if the queried context type is a supertype of the
     * created type.  If this condition isn't satisfied, throws an exception.
     *
     * @param {string} type The kind of context in which this value is to be used.
     * @param {*} maybeTrusted The result of a prior {@link ng.$sceDelegate#trustAs
     *     `$sceDelegate.trustAs`} call.
     * @returns {*} The value the was originally provided to {@link ng.$sceDelegate#trustAs
     *     `$sceDelegate.trustAs`} if valid in this context.  Otherwise, throws an exception.
     */
        function getTrusted(type, maybeTrusted) {
          if (maybeTrusted === null || maybeTrusted === undefined || maybeTrusted === '') {
            return maybeTrusted;
          }
          var constructor = byType.hasOwnProperty(type) ? byType[type] : null;
          if (constructor && maybeTrusted instanceof constructor) {
            return maybeTrusted.$$unwrapTrustedValue();
          }
          // If we get here, then we may only take one of two actions.
          // 1. sanitize the value for the requested type, or
          // 2. throw an exception.
          if (type === SCE_CONTEXTS.RESOURCE_URL) {
            if (isResourceUrlAllowedByPolicy(maybeTrusted)) {
              return maybeTrusted;
            } else {
              throw $sceMinErr('insecurl', 'Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}', maybeTrusted.toString());
            }
          } else if (type === SCE_CONTEXTS.HTML) {
            return htmlSanitizer(maybeTrusted);
          }
          throw $sceMinErr('unsafe', 'Attempting to use an unsafe value in a safe context.');
        }
        return {
          trustAs: trustAs,
          getTrusted: getTrusted,
          valueOf: valueOf
        };
      }
    ];
  }
  /**
 * @ngdoc provider
 * @name $sceProvider
 * @description
 *
 * The $sceProvider provider allows developers to configure the {@link ng.$sce $sce} service.
 * -   enable/disable Strict Contextual Escaping (SCE) in a module
 * -   override the default implementation with a custom delegate
 *
 * Read more about {@link ng.$sce Strict Contextual Escaping (SCE)}.
 */
  /* jshint maxlen: false*/
  /**
 * @ngdoc service
 * @name $sce
 * @kind function
 *
 * @description
 *
 * `$sce` is a service that provides Strict Contextual Escaping services to AngularJS.
 *
 * # Strict Contextual Escaping
 *
 * Strict Contextual Escaping (SCE) is a mode in which AngularJS requires bindings in certain
 * contexts to result in a value that is marked as safe to use for that context.  One example of
 * such a context is binding arbitrary html controlled by the user via `ng-bind-html`.  We refer
 * to these contexts as privileged or SCE contexts.
 *
 * As of version 1.2, Angular ships with SCE enabled by default.
 *
 * Note:  When enabled (the default), IE8 in quirks mode is not supported.  In this mode, IE8 allows
 * one to execute arbitrary javascript by the use of the expression() syntax.  Refer
 * <http://blogs.msdn.com/b/ie/archive/2008/10/16/ending-expressions.aspx> to learn more about them.
 * You can ensure your document is in standards mode and not quirks mode by adding `<!doctype html>`
 * to the top of your HTML document.
 *
 * SCE assists in writing code in way that (a) is secure by default and (b) makes auditing for
 * security vulnerabilities such as XSS, clickjacking, etc. a lot easier.
 *
 * Here's an example of a binding in a privileged context:
 *
 * ```
 * <input ng-model="userHtml">
 * <div ng-bind-html="userHtml"></div>
 * ```
 *
 * Notice that `ng-bind-html` is bound to `userHtml` controlled by the user.  With SCE
 * disabled, this application allows the user to render arbitrary HTML into the DIV.
 * In a more realistic example, one may be rendering user comments, blog articles, etc. via
 * bindings.  (HTML is just one example of a context where rendering user controlled input creates
 * security vulnerabilities.)
 *
 * For the case of HTML, you might use a library, either on the client side, or on the server side,
 * to sanitize unsafe HTML before binding to the value and rendering it in the document.
 *
 * How would you ensure that every place that used these types of bindings was bound to a value that
 * was sanitized by your library (or returned as safe for rendering by your server?)  How can you
 * ensure that you didn't accidentally delete the line that sanitized the value, or renamed some
 * properties/fields and forgot to update the binding to the sanitized value?
 *
 * To be secure by default, you want to ensure that any such bindings are disallowed unless you can
 * determine that something explicitly says it's safe to use a value for binding in that
 * context.  You can then audit your code (a simple grep would do) to ensure that this is only done
 * for those values that you can easily tell are safe - because they were received from your server,
 * sanitized by your library, etc.  You can organize your codebase to help with this - perhaps
 * allowing only the files in a specific directory to do this.  Ensuring that the internal API
 * exposed by that code doesn't markup arbitrary values as safe then becomes a more manageable task.
 *
 * In the case of AngularJS' SCE service, one uses {@link ng.$sce#trustAs $sce.trustAs}
 * (and shorthand methods such as {@link ng.$sce#trustAsHtml $sce.trustAsHtml}, etc.) to
 * obtain values that will be accepted by SCE / privileged contexts.
 *
 *
 * ## How does it work?
 *
 * In privileged contexts, directives and code will bind to the result of {@link ng.$sce#getTrusted
 * $sce.getTrusted(context, value)} rather than to the value directly.  Directives use {@link
 * ng.$sce#parse $sce.parseAs} rather than `$parse` to watch attribute bindings, which performs the
 * {@link ng.$sce#getTrusted $sce.getTrusted} behind the scenes on non-constant literals.
 *
 * As an example, {@link ng.directive:ngBindHtml ngBindHtml} uses {@link
 * ng.$sce#parseAsHtml $sce.parseAsHtml(binding expression)}.  Here's the actual code (slightly
 * simplified):
 *
 * ```
 * var ngBindHtmlDirective = ['$sce', function($sce) {
 *   return function(scope, element, attr) {
 *     scope.$watch($sce.parseAsHtml(attr.ngBindHtml), function(value) {
 *       element.html(value || '');
 *     });
 *   };
 * }];
 * ```
 *
 * ## Impact on loading templates
 *
 * This applies both to the {@link ng.directive:ngInclude `ng-include`} directive as well as
 * `templateUrl`'s specified by {@link guide/directive directives}.
 *
 * By default, Angular only loads templates from the same domain and protocol as the application
 * document.  This is done by calling {@link ng.$sce#getTrustedResourceUrl
 * $sce.getTrustedResourceUrl} on the template URL.  To load templates from other domains and/or
 * protocols, you may either either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist
 * them} or {@link ng.$sce#trustAsResourceUrl wrap it} into a trusted value.
 *
 * *Please note*:
 * The browser's
 * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)
 * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)
 * policy apply in addition to this and may further restrict whether the template is successfully
 * loaded.  This means that without the right CORS policy, loading templates from a different domain
 * won't work on all browsers.  Also, loading templates from `file://` URL does not work on some
 * browsers.
 *
 * ## This feels like too much overhead for the developer?
 *
 * It's important to remember that SCE only applies to interpolation expressions.
 *
 * If your expressions are constant literals, they're automatically trusted and you don't need to
 * call `$sce.trustAs` on them (remember to include the `ngSanitize` module) (e.g.
 * `<div ng-bind-html="'<b>implicitly trusted</b>'"></div>`) just works.
 *
 * Additionally, `a[href]` and `img[src]` automatically sanitize their URLs and do not pass them
 * through {@link ng.$sce#getTrusted $sce.getTrusted}.  SCE doesn't play a role here.
 *
 * The included {@link ng.$sceDelegate $sceDelegate} comes with sane defaults to allow you to load
 * templates in `ng-include` from your application's domain without having to even know about SCE.
 * It blocks loading templates from other domains or loading templates over http from an https
 * served document.  You can change these by setting your own custom {@link
 * ng.$sceDelegateProvider#resourceUrlWhitelist whitelists} and {@link
 * ng.$sceDelegateProvider#resourceUrlBlacklist blacklists} for matching such URLs.
 *
 * This significantly reduces the overhead.  It is far easier to pay the small overhead and have an
 * application that's secure and can be audited to verify that with much more ease than bolting
 * security onto an application later.
 *
 * <a name="contexts"></a>
 * ## What trusted context types are supported?
 *
 * | Context             | Notes          |
 * |---------------------|----------------|
 * | `$sce.HTML`         | For HTML that's safe to source into the application.  The {@link ng.directive:ngBindHtml ngBindHtml} directive uses this context for bindings. If an unsafe value is encountered and the {@link ngSanitize $sanitize} module is present this will sanitize the value instead of throwing an error. |
 * | `$sce.CSS`          | For CSS that's safe to source into the application.  Currently unused.  Feel free to use it in your own directives. |
 * | `$sce.URL`          | For URLs that are safe to follow as links.  Currently unused (`<a href=` and `<img src=` sanitize their urls and don't constitute an SCE context. |
 * | `$sce.RESOURCE_URL` | For URLs that are not only safe to follow as links, but whose contents are also safe to include in your application.  Examples include `ng-include`, `src` / `ngSrc` bindings for tags other than `IMG` (e.g. `IFRAME`, `OBJECT`, etc.)  <br><br>Note that `$sce.RESOURCE_URL` makes a stronger statement about the URL than `$sce.URL` does and therefore contexts requiring values trusted for `$sce.RESOURCE_URL` can be used anywhere that values trusted for `$sce.URL` are required. |
 * | `$sce.JS`           | For JavaScript that is safe to execute in your application's context.  Currently unused.  Feel free to use it in your own directives. |
 *
 * ## Format of items in {@link ng.$sceDelegateProvider#resourceUrlWhitelist resourceUrlWhitelist}/{@link ng.$sceDelegateProvider#resourceUrlBlacklist Blacklist} <a name="resourceUrlPatternItem"></a>
 *
 *  Each element in these arrays must be one of the following:
 *
 *  - **'self'**
 *    - The special **string**, `'self'`, can be used to match against all URLs of the **same
 *      domain** as the application document using the **same protocol**.
 *  - **String** (except the special value `'self'`)
 *    - The string is matched against the full *normalized / absolute URL* of the resource
 *      being tested (substring matches are not good enough.)
 *    - There are exactly **two wildcard sequences** - `*` and `**`.  All other characters
 *      match themselves.
 *    - `*`: matches zero or more occurrences of any character other than one of the following 6
 *      characters: '`:`', '`/`', '`.`', '`?`', '`&`' and ';'.  It's a useful wildcard for use
 *      in a whitelist.
 *    - `**`: matches zero or more occurrences of *any* character.  As such, it's not
 *      not appropriate to use in for a scheme, domain, etc. as it would match too much.  (e.g.
 *      http://**.example.com/ would match http://evil.com/?ignore=.example.com/ and that might
 *      not have been the intention.)  Its usage at the very end of the path is ok.  (e.g.
 *      http://foo.example.com/templates/**).
 *  - **RegExp** (*see caveat below*)
 *    - *Caveat*:  While regular expressions are powerful and offer great flexibility,  their syntax
 *      (and all the inevitable escaping) makes them *harder to maintain*.  It's easy to
 *      accidentally introduce a bug when one updates a complex expression (imho, all regexes should
 *      have good test coverage.).  For instance, the use of `.` in the regex is correct only in a
 *      small number of cases.  A `.` character in the regex used when matching the scheme or a
 *      subdomain could be matched against a `:` or literal `.` that was likely not intended.   It
 *      is highly recommended to use the string patterns and only fall back to regular expressions
 *      if they as a last resort.
 *    - The regular expression must be an instance of RegExp (i.e. not a string.)  It is
 *      matched against the **entire** *normalized / absolute URL* of the resource being tested
 *      (even when the RegExp did not have the `^` and `$` codes.)  In addition, any flags
 *      present on the RegExp (such as multiline, global, ignoreCase) are ignored.
 *    - If you are generating your JavaScript from some other templating engine (not
 *      recommended, e.g. in issue [#4006](https://github.com/angular/angular.js/issues/4006)),
 *      remember to escape your regular expression (and be aware that you might need more than
 *      one level of escaping depending on your templating engine and the way you interpolated
 *      the value.)  Do make use of your platform's escaping mechanism as it might be good
 *      enough before coding your own.  e.g. Ruby has
 *      [Regexp.escape(str)](http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape)
 *      and Python has [re.escape](http://docs.python.org/library/re.html#re.escape).
 *      Javascript lacks a similar built in function for escaping.  Take a look at Google
 *      Closure library's [goog.string.regExpEscape(s)](
 *      http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962).
 *
 * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} for an example.
 *
 * ## Show me an example using SCE.
 *
 * <example module="mySceApp" deps="angular-sanitize.js">
 * <file name="index.html">
 *   <div ng-controller="myAppController as myCtrl">
 *     <i ng-bind-html="myCtrl.explicitlyTrustedHtml" id="explicitlyTrustedHtml"></i><br><br>
 *     <b>User comments</b><br>
 *     By default, HTML that isn't explicitly trusted (e.g. Alice's comment) is sanitized when
 *     $sanitize is available.  If $sanitize isn't available, this results in an error instead of an
 *     exploit.
 *     <div class="well">
 *       <div ng-repeat="userComment in myCtrl.userComments">
 *         <b>{{userComment.name}}</b>:
 *         <span ng-bind-html="userComment.htmlComment" class="htmlComment"></span>
 *         <br>
 *       </div>
 *     </div>
 *   </div>
 * </file>
 *
 * <file name="script.js">
 *   var mySceApp = angular.module('mySceApp', ['ngSanitize']);
 *
 *   mySceApp.controller("myAppController", function myAppController($http, $templateCache, $sce) {
 *     var self = this;
 *     $http.get("test_data.json", {cache: $templateCache}).success(function(userComments) {
 *       self.userComments = userComments;
 *     });
 *     self.explicitlyTrustedHtml = $sce.trustAsHtml(
 *         '<span onmouseover="this.textContent=&quot;Explicitly trusted HTML bypasses ' +
 *         'sanitization.&quot;">Hover over this text.</span>');
 *   });
 * </file>
 *
 * <file name="test_data.json">
 * [
 *   { "name": "Alice",
 *     "htmlComment":
 *         "<span onmouseover='this.textContent=\"PWN3D!\"'>Is <i>anyone</i> reading this?</span>"
 *   },
 *   { "name": "Bob",
 *     "htmlComment": "<i>Yes!</i>  Am I the only other one?"
 *   }
 * ]
 * </file>
 *
 * <file name="protractor.js" type="protractor">
 *   describe('SCE doc demo', function() {
 *     it('should sanitize untrusted values', function() {
 *       expect(element.all(by.css('.htmlComment')).first().getInnerHtml())
 *           .toBe('<span>Is <i>anyone</i> reading this?</span>');
 *     });
 *
 *     it('should NOT sanitize explicitly trusted values', function() {
 *       expect(element(by.id('explicitlyTrustedHtml')).getInnerHtml()).toBe(
 *           '<span onmouseover="this.textContent=&quot;Explicitly trusted HTML bypasses ' +
 *           'sanitization.&quot;">Hover over this text.</span>');
 *     });
 *   });
 * </file>
 * </example>
 *
 *
 *
 * ## Can I disable SCE completely?
 *
 * Yes, you can.  However, this is strongly discouraged.  SCE gives you a lot of security benefits
 * for little coding overhead.  It will be much harder to take an SCE disabled application and
 * either secure it on your own or enable SCE at a later stage.  It might make sense to disable SCE
 * for cases where you have a lot of existing code that was written before SCE was introduced and
 * you're migrating them a module at a time.
 *
 * That said, here's how you can completely disable SCE:
 *
 * ```
 * angular.module('myAppWithSceDisabledmyApp', []).config(function($sceProvider) {
 *   // Completely disable SCE.  For demonstration purposes only!
 *   // Do not use in new projects.
 *   $sceProvider.enabled(false);
 * });
 * ```
 *
 */
  /* jshint maxlen: 100 */
  function $SceProvider() {
    var enabled = true;
    /**
   * @ngdoc method
   * @name $sceProvider#enabled
   * @kind function
   *
   * @param {boolean=} value If provided, then enables/disables SCE.
   * @return {boolean} true if SCE is enabled, false otherwise.
   *
   * @description
   * Enables/disables SCE and returns the current value.
   */
    this.enabled = function (value) {
      if (arguments.length) {
        enabled = !!value;
      }
      return enabled;
    };
    /* Design notes on the default implementation for SCE.
   *
   * The API contract for the SCE delegate
   * -------------------------------------
   * The SCE delegate object must provide the following 3 methods:
   *
   * - trustAs(contextEnum, value)
   *     This method is used to tell the SCE service that the provided value is OK to use in the
   *     contexts specified by contextEnum.  It must return an object that will be accepted by
   *     getTrusted() for a compatible contextEnum and return this value.
   *
   * - valueOf(value)
   *     For values that were not produced by trustAs(), return them as is.  For values that were
   *     produced by trustAs(), return the corresponding input value to trustAs.  Basically, if
   *     trustAs is wrapping the given values into some type, this operation unwraps it when given
   *     such a value.
   *
   * - getTrusted(contextEnum, value)
   *     This function should return the a value that is safe to use in the context specified by
   *     contextEnum or throw and exception otherwise.
   *
   * NOTE: This contract deliberately does NOT state that values returned by trustAs() must be
   * opaque or wrapped in some holder object.  That happens to be an implementation detail.  For
   * instance, an implementation could maintain a registry of all trusted objects by context.  In
   * such a case, trustAs() would return the same object that was passed in.  getTrusted() would
   * return the same object passed in if it was found in the registry under a compatible context or
   * throw an exception otherwise.  An implementation might only wrap values some of the time based
   * on some criteria.  getTrusted() might return a value and not throw an exception for special
   * constants or objects even if not wrapped.  All such implementations fulfill this contract.
   *
   *
   * A note on the inheritance model for SCE contexts
   * ------------------------------------------------
   * I've used inheritance and made RESOURCE_URL wrapped types a subtype of URL wrapped types.  This
   * is purely an implementation details.
   *
   * The contract is simply this:
   *
   *     getTrusted($sce.RESOURCE_URL, value) succeeding implies that getTrusted($sce.URL, value)
   *     will also succeed.
   *
   * Inheritance happens to capture this in a natural way.  In some future, we
   * may not use inheritance anymore.  That is OK because no code outside of
   * sce.js and sceSpecs.js would need to be aware of this detail.
   */
    this.$get = [
      '$parse',
      '$sniffer',
      '$sceDelegate',
      function ($parse, $sniffer, $sceDelegate) {
        // Prereq: Ensure that we're not running in IE8 quirks mode.  In that mode, IE allows
        // the "expression(javascript expression)" syntax which is insecure.
        if (enabled && $sniffer.msie && $sniffer.msieDocumentMode < 8) {
          throw $sceMinErr('iequirks', 'Strict Contextual Escaping does not support Internet Explorer version < 9 in quirks ' + 'mode.  You can fix this by adding the text <!doctype html> to the top of your HTML ' + 'document.  See http://docs.angularjs.org/api/ng.$sce for more information.');
        }
        var sce = shallowCopy(SCE_CONTEXTS);
        /**
     * @ngdoc method
     * @name $sce#isEnabled
     * @kind function
     *
     * @return {Boolean} true if SCE is enabled, false otherwise.  If you want to set the value, you
     * have to do it at module config time on {@link ng.$sceProvider $sceProvider}.
     *
     * @description
     * Returns a boolean indicating if SCE is enabled.
     */
        sce.isEnabled = function () {
          return enabled;
        };
        sce.trustAs = $sceDelegate.trustAs;
        sce.getTrusted = $sceDelegate.getTrusted;
        sce.valueOf = $sceDelegate.valueOf;
        if (!enabled) {
          sce.trustAs = sce.getTrusted = function (type, value) {
            return value;
          };
          sce.valueOf = identity;
        }
        /**
     * @ngdoc method
     * @name $sce#parseAs
     *
     * @description
     * Converts Angular {@link guide/expression expression} into a function.  This is like {@link
     * ng.$parse $parse} and is identical when the expression is a literal constant.  Otherwise, it
     * wraps the expression in a call to {@link ng.$sce#getTrusted $sce.getTrusted(*type*,
     * *result*)}
     *
     * @param {string} type The kind of SCE context in which this result will be used.
     * @param {string} expression String expression to compile.
     * @returns {function(context, locals)} a function which represents the compiled expression:
     *
     *    * `context` – `{object}` – an object against which any expressions embedded in the strings
     *      are evaluated against (typically a scope object).
     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in
     *      `context`.
     */
        sce.parseAs = function sceParseAs(type, expr) {
          var parsed = $parse(expr);
          if (parsed.literal && parsed.constant) {
            return parsed;
          } else {
            return function sceParseAsTrusted(self, locals) {
              return sce.getTrusted(type, parsed(self, locals));
            };
          }
        };
        /**
     * @ngdoc method
     * @name $sce#trustAs
     *
     * @description
     * Delegates to {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.  As such,
     * returns an object that is trusted by angular for use in specified strict contextual
     * escaping contexts (such as ng-bind-html, ng-include, any src attribute
     * interpolation, any dom event binding attribute interpolation such as for onclick,  etc.)
     * that uses the provided value.  See * {@link ng.$sce $sce} for enabling strict contextual
     * escaping.
     *
     * @param {string} type The kind of context in which this value is safe for use.  e.g. url,
     *   resource_url, html, js and css.
     * @param {*} value The value that that should be considered trusted/safe.
     * @returns {*} A value that can be used to stand in for the provided `value` in places
     * where Angular expects a $sce.trustAs() return value.
     */
        /**
     * @ngdoc method
     * @name $sce#trustAsHtml
     *
     * @description
     * Shorthand method.  `$sce.trustAsHtml(value)` →
     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.HTML, value)`}
     *
     * @param {*} value The value to trustAs.
     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedHtml
     *     $sce.getTrustedHtml(value)} to obtain the original value.  (privileged directives
     *     only accept expressions that are either literal constants or are the
     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)
     */
        /**
     * @ngdoc method
     * @name $sce#trustAsUrl
     *
     * @description
     * Shorthand method.  `$sce.trustAsUrl(value)` →
     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.URL, value)`}
     *
     * @param {*} value The value to trustAs.
     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedUrl
     *     $sce.getTrustedUrl(value)} to obtain the original value.  (privileged directives
     *     only accept expressions that are either literal constants or are the
     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)
     */
        /**
     * @ngdoc method
     * @name $sce#trustAsResourceUrl
     *
     * @description
     * Shorthand method.  `$sce.trustAsResourceUrl(value)` →
     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.RESOURCE_URL, value)`}
     *
     * @param {*} value The value to trustAs.
     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedResourceUrl
     *     $sce.getTrustedResourceUrl(value)} to obtain the original value.  (privileged directives
     *     only accept expressions that are either literal constants or are the return
     *     value of {@link ng.$sce#trustAs $sce.trustAs}.)
     */
        /**
     * @ngdoc method
     * @name $sce#trustAsJs
     *
     * @description
     * Shorthand method.  `$sce.trustAsJs(value)` →
     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.JS, value)`}
     *
     * @param {*} value The value to trustAs.
     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedJs
     *     $sce.getTrustedJs(value)} to obtain the original value.  (privileged directives
     *     only accept expressions that are either literal constants or are the
     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)
     */
        /**
     * @ngdoc method
     * @name $sce#getTrusted
     *
     * @description
     * Delegates to {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted`}.  As such,
     * takes the result of a {@link ng.$sce#trustAs `$sce.trustAs`}() call and returns the
     * originally supplied value if the queried context type is a supertype of the created type.
     * If this condition isn't satisfied, throws an exception.
     *
     * @param {string} type The kind of context in which this value is to be used.
     * @param {*} maybeTrusted The result of a prior {@link ng.$sce#trustAs `$sce.trustAs`}
     *                         call.
     * @returns {*} The value the was originally provided to
     *              {@link ng.$sce#trustAs `$sce.trustAs`} if valid in this context.
     *              Otherwise, throws an exception.
     */
        /**
     * @ngdoc method
     * @name $sce#getTrustedHtml
     *
     * @description
     * Shorthand method.  `$sce.getTrustedHtml(value)` →
     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.HTML, value)`}
     *
     * @param {*} value The value to pass to `$sce.getTrusted`.
     * @returns {*} The return value of `$sce.getTrusted($sce.HTML, value)`
     */
        /**
     * @ngdoc method
     * @name $sce#getTrustedCss
     *
     * @description
     * Shorthand method.  `$sce.getTrustedCss(value)` →
     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.CSS, value)`}
     *
     * @param {*} value The value to pass to `$sce.getTrusted`.
     * @returns {*} The return value of `$sce.getTrusted($sce.CSS, value)`
     */
        /**
     * @ngdoc method
     * @name $sce#getTrustedUrl
     *
     * @description
     * Shorthand method.  `$sce.getTrustedUrl(value)` →
     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.URL, value)`}
     *
     * @param {*} value The value to pass to `$sce.getTrusted`.
     * @returns {*} The return value of `$sce.getTrusted($sce.URL, value)`
     */
        /**
     * @ngdoc method
     * @name $sce#getTrustedResourceUrl
     *
     * @description
     * Shorthand method.  `$sce.getTrustedResourceUrl(value)` →
     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.RESOURCE_URL, value)`}
     *
     * @param {*} value The value to pass to `$sceDelegate.getTrusted`.
     * @returns {*} The return value of `$sce.getTrusted($sce.RESOURCE_URL, value)`
     */
        /**
     * @ngdoc method
     * @name $sce#getTrustedJs
     *
     * @description
     * Shorthand method.  `$sce.getTrustedJs(value)` →
     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.JS, value)`}
     *
     * @param {*} value The value to pass to `$sce.getTrusted`.
     * @returns {*} The return value of `$sce.getTrusted($sce.JS, value)`
     */
        /**
     * @ngdoc method
     * @name $sce#parseAsHtml
     *
     * @description
     * Shorthand method.  `$sce.parseAsHtml(expression string)` →
     *     {@link ng.$sce#parse `$sce.parseAs($sce.HTML, value)`}
     *
     * @param {string} expression String expression to compile.
     * @returns {function(context, locals)} a function which represents the compiled expression:
     *
     *    * `context` – `{object}` – an object against which any expressions embedded in the strings
     *      are evaluated against (typically a scope object).
     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in
     *      `context`.
     */
        /**
     * @ngdoc method
     * @name $sce#parseAsCss
     *
     * @description
     * Shorthand method.  `$sce.parseAsCss(value)` →
     *     {@link ng.$sce#parse `$sce.parseAs($sce.CSS, value)`}
     *
     * @param {string} expression String expression to compile.
     * @returns {function(context, locals)} a function which represents the compiled expression:
     *
     *    * `context` – `{object}` – an object against which any expressions embedded in the strings
     *      are evaluated against (typically a scope object).
     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in
     *      `context`.
     */
        /**
     * @ngdoc method
     * @name $sce#parseAsUrl
     *
     * @description
     * Shorthand method.  `$sce.parseAsUrl(value)` →
     *     {@link ng.$sce#parse `$sce.parseAs($sce.URL, value)`}
     *
     * @param {string} expression String expression to compile.
     * @returns {function(context, locals)} a function which represents the compiled expression:
     *
     *    * `context` – `{object}` – an object against which any expressions embedded in the strings
     *      are evaluated against (typically a scope object).
     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in
     *      `context`.
     */
        /**
     * @ngdoc method
     * @name $sce#parseAsResourceUrl
     *
     * @description
     * Shorthand method.  `$sce.parseAsResourceUrl(value)` →
     *     {@link ng.$sce#parse `$sce.parseAs($sce.RESOURCE_URL, value)`}
     *
     * @param {string} expression String expression to compile.
     * @returns {function(context, locals)} a function which represents the compiled expression:
     *
     *    * `context` – `{object}` – an object against which any expressions embedded in the strings
     *      are evaluated against (typically a scope object).
     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in
     *      `context`.
     */
        /**
     * @ngdoc method
     * @name $sce#parseAsJs
     *
     * @description
     * Shorthand method.  `$sce.parseAsJs(value)` →
     *     {@link ng.$sce#parse `$sce.parseAs($sce.JS, value)`}
     *
     * @param {string} expression String expression to compile.
     * @returns {function(context, locals)} a function which represents the compiled expression:
     *
     *    * `context` – `{object}` – an object against which any expressions embedded in the strings
     *      are evaluated against (typically a scope object).
     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in
     *      `context`.
     */
        // Shorthand delegations.
        var parse = sce.parseAs, getTrusted = sce.getTrusted, trustAs = sce.trustAs;
        forEach(SCE_CONTEXTS, function (enumValue, name) {
          var lName = lowercase(name);
          sce[camelCase('parse_as_' + lName)] = function (expr) {
            return parse(enumValue, expr);
          };
          sce[camelCase('get_trusted_' + lName)] = function (value) {
            return getTrusted(enumValue, value);
          };
          sce[camelCase('trust_as_' + lName)] = function (value) {
            return trustAs(enumValue, value);
          };
        });
        return sce;
      }
    ];
  }
  /**
 * !!! This is an undocumented "private" service !!!
 *
 * @name $sniffer
 * @requires $window
 * @requires $document
 *
 * @property {boolean} history Does the browser support html5 history api ?
 * @property {boolean} hashchange Does the browser support hashchange event ?
 * @property {boolean} transitions Does the browser support CSS transition events ?
 * @property {boolean} animations Does the browser support CSS animation events ?
 *
 * @description
 * This is very simple implementation of testing browser's features.
 */
  function $SnifferProvider() {
    this.$get = [
      '$window',
      '$document',
      function ($window, $document) {
        var eventSupport = {}, android = int((/android (\d+)/.exec(lowercase(($window.navigator || {}).userAgent)) || [])[1]), boxee = /Boxee/i.test(($window.navigator || {}).userAgent), document = $document[0] || {}, documentMode = document.documentMode, vendorPrefix, vendorRegex = /^(Moz|webkit|O|ms)(?=[A-Z])/, bodyStyle = document.body && document.body.style, transitions = false, animations = false, match;
        if (bodyStyle) {
          for (var prop in bodyStyle) {
            if (match = vendorRegex.exec(prop)) {
              vendorPrefix = match[0];
              vendorPrefix = vendorPrefix.substr(0, 1).toUpperCase() + vendorPrefix.substr(1);
              break;
            }
          }
          if (!vendorPrefix) {
            vendorPrefix = 'WebkitOpacity' in bodyStyle && 'webkit';
          }
          transitions = !!('transition' in bodyStyle || vendorPrefix + 'Transition' in bodyStyle);
          animations = !!('animation' in bodyStyle || vendorPrefix + 'Animation' in bodyStyle);
          if (android && (!transitions || !animations)) {
            transitions = isString(document.body.style.webkitTransition);
            animations = isString(document.body.style.webkitAnimation);
          }
        }
        return {
          history: !!($window.history && $window.history.pushState && !(android < 4) && !boxee),
          hashchange: 'onhashchange' in $window && (!documentMode || documentMode > 7),
          hasEvent: function (event) {
            // IE9 implements 'input' event it's so fubared that we rather pretend that it doesn't have
            // it. In particular the event is not fired when backspace or delete key are pressed or
            // when cut operation is performed.
            if (event == 'input' && msie == 9)
              return false;
            if (isUndefined(eventSupport[event])) {
              var divElm = document.createElement('div');
              eventSupport[event] = 'on' + event in divElm;
            }
            return eventSupport[event];
          },
          csp: csp(),
          vendorPrefix: vendorPrefix,
          transitions: transitions,
          animations: animations,
          android: android,
          msie: msie,
          msieDocumentMode: documentMode
        };
      }
    ];
  }
  function $TimeoutProvider() {
    this.$get = [
      '$rootScope',
      '$browser',
      '$q',
      '$exceptionHandler',
      function ($rootScope, $browser, $q, $exceptionHandler) {
        var deferreds = {};
        /**
      * @ngdoc service
      * @name $timeout
      *
      * @description
      * Angular's wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch
      * block and delegates any exceptions to
      * {@link ng.$exceptionHandler $exceptionHandler} service.
      *
      * The return value of registering a timeout function is a promise, which will be resolved when
      * the timeout is reached and the timeout function is executed.
      *
      * To cancel a timeout request, call `$timeout.cancel(promise)`.
      *
      * In tests you can use {@link ngMock.$timeout `$timeout.flush()`} to
      * synchronously flush the queue of deferred functions.
      *
      * @param {function()} fn A function, whose execution should be delayed.
      * @param {number=} [delay=0] Delay in milliseconds.
      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise
      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.
      * @returns {Promise} Promise that will be resolved when the timeout is reached. The value this
      *   promise will be resolved with is the return value of the `fn` function.
      *
      */
        function timeout(fn, delay, invokeApply) {
          var deferred = $q.defer(), promise = deferred.promise, skipApply = isDefined(invokeApply) && !invokeApply, timeoutId;
          timeoutId = $browser.defer(function () {
            try {
              deferred.resolve(fn());
            } catch (e) {
              deferred.reject(e);
              $exceptionHandler(e);
            } finally {
              delete deferreds[promise.$$timeoutId];
            }
            if (!skipApply)
              $rootScope.$apply();
          }, delay);
          promise.$$timeoutId = timeoutId;
          deferreds[timeoutId] = deferred;
          return promise;
        }
        /**
      * @ngdoc method
      * @name $timeout#cancel
      *
      * @description
      * Cancels a task associated with the `promise`. As a result of this, the promise will be
      * resolved with a rejection.
      *
      * @param {Promise=} promise Promise returned by the `$timeout` function.
      * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully
      *   canceled.
      */
        timeout.cancel = function (promise) {
          if (promise && promise.$$timeoutId in deferreds) {
            deferreds[promise.$$timeoutId].reject('canceled');
            delete deferreds[promise.$$timeoutId];
            return $browser.defer.cancel(promise.$$timeoutId);
          }
          return false;
        };
        return timeout;
      }
    ];
  }
  // NOTE:  The usage of window and document instead of $window and $document here is
  // deliberate.  This service depends on the specific behavior of anchor nodes created by the
  // browser (resolving and parsing URLs) that is unlikely to be provided by mock objects and
  // cause us to break tests.  In addition, when the browser resolves a URL for XHR, it
  // doesn't know about mocked locations and resolves URLs to the real document - which is
  // exactly the behavior needed here.  There is little value is mocking these out for this
  // service.
  var urlParsingNode = document.createElement('a');
  var originUrl = urlResolve(window.location.href, true);
  /**
 *
 * Implementation Notes for non-IE browsers
 * ----------------------------------------
 * Assigning a URL to the href property of an anchor DOM node, even one attached to the DOM,
 * results both in the normalizing and parsing of the URL.  Normalizing means that a relative
 * URL will be resolved into an absolute URL in the context of the application document.
 * Parsing means that the anchor node's host, hostname, protocol, port, pathname and related
 * properties are all populated to reflect the normalized URL.  This approach has wide
 * compatibility - Safari 1+, Mozilla 1+, Opera 7+,e etc.  See
 * http://www.aptana.com/reference/html/api/HTMLAnchorElement.html
 *
 * Implementation Notes for IE
 * ---------------------------
 * IE >= 8 and <= 10 normalizes the URL when assigned to the anchor node similar to the other
 * browsers.  However, the parsed components will not be set if the URL assigned did not specify
 * them.  (e.g. if you assign a.href = "foo", then a.protocol, a.host, etc. will be empty.)  We
 * work around that by performing the parsing in a 2nd step by taking a previously normalized
 * URL (e.g. by assigning to a.href) and assigning it a.href again.  This correctly populates the
 * properties such as protocol, hostname, port, etc.
 *
 * IE7 does not normalize the URL when assigned to an anchor node.  (Apparently, it does, if one
 * uses the inner HTML approach to assign the URL as part of an HTML snippet -
 * http://stackoverflow.com/a/472729)  However, setting img[src] does normalize the URL.
 * Unfortunately, setting img[src] to something like "javascript:foo" on IE throws an exception.
 * Since the primary usage for normalizing URLs is to sanitize such URLs, we can't use that
 * method and IE < 8 is unsupported.
 *
 * References:
 *   http://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement
 *   http://www.aptana.com/reference/html/api/HTMLAnchorElement.html
 *   http://url.spec.whatwg.org/#urlutils
 *   https://github.com/angular/angular.js/pull/2902
 *   http://james.padolsey.com/javascript/parsing-urls-with-the-dom/
 *
 * @kind function
 * @param {string} url The URL to be parsed.
 * @description Normalizes and parses a URL.
 * @returns {object} Returns the normalized URL as a dictionary.
 *
 *   | member name   | Description    |
 *   |---------------|----------------|
 *   | href          | A normalized version of the provided URL if it was not an absolute URL |
 *   | protocol      | The protocol including the trailing colon                              |
 *   | host          | The host and port (if the port is non-default) of the normalizedUrl    |
 *   | search        | The search params, minus the question mark                             |
 *   | hash          | The hash string, minus the hash symbol
 *   | hostname      | The hostname
 *   | port          | The port, without ":"
 *   | pathname      | The pathname, beginning with "/"
 *
 */
  function urlResolve(url, base) {
    var href = url;
    if (msie) {
      // Normalize before parse.  Refer Implementation Notes on why this is
      // done in two steps on IE.
      urlParsingNode.setAttribute('href', href);
      href = urlParsingNode.href;
    }
    urlParsingNode.setAttribute('href', href);
    // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
    return {
      href: urlParsingNode.href,
      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
      host: urlParsingNode.host,
      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
      hostname: urlParsingNode.hostname,
      port: urlParsingNode.port,
      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname
    };
  }
  /**
 * Parse a request URL and determine whether this is a same-origin request as the application document.
 *
 * @param {string|object} requestUrl The url of the request as a string that will be resolved
 * or a parsed URL object.
 * @returns {boolean} Whether the request is for the same origin as the application document.
 */
  function urlIsSameOrigin(requestUrl) {
    var parsed = isString(requestUrl) ? urlResolve(requestUrl) : requestUrl;
    return parsed.protocol === originUrl.protocol && parsed.host === originUrl.host;
  }
  /**
 * @ngdoc service
 * @name $window
 *
 * @description
 * A reference to the browser's `window` object. While `window`
 * is globally available in JavaScript, it causes testability problems, because
 * it is a global variable. In angular we always refer to it through the
 * `$window` service, so it may be overridden, removed or mocked for testing.
 *
 * Expressions, like the one defined for the `ngClick` directive in the example
 * below, are evaluated with respect to the current scope.  Therefore, there is
 * no risk of inadvertently coding in a dependency on a global value in such an
 * expression.
 *
 * @example
   <example module="windowExample">
     <file name="index.html">
       <script>
         angular.module('windowExample', [])
           .controller('ExampleController', ['$scope', '$window', function ($scope, $window) {
             $scope.greeting = 'Hello, World!';
             $scope.doGreeting = function(greeting) {
               $window.alert(greeting);
             };
           }]);
       </script>
       <div ng-controller="ExampleController">
         <input type="text" ng-model="greeting" />
         <button ng-click="doGreeting(greeting)">ALERT</button>
       </div>
     </file>
     <file name="protractor.js" type="protractor">
      it('should display the greeting in the input box', function() {
       element(by.model('greeting')).sendKeys('Hello, E2E Tests');
       // If we click the button it will block the test runner
       // element(':button').click();
      });
     </file>
   </example>
 */
  function $WindowProvider() {
    this.$get = valueFn(window);
  }
  /* global currencyFilter: true,
 dateFilter: true,
 filterFilter: true,
 jsonFilter: true,
 limitToFilter: true,
 lowercaseFilter: true,
 numberFilter: true,
 orderByFilter: true,
 uppercaseFilter: true,
 */
  /**
 * @ngdoc provider
 * @name $filterProvider
 * @description
 *
 * Filters are just functions which transform input to an output. However filters need to be
 * Dependency Injected. To achieve this a filter definition consists of a factory function which is
 * annotated with dependencies and is responsible for creating a filter function.
 *
 * ```js
 *   // Filter registration
 *   function MyModule($provide, $filterProvider) {
 *     // create a service to demonstrate injection (not always needed)
 *     $provide.value('greet', function(name){
 *       return 'Hello ' + name + '!';
 *     });
 *
 *     // register a filter factory which uses the
 *     // greet service to demonstrate DI.
 *     $filterProvider.register('greet', function(greet){
 *       // return the filter function which uses the greet service
 *       // to generate salutation
 *       return function(text) {
 *         // filters need to be forgiving so check input validity
 *         return text && greet(text) || text;
 *       };
 *     });
 *   }
 * ```
 *
 * The filter function is registered with the `$injector` under the filter name suffix with
 * `Filter`.
 *
 * ```js
 *   it('should be the same instance', inject(
 *     function($filterProvider) {
 *       $filterProvider.register('reverse', function(){
 *         return ...;
 *       });
 *     },
 *     function($filter, reverseFilter) {
 *       expect($filter('reverse')).toBe(reverseFilter);
 *     });
 * ```
 *
 *
 * For more information about how angular filters work, and how to create your own filters, see
 * {@link guide/filter Filters} in the Angular Developer Guide.
 */
  /**
 * @ngdoc service
 * @name $filter
 * @kind function
 * @description
 * Filters are used for formatting data displayed to the user.
 *
 * The general syntax in templates is as follows:
 *
 *         {{ expression [| filter_name[:parameter_value] ... ] }}
 *
 * @param {String} name Name of the filter function to retrieve
 * @return {Function} the filter function
 * @example
   <example name="$filter" module="filterExample">
     <file name="index.html">
       <div ng-controller="MainCtrl">
        <h3>{{ originalText }}</h3>
        <h3>{{ filteredText }}</h3>
       </div>
     </file>

     <file name="script.js">
      angular.module('filterExample', [])
      .controller('MainCtrl', function($scope, $filter) {
        $scope.originalText = 'hello';
        $scope.filteredText = $filter('uppercase')($scope.originalText);
      });
     </file>
   </example>
  */
  $FilterProvider.$inject = ['$provide'];
  function $FilterProvider($provide) {
    var suffix = 'Filter';
    /**
   * @ngdoc method
   * @name $filterProvider#register
   * @param {string|Object} name Name of the filter function, or an object map of filters where
   *    the keys are the filter names and the values are the filter factories.
   * @returns {Object} Registered filter instance, or if a map of filters was provided then a map
   *    of the registered filter instances.
   */
    function register(name, factory) {
      if (isObject(name)) {
        var filters = {};
        forEach(name, function (filter, key) {
          filters[key] = register(key, filter);
        });
        return filters;
      } else {
        return $provide.factory(name + suffix, factory);
      }
    }
    this.register = register;
    this.$get = [
      '$injector',
      function ($injector) {
        return function (name) {
          return $injector.get(name + suffix);
        };
      }
    ];
    ////////////////////////////////////////
    /* global
    currencyFilter: false,
    dateFilter: false,
    filterFilter: false,
    jsonFilter: false,
    limitToFilter: false,
    lowercaseFilter: false,
    numberFilter: false,
    orderByFilter: false,
    uppercaseFilter: false,
  */
    register('currency', currencyFilter);
    register('date', dateFilter);
    register('filter', filterFilter);
    register('json', jsonFilter);
    register('limitTo', limitToFilter);
    register('lowercase', lowercaseFilter);
    register('number', numberFilter);
    register('orderBy', orderByFilter);
    register('uppercase', uppercaseFilter);
  }
  /**
 * @ngdoc filter
 * @name filter
 * @kind function
 *
 * @description
 * Selects a subset of items from `array` and returns it as a new array.
 *
 * @param {Array} array The source array.
 * @param {string|Object|function()} expression The predicate to be used for selecting items from
 *   `array`.
 *
 *   Can be one of:
 *
 *   - `string`: The string is evaluated as an expression and the resulting value is used for substring match against
 *     the contents of the `array`. All strings or objects with string properties in `array` that contain this string
 *     will be returned. The predicate can be negated by prefixing the string with `!`.
 *
 *   - `Object`: A pattern object can be used to filter specific properties on objects contained
 *     by `array`. For example `{name:"M", phone:"1"}` predicate will return an array of items
 *     which have property `name` containing "M" and property `phone` containing "1". A special
 *     property name `$` can be used (as in `{$:"text"}`) to accept a match against any
 *     property of the object. That's equivalent to the simple substring match with a `string`
 *     as described above. The predicate can be negated by prefixing the string with `!`.
 *     For Example `{name: "!M"}` predicate will return an array of items which have property `name`
 *     not containing "M".
 *
 *   - `function(value)`: A predicate function can be used to write arbitrary filters. The function is
 *     called for each element of `array`. The final result is an array of those elements that
 *     the predicate returned true for.
 *
 * @param {function(actual, expected)|true|undefined} comparator Comparator which is used in
 *     determining if the expected value (from the filter expression) and actual value (from
 *     the object in the array) should be considered a match.
 *
 *   Can be one of:
 *
 *   - `function(actual, expected)`:
 *     The function will be given the object value and the predicate value to compare and
 *     should return true if the item should be included in filtered result.
 *
 *   - `true`: A shorthand for `function(actual, expected) { return angular.equals(expected, actual)}`.
 *     this is essentially strict comparison of expected and actual.
 *
 *   - `false|undefined`: A short hand for a function which will look for a substring match in case
 *     insensitive way.
 *
 * @example
   <example>
     <file name="index.html">
       <div ng-init="friends = [{name:'John', phone:'555-1276'},
                                {name:'Mary', phone:'800-BIG-MARY'},
                                {name:'Mike', phone:'555-4321'},
                                {name:'Adam', phone:'555-5678'},
                                {name:'Julie', phone:'555-8765'},
                                {name:'Juliette', phone:'555-5678'}]"></div>

       Search: <input ng-model="searchText">
       <table id="searchTextResults">
         <tr><th>Name</th><th>Phone</th></tr>
         <tr ng-repeat="friend in friends | filter:searchText">
           <td>{{friend.name}}</td>
           <td>{{friend.phone}}</td>
         </tr>
       </table>
       <hr>
       Any: <input ng-model="search.$"> <br>
       Name only <input ng-model="search.name"><br>
       Phone only <input ng-model="search.phone"><br>
       Equality <input type="checkbox" ng-model="strict"><br>
       <table id="searchObjResults">
         <tr><th>Name</th><th>Phone</th></tr>
         <tr ng-repeat="friendObj in friends | filter:search:strict">
           <td>{{friendObj.name}}</td>
           <td>{{friendObj.phone}}</td>
         </tr>
       </table>
     </file>
     <file name="protractor.js" type="protractor">
       var expectFriendNames = function(expectedNames, key) {
         element.all(by.repeater(key + ' in friends').column(key + '.name')).then(function(arr) {
           arr.forEach(function(wd, i) {
             expect(wd.getText()).toMatch(expectedNames[i]);
           });
         });
       };

       it('should search across all fields when filtering with a string', function() {
         var searchText = element(by.model('searchText'));
         searchText.clear();
         searchText.sendKeys('m');
         expectFriendNames(['Mary', 'Mike', 'Adam'], 'friend');

         searchText.clear();
         searchText.sendKeys('76');
         expectFriendNames(['John', 'Julie'], 'friend');
       });

       it('should search in specific fields when filtering with a predicate object', function() {
         var searchAny = element(by.model('search.$'));
         searchAny.clear();
         searchAny.sendKeys('i');
         expectFriendNames(['Mary', 'Mike', 'Julie', 'Juliette'], 'friendObj');
       });
       it('should use a equal comparison when comparator is true', function() {
         var searchName = element(by.model('search.name'));
         var strict = element(by.model('strict'));
         searchName.clear();
         searchName.sendKeys('Julie');
         strict.click();
         expectFriendNames(['Julie'], 'friendObj');
       });
     </file>
   </example>
 */
  function filterFilter() {
    return function (array, expression, comparator) {
      if (!isArray(array))
        return array;
      var comparatorType = typeof comparator, predicates = [];
      predicates.check = function (value) {
        for (var j = 0; j < predicates.length; j++) {
          if (!predicates[j](value)) {
            return false;
          }
        }
        return true;
      };
      if (comparatorType !== 'function') {
        if (comparatorType === 'boolean' && comparator) {
          comparator = function (obj, text) {
            return angular.equals(obj, text);
          };
        } else {
          comparator = function (obj, text) {
            if (obj && text && typeof obj === 'object' && typeof text === 'object') {
              for (var objKey in obj) {
                if (objKey.charAt(0) !== '$' && hasOwnProperty.call(obj, objKey) && comparator(obj[objKey], text[objKey])) {
                  return true;
                }
              }
              return false;
            }
            text = ('' + text).toLowerCase();
            return ('' + obj).toLowerCase().indexOf(text) > -1;
          };
        }
      }
      var search = function (obj, text) {
        if (typeof text === 'string' && text.charAt(0) === '!') {
          return !search(obj, text.substr(1));
        }
        switch (typeof obj) {
        case 'boolean':
        case 'number':
        case 'string':
          return comparator(obj, text);
        case 'object':
          switch (typeof text) {
          case 'object':
            return comparator(obj, text);
          default:
            for (var objKey in obj) {
              if (objKey.charAt(0) !== '$' && search(obj[objKey], text)) {
                return true;
              }
            }
            break;
          }
          return false;
        case 'array':
          for (var i = 0; i < obj.length; i++) {
            if (search(obj[i], text)) {
              return true;
            }
          }
          return false;
        default:
          return false;
        }
      };
      switch (typeof expression) {
      case 'boolean':
      case 'number':
      case 'string':
        // Set up expression object and fall through
        expression = { $: expression };
      // jshint -W086
      case 'object':
        // jshint +W086
        for (var key in expression) {
          (function (path) {
            if (typeof expression[path] === 'undefined')
              return;
            predicates.push(function (value) {
              return search(path == '$' ? value : value && value[path], expression[path]);
            });
          }(key));
        }
        break;
      case 'function':
        predicates.push(expression);
        break;
      default:
        return array;
      }
      var filtered = [];
      for (var j = 0; j < array.length; j++) {
        var value = array[j];
        if (predicates.check(value)) {
          filtered.push(value);
        }
      }
      return filtered;
    };
  }
  /**
 * @ngdoc filter
 * @name currency
 * @kind function
 *
 * @description
 * Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default
 * symbol for current locale is used.
 *
 * @param {number} amount Input to filter.
 * @param {string=} symbol Currency symbol or identifier to be displayed.
 * @returns {string} Formatted number.
 *
 *
 * @example
   <example module="currencyExample">
     <file name="index.html">
       <script>
         angular.module('currencyExample', [])
           .controller('ExampleController', ['$scope', function($scope) {
             $scope.amount = 1234.56;
           }]);
       </script>
       <div ng-controller="ExampleController">
         <input type="number" ng-model="amount"> <br>
         default currency symbol ($): <span id="currency-default">{{amount | currency}}</span><br>
         custom currency identifier (USD$): <span>{{amount | currency:"USD$"}}</span>
       </div>
     </file>
     <file name="protractor.js" type="protractor">
       it('should init with 1234.56', function() {
         expect(element(by.id('currency-default')).getText()).toBe('$1,234.56');
         expect(element(by.binding('amount | currency:"USD$"')).getText()).toBe('USD$1,234.56');
       });
       it('should update', function() {
         if (browser.params.browser == 'safari') {
           // Safari does not understand the minus key. See
           // https://github.com/angular/protractor/issues/481
           return;
         }
         element(by.model('amount')).clear();
         element(by.model('amount')).sendKeys('-1234');
         expect(element(by.id('currency-default')).getText()).toBe('($1,234.00)');
         expect(element(by.binding('amount | currency:"USD$"')).getText()).toBe('(USD$1,234.00)');
       });
     </file>
   </example>
 */
  currencyFilter.$inject = ['$locale'];
  function currencyFilter($locale) {
    var formats = $locale.NUMBER_FORMATS;
    return function (amount, currencySymbol) {
      if (isUndefined(currencySymbol))
        currencySymbol = formats.CURRENCY_SYM;
      return formatNumber(amount, formats.PATTERNS[1], formats.GROUP_SEP, formats.DECIMAL_SEP, 2).replace(/\u00A4/g, currencySymbol);
    };
  }
  /**
 * @ngdoc filter
 * @name number
 * @kind function
 *
 * @description
 * Formats a number as text.
 *
 * If the input is not a number an empty string is returned.
 *
 * @param {number|string} number Number to format.
 * @param {(number|string)=} fractionSize Number of decimal places to round the number to.
 * If this is not provided then the fraction size is computed from the current locale's number
 * formatting pattern. In the case of the default locale, it will be 3.
 * @returns {string} Number rounded to decimalPlaces and places a “,” after each third digit.
 *
 * @example
   <example module="numberFilterExample">
     <file name="index.html">
       <script>
         angular.module('numberFilterExample', [])
           .controller('ExampleController', ['$scope', function($scope) {
             $scope.val = 1234.56789;
           }]);
       </script>
       <div ng-controller="ExampleController">
         Enter number: <input ng-model='val'><br>
         Default formatting: <span id='number-default'>{{val | number}}</span><br>
         No fractions: <span>{{val | number:0}}</span><br>
         Negative number: <span>{{-val | number:4}}</span>
       </div>
     </file>
     <file name="protractor.js" type="protractor">
       it('should format numbers', function() {
         expect(element(by.id('number-default')).getText()).toBe('1,234.568');
         expect(element(by.binding('val | number:0')).getText()).toBe('1,235');
         expect(element(by.binding('-val | number:4')).getText()).toBe('-1,234.5679');
       });

       it('should update', function() {
         element(by.model('val')).clear();
         element(by.model('val')).sendKeys('3374.333');
         expect(element(by.id('number-default')).getText()).toBe('3,374.333');
         expect(element(by.binding('val | number:0')).getText()).toBe('3,374');
         expect(element(by.binding('-val | number:4')).getText()).toBe('-3,374.3330');
      });
     </file>
   </example>
 */
  numberFilter.$inject = ['$locale'];
  function numberFilter($locale) {
    var formats = $locale.NUMBER_FORMATS;
    return function (number, fractionSize) {
      return formatNumber(number, formats.PATTERNS[0], formats.GROUP_SEP, formats.DECIMAL_SEP, fractionSize);
    };
  }
  var DECIMAL_SEP = '.';
  function formatNumber(number, pattern, groupSep, decimalSep, fractionSize) {
    if (number == null || !isFinite(number) || isObject(number))
      return '';
    var isNegative = number < 0;
    number = Math.abs(number);
    var numStr = number + '', formatedText = '', parts = [];
    var hasExponent = false;
    if (numStr.indexOf('e') !== -1) {
      var match = numStr.match(/([\d\.]+)e(-?)(\d+)/);
      if (match && match[2] == '-' && match[3] > fractionSize + 1) {
        numStr = '0';
        number = 0;
      } else {
        formatedText = numStr;
        hasExponent = true;
      }
    }
    if (!hasExponent) {
      var fractionLen = (numStr.split(DECIMAL_SEP)[1] || '').length;
      // determine fractionSize if it is not specified
      if (isUndefined(fractionSize)) {
        fractionSize = Math.min(Math.max(pattern.minFrac, fractionLen), pattern.maxFrac);
      }
      // safely round numbers in JS without hitting imprecisions of floating-point arithmetics
      // inspired by:
      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round
      number = +(Math.round(+(number.toString() + 'e' + fractionSize)).toString() + 'e' + -fractionSize);
      if (number === 0) {
        isNegative = false;
      }
      var fraction = ('' + number).split(DECIMAL_SEP);
      var whole = fraction[0];
      fraction = fraction[1] || '';
      var i, pos = 0, lgroup = pattern.lgSize, group = pattern.gSize;
      if (whole.length >= lgroup + group) {
        pos = whole.length - lgroup;
        for (i = 0; i < pos; i++) {
          if ((pos - i) % group === 0 && i !== 0) {
            formatedText += groupSep;
          }
          formatedText += whole.charAt(i);
        }
      }
      for (i = pos; i < whole.length; i++) {
        if ((whole.length - i) % lgroup === 0 && i !== 0) {
          formatedText += groupSep;
        }
        formatedText += whole.charAt(i);
      }
      // format fraction part.
      while (fraction.length < fractionSize) {
        fraction += '0';
      }
      if (fractionSize && fractionSize !== '0')
        formatedText += decimalSep + fraction.substr(0, fractionSize);
    } else {
      if (fractionSize > 0 && number > -1 && number < 1) {
        formatedText = number.toFixed(fractionSize);
      }
    }
    parts.push(isNegative ? pattern.negPre : pattern.posPre);
    parts.push(formatedText);
    parts.push(isNegative ? pattern.negSuf : pattern.posSuf);
    return parts.join('');
  }
  function padNumber(num, digits, trim) {
    var neg = '';
    if (num < 0) {
      neg = '-';
      num = -num;
    }
    num = '' + num;
    while (num.length < digits)
      num = '0' + num;
    if (trim)
      num = num.substr(num.length - digits);
    return neg + num;
  }
  function dateGetter(name, size, offset, trim) {
    offset = offset || 0;
    return function (date) {
      var value = date['get' + name]();
      if (offset > 0 || value > -offset)
        value += offset;
      if (value === 0 && offset == -12)
        value = 12;
      return padNumber(value, size, trim);
    };
  }
  function dateStrGetter(name, shortForm) {
    return function (date, formats) {
      var value = date['get' + name]();
      var get = uppercase(shortForm ? 'SHORT' + name : name);
      return formats[get][value];
    };
  }
  function timeZoneGetter(date) {
    var zone = -1 * date.getTimezoneOffset();
    var paddedZone = zone >= 0 ? '+' : '';
    paddedZone += padNumber(Math[zone > 0 ? 'floor' : 'ceil'](zone / 60), 2) + padNumber(Math.abs(zone % 60), 2);
    return paddedZone;
  }
  function ampmGetter(date, formats) {
    return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1];
  }
  var DATE_FORMATS = {
      yyyy: dateGetter('FullYear', 4),
      yy: dateGetter('FullYear', 2, 0, true),
      y: dateGetter('FullYear', 1),
      MMMM: dateStrGetter('Month'),
      MMM: dateStrGetter('Month', true),
      MM: dateGetter('Month', 2, 1),
      M: dateGetter('Month', 1, 1),
      dd: dateGetter('Date', 2),
      d: dateGetter('Date', 1),
      HH: dateGetter('Hours', 2),
      H: dateGetter('Hours', 1),
      hh: dateGetter('Hours', 2, -12),
      h: dateGetter('Hours', 1, -12),
      mm: dateGetter('Minutes', 2),
      m: dateGetter('Minutes', 1),
      ss: dateGetter('Seconds', 2),
      s: dateGetter('Seconds', 1),
      sss: dateGetter('Milliseconds', 3),
      EEEE: dateStrGetter('Day'),
      EEE: dateStrGetter('Day', true),
      a: ampmGetter,
      Z: timeZoneGetter
    };
  var DATE_FORMATS_SPLIT = /((?:[^yMdHhmsaZE']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z))(.*)/, NUMBER_STRING = /^\-?\d+$/;
  /**
 * @ngdoc filter
 * @name date
 * @kind function
 *
 * @description
 *   Formats `date` to a string based on the requested `format`.
 *
 *   `format` string can be composed of the following elements:
 *
 *   * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)
 *   * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)
 *   * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)
 *   * `'MMMM'`: Month in year (January-December)
 *   * `'MMM'`: Month in year (Jan-Dec)
 *   * `'MM'`: Month in year, padded (01-12)
 *   * `'M'`: Month in year (1-12)
 *   * `'dd'`: Day in month, padded (01-31)
 *   * `'d'`: Day in month (1-31)
 *   * `'EEEE'`: Day in Week,(Sunday-Saturday)
 *   * `'EEE'`: Day in Week, (Sun-Sat)
 *   * `'HH'`: Hour in day, padded (00-23)
 *   * `'H'`: Hour in day (0-23)
 *   * `'hh'`: Hour in am/pm, padded (01-12)
 *   * `'h'`: Hour in am/pm, (1-12)
 *   * `'mm'`: Minute in hour, padded (00-59)
 *   * `'m'`: Minute in hour (0-59)
 *   * `'ss'`: Second in minute, padded (00-59)
 *   * `'s'`: Second in minute (0-59)
 *   * `'.sss' or ',sss'`: Millisecond in second, padded (000-999)
 *   * `'a'`: am/pm marker
 *   * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)
 *
 *   `format` string can also be one of the following predefined
 *   {@link guide/i18n localizable formats}:
 *
 *   * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale
 *     (e.g. Sep 3, 2010 12:05:08 pm)
 *   * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 pm)
 *   * `'fullDate'`: equivalent to `'EEEE, MMMM d,y'` for en_US  locale
 *     (e.g. Friday, September 3, 2010)
 *   * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010)
 *   * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)
 *   * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)
 *   * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 pm)
 *   * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 pm)
 *
 *   `format` string can contain literal values. These need to be escaped by surrounding with single quotes (e.g.
 *   `"h 'in the morning'"`). In order to output a single quote, escape it - i.e., two single quotes in a sequence
 *   (e.g. `"h 'o''clock'"`).
 *
 * @param {(Date|number|string)} date Date to format either as Date object, milliseconds (string or
 *    number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.sssZ and its
 *    shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is
 *    specified in the string input, the time is considered to be in the local timezone.
 * @param {string=} format Formatting rules (see Description). If not specified,
 *    `mediumDate` is used.
 * @returns {string} Formatted string or the input if input is not recognized as date/millis.
 *
 * @example
   <example>
     <file name="index.html">
       <span ng-non-bindable>{{1288323623006 | date:'medium'}}</span>:
           <span>{{1288323623006 | date:'medium'}}</span><br>
       <span ng-non-bindable>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span>:
          <span>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span><br>
       <span ng-non-bindable>{{1288323623006 | date:'MM/dd/yyyy @ h:mma'}}</span>:
          <span>{{'1288323623006' | date:'MM/dd/yyyy @ h:mma'}}</span><br>
       <span ng-non-bindable>{{1288323623006 | date:"MM/dd/yyyy 'at' h:mma"}}</span>:
          <span>{{'1288323623006' | date:"MM/dd/yyyy 'at' h:mma"}}</span><br>
     </file>
     <file name="protractor.js" type="protractor">
       it('should format date', function() {
         expect(element(by.binding("1288323623006 | date:'medium'")).getText()).
            toMatch(/Oct 2\d, 2010 \d{1,2}:\d{2}:\d{2} (AM|PM)/);
         expect(element(by.binding("1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'")).getText()).
            toMatch(/2010\-10\-2\d \d{2}:\d{2}:\d{2} (\-|\+)?\d{4}/);
         expect(element(by.binding("'1288323623006' | date:'MM/dd/yyyy @ h:mma'")).getText()).
            toMatch(/10\/2\d\/2010 @ \d{1,2}:\d{2}(AM|PM)/);
         expect(element(by.binding("'1288323623006' | date:\"MM/dd/yyyy 'at' h:mma\"")).getText()).
            toMatch(/10\/2\d\/2010 at \d{1,2}:\d{2}(AM|PM)/);
       });
     </file>
   </example>
 */
  dateFilter.$inject = ['$locale'];
  function dateFilter($locale) {
    var R_ISO8601_STR = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
    // 1        2       3         4          5          6          7          8  9     10      11
    function jsonStringToDate(string) {
      var match;
      if (match = string.match(R_ISO8601_STR)) {
        var date = new Date(0), tzHour = 0, tzMin = 0, dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear, timeSetter = match[8] ? date.setUTCHours : date.setHours;
        if (match[9]) {
          tzHour = int(match[9] + match[10]);
          tzMin = int(match[9] + match[11]);
        }
        dateSetter.call(date, int(match[1]), int(match[2]) - 1, int(match[3]));
        var h = int(match[4] || 0) - tzHour;
        var m = int(match[5] || 0) - tzMin;
        var s = int(match[6] || 0);
        var ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);
        timeSetter.call(date, h, m, s, ms);
        return date;
      }
      return string;
    }
    return function (date, format) {
      var text = '', parts = [], fn, match;
      format = format || 'mediumDate';
      format = $locale.DATETIME_FORMATS[format] || format;
      if (isString(date)) {
        date = NUMBER_STRING.test(date) ? int(date) : jsonStringToDate(date);
      }
      if (isNumber(date)) {
        date = new Date(date);
      }
      if (!isDate(date)) {
        return date;
      }
      while (format) {
        match = DATE_FORMATS_SPLIT.exec(format);
        if (match) {
          parts = concat(parts, match, 1);
          format = parts.pop();
        } else {
          parts.push(format);
          format = null;
        }
      }
      forEach(parts, function (value) {
        fn = DATE_FORMATS[value];
        text += fn ? fn(date, $locale.DATETIME_FORMATS) : value.replace(/(^'|'$)/g, '').replace(/''/g, '\'');
      });
      return text;
    };
  }
  /**
 * @ngdoc filter
 * @name json
 * @kind function
 *
 * @description
 *   Allows you to convert a JavaScript object into JSON string.
 *
 *   This filter is mostly useful for debugging. When using the double curly {{value}} notation
 *   the binding is automatically converted to JSON.
 *
 * @param {*} object Any JavaScript object (including arrays and primitive types) to filter.
 * @returns {string} JSON string.
 *
 *
 * @example
   <example>
     <file name="index.html">
       <pre>{{ {'name':'value'} | json }}</pre>
     </file>
     <file name="protractor.js" type="protractor">
       it('should jsonify filtered objects', function() {
         expect(element(by.binding("{'name':'value'}")).getText()).toMatch(/\{\n  "name": ?"value"\n}/);
       });
     </file>
   </example>
 *
 */
  function jsonFilter() {
    return function (object) {
      return toJson(object, true);
    };
  }
  /**
 * @ngdoc filter
 * @name lowercase
 * @kind function
 * @description
 * Converts string to lowercase.
 * @see angular.lowercase
 */
  var lowercaseFilter = valueFn(lowercase);
  /**
 * @ngdoc filter
 * @name uppercase
 * @kind function
 * @description
 * Converts string to uppercase.
 * @see angular.uppercase
 */
  var uppercaseFilter = valueFn(uppercase);
  /**
 * @ngdoc filter
 * @name limitTo
 * @kind function
 *
 * @description
 * Creates a new array or string containing only a specified number of elements. The elements
 * are taken from either the beginning or the end of the source array or string, as specified by
 * the value and sign (positive or negative) of `limit`.
 *
 * @param {Array|string} input Source array or string to be limited.
 * @param {string|number} limit The length of the returned array or string. If the `limit` number
 *     is positive, `limit` number of items from the beginning of the source array/string are copied.
 *     If the number is negative, `limit` number  of items from the end of the source array/string
 *     are copied. The `limit` will be trimmed if it exceeds `array.length`
 * @returns {Array|string} A new sub-array or substring of length `limit` or less if input array
 *     had less than `limit` elements.
 *
 * @example
   <example module="limitToExample">
     <file name="index.html">
       <script>
         angular.module('limitToExample', [])
           .controller('ExampleController', ['$scope', function($scope) {
             $scope.numbers = [1,2,3,4,5,6,7,8,9];
             $scope.letters = "abcdefghi";
             $scope.numLimit = 3;
             $scope.letterLimit = 3;
           }]);
       </script>
       <div ng-controller="ExampleController">
         Limit {{numbers}} to: <input type="number" step="1" ng-model="numLimit">
         <p>Output numbers: {{ numbers | limitTo:numLimit }}</p>
         Limit {{letters}} to: <input type="number" step="1" ng-model="letterLimit">
         <p>Output letters: {{ letters | limitTo:letterLimit }}</p>
       </div>
     </file>
     <file name="protractor.js" type="protractor">
       var numLimitInput = element(by.model('numLimit'));
       var letterLimitInput = element(by.model('letterLimit'));
       var limitedNumbers = element(by.binding('numbers | limitTo:numLimit'));
       var limitedLetters = element(by.binding('letters | limitTo:letterLimit'));

       it('should limit the number array to first three items', function() {
         expect(numLimitInput.getAttribute('value')).toBe('3');
         expect(letterLimitInput.getAttribute('value')).toBe('3');
         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3]');
         expect(limitedLetters.getText()).toEqual('Output letters: abc');
       });

       // There is a bug in safari and protractor that doesn't like the minus key
       // it('should update the output when -3 is entered', function() {
       //   numLimitInput.clear();
       //   numLimitInput.sendKeys('-3');
       //   letterLimitInput.clear();
       //   letterLimitInput.sendKeys('-3');
       //   expect(limitedNumbers.getText()).toEqual('Output numbers: [7,8,9]');
       //   expect(limitedLetters.getText()).toEqual('Output letters: ghi');
       // });

       it('should not exceed the maximum size of input array', function() {
         numLimitInput.clear();
         numLimitInput.sendKeys('100');
         letterLimitInput.clear();
         letterLimitInput.sendKeys('100');
         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3,4,5,6,7,8,9]');
         expect(limitedLetters.getText()).toEqual('Output letters: abcdefghi');
       });
     </file>
   </example>
 */
  function limitToFilter() {
    return function (input, limit) {
      if (!isArray(input) && !isString(input))
        return input;
      if (Math.abs(Number(limit)) === Infinity) {
        limit = Number(limit);
      } else {
        limit = int(limit);
      }
      if (isString(input)) {
        //NaN check on limit
        if (limit) {
          return limit >= 0 ? input.slice(0, limit) : input.slice(limit, input.length);
        } else {
          return '';
        }
      }
      var out = [], i, n;
      // if abs(limit) exceeds maximum length, trim it
      if (limit > input.length)
        limit = input.length;
      else if (limit < -input.length)
        limit = -input.length;
      if (limit > 0) {
        i = 0;
        n = limit;
      } else {
        i = input.length + limit;
        n = input.length;
      }
      for (; i < n; i++) {
        out.push(input[i]);
      }
      return out;
    };
  }
  /**
 * @ngdoc filter
 * @name orderBy
 * @kind function
 *
 * @description
 * Orders a specified `array` by the `expression` predicate. It is ordered alphabetically
 * for strings and numerically for numbers. Note: if you notice numbers are not being sorted
 * correctly, make sure they are actually being saved as numbers and not strings.
 *
 * @param {Array} array The array to sort.
 * @param {function(*)|string|Array.<(function(*)|string)>=} expression A predicate to be
 *    used by the comparator to determine the order of elements.
 *
 *    Can be one of:
 *
 *    - `function`: Getter function. The result of this function will be sorted using the
 *      `<`, `=`, `>` operator.
 *    - `string`: An Angular expression. The result of this expression is used to compare elements
 *      (for example `name` to sort by a property called `name` or `name.substr(0, 3)` to sort by
 *      3 first characters of a property called `name`). The result of a constant expression
 *      is interpreted as a property name to be used in comparisons (for example `"special name"`
 *      to sort object by the value of their `special name` property). An expression can be
 *      optionally prefixed with `+` or `-` to control ascending or descending sort order
 *      (for example, `+name` or `-name`). If no property is provided, (e.g. `'+'`) then the array
 *      element itself is used to compare where sorting.
 *    - `Array`: An array of function or string predicates. The first predicate in the array
 *      is used for sorting, but when two items are equivalent, the next predicate is used.
 *
 *    If the predicate is missing or empty then it defaults to `'+'`.
 *
 * @param {boolean=} reverse Reverse the order of the array.
 * @returns {Array} Sorted copy of the source array.
 *
 * @example
   <example module="orderByExample">
     <file name="index.html">
       <script>
         angular.module('orderByExample', [])
           .controller('ExampleController', ['$scope', function($scope) {
             $scope.friends =
                 [{name:'John', phone:'555-1212', age:10},
                  {name:'Mary', phone:'555-9876', age:19},
                  {name:'Mike', phone:'555-4321', age:21},
                  {name:'Adam', phone:'555-5678', age:35},
                  {name:'Julie', phone:'555-8765', age:29}];
             $scope.predicate = '-age';
           }]);
       </script>
       <div ng-controller="ExampleController">
         <pre>Sorting predicate = {{predicate}}; reverse = {{reverse}}</pre>
         <hr/>
         [ <a href="" ng-click="predicate=''">unsorted</a> ]
         <table class="friend">
           <tr>
             <th><a href="" ng-click="predicate = 'name'; reverse=false">Name</a>
                 (<a href="" ng-click="predicate = '-name'; reverse=false">^</a>)</th>
             <th><a href="" ng-click="predicate = 'phone'; reverse=!reverse">Phone Number</a></th>
             <th><a href="" ng-click="predicate = 'age'; reverse=!reverse">Age</a></th>
           </tr>
           <tr ng-repeat="friend in friends | orderBy:predicate:reverse">
             <td>{{friend.name}}</td>
             <td>{{friend.phone}}</td>
             <td>{{friend.age}}</td>
           </tr>
         </table>
       </div>
     </file>
   </example>
 *
 * It's also possible to call the orderBy filter manually, by injecting `$filter`, retrieving the
 * filter routine with `$filter('orderBy')`, and calling the returned filter routine with the
 * desired parameters.
 *
 * Example:
 *
 * @example
  <example module="orderByExample">
    <file name="index.html">
      <div ng-controller="ExampleController">
        <table class="friend">
          <tr>
            <th><a href="" ng-click="reverse=false;order('name', false)">Name</a>
              (<a href="" ng-click="order('-name',false)">^</a>)</th>
            <th><a href="" ng-click="reverse=!reverse;order('phone', reverse)">Phone Number</a></th>
            <th><a href="" ng-click="reverse=!reverse;order('age',reverse)">Age</a></th>
          </tr>
          <tr ng-repeat="friend in friends">
            <td>{{friend.name}}</td>
            <td>{{friend.phone}}</td>
            <td>{{friend.age}}</td>
          </tr>
        </table>
      </div>
    </file>

    <file name="script.js">
      angular.module('orderByExample', [])
        .controller('ExampleController', ['$scope', '$filter', function($scope, $filter) {
          var orderBy = $filter('orderBy');
          $scope.friends = [
            { name: 'John',    phone: '555-1212',    age: 10 },
            { name: 'Mary',    phone: '555-9876',    age: 19 },
            { name: 'Mike',    phone: '555-4321',    age: 21 },
            { name: 'Adam',    phone: '555-5678',    age: 35 },
            { name: 'Julie',   phone: '555-8765',    age: 29 }
          ];
          $scope.order = function(predicate, reverse) {
            $scope.friends = orderBy($scope.friends, predicate, reverse);
          };
          $scope.order('-age',false);
        }]);
    </file>
</example>
 */
  orderByFilter.$inject = ['$parse'];
  function orderByFilter($parse) {
    return function (array, sortPredicate, reverseOrder) {
      if (!isArrayLike(array))
        return array;
      sortPredicate = isArray(sortPredicate) ? sortPredicate : [sortPredicate];
      if (sortPredicate.length === 0) {
        sortPredicate = ['+'];
      }
      sortPredicate = map(sortPredicate, function (predicate) {
        var descending = false, get = predicate || identity;
        if (isString(predicate)) {
          if (predicate.charAt(0) == '+' || predicate.charAt(0) == '-') {
            descending = predicate.charAt(0) == '-';
            predicate = predicate.substring(1);
          }
          if (predicate === '') {
            // Effectively no predicate was passed so we compare identity
            return reverseComparator(function (a, b) {
              return compare(a, b);
            }, descending);
          }
          get = $parse(predicate);
          if (get.constant) {
            var key = get();
            return reverseComparator(function (a, b) {
              return compare(a[key], b[key]);
            }, descending);
          }
        }
        return reverseComparator(function (a, b) {
          return compare(get(a), get(b));
        }, descending);
      });
      return slice.call(array).sort(reverseComparator(comparator, reverseOrder));
      function comparator(o1, o2) {
        for (var i = 0; i < sortPredicate.length; i++) {
          var comp = sortPredicate[i](o1, o2);
          if (comp !== 0)
            return comp;
        }
        return 0;
      }
      function reverseComparator(comp, descending) {
        return toBoolean(descending) ? function (a, b) {
          return comp(b, a);
        } : comp;
      }
      function compare(v1, v2) {
        var t1 = typeof v1;
        var t2 = typeof v2;
        if (t1 == t2) {
          if (isDate(v1) && isDate(v2)) {
            v1 = v1.valueOf();
            v2 = v2.valueOf();
          }
          if (t1 == 'string') {
            v1 = v1.toLowerCase();
            v2 = v2.toLowerCase();
          }
          if (v1 === v2)
            return 0;
          return v1 < v2 ? -1 : 1;
        } else {
          return t1 < t2 ? -1 : 1;
        }
      }
    };
  }
  function ngDirective(directive) {
    if (isFunction(directive)) {
      directive = { link: directive };
    }
    directive.restrict = directive.restrict || 'AC';
    return valueFn(directive);
  }
  /**
 * @ngdoc directive
 * @name a
 * @restrict E
 *
 * @description
 * Modifies the default behavior of the html A tag so that the default action is prevented when
 * the href attribute is empty.
 *
 * This change permits the easy creation of action links with the `ngClick` directive
 * without changing the location or causing page reloads, e.g.:
 * `<a href="" ng-click="list.addItem()">Add Item</a>`
 */
  var htmlAnchorDirective = valueFn({
      restrict: 'E',
      compile: function (element, attr) {
        if (msie <= 8) {
          // turn <a href ng-click="..">link</a> into a stylable link in IE
          // but only if it doesn't have name attribute, in which case it's an anchor
          if (!attr.href && !attr.name) {
            attr.$set('href', '');
          }
          // add a comment node to anchors to workaround IE bug that causes element content to be reset
          // to new attribute content if attribute is updated with value containing @ and element also
          // contains value with @
          // see issue #1949
          element.append(document.createComment('IE fix'));
        }
        if (!attr.href && !attr.xlinkHref && !attr.name) {
          return function (scope, element) {
            // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.
            var href = toString.call(element.prop('href')) === '[object SVGAnimatedString]' ? 'xlink:href' : 'href';
            element.on('click', function (event) {
              // if we have no href url, then don't navigate anywhere.
              if (!element.attr(href)) {
                event.preventDefault();
              }
            });
          };
        }
      }
    });
  /**
 * @ngdoc directive
 * @name ngHref
 * @restrict A
 * @priority 99
 *
 * @description
 * Using Angular markup like `{{hash}}` in an href attribute will
 * make the link go to the wrong URL if the user clicks it before
 * Angular has a chance to replace the `{{hash}}` markup with its
 * value. Until Angular replaces the markup the link will be broken
 * and will most likely return a 404 error. The `ngHref` directive
 * solves this problem.
 *
 * The wrong way to write it:
 * ```html
 * <a href="http://www.gravatar.com/avatar/{{hash}}"/>
 * ```
 *
 * The correct way to write it:
 * ```html
 * <a ng-href="http://www.gravatar.com/avatar/{{hash}}"/>
 * ```
 *
 * @element A
 * @param {template} ngHref any string which can contain `{{}}` markup.
 *
 * @example
 * This example shows various combinations of `href`, `ng-href` and `ng-click` attributes
 * in links and their different behaviors:
    <example>
      <file name="index.html">
        <input ng-model="value" /><br />
        <a id="link-1" href ng-click="value = 1">link 1</a> (link, don't reload)<br />
        <a id="link-2" href="" ng-click="value = 2">link 2</a> (link, don't reload)<br />
        <a id="link-3" ng-href="/{{'123'}}">link 3</a> (link, reload!)<br />
        <a id="link-4" href="" name="xx" ng-click="value = 4">anchor</a> (link, don't reload)<br />
        <a id="link-5" name="xxx" ng-click="value = 5">anchor</a> (no link)<br />
        <a id="link-6" ng-href="{{value}}">link</a> (link, change location)
      </file>
      <file name="protractor.js" type="protractor">
        it('should execute ng-click but not reload when href without value', function() {
          element(by.id('link-1')).click();
          expect(element(by.model('value')).getAttribute('value')).toEqual('1');
          expect(element(by.id('link-1')).getAttribute('href')).toBe('');
        });

        it('should execute ng-click but not reload when href empty string', function() {
          element(by.id('link-2')).click();
          expect(element(by.model('value')).getAttribute('value')).toEqual('2');
          expect(element(by.id('link-2')).getAttribute('href')).toBe('');
        });

        it('should execute ng-click and change url when ng-href specified', function() {
          expect(element(by.id('link-3')).getAttribute('href')).toMatch(/\/123$/);

          element(by.id('link-3')).click();

          // At this point, we navigate away from an Angular page, so we need
          // to use browser.driver to get the base webdriver.

          browser.wait(function() {
            return browser.driver.getCurrentUrl().then(function(url) {
              return url.match(/\/123$/);
            });
          }, 5000, 'page should navigate to /123');
        });

        xit('should execute ng-click but not reload when href empty string and name specified', function() {
          element(by.id('link-4')).click();
          expect(element(by.model('value')).getAttribute('value')).toEqual('4');
          expect(element(by.id('link-4')).getAttribute('href')).toBe('');
        });

        it('should execute ng-click but not reload when no href but name specified', function() {
          element(by.id('link-5')).click();
          expect(element(by.model('value')).getAttribute('value')).toEqual('5');
          expect(element(by.id('link-5')).getAttribute('href')).toBe(null);
        });

        it('should only change url when only ng-href', function() {
          element(by.model('value')).clear();
          element(by.model('value')).sendKeys('6');
          expect(element(by.id('link-6')).getAttribute('href')).toMatch(/\/6$/);

          element(by.id('link-6')).click();

          // At this point, we navigate away from an Angular page, so we need
          // to use browser.driver to get the base webdriver.
          browser.wait(function() {
            return browser.driver.getCurrentUrl().then(function(url) {
              return url.match(/\/6$/);
            });
          }, 5000, 'page should navigate to /6');
        });
      </file>
    </example>
 */
  /**
 * @ngdoc directive
 * @name ngSrc
 * @restrict A
 * @priority 99
 *
 * @description
 * Using Angular markup like `{{hash}}` in a `src` attribute doesn't
 * work right: The browser will fetch from the URL with the literal
 * text `{{hash}}` until Angular replaces the expression inside
 * `{{hash}}`. The `ngSrc` directive solves this problem.
 *
 * The buggy way to write it:
 * ```html
 * <img src="http://www.gravatar.com/avatar/{{hash}}"/>
 * ```
 *
 * The correct way to write it:
 * ```html
 * <img ng-src="http://www.gravatar.com/avatar/{{hash}}"/>
 * ```
 *
 * @element IMG
 * @param {template} ngSrc any string which can contain `{{}}` markup.
 */
  /**
 * @ngdoc directive
 * @name ngSrcset
 * @restrict A
 * @priority 99
 *
 * @description
 * Using Angular markup like `{{hash}}` in a `srcset` attribute doesn't
 * work right: The browser will fetch from the URL with the literal
 * text `{{hash}}` until Angular replaces the expression inside
 * `{{hash}}`. The `ngSrcset` directive solves this problem.
 *
 * The buggy way to write it:
 * ```html
 * <img srcset="http://www.gravatar.com/avatar/{{hash}} 2x"/>
 * ```
 *
 * The correct way to write it:
 * ```html
 * <img ng-srcset="http://www.gravatar.com/avatar/{{hash}} 2x"/>
 * ```
 *
 * @element IMG
 * @param {template} ngSrcset any string which can contain `{{}}` markup.
 */
  /**
 * @ngdoc directive
 * @name ngDisabled
 * @restrict A
 * @priority 100
 *
 * @description
 *
 * We shouldn't do this, because it will make the button enabled on Chrome/Firefox but not on IE8 and older IEs:
 * ```html
 * <div ng-init="scope = { isDisabled: false }">
 *  <button disabled="{{scope.isDisabled}}">Disabled</button>
 * </div>
 * ```
 *
 * The HTML specification does not require browsers to preserve the values of boolean attributes
 * such as disabled. (Their presence means true and their absence means false.)
 * If we put an Angular interpolation expression into such an attribute then the
 * binding information would be lost when the browser removes the attribute.
 * The `ngDisabled` directive solves this problem for the `disabled` attribute.
 * This complementary directive is not removed by the browser and so provides
 * a permanent reliable place to store the binding information.
 *
 * @example
    <example>
      <file name="index.html">
        Click me to toggle: <input type="checkbox" ng-model="checked"><br/>
        <button ng-model="button" ng-disabled="checked">Button</button>
      </file>
      <file name="protractor.js" type="protractor">
        it('should toggle button', function() {
          expect(element(by.css('button')).getAttribute('disabled')).toBeFalsy();
          element(by.model('checked')).click();
          expect(element(by.css('button')).getAttribute('disabled')).toBeTruthy();
        });
      </file>
    </example>
 *
 * @element INPUT
 * @param {expression} ngDisabled If the {@link guide/expression expression} is truthy,
 *     then special attribute "disabled" will be set on the element
 */
  /**
 * @ngdoc directive
 * @name ngChecked
 * @restrict A
 * @priority 100
 *
 * @description
 * The HTML specification does not require browsers to preserve the values of boolean attributes
 * such as checked. (Their presence means true and their absence means false.)
 * If we put an Angular interpolation expression into such an attribute then the
 * binding information would be lost when the browser removes the attribute.
 * The `ngChecked` directive solves this problem for the `checked` attribute.
 * This complementary directive is not removed by the browser and so provides
 * a permanent reliable place to store the binding information.
 * @example
    <example>
      <file name="index.html">
        Check me to check both: <input type="checkbox" ng-model="master"><br/>
        <input id="checkSlave" type="checkbox" ng-checked="master">
      </file>
      <file name="protractor.js" type="protractor">
        it('should check both checkBoxes', function() {
          expect(element(by.id('checkSlave')).getAttribute('checked')).toBeFalsy();
          element(by.model('master')).click();
          expect(element(by.id('checkSlave')).getAttribute('checked')).toBeTruthy();
        });
      </file>
    </example>
 *
 * @element INPUT
 * @param {expression} ngChecked If the {@link guide/expression expression} is truthy,
 *     then special attribute "checked" will be set on the element
 */
  /**
 * @ngdoc directive
 * @name ngReadonly
 * @restrict A
 * @priority 100
 *
 * @description
 * The HTML specification does not require browsers to preserve the values of boolean attributes
 * such as readonly. (Their presence means true and their absence means false.)
 * If we put an Angular interpolation expression into such an attribute then the
 * binding information would be lost when the browser removes the attribute.
 * The `ngReadonly` directive solves this problem for the `readonly` attribute.
 * This complementary directive is not removed by the browser and so provides
 * a permanent reliable place to store the binding information.
 * @example
    <example>
      <file name="index.html">
        Check me to make text readonly: <input type="checkbox" ng-model="checked"><br/>
        <input type="text" ng-readonly="checked" value="I'm Angular"/>
      </file>
      <file name="protractor.js" type="protractor">
        it('should toggle readonly attr', function() {
          expect(element(by.css('[type="text"]')).getAttribute('readonly')).toBeFalsy();
          element(by.model('checked')).click();
          expect(element(by.css('[type="text"]')).getAttribute('readonly')).toBeTruthy();
        });
      </file>
    </example>
 *
 * @element INPUT
 * @param {expression} ngReadonly If the {@link guide/expression expression} is truthy,
 *     then special attribute "readonly" will be set on the element
 */
  /**
 * @ngdoc directive
 * @name ngSelected
 * @restrict A
 * @priority 100
 *
 * @description
 * The HTML specification does not require browsers to preserve the values of boolean attributes
 * such as selected. (Their presence means true and their absence means false.)
 * If we put an Angular interpolation expression into such an attribute then the
 * binding information would be lost when the browser removes the attribute.
 * The `ngSelected` directive solves this problem for the `selected` attribute.
 * This complementary directive is not removed by the browser and so provides
 * a permanent reliable place to store the binding information.
 *
 * @example
    <example>
      <file name="index.html">
        Check me to select: <input type="checkbox" ng-model="selected"><br/>
        <select>
          <option>Hello!</option>
          <option id="greet" ng-selected="selected">Greetings!</option>
        </select>
      </file>
      <file name="protractor.js" type="protractor">
        it('should select Greetings!', function() {
          expect(element(by.id('greet')).getAttribute('selected')).toBeFalsy();
          element(by.model('selected')).click();
          expect(element(by.id('greet')).getAttribute('selected')).toBeTruthy();
        });
      </file>
    </example>
 *
 * @element OPTION
 * @param {expression} ngSelected If the {@link guide/expression expression} is truthy,
 *     then special attribute "selected" will be set on the element
 */
  /**
 * @ngdoc directive
 * @name ngOpen
 * @restrict A
 * @priority 100
 *
 * @description
 * The HTML specification does not require browsers to preserve the values of boolean attributes
 * such as open. (Their presence means true and their absence means false.)
 * If we put an Angular interpolation expression into such an attribute then the
 * binding information would be lost when the browser removes the attribute.
 * The `ngOpen` directive solves this problem for the `open` attribute.
 * This complementary directive is not removed by the browser and so provides
 * a permanent reliable place to store the binding information.
 * @example
     <example>
       <file name="index.html">
         Check me check multiple: <input type="checkbox" ng-model="open"><br/>
         <details id="details" ng-open="open">
            <summary>Show/Hide me</summary>
         </details>
       </file>
       <file name="protractor.js" type="protractor">
         it('should toggle open', function() {
           expect(element(by.id('details')).getAttribute('open')).toBeFalsy();
           element(by.model('open')).click();
           expect(element(by.id('details')).getAttribute('open')).toBeTruthy();
         });
       </file>
     </example>
 *
 * @element DETAILS
 * @param {expression} ngOpen If the {@link guide/expression expression} is truthy,
 *     then special attribute "open" will be set on the element
 */
  var ngAttributeAliasDirectives = {};
  // boolean attrs are evaluated
  forEach(BOOLEAN_ATTR, function (propName, attrName) {
    // binding to multiple is not supported
    if (propName == 'multiple')
      return;
    var normalized = directiveNormalize('ng-' + attrName);
    ngAttributeAliasDirectives[normalized] = function () {
      return {
        priority: 100,
        link: function (scope, element, attr) {
          scope.$watch(attr[normalized], function ngBooleanAttrWatchAction(value) {
            attr.$set(attrName, !!value);
          });
        }
      };
    };
  });
  // ng-src, ng-srcset, ng-href are interpolated
  forEach([
    'src',
    'srcset',
    'href'
  ], function (attrName) {
    var normalized = directiveNormalize('ng-' + attrName);
    ngAttributeAliasDirectives[normalized] = function () {
      return {
        priority: 99,
        link: function (scope, element, attr) {
          var propName = attrName, name = attrName;
          if (attrName === 'href' && toString.call(element.prop('href')) === '[object SVGAnimatedString]') {
            name = 'xlinkHref';
            attr.$attr[name] = 'xlink:href';
            propName = null;
          }
          attr.$observe(normalized, function (value) {
            if (!value) {
              if (attrName === 'href') {
                attr.$set(name, null);
              }
              return;
            }
            attr.$set(name, value);
            // on IE, if "ng:src" directive declaration is used and "src" attribute doesn't exist
            // then calling element.setAttribute('src', 'foo') doesn't do anything, so we need
            // to set the property as well to achieve the desired effect.
            // we use attr[attrName] value since $set can sanitize the url.
            if (msie && propName)
              element.prop(propName, attr[name]);
          });
        }
      };
    };
  });
  /* global -nullFormCtrl */
  var nullFormCtrl = {
      $addControl: noop,
      $removeControl: noop,
      $setValidity: noop,
      $setDirty: noop,
      $setPristine: noop
    };
  /**
 * @ngdoc type
 * @name form.FormController
 *
 * @property {boolean} $pristine True if user has not interacted with the form yet.
 * @property {boolean} $dirty True if user has already interacted with the form.
 * @property {boolean} $valid True if all of the containing forms and controls are valid.
 * @property {boolean} $invalid True if at least one containing control or form is invalid.
 *
 * @property {Object} $error Is an object hash, containing references to all invalid controls or
 *  forms, where:
 *
 *  - keys are validation tokens (error names),
 *  - values are arrays of controls or forms that are invalid for given error name.
 *
 *
 *  Built-in validation tokens:
 *
 *  - `email`
 *  - `max`
 *  - `maxlength`
 *  - `min`
 *  - `minlength`
 *  - `number`
 *  - `pattern`
 *  - `required`
 *  - `url`
 *
 * @description
 * `FormController` keeps track of all its controls and nested forms as well as the state of them,
 * such as being valid/invalid or dirty/pristine.
 *
 * Each {@link ng.directive:form form} directive creates an instance
 * of `FormController`.
 *
 */
  //asks for $scope to fool the BC controller module
  FormController.$inject = [
    '$element',
    '$attrs',
    '$scope',
    '$animate'
  ];
  function FormController(element, attrs, $scope, $animate) {
    var form = this, parentForm = element.parent().controller('form') || nullFormCtrl, invalidCount = 0,
      // used to easily determine if we are valid
      errors = form.$error = {}, controls = [];
    // init state
    form.$name = attrs.name || attrs.ngForm;
    form.$dirty = false;
    form.$pristine = true;
    form.$valid = true;
    form.$invalid = false;
    parentForm.$addControl(form);
    // Setup initial state of the control
    element.addClass(PRISTINE_CLASS);
    toggleValidCss(true);
    // convenience method for easy toggling of classes
    function toggleValidCss(isValid, validationErrorKey) {
      validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';
      $animate.setClass(element, (isValid ? VALID_CLASS : INVALID_CLASS) + validationErrorKey, (isValid ? INVALID_CLASS : VALID_CLASS) + validationErrorKey);
    }
    /**
   * @ngdoc method
   * @name form.FormController#$addControl
   *
   * @description
   * Register a control with the form.
   *
   * Input elements using ngModelController do this automatically when they are linked.
   */
    form.$addControl = function (control) {
      // Breaking change - before, inputs whose name was "hasOwnProperty" were quietly ignored
      // and not added to the scope.  Now we throw an error.
      assertNotHasOwnProperty(control.$name, 'input');
      controls.push(control);
      if (control.$name) {
        form[control.$name] = control;
      }
    };
    /**
   * @ngdoc method
   * @name form.FormController#$removeControl
   *
   * @description
   * Deregister a control from the form.
   *
   * Input elements using ngModelController do this automatically when they are destroyed.
   */
    form.$removeControl = function (control) {
      if (control.$name && form[control.$name] === control) {
        delete form[control.$name];
      }
      forEach(errors, function (queue, validationToken) {
        form.$setValidity(validationToken, true, control);
      });
      arrayRemove(controls, control);
    };
    /**
   * @ngdoc method
   * @name form.FormController#$setValidity
   *
   * @description
   * Sets the validity of a form control.
   *
   * This method will also propagate to parent forms.
   */
    form.$setValidity = function (validationToken, isValid, control) {
      var queue = errors[validationToken];
      if (isValid) {
        if (queue) {
          arrayRemove(queue, control);
          if (!queue.length) {
            invalidCount--;
            if (!invalidCount) {
              toggleValidCss(isValid);
              form.$valid = true;
              form.$invalid = false;
            }
            errors[validationToken] = false;
            toggleValidCss(true, validationToken);
            parentForm.$setValidity(validationToken, true, form);
          }
        }
      } else {
        if (!invalidCount) {
          toggleValidCss(isValid);
        }
        if (queue) {
          if (includes(queue, control))
            return;
        } else {
          errors[validationToken] = queue = [];
          invalidCount++;
          toggleValidCss(false, validationToken);
          parentForm.$setValidity(validationToken, false, form);
        }
        queue.push(control);
        form.$valid = false;
        form.$invalid = true;
      }
    };
    /**
   * @ngdoc method
   * @name form.FormController#$setDirty
   *
   * @description
   * Sets the form to a dirty state.
   *
   * This method can be called to add the 'ng-dirty' class and set the form to a dirty
   * state (ng-dirty class). This method will also propagate to parent forms.
   */
    form.$setDirty = function () {
      $animate.removeClass(element, PRISTINE_CLASS);
      $animate.addClass(element, DIRTY_CLASS);
      form.$dirty = true;
      form.$pristine = false;
      parentForm.$setDirty();
    };
    /**
   * @ngdoc method
   * @name form.FormController#$setPristine
   *
   * @description
   * Sets the form to its pristine state.
   *
   * This method can be called to remove the 'ng-dirty' class and set the form to its pristine
   * state (ng-pristine class). This method will also propagate to all the controls contained
   * in this form.
   *
   * Setting a form back to a pristine state is often useful when we want to 'reuse' a form after
   * saving or resetting it.
   */
    form.$setPristine = function () {
      $animate.removeClass(element, DIRTY_CLASS);
      $animate.addClass(element, PRISTINE_CLASS);
      form.$dirty = false;
      form.$pristine = true;
      forEach(controls, function (control) {
        control.$setPristine();
      });
    };
  }
  /**
 * @ngdoc directive
 * @name ngForm
 * @restrict EAC
 *
 * @description
 * Nestable alias of {@link ng.directive:form `form`} directive. HTML
 * does not allow nesting of form elements. It is useful to nest forms, for example if the validity of a
 * sub-group of controls needs to be determined.
 *
 * Note: the purpose of `ngForm` is to group controls,
 * but not to be a replacement for the `<form>` tag with all of its capabilities
 * (e.g. posting to the server, ...).
 *
 * @param {string=} ngForm|name Name of the form. If specified, the form controller will be published into
 *                       related scope, under this name.
 *
 */
  /**
 * @ngdoc directive
 * @name form
 * @restrict E
 *
 * @description
 * Directive that instantiates
 * {@link form.FormController FormController}.
 *
 * If the `name` attribute is specified, the form controller is published onto the current scope under
 * this name.
 *
 * # Alias: {@link ng.directive:ngForm `ngForm`}
 *
 * In Angular forms can be nested. This means that the outer form is valid when all of the child
 * forms are valid as well. However, browsers do not allow nesting of `<form>` elements, so
 * Angular provides the {@link ng.directive:ngForm `ngForm`} directive which behaves identically to
 * `<form>` but can be nested.  This allows you to have nested forms, which is very useful when
 * using Angular validation directives in forms that are dynamically generated using the
 * {@link ng.directive:ngRepeat `ngRepeat`} directive. Since you cannot dynamically generate the `name`
 * attribute of input elements using interpolation, you have to wrap each set of repeated inputs in an
 * `ngForm` directive and nest these in an outer `form` element.
 *
 *
 * # CSS classes
 *  - `ng-valid` is set if the form is valid.
 *  - `ng-invalid` is set if the form is invalid.
 *  - `ng-pristine` is set if the form is pristine.
 *  - `ng-dirty` is set if the form is dirty.
 *
 * Keep in mind that ngAnimate can detect each of these classes when added and removed.
 *
 *
 * # Submitting a form and preventing the default action
 *
 * Since the role of forms in client-side Angular applications is different than in classical
 * roundtrip apps, it is desirable for the browser not to translate the form submission into a full
 * page reload that sends the data to the server. Instead some javascript logic should be triggered
 * to handle the form submission in an application-specific way.
 *
 * For this reason, Angular prevents the default action (form submission to the server) unless the
 * `<form>` element has an `action` attribute specified.
 *
 * You can use one of the following two ways to specify what javascript method should be called when
 * a form is submitted:
 *
 * - {@link ng.directive:ngSubmit ngSubmit} directive on the form element
 * - {@link ng.directive:ngClick ngClick} directive on the first
  *  button or input field of type submit (input[type=submit])
 *
 * To prevent double execution of the handler, use only one of the {@link ng.directive:ngSubmit ngSubmit}
 * or {@link ng.directive:ngClick ngClick} directives.
 * This is because of the following form submission rules in the HTML specification:
 *
 * - If a form has only one input field then hitting enter in this field triggers form submit
 * (`ngSubmit`)
 * - if a form has 2+ input fields and no buttons or input[type=submit] then hitting enter
 * doesn't trigger submit
 * - if a form has one or more input fields and one or more buttons or input[type=submit] then
 * hitting enter in any of the input fields will trigger the click handler on the *first* button or
 * input[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)
 *
 *
 * ## Animation Hooks
 *
 * Animations in ngForm are triggered when any of the associated CSS classes are added and removed.
 * These classes are: `.ng-pristine`, `.ng-dirty`, `.ng-invalid` and `.ng-valid` as well as any
 * other validations that are performed within the form. Animations in ngForm are similar to how
 * they work in ngClass and animations can be hooked into using CSS transitions, keyframes as well
 * as JS animations.
 *
 * The following example shows a simple way to utilize CSS transitions to style a form element
 * that has been rendered as invalid after it has been validated:
 *
 * <pre>
 * //be sure to include ngAnimate as a module to hook into more
 * //advanced animations
 * .my-form {
 *   transition:0.5s linear all;
 *   background: white;
 * }
 * .my-form.ng-invalid {
 *   background: red;
 *   color:white;
 * }
 * </pre>
 *
 * @example
    <example deps="angular-animate.js" animations="true" fixBase="true" module="formExample">
      <file name="index.html">
       <script>
         angular.module('formExample', [])
           .controller('FormController', ['$scope', function($scope) {
             $scope.userType = 'guest';
           }]);
       </script>
       <style>
        .my-form {
          -webkit-transition:all linear 0.5s;
          transition:all linear 0.5s;
          background: transparent;
        }
        .my-form.ng-invalid {
          background: red;
        }
       </style>
       <form name="myForm" ng-controller="FormController" class="my-form">
         userType: <input name="input" ng-model="userType" required>
         <span class="error" ng-show="myForm.input.$error.required">Required!</span><br>
         <tt>userType = {{userType}}</tt><br>
         <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br>
         <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br>
         <tt>myForm.$valid = {{myForm.$valid}}</tt><br>
         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>
        </form>
      </file>
      <file name="protractor.js" type="protractor">
        it('should initialize to model', function() {
          var userType = element(by.binding('userType'));
          var valid = element(by.binding('myForm.input.$valid'));

          expect(userType.getText()).toContain('guest');
          expect(valid.getText()).toContain('true');
        });

        it('should be invalid if empty', function() {
          var userType = element(by.binding('userType'));
          var valid = element(by.binding('myForm.input.$valid'));
          var userInput = element(by.model('userType'));

          userInput.clear();
          userInput.sendKeys('');

          expect(userType.getText()).toEqual('userType =');
          expect(valid.getText()).toContain('false');
        });
      </file>
    </example>
 *
 * @param {string=} name Name of the form. If specified, the form controller will be published into
 *                       related scope, under this name.
 */
  var formDirectiveFactory = function (isNgForm) {
    return [
      '$timeout',
      function ($timeout) {
        var formDirective = {
            name: 'form',
            restrict: isNgForm ? 'EAC' : 'E',
            controller: FormController,
            compile: function () {
              return {
                pre: function (scope, formElement, attr, controller) {
                  if (!attr.action) {
                    // we can't use jq events because if a form is destroyed during submission the default
                    // action is not prevented. see #1238
                    //
                    // IE 9 is not affected because it doesn't fire a submit event and try to do a full
                    // page reload if the form was destroyed by submission of the form via a click handler
                    // on a button in the form. Looks like an IE9 specific bug.
                    var preventDefaultListener = function (event) {
                      event.preventDefault ? event.preventDefault() : event.returnValue = false;  // IE
                    };
                    addEventListenerFn(formElement[0], 'submit', preventDefaultListener);
                    // unregister the preventDefault listener so that we don't not leak memory but in a
                    // way that will achieve the prevention of the default action.
                    formElement.on('$destroy', function () {
                      $timeout(function () {
                        removeEventListenerFn(formElement[0], 'submit', preventDefaultListener);
                      }, 0, false);
                    });
                  }
                  var parentFormCtrl = formElement.parent().controller('form'), alias = attr.name || attr.ngForm;
                  if (alias) {
                    setter(scope, alias, controller, alias);
                  }
                  if (parentFormCtrl) {
                    formElement.on('$destroy', function () {
                      parentFormCtrl.$removeControl(controller);
                      if (alias) {
                        setter(scope, alias, undefined, alias);
                      }
                      extend(controller, nullFormCtrl);  //stop propagating child destruction handlers upwards
                    });
                  }
                }
              };
            }
          };
        return formDirective;
      }
    ];
  };
  var formDirective = formDirectiveFactory();
  var ngFormDirective = formDirectiveFactory(true);
  /* global VALID_CLASS: true,
    INVALID_CLASS: true,
    PRISTINE_CLASS: true,
    DIRTY_CLASS: true
*/
  var URL_REGEXP = /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/;
  var EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;
  var NUMBER_REGEXP = /^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/;
  var inputType = {
      'text': textInputType,
      'number': numberInputType,
      'url': urlInputType,
      'email': emailInputType,
      'radio': radioInputType,
      'checkbox': checkboxInputType,
      'hidden': noop,
      'button': noop,
      'submit': noop,
      'reset': noop,
      'file': noop
    };
  // A helper function to call $setValidity and return the value / undefined,
  // a pattern that is repeated a lot in the input validation logic.
  function validate(ctrl, validatorName, validity, value) {
    ctrl.$setValidity(validatorName, validity);
    return validity ? value : undefined;
  }
  function testFlags(validity, flags) {
    var i, flag;
    if (flags) {
      for (i = 0; i < flags.length; ++i) {
        flag = flags[i];
        if (validity[flag]) {
          return true;
        }
      }
    }
    return false;
  }
  // Pass validity so that behaviour can be mocked easier.
  function addNativeHtml5Validators(ctrl, validatorName, badFlags, ignoreFlags, validity) {
    if (isObject(validity)) {
      ctrl.$$hasNativeValidators = true;
      var validator = function (value) {
        // Don't overwrite previous validation, don't consider valueMissing to apply (ng-required can
        // perform the required validation)
        if (!ctrl.$error[validatorName] && !testFlags(validity, ignoreFlags) && testFlags(validity, badFlags)) {
          ctrl.$setValidity(validatorName, false);
          return;
        }
        return value;
      };
      ctrl.$parsers.push(validator);
    }
  }
  function textInputType(scope, element, attr, ctrl, $sniffer, $browser) {
    var validity = element.prop(VALIDITY_STATE_PROPERTY);
    var placeholder = element[0].placeholder, noevent = {};
    var type = lowercase(element[0].type);
    ctrl.$$validityState = validity;
    // In composition mode, users are still inputing intermediate text buffer,
    // hold the listener until composition is done.
    // More about composition events: https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent
    if (!$sniffer.android) {
      var composing = false;
      element.on('compositionstart', function (data) {
        composing = true;
      });
      element.on('compositionend', function () {
        composing = false;
        listener();
      });
    }
    var listener = function (ev) {
      if (composing)
        return;
      var value = element.val();
      // IE (11 and under) seem to emit an 'input' event if the placeholder value changes.
      // We don't want to dirty the value when this happens, so we abort here. Unfortunately,
      // IE also sends input events for other non-input-related things, (such as focusing on a
      // form control), so this change is not entirely enough to solve this.
      if (msie && (ev || noevent).type === 'input' && element[0].placeholder !== placeholder) {
        placeholder = element[0].placeholder;
        return;
      }
      // By default we will trim the value
      // If the attribute ng-trim exists we will avoid trimming
      // If input type is 'password', the value is never trimmed
      if (type !== 'password' && toBoolean(attr.ngTrim || 'T')) {
        value = trim(value);
      }
      // If a control is suffering from bad input, browsers discard its value, so it may be
      // necessary to revalidate even if the control's value is the same empty value twice in
      // a row.
      var revalidate = validity && ctrl.$$hasNativeValidators;
      if (ctrl.$viewValue !== value || value === '' && revalidate) {
        if (scope.$root.$$phase) {
          ctrl.$setViewValue(value);
        } else {
          scope.$apply(function () {
            ctrl.$setViewValue(value);
          });
        }
      }
    };
    // if the browser does support "input" event, we are fine - except on IE9 which doesn't fire the
    // input event on backspace, delete or cut
    if ($sniffer.hasEvent('input')) {
      element.on('input', listener);
    } else {
      var timeout;
      var deferListener = function () {
        if (!timeout) {
          timeout = $browser.defer(function () {
            listener();
            timeout = null;
          });
        }
      };
      element.on('keydown', function (event) {
        var key = event.keyCode;
        // ignore
        //    command            modifiers                   arrows
        if (key === 91 || 15 < key && key < 19 || 37 <= key && key <= 40)
          return;
        deferListener();
      });
      // if user modifies input value using context menu in IE, we need "paste" and "cut" events to catch it
      if ($sniffer.hasEvent('paste')) {
        element.on('paste cut', deferListener);
      }
    }
    // if user paste into input using mouse on older browser
    // or form autocomplete on newer browser, we need "change" event to catch it
    element.on('change', listener);
    ctrl.$render = function () {
      element.val(ctrl.$isEmpty(ctrl.$viewValue) ? '' : ctrl.$viewValue);
    };
    // pattern validator
    var pattern = attr.ngPattern, patternValidator, match;
    if (pattern) {
      var validateRegex = function (regexp, value) {
        return validate(ctrl, 'pattern', ctrl.$isEmpty(value) || regexp.test(value), value);
      };
      match = pattern.match(/^\/(.*)\/([gim]*)$/);
      if (match) {
        pattern = new RegExp(match[1], match[2]);
        patternValidator = function (value) {
          return validateRegex(pattern, value);
        };
      } else {
        patternValidator = function (value) {
          var patternObj = scope.$eval(pattern);
          if (!patternObj || !patternObj.test) {
            throw minErr('ngPattern')('noregexp', 'Expected {0} to be a RegExp but was {1}. Element: {2}', pattern, patternObj, startingTag(element));
          }
          return validateRegex(patternObj, value);
        };
      }
      ctrl.$formatters.push(patternValidator);
      ctrl.$parsers.push(patternValidator);
    }
    // min length validator
    if (attr.ngMinlength) {
      var minlength = int(attr.ngMinlength);
      var minLengthValidator = function (value) {
        return validate(ctrl, 'minlength', ctrl.$isEmpty(value) || value.length >= minlength, value);
      };
      ctrl.$parsers.push(minLengthValidator);
      ctrl.$formatters.push(minLengthValidator);
    }
    // max length validator
    if (attr.ngMaxlength) {
      var maxlength = int(attr.ngMaxlength);
      var maxLengthValidator = function (value) {
        return validate(ctrl, 'maxlength', ctrl.$isEmpty(value) || value.length <= maxlength, value);
      };
      ctrl.$parsers.push(maxLengthValidator);
      ctrl.$formatters.push(maxLengthValidator);
    }
  }
  var numberBadFlags = ['badInput'];
  function numberInputType(scope, element, attr, ctrl, $sniffer, $browser) {
    textInputType(scope, element, attr, ctrl, $sniffer, $browser);
    ctrl.$parsers.push(function (value) {
      var empty = ctrl.$isEmpty(value);
      if (empty || NUMBER_REGEXP.test(value)) {
        ctrl.$setValidity('number', true);
        return value === '' ? null : empty ? value : parseFloat(value);
      } else {
        ctrl.$setValidity('number', false);
        return undefined;
      }
    });
    addNativeHtml5Validators(ctrl, 'number', numberBadFlags, null, ctrl.$$validityState);
    ctrl.$formatters.push(function (value) {
      return ctrl.$isEmpty(value) ? '' : '' + value;
    });
    if (attr.min) {
      var minValidator = function (value) {
        var min = parseFloat(attr.min);
        return validate(ctrl, 'min', ctrl.$isEmpty(value) || value >= min, value);
      };
      ctrl.$parsers.push(minValidator);
      ctrl.$formatters.push(minValidator);
    }
    if (attr.max) {
      var maxValidator = function (value) {
        var max = parseFloat(attr.max);
        return validate(ctrl, 'max', ctrl.$isEmpty(value) || value <= max, value);
      };
      ctrl.$parsers.push(maxValidator);
      ctrl.$formatters.push(maxValidator);
    }
    ctrl.$formatters.push(function (value) {
      return validate(ctrl, 'number', ctrl.$isEmpty(value) || isNumber(value), value);
    });
  }
  function urlInputType(scope, element, attr, ctrl, $sniffer, $browser) {
    textInputType(scope, element, attr, ctrl, $sniffer, $browser);
    var urlValidator = function (value) {
      return validate(ctrl, 'url', ctrl.$isEmpty(value) || URL_REGEXP.test(value), value);
    };
    ctrl.$formatters.push(urlValidator);
    ctrl.$parsers.push(urlValidator);
  }
  function emailInputType(scope, element, attr, ctrl, $sniffer, $browser) {
    textInputType(scope, element, attr, ctrl, $sniffer, $browser);
    var emailValidator = function (value) {
      return validate(ctrl, 'email', ctrl.$isEmpty(value) || EMAIL_REGEXP.test(value), value);
    };
    ctrl.$formatters.push(emailValidator);
    ctrl.$parsers.push(emailValidator);
  }
  function radioInputType(scope, element, attr, ctrl) {
    // make the name unique, if not defined
    if (isUndefined(attr.name)) {
      element.attr('name', nextUid());
    }
    element.on('click', function () {
      if (element[0].checked) {
        scope.$apply(function () {
          ctrl.$setViewValue(attr.value);
        });
      }
    });
    ctrl.$render = function () {
      var value = attr.value;
      element[0].checked = value == ctrl.$viewValue;
    };
    attr.$observe('value', ctrl.$render);
  }
  function checkboxInputType(scope, element, attr, ctrl) {
    var trueValue = attr.ngTrueValue, falseValue = attr.ngFalseValue;
    if (!isString(trueValue))
      trueValue = true;
    if (!isString(falseValue))
      falseValue = false;
    element.on('click', function () {
      scope.$apply(function () {
        ctrl.$setViewValue(element[0].checked);
      });
    });
    ctrl.$render = function () {
      element[0].checked = ctrl.$viewValue;
    };
    // Override the standard `$isEmpty` because a value of `false` means empty in a checkbox.
    ctrl.$isEmpty = function (value) {
      return value !== trueValue;
    };
    ctrl.$formatters.push(function (value) {
      return value === trueValue;
    });
    ctrl.$parsers.push(function (value) {
      return value ? trueValue : falseValue;
    });
  }
  /**
 * @ngdoc directive
 * @name textarea
 * @restrict E
 *
 * @description
 * HTML textarea element control with angular data-binding. The data-binding and validation
 * properties of this element are exactly the same as those of the
 * {@link ng.directive:input input element}.
 *
 * @param {string} ngModel Assignable angular expression to data-bind to.
 * @param {string=} name Property name of the form under which the control is published.
 * @param {string=} required Sets `required` validation error key if the value is not entered.
 * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
 *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
 *    `required` when you want to data-bind to the `required` attribute.
 * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
 *    minlength.
 * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
 *    maxlength.
 * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the
 *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for
 *    patterns defined as scope expressions.
 * @param {string=} ngChange Angular expression to be executed when input changes due to user
 *    interaction with the input element.
 * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.
 */
  /**
 * @ngdoc directive
 * @name input
 * @restrict E
 *
 * @description
 * HTML input element control with angular data-binding. Input control follows HTML5 input types
 * and polyfills the HTML5 validation behavior for older browsers.
 *
 * *NOTE* Not every feature offered is available for all input types.
 *
 * @param {string} ngModel Assignable angular expression to data-bind to.
 * @param {string=} name Property name of the form under which the control is published.
 * @param {string=} required Sets `required` validation error key if the value is not entered.
 * @param {boolean=} ngRequired Sets `required` attribute if set to true
 * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
 *    minlength.
 * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
 *    maxlength.
 * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the
 *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for
 *    patterns defined as scope expressions.
 * @param {string=} ngChange Angular expression to be executed when input changes due to user
 *    interaction with the input element.
 * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.
 *    This parameter is ignored for input[type=password] controls, which will never trim the
 *    input.
 *
 * @example
    <example name="input-directive" module="inputExample">
      <file name="index.html">
       <script>
          angular.module('inputExample', [])
            .controller('ExampleController', ['$scope', function($scope) {
              $scope.user = {name: 'guest', last: 'visitor'};
            }]);
       </script>
       <div ng-controller="ExampleController">
         <form name="myForm">
           User name: <input type="text" name="userName" ng-model="user.name" required>
           <span class="error" ng-show="myForm.userName.$error.required">
             Required!</span><br>
           Last name: <input type="text" name="lastName" ng-model="user.last"
             ng-minlength="3" ng-maxlength="10">
           <span class="error" ng-show="myForm.lastName.$error.minlength">
             Too short!</span>
           <span class="error" ng-show="myForm.lastName.$error.maxlength">
             Too long!</span><br>
         </form>
         <hr>
         <tt>user = {{user}}</tt><br/>
         <tt>myForm.userName.$valid = {{myForm.userName.$valid}}</tt><br>
         <tt>myForm.userName.$error = {{myForm.userName.$error}}</tt><br>
         <tt>myForm.lastName.$valid = {{myForm.lastName.$valid}}</tt><br>
         <tt>myForm.lastName.$error = {{myForm.lastName.$error}}</tt><br>
         <tt>myForm.$valid = {{myForm.$valid}}</tt><br>
         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>
         <tt>myForm.$error.minlength = {{!!myForm.$error.minlength}}</tt><br>
         <tt>myForm.$error.maxlength = {{!!myForm.$error.maxlength}}</tt><br>
       </div>
      </file>
      <file name="protractor.js" type="protractor">
        var user = element(by.binding('{{user}}'));
        var userNameValid = element(by.binding('myForm.userName.$valid'));
        var lastNameValid = element(by.binding('myForm.lastName.$valid'));
        var lastNameError = element(by.binding('myForm.lastName.$error'));
        var formValid = element(by.binding('myForm.$valid'));
        var userNameInput = element(by.model('user.name'));
        var userLastInput = element(by.model('user.last'));

        it('should initialize to model', function() {
          expect(user.getText()).toContain('{"name":"guest","last":"visitor"}');
          expect(userNameValid.getText()).toContain('true');
          expect(formValid.getText()).toContain('true');
        });

        it('should be invalid if empty when required', function() {
          userNameInput.clear();
          userNameInput.sendKeys('');

          expect(user.getText()).toContain('{"last":"visitor"}');
          expect(userNameValid.getText()).toContain('false');
          expect(formValid.getText()).toContain('false');
        });

        it('should be valid if empty when min length is set', function() {
          userLastInput.clear();
          userLastInput.sendKeys('');

          expect(user.getText()).toContain('{"name":"guest","last":""}');
          expect(lastNameValid.getText()).toContain('true');
          expect(formValid.getText()).toContain('true');
        });

        it('should be invalid if less than required min length', function() {
          userLastInput.clear();
          userLastInput.sendKeys('xx');

          expect(user.getText()).toContain('{"name":"guest"}');
          expect(lastNameValid.getText()).toContain('false');
          expect(lastNameError.getText()).toContain('minlength');
          expect(formValid.getText()).toContain('false');
        });

        it('should be invalid if longer than max length', function() {
          userLastInput.clear();
          userLastInput.sendKeys('some ridiculously long name');

          expect(user.getText()).toContain('{"name":"guest"}');
          expect(lastNameValid.getText()).toContain('false');
          expect(lastNameError.getText()).toContain('maxlength');
          expect(formValid.getText()).toContain('false');
        });
      </file>
    </example>
 */
  var inputDirective = [
      '$browser',
      '$sniffer',
      function ($browser, $sniffer) {
        return {
          restrict: 'E',
          require: '?ngModel',
          link: function (scope, element, attr, ctrl) {
            if (ctrl) {
              (inputType[lowercase(attr.type)] || inputType.text)(scope, element, attr, ctrl, $sniffer, $browser);
            }
          }
        };
      }
    ];
  var VALID_CLASS = 'ng-valid', INVALID_CLASS = 'ng-invalid', PRISTINE_CLASS = 'ng-pristine', DIRTY_CLASS = 'ng-dirty';
  /**
 * @ngdoc type
 * @name ngModel.NgModelController
 *
 * @property {string} $viewValue Actual string value in the view.
 * @property {*} $modelValue The value in the model, that the control is bound to.
 * @property {Array.<Function>} $parsers Array of functions to execute, as a pipeline, whenever
       the control reads value from the DOM.  Each function is called, in turn, passing the value
       through to the next. The last return value is used to populate the model.
       Used to sanitize / convert the value as well as validation. For validation,
       the parsers should update the validity state using
       {@link ngModel.NgModelController#$setValidity $setValidity()},
       and return `undefined` for invalid values.

 *
 * @property {Array.<Function>} $formatters Array of functions to execute, as a pipeline, whenever
       the model value changes. Each function is called, in turn, passing the value through to the
       next. Used to format / convert values for display in the control and validation.
 * ```js
 * function formatter(value) {
 *   if (value) {
 *     return value.toUpperCase();
 *   }
 * }
 * ngModel.$formatters.push(formatter);
 * ```
 *
 * @property {Array.<Function>} $viewChangeListeners Array of functions to execute whenever the
 *     view value has changed. It is called with no arguments, and its return value is ignored.
 *     This can be used in place of additional $watches against the model value.
 *
 * @property {Object} $error An object hash with all errors as keys.
 *
 * @property {boolean} $pristine True if user has not interacted with the control yet.
 * @property {boolean} $dirty True if user has already interacted with the control.
 * @property {boolean} $valid True if there is no error.
 * @property {boolean} $invalid True if at least one error on the control.
 *
 * @description
 *
 * `NgModelController` provides API for the `ng-model` directive. The controller contains
 * services for data-binding, validation, CSS updates, and value formatting and parsing. It
 * purposefully does not contain any logic which deals with DOM rendering or listening to
 * DOM events. Such DOM related logic should be provided by other directives which make use of
 * `NgModelController` for data-binding.
 *
 * ## Custom Control Example
 * This example shows how to use `NgModelController` with a custom control to achieve
 * data-binding. Notice how different directives (`contenteditable`, `ng-model`, and `required`)
 * collaborate together to achieve the desired result.
 *
 * Note that `contenteditable` is an HTML5 attribute, which tells the browser to let the element
 * contents be edited in place by the user.  This will not work on older browsers.
 *
 * We are using the {@link ng.service:$sce $sce} service here and include the {@link ngSanitize $sanitize}
 * module to automatically remove "bad" content like inline event listener (e.g. `<span onclick="...">`).
 * However, as we are using `$sce` the model can still decide to provide unsafe content if it marks
 * that content using the `$sce` service.
 *
 * <example name="NgModelController" module="customControl" deps="angular-sanitize.js">
    <file name="style.css">
      [contenteditable] {
        border: 1px solid black;
        background-color: white;
        min-height: 20px;
      }

      .ng-invalid {
        border: 1px solid red;
      }

    </file>
    <file name="script.js">
      angular.module('customControl', ['ngSanitize']).
        directive('contenteditable', ['$sce', function($sce) {
          return {
            restrict: 'A', // only activate on element attribute
            require: '?ngModel', // get a hold of NgModelController
            link: function(scope, element, attrs, ngModel) {
              if(!ngModel) return; // do nothing if no ng-model

              // Specify how UI should be updated
              ngModel.$render = function() {
                element.html($sce.getTrustedHtml(ngModel.$viewValue || ''));
              };

              // Listen for change events to enable binding
              element.on('blur keyup change', function() {
                scope.$evalAsync(read);
              });
              read(); // initialize

              // Write data to the model
              function read() {
                var html = element.html();
                // When we clear the content editable the browser leaves a <br> behind
                // If strip-br attribute is provided then we strip this out
                if( attrs.stripBr && html == '<br>' ) {
                  html = '';
                }
                ngModel.$setViewValue(html);
              }
            }
          };
        }]);
    </file>
    <file name="index.html">
      <form name="myForm">
       <div contenteditable
            name="myWidget" ng-model="userContent"
            strip-br="true"
            required>Change me!</div>
        <span ng-show="myForm.myWidget.$error.required">Required!</span>
       <hr>
       <textarea ng-model="userContent"></textarea>
      </form>
    </file>
    <file name="protractor.js" type="protractor">
    it('should data-bind and become invalid', function() {
      if (browser.params.browser == 'safari' || browser.params.browser == 'firefox') {
        // SafariDriver can't handle contenteditable
        // and Firefox driver can't clear contenteditables very well
        return;
      }
      var contentEditable = element(by.css('[contenteditable]'));
      var content = 'Change me!';

      expect(contentEditable.getText()).toEqual(content);

      contentEditable.clear();
      contentEditable.sendKeys(protractor.Key.BACK_SPACE);
      expect(contentEditable.getText()).toEqual('');
      expect(contentEditable.getAttribute('class')).toMatch(/ng-invalid-required/);
    });
    </file>
 * </example>
 *
 *
 */
  var NgModelController = [
      '$scope',
      '$exceptionHandler',
      '$attrs',
      '$element',
      '$parse',
      '$animate',
      function ($scope, $exceptionHandler, $attr, $element, $parse, $animate) {
        this.$viewValue = Number.NaN;
        this.$modelValue = Number.NaN;
        this.$parsers = [];
        this.$formatters = [];
        this.$viewChangeListeners = [];
        this.$pristine = true;
        this.$dirty = false;
        this.$valid = true;
        this.$invalid = false;
        this.$name = $attr.name;
        var ngModelGet = $parse($attr.ngModel), ngModelSet = ngModelGet.assign;
        if (!ngModelSet) {
          throw minErr('ngModel')('nonassign', 'Expression \'{0}\' is non-assignable. Element: {1}', $attr.ngModel, startingTag($element));
        }
        /**
   * @ngdoc method
   * @name ngModel.NgModelController#$render
   *
   * @description
   * Called when the view needs to be updated. It is expected that the user of the ng-model
   * directive will implement this method.
   */
        this.$render = noop;
        /**
   * @ngdoc method
   * @name ngModel.NgModelController#$isEmpty
   *
   * @description
   * This is called when we need to determine if the value of the input is empty.
   *
   * For instance, the required directive does this to work out if the input has data or not.
   * The default `$isEmpty` function checks whether the value is `undefined`, `''`, `null` or `NaN`.
   *
   * You can override this for input directives whose concept of being empty is different to the
   * default. The `checkboxInputType` directive does this because in its case a value of `false`
   * implies empty.
   *
   * @param {*} value Reference to check.
   * @returns {boolean} True if `value` is empty.
   */
        this.$isEmpty = function (value) {
          return isUndefined(value) || value === '' || value === null || value !== value;
        };
        var parentForm = $element.inheritedData('$formController') || nullFormCtrl, invalidCount = 0,
          // used to easily determine if we are valid
          $error = this.$error = {};
        // keep invalid keys here
        // Setup initial state of the control
        $element.addClass(PRISTINE_CLASS);
        toggleValidCss(true);
        // convenience method for easy toggling of classes
        function toggleValidCss(isValid, validationErrorKey) {
          validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';
          $animate.removeClass($element, (isValid ? INVALID_CLASS : VALID_CLASS) + validationErrorKey);
          $animate.addClass($element, (isValid ? VALID_CLASS : INVALID_CLASS) + validationErrorKey);
        }
        /**
   * @ngdoc method
   * @name ngModel.NgModelController#$setValidity
   *
   * @description
   * Change the validity state, and notifies the form when the control changes validity. (i.e. it
   * does not notify form if given validator is already marked as invalid).
   *
   * This method should be called by validators - i.e. the parser or formatter functions.
   *
   * @param {string} validationErrorKey Name of the validator. the `validationErrorKey` will assign
   *        to `$error[validationErrorKey]=!isValid` so that it is available for data-binding.
   *        The `validationErrorKey` should be in camelCase and will get converted into dash-case
   *        for class name. Example: `myError` will result in `ng-valid-my-error` and `ng-invalid-my-error`
   *        class and can be bound to as  `{{someForm.someControl.$error.myError}}` .
   * @param {boolean} isValid Whether the current state is valid (true) or invalid (false).
   */
        this.$setValidity = function (validationErrorKey, isValid) {
          // Purposeful use of ! here to cast isValid to boolean in case it is undefined
          // jshint -W018
          if ($error[validationErrorKey] === !isValid)
            return;
          // jshint +W018
          if (isValid) {
            if ($error[validationErrorKey])
              invalidCount--;
            if (!invalidCount) {
              toggleValidCss(true);
              this.$valid = true;
              this.$invalid = false;
            }
          } else {
            toggleValidCss(false);
            this.$invalid = true;
            this.$valid = false;
            invalidCount++;
          }
          $error[validationErrorKey] = !isValid;
          toggleValidCss(isValid, validationErrorKey);
          parentForm.$setValidity(validationErrorKey, isValid, this);
        };
        /**
   * @ngdoc method
   * @name ngModel.NgModelController#$setPristine
   *
   * @description
   * Sets the control to its pristine state.
   *
   * This method can be called to remove the 'ng-dirty' class and set the control to its pristine
   * state (ng-pristine class).
   */
        this.$setPristine = function () {
          this.$dirty = false;
          this.$pristine = true;
          $animate.removeClass($element, DIRTY_CLASS);
          $animate.addClass($element, PRISTINE_CLASS);
        };
        /**
   * @ngdoc method
   * @name ngModel.NgModelController#$setViewValue
   *
   * @description
   * Update the view value.
   *
   * This method should be called when the view value changes, typically from within a DOM event handler.
   * For example {@link ng.directive:input input} and
   * {@link ng.directive:select select} directives call it.
   *
   * It will update the $viewValue, then pass this value through each of the functions in `$parsers`,
   * which includes any validators. The value that comes out of this `$parsers` pipeline, be applied to
   * `$modelValue` and the **expression** specified in the `ng-model` attribute.
   *
   * Lastly, all the registered change listeners, in the `$viewChangeListeners` list, are called.
   *
   * Note that calling this function does not trigger a `$digest`.
   *
   * @param {string} value Value from the view.
   */
        this.$setViewValue = function (value) {
          this.$viewValue = value;
          // change to dirty
          if (this.$pristine) {
            this.$dirty = true;
            this.$pristine = false;
            $animate.removeClass($element, PRISTINE_CLASS);
            $animate.addClass($element, DIRTY_CLASS);
            parentForm.$setDirty();
          }
          forEach(this.$parsers, function (fn) {
            value = fn(value);
          });
          if (this.$modelValue !== value) {
            this.$modelValue = value;
            ngModelSet($scope, value);
            forEach(this.$viewChangeListeners, function (listener) {
              try {
                listener();
              } catch (e) {
                $exceptionHandler(e);
              }
            });
          }
        };
        // model -> value
        var ctrl = this;
        $scope.$watch(function ngModelWatch() {
          var value = ngModelGet($scope);
          // if scope model value and ngModel value are out of sync
          if (ctrl.$modelValue !== value) {
            var formatters = ctrl.$formatters, idx = formatters.length;
            ctrl.$modelValue = value;
            while (idx--) {
              value = formatters[idx](value);
            }
            if (ctrl.$viewValue !== value) {
              ctrl.$viewValue = value;
              ctrl.$render();
            }
          }
          return value;
        });
      }
    ];
  /**
 * @ngdoc directive
 * @name ngModel
 *
 * @element input
 *
 * @description
 * The `ngModel` directive binds an `input`,`select`, `textarea` (or custom form control) to a
 * property on the scope using {@link ngModel.NgModelController NgModelController},
 * which is created and exposed by this directive.
 *
 * `ngModel` is responsible for:
 *
 * - Binding the view into the model, which other directives such as `input`, `textarea` or `select`
 *   require.
 * - Providing validation behavior (i.e. required, number, email, url).
 * - Keeping the state of the control (valid/invalid, dirty/pristine, validation errors).
 * - Setting related css classes on the element (`ng-valid`, `ng-invalid`, `ng-dirty`, `ng-pristine`) including animations.
 * - Registering the control with its parent {@link ng.directive:form form}.
 *
 * Note: `ngModel` will try to bind to the property given by evaluating the expression on the
 * current scope. If the property doesn't already exist on this scope, it will be created
 * implicitly and added to the scope.
 *
 * For best practices on using `ngModel`, see:
 *
 *  - [Understanding Scopes](https://github.com/angular/angular.js/wiki/Understanding-Scopes)
 *
 * For basic examples, how to use `ngModel`, see:
 *
 *  - {@link ng.directive:input input}
 *    - {@link input[text] text}
 *    - {@link input[checkbox] checkbox}
 *    - {@link input[radio] radio}
 *    - {@link input[number] number}
 *    - {@link input[email] email}
 *    - {@link input[url] url}
 *  - {@link ng.directive:select select}
 *  - {@link ng.directive:textarea textarea}
 *
 * # CSS classes
 * The following CSS classes are added and removed on the associated input/select/textarea element
 * depending on the validity of the model.
 *
 *  - `ng-valid` is set if the model is valid.
 *  - `ng-invalid` is set if the model is invalid.
 *  - `ng-pristine` is set if the model is pristine.
 *  - `ng-dirty` is set if the model is dirty.
 *
 * Keep in mind that ngAnimate can detect each of these classes when added and removed.
 *
 * ## Animation Hooks
 *
 * Animations within models are triggered when any of the associated CSS classes are added and removed
 * on the input element which is attached to the model. These classes are: `.ng-pristine`, `.ng-dirty`,
 * `.ng-invalid` and `.ng-valid` as well as any other validations that are performed on the model itself.
 * The animations that are triggered within ngModel are similar to how they work in ngClass and
 * animations can be hooked into using CSS transitions, keyframes as well as JS animations.
 *
 * The following example shows a simple way to utilize CSS transitions to style an input element
 * that has been rendered as invalid after it has been validated:
 *
 * <pre>
 * //be sure to include ngAnimate as a module to hook into more
 * //advanced animations
 * .my-input {
 *   transition:0.5s linear all;
 *   background: white;
 * }
 * .my-input.ng-invalid {
 *   background: red;
 *   color:white;
 * }
 * </pre>
 *
 * @example
 * <example deps="angular-animate.js" animations="true" fixBase="true" module="inputExample">
     <file name="index.html">
       <script>
        angular.module('inputExample', [])
          .controller('ExampleController', ['$scope', function($scope) {
            $scope.val = '1';
          }]);
       </script>
       <style>
         .my-input {
           -webkit-transition:all linear 0.5s;
           transition:all linear 0.5s;
           background: transparent;
         }
         .my-input.ng-invalid {
           color:white;
           background: red;
         }
       </style>
       Update input to see transitions when valid/invalid.
       Integer is a valid value.
       <form name="testForm" ng-controller="ExampleController">
         <input ng-model="val" ng-pattern="/^\d+$/" name="anim" class="my-input" />
       </form>
     </file>
 * </example>
 */
  var ngModelDirective = function () {
    return {
      require: [
        'ngModel',
        '^?form'
      ],
      controller: NgModelController,
      link: function (scope, element, attr, ctrls) {
        // notify others, especially parent forms
        var modelCtrl = ctrls[0], formCtrl = ctrls[1] || nullFormCtrl;
        formCtrl.$addControl(modelCtrl);
        scope.$on('$destroy', function () {
          formCtrl.$removeControl(modelCtrl);
        });
      }
    };
  };
  /**
 * @ngdoc directive
 * @name ngChange
 *
 * @description
 * Evaluate the given expression when the user changes the input.
 * The expression is evaluated immediately, unlike the JavaScript onchange event
 * which only triggers at the end of a change (usually, when the user leaves the
 * form element or presses the return key).
 * The expression is not evaluated when the value change is coming from the model.
 *
 * Note, this directive requires `ngModel` to be present.
 *
 * @element input
 * @param {expression} ngChange {@link guide/expression Expression} to evaluate upon change
 * in input value.
 *
 * @example
 * <example name="ngChange-directive" module="changeExample">
 *   <file name="index.html">
 *     <script>
 *       angular.module('changeExample', [])
 *         .controller('ExampleController', ['$scope', function($scope) {
 *           $scope.counter = 0;
 *           $scope.change = function() {
 *             $scope.counter++;
 *           };
 *         }]);
 *     </script>
 *     <div ng-controller="ExampleController">
 *       <input type="checkbox" ng-model="confirmed" ng-change="change()" id="ng-change-example1" />
 *       <input type="checkbox" ng-model="confirmed" id="ng-change-example2" />
 *       <label for="ng-change-example2">Confirmed</label><br />
 *       <tt>debug = {{confirmed}}</tt><br/>
 *       <tt>counter = {{counter}}</tt><br/>
 *     </div>
 *   </file>
 *   <file name="protractor.js" type="protractor">
 *     var counter = element(by.binding('counter'));
 *     var debug = element(by.binding('confirmed'));
 *
 *     it('should evaluate the expression if changing from view', function() {
 *       expect(counter.getText()).toContain('0');
 *
 *       element(by.id('ng-change-example1')).click();
 *
 *       expect(counter.getText()).toContain('1');
 *       expect(debug.getText()).toContain('true');
 *     });
 *
 *     it('should not evaluate the expression if changing from model', function() {
 *       element(by.id('ng-change-example2')).click();

 *       expect(counter.getText()).toContain('0');
 *       expect(debug.getText()).toContain('true');
 *     });
 *   </file>
 * </example>
 */
  var ngChangeDirective = valueFn({
      require: 'ngModel',
      link: function (scope, element, attr, ctrl) {
        ctrl.$viewChangeListeners.push(function () {
          scope.$eval(attr.ngChange);
        });
      }
    });
  var requiredDirective = function () {
    return {
      require: '?ngModel',
      link: function (scope, elm, attr, ctrl) {
        if (!ctrl)
          return;
        attr.required = true;
        // force truthy in case we are on non input element
        var validator = function (value) {
          if (attr.required && ctrl.$isEmpty(value)) {
            ctrl.$setValidity('required', false);
            return;
          } else {
            ctrl.$setValidity('required', true);
            return value;
          }
        };
        ctrl.$formatters.push(validator);
        ctrl.$parsers.unshift(validator);
        attr.$observe('required', function () {
          validator(ctrl.$viewValue);
        });
      }
    };
  };
  /**
 * @ngdoc directive
 * @name ngList
 *
 * @description
 * Text input that converts between a delimited string and an array of strings. The delimiter
 * can be a fixed string (by default a comma) or a regular expression.
 *
 * @element input
 * @param {string=} ngList optional delimiter that should be used to split the value. If
 *   specified in form `/something/` then the value will be converted into a regular expression.
 *
 * @example
    <example name="ngList-directive" module="listExample">
      <file name="index.html">
       <script>
         angular.module('listExample', [])
           .controller('ExampleController', ['$scope', function($scope) {
             $scope.names = ['igor', 'misko', 'vojta'];
           }]);
       </script>
       <form name="myForm" ng-controller="ExampleController">
         List: <input name="namesInput" ng-model="names" ng-list required>
         <span class="error" ng-show="myForm.namesInput.$error.required">
           Required!</span>
         <br>
         <tt>names = {{names}}</tt><br/>
         <tt>myForm.namesInput.$valid = {{myForm.namesInput.$valid}}</tt><br/>
         <tt>myForm.namesInput.$error = {{myForm.namesInput.$error}}</tt><br/>
         <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
        </form>
      </file>
      <file name="protractor.js" type="protractor">
        var listInput = element(by.model('names'));
        var names = element(by.binding('{{names}}'));
        var valid = element(by.binding('myForm.namesInput.$valid'));
        var error = element(by.css('span.error'));

        it('should initialize to model', function() {
          expect(names.getText()).toContain('["igor","misko","vojta"]');
          expect(valid.getText()).toContain('true');
          expect(error.getCssValue('display')).toBe('none');
        });

        it('should be invalid if empty', function() {
          listInput.clear();
          listInput.sendKeys('');

          expect(names.getText()).toContain('');
          expect(valid.getText()).toContain('false');
          expect(error.getCssValue('display')).not.toBe('none');        });
      </file>
    </example>
 */
  var ngListDirective = function () {
    return {
      require: 'ngModel',
      link: function (scope, element, attr, ctrl) {
        var match = /\/(.*)\//.exec(attr.ngList), separator = match && new RegExp(match[1]) || attr.ngList || ',';
        var parse = function (viewValue) {
          // If the viewValue is invalid (say required but empty) it will be `undefined`
          if (isUndefined(viewValue))
            return;
          var list = [];
          if (viewValue) {
            forEach(viewValue.split(separator), function (value) {
              if (value)
                list.push(trim(value));
            });
          }
          return list;
        };
        ctrl.$parsers.push(parse);
        ctrl.$formatters.push(function (value) {
          if (isArray(value)) {
            return value.join(', ');
          }
          return undefined;
        });
        // Override the standard $isEmpty because an empty array means the input is empty.
        ctrl.$isEmpty = function (value) {
          return !value || !value.length;
        };
      }
    };
  };
  var CONSTANT_VALUE_REGEXP = /^(true|false|\d+)$/;
  /**
 * @ngdoc directive
 * @name ngValue
 *
 * @description
 * Binds the given expression to the value of `input[select]` or `input[radio]`, so
 * that when the element is selected, the `ngModel` of that element is set to the
 * bound value.
 *
 * `ngValue` is useful when dynamically generating lists of radio buttons using `ng-repeat`, as
 * shown below.
 *
 * @element input
 * @param {string=} ngValue angular expression, whose value will be bound to the `value` attribute
 *   of the `input` element
 *
 * @example
    <example name="ngValue-directive" module="valueExample">
      <file name="index.html">
       <script>
          angular.module('valueExample', [])
            .controller('ExampleController', ['$scope', function($scope) {
              $scope.names = ['pizza', 'unicorns', 'robots'];
              $scope.my = { favorite: 'unicorns' };
            }]);
       </script>
        <form ng-controller="ExampleController">
          <h2>Which is your favorite?</h2>
            <label ng-repeat="name in names" for="{{name}}">
              {{name}}
              <input type="radio"
                     ng-model="my.favorite"
                     ng-value="name"
                     id="{{name}}"
                     name="favorite">
            </label>
          <div>You chose {{my.favorite}}</div>
        </form>
      </file>
      <file name="protractor.js" type="protractor">
        var favorite = element(by.binding('my.favorite'));

        it('should initialize to model', function() {
          expect(favorite.getText()).toContain('unicorns');
        });
        it('should bind the values to the inputs', function() {
          element.all(by.model('my.favorite')).get(0).click();
          expect(favorite.getText()).toContain('pizza');
        });
      </file>
    </example>
 */
  var ngValueDirective = function () {
    return {
      priority: 100,
      compile: function (tpl, tplAttr) {
        if (CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue)) {
          return function ngValueConstantLink(scope, elm, attr) {
            attr.$set('value', scope.$eval(attr.ngValue));
          };
        } else {
          return function ngValueLink(scope, elm, attr) {
            scope.$watch(attr.ngValue, function valueWatchAction(value) {
              attr.$set('value', value);
            });
          };
        }
      }
    };
  };
  /**
 * @ngdoc directive
 * @name ngBind
 * @restrict AC
 *
 * @description
 * The `ngBind` attribute tells Angular to replace the text content of the specified HTML element
 * with the value of a given expression, and to update the text content when the value of that
 * expression changes.
 *
 * Typically, you don't use `ngBind` directly, but instead you use the double curly markup like
 * `{{ expression }}` which is similar but less verbose.
 *
 * It is preferable to use `ngBind` instead of `{{ expression }}` if a template is momentarily
 * displayed by the browser in its raw state before Angular compiles it. Since `ngBind` is an
 * element attribute, it makes the bindings invisible to the user while the page is loading.
 *
 * An alternative solution to this problem would be using the
 * {@link ng.directive:ngCloak ngCloak} directive.
 *
 *
 * @element ANY
 * @param {expression} ngBind {@link guide/expression Expression} to evaluate.
 *
 * @example
 * Enter a name in the Live Preview text box; the greeting below the text box changes instantly.
   <example module="bindExample">
     <file name="index.html">
       <script>
         angular.module('bindExample', [])
           .controller('ExampleController', ['$scope', function($scope) {
             $scope.name = 'Whirled';
           }]);
       </script>
       <div ng-controller="ExampleController">
         Enter name: <input type="text" ng-model="name"><br>
         Hello <span ng-bind="name"></span>!
       </div>
     </file>
     <file name="protractor.js" type="protractor">
       it('should check ng-bind', function() {
         var nameInput = element(by.model('name'));

         expect(element(by.binding('name')).getText()).toBe('Whirled');
         nameInput.clear();
         nameInput.sendKeys('world');
         expect(element(by.binding('name')).getText()).toBe('world');
       });
     </file>
   </example>
 */
  var ngBindDirective = ngDirective({
      compile: function (templateElement) {
        templateElement.addClass('ng-binding');
        return function (scope, element, attr) {
          element.data('$binding', attr.ngBind);
          scope.$watch(attr.ngBind, function ngBindWatchAction(value) {
            // We are purposefully using == here rather than === because we want to
            // catch when value is "null or undefined"
            // jshint -W041
            element.text(value == undefined ? '' : value);
          });
        };
      }
    });
  /**
 * @ngdoc directive
 * @name ngBindTemplate
 *
 * @description
 * The `ngBindTemplate` directive specifies that the element
 * text content should be replaced with the interpolation of the template
 * in the `ngBindTemplate` attribute.
 * Unlike `ngBind`, the `ngBindTemplate` can contain multiple `{{` `}}`
 * expressions. This directive is needed since some HTML elements
 * (such as TITLE and OPTION) cannot contain SPAN elements.
 *
 * @element ANY
 * @param {string} ngBindTemplate template of form
 *   <tt>{{</tt> <tt>expression</tt> <tt>}}</tt> to eval.
 *
 * @example
 * Try it here: enter text in text box and watch the greeting change.
   <example module="bindExample">
     <file name="index.html">
       <script>
         angular.module('bindExample', [])
           .controller('ExampleController', ['$scope', function ($scope) {
             $scope.salutation = 'Hello';
             $scope.name = 'World';
           }]);
       </script>
       <div ng-controller="ExampleController">
        Salutation: <input type="text" ng-model="salutation"><br>
        Name: <input type="text" ng-model="name"><br>
        <pre ng-bind-template="{{salutation}} {{name}}!"></pre>
       </div>
     </file>
     <file name="protractor.js" type="protractor">
       it('should check ng-bind', function() {
         var salutationElem = element(by.binding('salutation'));
         var salutationInput = element(by.model('salutation'));
         var nameInput = element(by.model('name'));

         expect(salutationElem.getText()).toBe('Hello World!');

         salutationInput.clear();
         salutationInput.sendKeys('Greetings');
         nameInput.clear();
         nameInput.sendKeys('user');

         expect(salutationElem.getText()).toBe('Greetings user!');
       });
     </file>
   </example>
 */
  var ngBindTemplateDirective = [
      '$interpolate',
      function ($interpolate) {
        return function (scope, element, attr) {
          // TODO: move this to scenario runner
          var interpolateFn = $interpolate(element.attr(attr.$attr.ngBindTemplate));
          element.addClass('ng-binding').data('$binding', interpolateFn);
          attr.$observe('ngBindTemplate', function (value) {
            element.text(value);
          });
        };
      }
    ];
  /**
 * @ngdoc directive
 * @name ngBindHtml
 *
 * @description
 * Creates a binding that will innerHTML the result of evaluating the `expression` into the current
 * element in a secure way.  By default, the innerHTML-ed content will be sanitized using the {@link
 * ngSanitize.$sanitize $sanitize} service.  To utilize this functionality, ensure that `$sanitize`
 * is available, for example, by including {@link ngSanitize} in your module's dependencies (not in
 * core Angular). In order to use {@link ngSanitize} in your module's dependencies, you need to
 * include "angular-sanitize.js" in your application.
 *
 * You may also bypass sanitization for values you know are safe. To do so, bind to
 * an explicitly trusted value via {@link ng.$sce#trustAsHtml $sce.trustAsHtml}.  See the example
 * under {@link ng.$sce#Example Strict Contextual Escaping (SCE)}.
 *
 * Note: If a `$sanitize` service is unavailable and the bound value isn't explicitly trusted, you
 * will have an exception (instead of an exploit.)
 *
 * @element ANY
 * @param {expression} ngBindHtml {@link guide/expression Expression} to evaluate.
 *
 * @example

   <example module="bindHtmlExample" deps="angular-sanitize.js">
     <file name="index.html">
       <div ng-controller="ExampleController">
        <p ng-bind-html="myHTML"></p>
       </div>
     </file>

     <file name="script.js">
       angular.module('bindHtmlExample', ['ngSanitize'])
         .controller('ExampleController', ['$scope', function($scope) {
           $scope.myHTML =
              'I am an <code>HTML</code>string with ' +
              '<a href="#">links!</a> and other <em>stuff</em>';
         }]);
     </file>

     <file name="protractor.js" type="protractor">
       it('should check ng-bind-html', function() {
         expect(element(by.binding('myHTML')).getText()).toBe(
             'I am an HTMLstring with links! and other stuff');
       });
     </file>
   </example>
 */
  var ngBindHtmlDirective = [
      '$sce',
      '$parse',
      function ($sce, $parse) {
        return {
          compile: function (tElement) {
            tElement.addClass('ng-binding');
            return function (scope, element, attr) {
              element.data('$binding', attr.ngBindHtml);
              var parsed = $parse(attr.ngBindHtml);
              function getStringValue() {
                return (parsed(scope) || '').toString();
              }
              scope.$watch(getStringValue, function ngBindHtmlWatchAction(value) {
                element.html($sce.getTrustedHtml(parsed(scope)) || '');
              });
            };
          }
        };
      }
    ];
  function classDirective(name, selector) {
    name = 'ngClass' + name;
    return [
      '$animate',
      function ($animate) {
        return {
          restrict: 'AC',
          link: function (scope, element, attr) {
            var oldVal;
            scope.$watch(attr[name], ngClassWatchAction, true);
            attr.$observe('class', function (value) {
              ngClassWatchAction(scope.$eval(attr[name]));
            });
            if (name !== 'ngClass') {
              scope.$watch('$index', function ($index, old$index) {
                // jshint bitwise: false
                var mod = $index & 1;
                if (mod !== (old$index & 1)) {
                  var classes = arrayClasses(scope.$eval(attr[name]));
                  mod === selector ? addClasses(classes) : removeClasses(classes);
                }
              });
            }
            function addClasses(classes) {
              var newClasses = digestClassCounts(classes, 1);
              attr.$addClass(newClasses);
            }
            function removeClasses(classes) {
              var newClasses = digestClassCounts(classes, -1);
              attr.$removeClass(newClasses);
            }
            function digestClassCounts(classes, count) {
              var classCounts = element.data('$classCounts') || {};
              var classesToUpdate = [];
              forEach(classes, function (className) {
                if (count > 0 || classCounts[className]) {
                  classCounts[className] = (classCounts[className] || 0) + count;
                  if (classCounts[className] === +(count > 0)) {
                    classesToUpdate.push(className);
                  }
                }
              });
              element.data('$classCounts', classCounts);
              return classesToUpdate.join(' ');
            }
            function updateClasses(oldClasses, newClasses) {
              var toAdd = arrayDifference(newClasses, oldClasses);
              var toRemove = arrayDifference(oldClasses, newClasses);
              toRemove = digestClassCounts(toRemove, -1);
              toAdd = digestClassCounts(toAdd, 1);
              if (toAdd.length === 0) {
                $animate.removeClass(element, toRemove);
              } else if (toRemove.length === 0) {
                $animate.addClass(element, toAdd);
              } else {
                $animate.setClass(element, toAdd, toRemove);
              }
            }
            function ngClassWatchAction(newVal) {
              if (selector === true || scope.$index % 2 === selector) {
                var newClasses = arrayClasses(newVal || []);
                if (!oldVal) {
                  addClasses(newClasses);
                } else if (!equals(newVal, oldVal)) {
                  var oldClasses = arrayClasses(oldVal);
                  updateClasses(oldClasses, newClasses);
                }
              }
              oldVal = shallowCopy(newVal);
            }
          }
        };
        function arrayDifference(tokens1, tokens2) {
          var values = [];
          outer:
            for (var i = 0; i < tokens1.length; i++) {
              var token = tokens1[i];
              for (var j = 0; j < tokens2.length; j++) {
                if (token == tokens2[j])
                  continue outer;
              }
              values.push(token);
            }
          return values;
        }
        function arrayClasses(classVal) {
          if (isArray(classVal)) {
            return classVal;
          } else if (isString(classVal)) {
            return classVal.split(' ');
          } else if (isObject(classVal)) {
            var classes = [], i = 0;
            forEach(classVal, function (v, k) {
              if (v) {
                classes = classes.concat(k.split(' '));
              }
            });
            return classes;
          }
          return classVal;
        }
      }
    ];
  }
  /**
 * @ngdoc directive
 * @name ngClass
 * @restrict AC
 *
 * @description
 * The `ngClass` directive allows you to dynamically set CSS classes on an HTML element by databinding
 * an expression that represents all classes to be added.
 *
 * The directive operates in three different ways, depending on which of three types the expression
 * evaluates to:
 *
 * 1. If the expression evaluates to a string, the string should be one or more space-delimited class
 * names.
 *
 * 2. If the expression evaluates to an array, each element of the array should be a string that is
 * one or more space-delimited class names.
 *
 * 3. If the expression evaluates to an object, then for each key-value pair of the
 * object with a truthy value the corresponding key is used as a class name.
 *
 * The directive won't add duplicate classes if a particular class was already set.
 *
 * When the expression changes, the previously added classes are removed and only then the
 * new classes are added.
 *
 * @animations
 * add - happens just before the class is applied to the element
 * remove - happens just before the class is removed from the element
 *
 * @element ANY
 * @param {expression} ngClass {@link guide/expression Expression} to eval. The result
 *   of the evaluation can be a string representing space delimited class
 *   names, an array, or a map of class names to boolean values. In the case of a map, the
 *   names of the properties whose values are truthy will be added as css classes to the
 *   element.
 *
 * @example Example that demonstrates basic bindings via ngClass directive.
   <example>
     <file name="index.html">
       <p ng-class="{strike: deleted, bold: important, red: error}">Map Syntax Example</p>
       <input type="checkbox" ng-model="deleted"> deleted (apply "strike" class)<br>
       <input type="checkbox" ng-model="important"> important (apply "bold" class)<br>
       <input type="checkbox" ng-model="error"> error (apply "red" class)
       <hr>
       <p ng-class="style">Using String Syntax</p>
       <input type="text" ng-model="style" placeholder="Type: bold strike red">
       <hr>
       <p ng-class="[style1, style2, style3]">Using Array Syntax</p>
       <input ng-model="style1" placeholder="Type: bold, strike or red"><br>
       <input ng-model="style2" placeholder="Type: bold, strike or red"><br>
       <input ng-model="style3" placeholder="Type: bold, strike or red"><br>
     </file>
     <file name="style.css">
       .strike {
         text-decoration: line-through;
       }
       .bold {
           font-weight: bold;
       }
       .red {
           color: red;
       }
     </file>
     <file name="protractor.js" type="protractor">
       var ps = element.all(by.css('p'));

       it('should let you toggle the class', function() {

         expect(ps.first().getAttribute('class')).not.toMatch(/bold/);
         expect(ps.first().getAttribute('class')).not.toMatch(/red/);

         element(by.model('important')).click();
         expect(ps.first().getAttribute('class')).toMatch(/bold/);

         element(by.model('error')).click();
         expect(ps.first().getAttribute('class')).toMatch(/red/);
       });

       it('should let you toggle string example', function() {
         expect(ps.get(1).getAttribute('class')).toBe('');
         element(by.model('style')).clear();
         element(by.model('style')).sendKeys('red');
         expect(ps.get(1).getAttribute('class')).toBe('red');
       });

       it('array example should have 3 classes', function() {
         expect(ps.last().getAttribute('class')).toBe('');
         element(by.model('style1')).sendKeys('bold');
         element(by.model('style2')).sendKeys('strike');
         element(by.model('style3')).sendKeys('red');
         expect(ps.last().getAttribute('class')).toBe('bold strike red');
       });
     </file>
   </example>

   ## Animations

   The example below demonstrates how to perform animations using ngClass.

   <example module="ngAnimate" deps="angular-animate.js" animations="true">
     <file name="index.html">
      <input id="setbtn" type="button" value="set" ng-click="myVar='my-class'">
      <input id="clearbtn" type="button" value="clear" ng-click="myVar=''">
      <br>
      <span class="base-class" ng-class="myVar">Sample Text</span>
     </file>
     <file name="style.css">
       .base-class {
         -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;
         transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;
       }

       .base-class.my-class {
         color: red;
         font-size:3em;
       }
     </file>
     <file name="protractor.js" type="protractor">
       it('should check ng-class', function() {
         expect(element(by.css('.base-class')).getAttribute('class')).not.
           toMatch(/my-class/);

         element(by.id('setbtn')).click();

         expect(element(by.css('.base-class')).getAttribute('class')).
           toMatch(/my-class/);

         element(by.id('clearbtn')).click();

         expect(element(by.css('.base-class')).getAttribute('class')).not.
           toMatch(/my-class/);
       });
     </file>
   </example>


   ## ngClass and pre-existing CSS3 Transitions/Animations
   The ngClass directive still supports CSS3 Transitions/Animations even if they do not follow the ngAnimate CSS naming structure.
   Upon animation ngAnimate will apply supplementary CSS classes to track the start and end of an animation, but this will not hinder
   any pre-existing CSS transitions already on the element. To get an idea of what happens during a class-based animation, be sure
   to view the step by step details of {@link ngAnimate.$animate#addclass $animate.addClass} and
   {@link ngAnimate.$animate#removeclass $animate.removeClass}.
 */
  var ngClassDirective = classDirective('', true);
  /**
 * @ngdoc directive
 * @name ngClassOdd
 * @restrict AC
 *
 * @description
 * The `ngClassOdd` and `ngClassEven` directives work exactly as
 * {@link ng.directive:ngClass ngClass}, except they work in
 * conjunction with `ngRepeat` and take effect only on odd (even) rows.
 *
 * This directive can be applied only within the scope of an
 * {@link ng.directive:ngRepeat ngRepeat}.
 *
 * @element ANY
 * @param {expression} ngClassOdd {@link guide/expression Expression} to eval. The result
 *   of the evaluation can be a string representing space delimited class names or an array.
 *
 * @example
   <example>
     <file name="index.html">
        <ol ng-init="names=['John', 'Mary', 'Cate', 'Suz']">
          <li ng-repeat="name in names">
           <span ng-class-odd="'odd'" ng-class-even="'even'">
             {{name}}
           </span>
          </li>
        </ol>
     </file>
     <file name="style.css">
       .odd {
         color: red;
       }
       .even {
         color: blue;
       }
     </file>
     <file name="protractor.js" type="protractor">
       it('should check ng-class-odd and ng-class-even', function() {
         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).
           toMatch(/odd/);
         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).
           toMatch(/even/);
       });
     </file>
   </example>
 */
  var ngClassOddDirective = classDirective('Odd', 0);
  /**
 * @ngdoc directive
 * @name ngClassEven
 * @restrict AC
 *
 * @description
 * The `ngClassOdd` and `ngClassEven` directives work exactly as
 * {@link ng.directive:ngClass ngClass}, except they work in
 * conjunction with `ngRepeat` and take effect only on odd (even) rows.
 *
 * This directive can be applied only within the scope of an
 * {@link ng.directive:ngRepeat ngRepeat}.
 *
 * @element ANY
 * @param {expression} ngClassEven {@link guide/expression Expression} to eval. The
 *   result of the evaluation can be a string representing space delimited class names or an array.
 *
 * @example
   <example>
     <file name="index.html">
        <ol ng-init="names=['John', 'Mary', 'Cate', 'Suz']">
          <li ng-repeat="name in names">
           <span ng-class-odd="'odd'" ng-class-even="'even'">
             {{name}} &nbsp; &nbsp; &nbsp;
           </span>
          </li>
        </ol>
     </file>
     <file name="style.css">
       .odd {
         color: red;
       }
       .even {
         color: blue;
       }
     </file>
     <file name="protractor.js" type="protractor">
       it('should check ng-class-odd and ng-class-even', function() {
         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).
           toMatch(/odd/);
         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).
           toMatch(/even/);
       });
     </file>
   </example>
 */
  var ngClassEvenDirective = classDirective('Even', 1);
  /**
 * @ngdoc directive
 * @name ngCloak
 * @restrict AC
 *
 * @description
 * The `ngCloak` directive is used to prevent the Angular html template from being briefly
 * displayed by the browser in its raw (uncompiled) form while your application is loading. Use this
 * directive to avoid the undesirable flicker effect caused by the html template display.
 *
 * The directive can be applied to the `<body>` element, but the preferred usage is to apply
 * multiple `ngCloak` directives to small portions of the page to permit progressive rendering
 * of the browser view.
 *
 * `ngCloak` works in cooperation with the following css rule embedded within `angular.js` and
 * `angular.min.js`.
 * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).
 *
 * ```css
 * [ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {
 *   display: none !important;
 * }
 * ```
 *
 * When this css rule is loaded by the browser, all html elements (including their children) that
 * are tagged with the `ngCloak` directive are hidden. When Angular encounters this directive
 * during the compilation of the template it deletes the `ngCloak` element attribute, making
 * the compiled element visible.
 *
 * For the best result, the `angular.js` script must be loaded in the head section of the html
 * document; alternatively, the css rule above must be included in the external stylesheet of the
 * application.
 *
 * Legacy browsers, like IE7, do not provide attribute selector support (added in CSS 2.1) so they
 * cannot match the `[ng\:cloak]` selector. To work around this limitation, you must add the css
 * class `ng-cloak` in addition to the `ngCloak` directive as shown in the example below.
 *
 * @element ANY
 *
 * @example
   <example>
     <file name="index.html">
        <div id="template1" ng-cloak>{{ 'hello' }}</div>
        <div id="template2" ng-cloak class="ng-cloak">{{ 'hello IE7' }}</div>
     </file>
     <file name="protractor.js" type="protractor">
       it('should remove the template directive and css class', function() {
         expect($('#template1').getAttribute('ng-cloak')).
           toBeNull();
         expect($('#template2').getAttribute('ng-cloak')).
           toBeNull();
       });
     </file>
   </example>
 *
 */
  var ngCloakDirective = ngDirective({
      compile: function (element, attr) {
        attr.$set('ngCloak', undefined);
        element.removeClass('ng-cloak');
      }
    });
  /**
 * @ngdoc directive
 * @name ngController
 *
 * @description
 * The `ngController` directive attaches a controller class to the view. This is a key aspect of how angular
 * supports the principles behind the Model-View-Controller design pattern.
 *
 * MVC components in angular:
 *
 * * Model — Models are the properties of a scope; scopes are attached to the DOM where scope properties
 *   are accessed through bindings.
 * * View — The template (HTML with data bindings) that is rendered into the View.
 * * Controller — The `ngController` directive specifies a Controller class; the class contains business
 *   logic behind the application to decorate the scope with functions and values
 *
 * Note that you can also attach controllers to the DOM by declaring it in a route definition
 * via the {@link ngRoute.$route $route} service. A common mistake is to declare the controller
 * again using `ng-controller` in the template itself.  This will cause the controller to be attached
 * and executed twice.
 *
 * @element ANY
 * @scope
 * @priority 500
 * @param {expression} ngController Name of a globally accessible constructor function or an
 *     {@link guide/expression expression} that on the current scope evaluates to a
 *     constructor function. The controller instance can be published into a scope property
 *     by specifying `as propertyName`.
 *
 * @example
 * Here is a simple form for editing user contact information. Adding, removing, clearing, and
 * greeting are methods declared on the controller (see source tab). These methods can
 * easily be called from the angular markup. Any changes to the data are automatically reflected
 * in the View without the need for a manual update.
 *
 * Two different declaration styles are included below:
 *
 * * one binds methods and properties directly onto the controller using `this`:
 * `ng-controller="SettingsController1 as settings"`
 * * one injects `$scope` into the controller:
 * `ng-controller="SettingsController2"`
 *
 * The second option is more common in the Angular community, and is generally used in boilerplates
 * and in this guide. However, there are advantages to binding properties directly to the controller
 * and avoiding scope.
 *
 * * Using `controller as` makes it obvious which controller you are accessing in the template when
 * multiple controllers apply to an element.
 * * If you are writing your controllers as classes you have easier access to the properties and
 * methods, which will appear on the scope, from inside the controller code.
 * * Since there is always a `.` in the bindings, you don't have to worry about prototypal
 * inheritance masking primitives.
 *
 * This example demonstrates the `controller as` syntax.
 *
 * <example name="ngControllerAs" module="controllerAsExample">
 *   <file name="index.html">
 *    <div id="ctrl-as-exmpl" ng-controller="SettingsController1 as settings">
 *      Name: <input type="text" ng-model="settings.name"/>
 *      [ <a href="" ng-click="settings.greet()">greet</a> ]<br/>
 *      Contact:
 *      <ul>
 *        <li ng-repeat="contact in settings.contacts">
 *          <select ng-model="contact.type">
 *             <option>phone</option>
 *             <option>email</option>
 *          </select>
 *          <input type="text" ng-model="contact.value"/>
 *          [ <a href="" ng-click="settings.clearContact(contact)">clear</a>
 *          | <a href="" ng-click="settings.removeContact(contact)">X</a> ]
 *        </li>
 *        <li>[ <a href="" ng-click="settings.addContact()">add</a> ]</li>
 *     </ul>
 *    </div>
 *   </file>
 *   <file name="app.js">
 *    angular.module('controllerAsExample', [])
 *      .controller('SettingsController1', SettingsController1);
 *
 *    function SettingsController1() {
 *      this.name = "John Smith";
 *      this.contacts = [
 *        {type: 'phone', value: '408 555 1212'},
 *        {type: 'email', value: 'john.smith@example.org'} ];
 *    }
 *
 *    SettingsController1.prototype.greet = function() {
 *      alert(this.name);
 *    };
 *
 *    SettingsController1.prototype.addContact = function() {
 *      this.contacts.push({type: 'email', value: 'yourname@example.org'});
 *    };
 *
 *    SettingsController1.prototype.removeContact = function(contactToRemove) {
 *     var index = this.contacts.indexOf(contactToRemove);
 *      this.contacts.splice(index, 1);
 *    };
 *
 *    SettingsController1.prototype.clearContact = function(contact) {
 *      contact.type = 'phone';
 *      contact.value = '';
 *    };
 *   </file>
 *   <file name="protractor.js" type="protractor">
 *     it('should check controller as', function() {
 *       var container = element(by.id('ctrl-as-exmpl'));
 *         expect(container.element(by.model('settings.name'))
 *           .getAttribute('value')).toBe('John Smith');
 *
 *       var firstRepeat =
 *           container.element(by.repeater('contact in settings.contacts').row(0));
 *       var secondRepeat =
 *           container.element(by.repeater('contact in settings.contacts').row(1));
 *
 *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))
 *           .toBe('408 555 1212');
 *
 *       expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))
 *           .toBe('john.smith@example.org');
 *
 *       firstRepeat.element(by.linkText('clear')).click();
 *
 *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))
 *           .toBe('');
 *
 *       container.element(by.linkText('add')).click();
 *
 *       expect(container.element(by.repeater('contact in settings.contacts').row(2))
 *           .element(by.model('contact.value'))
 *           .getAttribute('value'))
 *           .toBe('yourname@example.org');
 *     });
 *   </file>
 * </example>
 *
 * This example demonstrates the "attach to `$scope`" style of controller.
 *
 * <example name="ngController" module="controllerExample">
 *  <file name="index.html">
 *   <div id="ctrl-exmpl" ng-controller="SettingsController2">
 *     Name: <input type="text" ng-model="name"/>
 *     [ <a href="" ng-click="greet()">greet</a> ]<br/>
 *     Contact:
 *     <ul>
 *       <li ng-repeat="contact in contacts">
 *         <select ng-model="contact.type">
 *            <option>phone</option>
 *            <option>email</option>
 *         </select>
 *         <input type="text" ng-model="contact.value"/>
 *         [ <a href="" ng-click="clearContact(contact)">clear</a>
 *         | <a href="" ng-click="removeContact(contact)">X</a> ]
 *       </li>
 *       <li>[ <a href="" ng-click="addContact()">add</a> ]</li>
 *    </ul>
 *   </div>
 *  </file>
 *  <file name="app.js">
 *   angular.module('controllerExample', [])
 *     .controller('SettingsController2', ['$scope', SettingsController2]);
 *
 *   function SettingsController2($scope) {
 *     $scope.name = "John Smith";
 *     $scope.contacts = [
 *       {type:'phone', value:'408 555 1212'},
 *       {type:'email', value:'john.smith@example.org'} ];
 *
 *     $scope.greet = function() {
 *       alert($scope.name);
 *     };
 *
 *     $scope.addContact = function() {
 *       $scope.contacts.push({type:'email', value:'yourname@example.org'});
 *     };
 *
 *     $scope.removeContact = function(contactToRemove) {
 *       var index = $scope.contacts.indexOf(contactToRemove);
 *       $scope.contacts.splice(index, 1);
 *     };
 *
 *     $scope.clearContact = function(contact) {
 *       contact.type = 'phone';
 *       contact.value = '';
 *     };
 *   }
 *  </file>
 *  <file name="protractor.js" type="protractor">
 *    it('should check controller', function() {
 *      var container = element(by.id('ctrl-exmpl'));
 *
 *      expect(container.element(by.model('name'))
 *          .getAttribute('value')).toBe('John Smith');
 *
 *      var firstRepeat =
 *          container.element(by.repeater('contact in contacts').row(0));
 *      var secondRepeat =
 *          container.element(by.repeater('contact in contacts').row(1));
 *
 *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))
 *          .toBe('408 555 1212');
 *      expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))
 *          .toBe('john.smith@example.org');
 *
 *      firstRepeat.element(by.linkText('clear')).click();
 *
 *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))
 *          .toBe('');
 *
 *      container.element(by.linkText('add')).click();
 *
 *      expect(container.element(by.repeater('contact in contacts').row(2))
 *          .element(by.model('contact.value'))
 *          .getAttribute('value'))
 *          .toBe('yourname@example.org');
 *    });
 *  </file>
 *</example>

 */
  var ngControllerDirective = [function () {
        return {
          scope: true,
          controller: '@',
          priority: 500
        };
      }];
  /**
 * @ngdoc directive
 * @name ngCsp
 *
 * @element html
 * @description
 * Enables [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) support.
 *
 * This is necessary when developing things like Google Chrome Extensions.
 *
 * CSP forbids apps to use `eval` or `Function(string)` generated functions (among other things).
 * For Angular to be CSP compatible there are only two things that we need to do differently:
 *
 * - don't use `Function` constructor to generate optimized value getters
 * - don't inject custom stylesheet into the document
 *
 * AngularJS uses `Function(string)` generated functions as a speed optimization. Applying the `ngCsp`
 * directive will cause Angular to use CSP compatibility mode. When this mode is on AngularJS will
 * evaluate all expressions up to 30% slower than in non-CSP mode, but no security violations will
 * be raised.
 *
 * CSP forbids JavaScript to inline stylesheet rules. In non CSP mode Angular automatically
 * includes some CSS rules (e.g. {@link ng.directive:ngCloak ngCloak}).
 * To make those directives work in CSP mode, include the `angular-csp.css` manually.
 *
 * Angular tries to autodetect if CSP is active and automatically turn on the CSP-safe mode. This
 * autodetection however triggers a CSP error to be logged in the console:
 *
 * ```
 * Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of
 * script in the following Content Security Policy directive: "default-src 'self'". Note that
 * 'script-src' was not explicitly set, so 'default-src' is used as a fallback.
 * ```
 *
 * This error is harmless but annoying. To prevent the error from showing up, put the `ngCsp`
 * directive on the root element of the application or on the `angular.js` script tag, whichever
 * appears first in the html document.
 *
 * *Note: This directive is only available in the `ng-csp` and `data-ng-csp` attribute form.*
 *
 * @example
 * This example shows how to apply the `ngCsp` directive to the `html` tag.
   ```html
     <!doctype html>
     <html ng-app ng-csp>
     ...
     ...
     </html>
   ```
 */
  // ngCsp is not implemented as a proper directive any more, because we need it be processed while we
  // bootstrap the system (before $parse is instantiated), for this reason we just have
  // the csp.isActive() fn that looks for ng-csp attribute anywhere in the current doc
  /**
 * @ngdoc directive
 * @name ngClick
 *
 * @description
 * The ngClick directive allows you to specify custom behavior when
 * an element is clicked.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngClick {@link guide/expression Expression} to evaluate upon
 * click. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example>
     <file name="index.html">
      <button ng-click="count = count + 1" ng-init="count=0">
        Increment
      </button>
      <span>
        count: {{count}}
      <span>
     </file>
     <file name="protractor.js" type="protractor">
       it('should check ng-click', function() {
         expect(element(by.binding('count')).getText()).toMatch('0');
         element(by.css('button')).click();
         expect(element(by.binding('count')).getText()).toMatch('1');
       });
     </file>
   </example>
 */
  /*
 * A collection of directives that allows creation of custom event handlers that are defined as
 * angular expressions and are compiled and executed within the current scope.
 */
  var ngEventDirectives = {};
  // For events that might fire synchronously during DOM manipulation
  // we need to execute their event handlers asynchronously using $evalAsync,
  // so that they are not executed in an inconsistent state.
  var forceAsyncEvents = {
      'blur': true,
      'focus': true
    };
  forEach('click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste'.split(' '), function (eventName) {
    var directiveName = directiveNormalize('ng-' + eventName);
    ngEventDirectives[directiveName] = [
      '$parse',
      '$rootScope',
      function ($parse, $rootScope) {
        return {
          compile: function ($element, attr) {
            // We expose the powerful $event object on the scope that provides access to the Window,
            // etc. that isn't protected by the fast paths in $parse.  We explicitly request better
            // checks at the cost of speed since event handler expressions are not executed as
            // frequently as regular change detection.
            var fn = $parse(attr[directiveName], true);
            return function ngEventHandler(scope, element) {
              element.on(eventName, function (event) {
                var callback = function () {
                  fn(scope, { $event: event });
                };
                if (forceAsyncEvents[eventName] && $rootScope.$$phase) {
                  scope.$evalAsync(callback);
                } else {
                  scope.$apply(callback);
                }
              });
            };
          }
        };
      }
    ];
  });
  /**
 * @ngdoc directive
 * @name ngDblclick
 *
 * @description
 * The `ngDblclick` directive allows you to specify custom behavior on a dblclick event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngDblclick {@link guide/expression Expression} to evaluate upon
 * a dblclick. (The Event object is available as `$event`)
 *
 * @example
   <example>
     <file name="index.html">
      <button ng-dblclick="count = count + 1" ng-init="count=0">
        Increment (on double click)
      </button>
      count: {{count}}
     </file>
   </example>
 */
  /**
 * @ngdoc directive
 * @name ngMousedown
 *
 * @description
 * The ngMousedown directive allows you to specify custom behavior on mousedown event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngMousedown {@link guide/expression Expression} to evaluate upon
 * mousedown. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example>
     <file name="index.html">
      <button ng-mousedown="count = count + 1" ng-init="count=0">
        Increment (on mouse down)
      </button>
      count: {{count}}
     </file>
   </example>
 */
  /**
 * @ngdoc directive
 * @name ngMouseup
 *
 * @description
 * Specify custom behavior on mouseup event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngMouseup {@link guide/expression Expression} to evaluate upon
 * mouseup. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example>
     <file name="index.html">
      <button ng-mouseup="count = count + 1" ng-init="count=0">
        Increment (on mouse up)
      </button>
      count: {{count}}
     </file>
   </example>
 */
  /**
 * @ngdoc directive
 * @name ngMouseover
 *
 * @description
 * Specify custom behavior on mouseover event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngMouseover {@link guide/expression Expression} to evaluate upon
 * mouseover. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example>
     <file name="index.html">
      <button ng-mouseover="count = count + 1" ng-init="count=0">
        Increment (when mouse is over)
      </button>
      count: {{count}}
     </file>
   </example>
 */
  /**
 * @ngdoc directive
 * @name ngMouseenter
 *
 * @description
 * Specify custom behavior on mouseenter event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngMouseenter {@link guide/expression Expression} to evaluate upon
 * mouseenter. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example>
     <file name="index.html">
      <button ng-mouseenter="count = count + 1" ng-init="count=0">
        Increment (when mouse enters)
      </button>
      count: {{count}}
     </file>
   </example>
 */
  /**
 * @ngdoc directive
 * @name ngMouseleave
 *
 * @description
 * Specify custom behavior on mouseleave event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngMouseleave {@link guide/expression Expression} to evaluate upon
 * mouseleave. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example>
     <file name="index.html">
      <button ng-mouseleave="count = count + 1" ng-init="count=0">
        Increment (when mouse leaves)
      </button>
      count: {{count}}
     </file>
   </example>
 */
  /**
 * @ngdoc directive
 * @name ngMousemove
 *
 * @description
 * Specify custom behavior on mousemove event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngMousemove {@link guide/expression Expression} to evaluate upon
 * mousemove. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example>
     <file name="index.html">
      <button ng-mousemove="count = count + 1" ng-init="count=0">
        Increment (when mouse moves)
      </button>
      count: {{count}}
     </file>
   </example>
 */
  /**
 * @ngdoc directive
 * @name ngKeydown
 *
 * @description
 * Specify custom behavior on keydown event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngKeydown {@link guide/expression Expression} to evaluate upon
 * keydown. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)
 *
 * @example
   <example>
     <file name="index.html">
      <input ng-keydown="count = count + 1" ng-init="count=0">
      key down count: {{count}}
     </file>
   </example>
 */
  /**
 * @ngdoc directive
 * @name ngKeyup
 *
 * @description
 * Specify custom behavior on keyup event.
 *
 * @element ANY
 * @priority 0
 * @param {expression} ngKeyup {@link guide/expression Expression} to evaluate upon
 * keyup. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)
 *
 * @example
   <example>
     <file name="index.html">
       <p>Typing in the input box below updates the key count</p>
       <input ng-keyup="count = count + 1" ng-init="count=0"> key up count: {{count}}

       <p>Typing in the input box below updates the keycode</p>
       <input ng-keyup="event=$event">
       <p>event keyCode: {{ event.keyCode }}</p>
       <p>event altKey: {{ event.altKey }}</p>
     </file>
   </example>
 */
  /**
 * @ngdoc directive
 * @name ngKeypress
 *
 * @description
 * Specify custom behavior on keypress event.
 *
 * @element ANY
 * @param {expression} ngKeypress {@link guide/expression Expression} to evaluate upon
 * keypress. ({@link guide/expression#-event- Event object is available as `$event`}
 * and can be interrogated for keyCode, altKey, etc.)
 *
 * @example
   <example>
     <file name="index.html">
      <input ng-keypress="count = count + 1" ng-init="count=0">
      key press count: {{count}}
     </file>
   </example>
 */
  /**
 * @ngdoc directive
 * @name ngSubmit
 *
 * @description
 * Enables binding angular expressions to onsubmit events.
 *
 * Additionally it prevents the default action (which for form means sending the request to the
 * server and reloading the current page), but only if the form does not contain `action`,
 * `data-action`, or `x-action` attributes.
 *
 * <div class="alert alert-warning">
 * **Warning:** Be careful not to cause "double-submission" by using both the `ngClick` and
 * `ngSubmit` handlers together. See the
 * {@link form#submitting-a-form-and-preventing-the-default-action `form` directive documentation}
 * for a detailed discussion of when `ngSubmit` may be triggered.
 * </div>
 *
 * @element form
 * @priority 0
 * @param {expression} ngSubmit {@link guide/expression Expression} to eval.
 * ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example module="submitExample">
     <file name="index.html">
      <script>
        angular.module('submitExample', [])
          .controller('ExampleController', ['$scope', function($scope) {
            $scope.list = [];
            $scope.text = 'hello';
            $scope.submit = function() {
              if ($scope.text) {
                $scope.list.push(this.text);
                $scope.text = '';
              }
            };
          }]);
      </script>
      <form ng-submit="submit()" ng-controller="ExampleController">
        Enter text and hit enter:
        <input type="text" ng-model="text" name="text" />
        <input type="submit" id="submit" value="Submit" />
        <pre>list={{list}}</pre>
      </form>
     </file>
     <file name="protractor.js" type="protractor">
       it('should check ng-submit', function() {
         expect(element(by.binding('list')).getText()).toBe('list=[]');
         element(by.css('#submit')).click();
         expect(element(by.binding('list')).getText()).toContain('hello');
         expect(element(by.model('text')).getAttribute('value')).toBe('');
       });
       it('should ignore empty strings', function() {
         expect(element(by.binding('list')).getText()).toBe('list=[]');
         element(by.css('#submit')).click();
         element(by.css('#submit')).click();
         expect(element(by.binding('list')).getText()).toContain('hello');
        });
     </file>
   </example>
 */
  /**
 * @ngdoc directive
 * @name ngFocus
 *
 * @description
 * Specify custom behavior on focus event.
 *
 * Note: As the `focus` event is executed synchronously when calling `input.focus()`
 * AngularJS executes the expression using `scope.$evalAsync` if the event is fired
 * during an `$apply` to ensure a consistent state.
 *
 * @element window, input, select, textarea, a
 * @priority 0
 * @param {expression} ngFocus {@link guide/expression Expression} to evaluate upon
 * focus. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
 * See {@link ng.directive:ngClick ngClick}
 */
  /**
 * @ngdoc directive
 * @name ngBlur
 *
 * @description
 * Specify custom behavior on blur event.
 *
 * A [blur event](https://developer.mozilla.org/en-US/docs/Web/Events/blur) fires when
 * an element has lost focus.
 *
 * Note: As the `blur` event is executed synchronously also during DOM manipulations
 * (e.g. removing a focussed input),
 * AngularJS executes the expression using `scope.$evalAsync` if the event is fired
 * during an `$apply` to ensure a consistent state.
 *
 * @element window, input, select, textarea, a
 * @priority 0
 * @param {expression} ngBlur {@link guide/expression Expression} to evaluate upon
 * blur. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
 * See {@link ng.directive:ngClick ngClick}
 */
  /**
 * @ngdoc directive
 * @name ngCopy
 *
 * @description
 * Specify custom behavior on copy event.
 *
 * @element window, input, select, textarea, a
 * @priority 0
 * @param {expression} ngCopy {@link guide/expression Expression} to evaluate upon
 * copy. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example>
     <file name="index.html">
      <input ng-copy="copied=true" ng-init="copied=false; value='copy me'" ng-model="value">
      copied: {{copied}}
     </file>
   </example>
 */
  /**
 * @ngdoc directive
 * @name ngCut
 *
 * @description
 * Specify custom behavior on cut event.
 *
 * @element window, input, select, textarea, a
 * @priority 0
 * @param {expression} ngCut {@link guide/expression Expression} to evaluate upon
 * cut. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example>
     <file name="index.html">
      <input ng-cut="cut=true" ng-init="cut=false; value='cut me'" ng-model="value">
      cut: {{cut}}
     </file>
   </example>
 */
  /**
 * @ngdoc directive
 * @name ngPaste
 *
 * @description
 * Specify custom behavior on paste event.
 *
 * @element window, input, select, textarea, a
 * @priority 0
 * @param {expression} ngPaste {@link guide/expression Expression} to evaluate upon
 * paste. ({@link guide/expression#-event- Event object is available as `$event`})
 *
 * @example
   <example>
     <file name="index.html">
      <input ng-paste="paste=true" ng-init="paste=false" placeholder='paste here'>
      pasted: {{paste}}
     </file>
   </example>
 */
  /**
 * @ngdoc directive
 * @name ngIf
 * @restrict A
 *
 * @description
 * The `ngIf` directive removes or recreates a portion of the DOM tree based on an
 * {expression}. If the expression assigned to `ngIf` evaluates to a false
 * value then the element is removed from the DOM, otherwise a clone of the
 * element is reinserted into the DOM.
 *
 * `ngIf` differs from `ngShow` and `ngHide` in that `ngIf` completely removes and recreates the
 * element in the DOM rather than changing its visibility via the `display` css property.  A common
 * case when this difference is significant is when using css selectors that rely on an element's
 * position within the DOM, such as the `:first-child` or `:last-child` pseudo-classes.
 *
 * Note that when an element is removed using `ngIf` its scope is destroyed and a new scope
 * is created when the element is restored.  The scope created within `ngIf` inherits from
 * its parent scope using
 * [prototypal inheritance](https://github.com/angular/angular.js/wiki/Understanding-Scopes#javascript-prototypal-inheritance).
 * An important implication of this is if `ngModel` is used within `ngIf` to bind to
 * a javascript primitive defined in the parent scope. In this case any modifications made to the
 * variable within the child scope will override (hide) the value in the parent scope.
 *
 * Also, `ngIf` recreates elements using their compiled state. An example of this behavior
 * is if an element's class attribute is directly modified after it's compiled, using something like
 * jQuery's `.addClass()` method, and the element is later removed. When `ngIf` recreates the element
 * the added class will be lost because the original compiled state is used to regenerate the element.
 *
 * Additionally, you can provide animations via the `ngAnimate` module to animate the `enter`
 * and `leave` effects.
 *
 * @animations
 * enter - happens just after the `ngIf` contents change and a new DOM element is created and injected into the `ngIf` container
 * leave - happens just before the `ngIf` contents are removed from the DOM
 *
 * @element ANY
 * @scope
 * @priority 600
 * @param {expression} ngIf If the {@link guide/expression expression} is falsy then
 *     the element is removed from the DOM tree. If it is truthy a copy of the compiled
 *     element is added to the DOM tree.
 *
 * @example
  <example module="ngAnimate" deps="angular-animate.js" animations="true">
    <file name="index.html">
      Click me: <input type="checkbox" ng-model="checked" ng-init="checked=true" /><br/>
      Show when checked:
      <span ng-if="checked" class="animate-if">
        I'm removed when the checkbox is unchecked.
      </span>
    </file>
    <file name="animations.css">
      .animate-if {
        background:white;
        border:1px solid black;
        padding:10px;
      }

      .animate-if.ng-enter, .animate-if.ng-leave {
        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;
        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;
      }

      .animate-if.ng-enter,
      .animate-if.ng-leave.ng-leave-active {
        opacity:0;
      }

      .animate-if.ng-leave,
      .animate-if.ng-enter.ng-enter-active {
        opacity:1;
      }
    </file>
  </example>
 */
  var ngIfDirective = [
      '$animate',
      function ($animate) {
        return {
          transclude: 'element',
          priority: 600,
          terminal: true,
          restrict: 'A',
          $$tlb: true,
          link: function ($scope, $element, $attr, ctrl, $transclude) {
            var block, childScope, previousElements;
            $scope.$watch($attr.ngIf, function ngIfWatchAction(value) {
              if (toBoolean(value)) {
                if (!childScope) {
                  childScope = $scope.$new();
                  $transclude(childScope, function (clone) {
                    clone[clone.length++] = document.createComment(' end ngIf: ' + $attr.ngIf + ' ');
                    // Note: We only need the first/last node of the cloned nodes.
                    // However, we need to keep the reference to the jqlite wrapper as it might be changed later
                    // by a directive with templateUrl when its template arrives.
                    block = { clone: clone };
                    $animate.enter(clone, $element.parent(), $element);
                  });
                }
              } else {
                if (previousElements) {
                  previousElements.remove();
                  previousElements = null;
                }
                if (childScope) {
                  childScope.$destroy();
                  childScope = null;
                }
                if (block) {
                  previousElements = getBlockElements(block.clone);
                  $animate.leave(previousElements, function () {
                    previousElements = null;
                  });
                  block = null;
                }
              }
            });
          }
        };
      }
    ];
  /**
 * @ngdoc directive
 * @name ngInclude
 * @restrict ECA
 *
 * @description
 * Fetches, compiles and includes an external HTML fragment.
 *
 * By default, the template URL is restricted to the same domain and protocol as the
 * application document. This is done by calling {@link ng.$sce#getTrustedResourceUrl
 * $sce.getTrustedResourceUrl} on it. To load templates from other domains or protocols
 * you may either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist them} or
 * [wrap them](ng.$sce#trustAsResourceUrl) as trusted values. Refer to Angular's {@link
 * ng.$sce Strict Contextual Escaping}.
 *
 * In addition, the browser's
 * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)
 * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)
 * policy may further restrict whether the template is successfully loaded.
 * For example, `ngInclude` won't work for cross-domain requests on all browsers and for `file://`
 * access on some browsers.
 *
 * @animations
 * enter - animation is used to bring new content into the browser.
 * leave - animation is used to animate existing content away.
 *
 * The enter and leave animation occur concurrently.
 *
 * @scope
 * @priority 400
 *
 * @param {string} ngInclude|src angular expression evaluating to URL. If the source is a string constant,
 *                 make sure you wrap it in **single** quotes, e.g. `src="'myPartialTemplate.html'"`.
 * @param {string=} onload Expression to evaluate when a new partial is loaded.
 *
 * @param {string=} autoscroll Whether `ngInclude` should call {@link ng.$anchorScroll
 *                  $anchorScroll} to scroll the viewport after the content is loaded.
 *
 *                  - If the attribute is not set, disable scrolling.
 *                  - If the attribute is set without value, enable scrolling.
 *                  - Otherwise enable scrolling only if the expression evaluates to truthy value.
 *
 * @example
  <example module="includeExample" deps="angular-animate.js" animations="true">
    <file name="index.html">
     <div ng-controller="ExampleController">
       <select ng-model="template" ng-options="t.name for t in templates">
        <option value="">(blank)</option>
       </select>
       url of the template: <tt>{{template.url}}</tt>
       <hr/>
       <div class="slide-animate-container">
         <div class="slide-animate" ng-include="template.url"></div>
       </div>
     </div>
    </file>
    <file name="script.js">
      angular.module('includeExample', ['ngAnimate'])
        .controller('ExampleController', ['$scope', function($scope) {
          $scope.templates =
            [ { name: 'template1.html', url: 'template1.html'},
              { name: 'template2.html', url: 'template2.html'} ];
          $scope.template = $scope.templates[0];
        }]);
     </file>
    <file name="template1.html">
      Content of template1.html
    </file>
    <file name="template2.html">
      Content of template2.html
    </file>
    <file name="animations.css">
      .slide-animate-container {
        position:relative;
        background:white;
        border:1px solid black;
        height:40px;
        overflow:hidden;
      }

      .slide-animate {
        padding:10px;
      }

      .slide-animate.ng-enter, .slide-animate.ng-leave {
        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;
        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;

        position:absolute;
        top:0;
        left:0;
        right:0;
        bottom:0;
        display:block;
        padding:10px;
      }

      .slide-animate.ng-enter {
        top:-50px;
      }
      .slide-animate.ng-enter.ng-enter-active {
        top:0;
      }

      .slide-animate.ng-leave {
        top:0;
      }
      .slide-animate.ng-leave.ng-leave-active {
        top:50px;
      }
    </file>
    <file name="protractor.js" type="protractor">
      var templateSelect = element(by.model('template'));
      var includeElem = element(by.css('[ng-include]'));

      it('should load template1.html', function() {
        expect(includeElem.getText()).toMatch(/Content of template1.html/);
      });

      it('should load template2.html', function() {
        if (browser.params.browser == 'firefox') {
          // Firefox can't handle using selects
          // See https://github.com/angular/protractor/issues/480
          return;
        }
        templateSelect.click();
        templateSelect.all(by.css('option')).get(2).click();
        expect(includeElem.getText()).toMatch(/Content of template2.html/);
      });

      it('should change to blank', function() {
        if (browser.params.browser == 'firefox') {
          // Firefox can't handle using selects
          return;
        }
        templateSelect.click();
        templateSelect.all(by.css('option')).get(0).click();
        expect(includeElem.isPresent()).toBe(false);
      });
    </file>
  </example>
 */
  /**
 * @ngdoc event
 * @name ngInclude#$includeContentRequested
 * @eventType emit on the scope ngInclude was declared in
 * @description
 * Emitted every time the ngInclude content is requested.
 */
  /**
 * @ngdoc event
 * @name ngInclude#$includeContentLoaded
 * @eventType emit on the current ngInclude scope
 * @description
 * Emitted every time the ngInclude content is reloaded.
 */
  var ngIncludeDirective = [
      '$http',
      '$templateCache',
      '$anchorScroll',
      '$animate',
      '$sce',
      function ($http, $templateCache, $anchorScroll, $animate, $sce) {
        return {
          restrict: 'ECA',
          priority: 400,
          terminal: true,
          transclude: 'element',
          controller: angular.noop,
          compile: function (element, attr) {
            var srcExp = attr.ngInclude || attr.src, onloadExp = attr.onload || '', autoScrollExp = attr.autoscroll;
            return function (scope, $element, $attr, ctrl, $transclude) {
              var changeCounter = 0, currentScope, previousElement, currentElement;
              var cleanupLastIncludeContent = function () {
                if (previousElement) {
                  previousElement.remove();
                  previousElement = null;
                }
                if (currentScope) {
                  currentScope.$destroy();
                  currentScope = null;
                }
                if (currentElement) {
                  $animate.leave(currentElement, function () {
                    previousElement = null;
                  });
                  previousElement = currentElement;
                  currentElement = null;
                }
              };
              scope.$watch($sce.parseAsResourceUrl(srcExp), function ngIncludeWatchAction(src) {
                var afterAnimation = function () {
                  if (isDefined(autoScrollExp) && (!autoScrollExp || scope.$eval(autoScrollExp))) {
                    $anchorScroll();
                  }
                };
                var thisChangeId = ++changeCounter;
                if (src) {
                  $http.get(src, { cache: $templateCache }).success(function (response) {
                    if (thisChangeId !== changeCounter)
                      return;
                    var newScope = scope.$new();
                    ctrl.template = response;
                    // Note: This will also link all children of ng-include that were contained in the original
                    // html. If that content contains controllers, ... they could pollute/change the scope.
                    // However, using ng-include on an element with additional content does not make sense...
                    // Note: We can't remove them in the cloneAttchFn of $transclude as that
                    // function is called before linking the content, which would apply child
                    // directives to non existing elements.
                    var clone = $transclude(newScope, function (clone) {
                        cleanupLastIncludeContent();
                        $animate.enter(clone, null, $element, afterAnimation);
                      });
                    currentScope = newScope;
                    currentElement = clone;
                    currentScope.$emit('$includeContentLoaded');
                    scope.$eval(onloadExp);
                  }).error(function () {
                    if (thisChangeId === changeCounter)
                      cleanupLastIncludeContent();
                  });
                  scope.$emit('$includeContentRequested');
                } else {
                  cleanupLastIncludeContent();
                  ctrl.template = null;
                }
              });
            };
          }
        };
      }
    ];
  // This directive is called during the $transclude call of the first `ngInclude` directive.
  // It will replace and compile the content of the element with the loaded template.
  // We need this directive so that the element content is already filled when
  // the link function of another directive on the same element as ngInclude
  // is called.
  var ngIncludeFillContentDirective = [
      '$compile',
      function ($compile) {
        return {
          restrict: 'ECA',
          priority: -400,
          require: 'ngInclude',
          link: function (scope, $element, $attr, ctrl) {
            $element.html(ctrl.template);
            $compile($element.contents())(scope);
          }
        };
      }
    ];
  /**
 * @ngdoc directive
 * @name ngInit
 * @restrict AC
 *
 * @description
 * The `ngInit` directive allows you to evaluate an expression in the
 * current scope.
 *
 * <div class="alert alert-error">
 * The only appropriate use of `ngInit` is for aliasing special properties of
 * {@link ng.directive:ngRepeat `ngRepeat`}, as seen in the demo below. Besides this case, you
 * should use {@link guide/controller controllers} rather than `ngInit`
 * to initialize values on a scope.
 * </div>
 * <div class="alert alert-warning">
 * **Note**: If you have assignment in `ngInit` along with {@link ng.$filter `$filter`}, make
 * sure you have parenthesis for correct precedence:
 * <pre class="prettyprint">
 *   <div ng-init="test1 = (data | orderBy:'name')"></div>
 * </pre>
 * </div>
 *
 * @priority 450
 *
 * @element ANY
 * @param {expression} ngInit {@link guide/expression Expression} to eval.
 *
 * @example
   <example module="initExample">
     <file name="index.html">
   <script>
     angular.module('initExample', [])
       .controller('ExampleController', ['$scope', function($scope) {
         $scope.list = [['a', 'b'], ['c', 'd']];
       }]);
   </script>
   <div ng-controller="ExampleController">
     <div ng-repeat="innerList in list" ng-init="outerIndex = $index">
       <div ng-repeat="value in innerList" ng-init="innerIndex = $index">
          <span class="example-init">list[ {{outerIndex}} ][ {{innerIndex}} ] = {{value}};</span>
       </div>
     </div>
   </div>
     </file>
     <file name="protractor.js" type="protractor">
       it('should alias index positions', function() {
         var elements = element.all(by.css('.example-init'));
         expect(elements.get(0).getText()).toBe('list[ 0 ][ 0 ] = a;');
         expect(elements.get(1).getText()).toBe('list[ 0 ][ 1 ] = b;');
         expect(elements.get(2).getText()).toBe('list[ 1 ][ 0 ] = c;');
         expect(elements.get(3).getText()).toBe('list[ 1 ][ 1 ] = d;');
       });
     </file>
   </example>
 */
  var ngInitDirective = ngDirective({
      priority: 450,
      compile: function () {
        return {
          pre: function (scope, element, attrs) {
            scope.$eval(attrs.ngInit);
          }
        };
      }
    });
  /**
 * @ngdoc directive
 * @name ngNonBindable
 * @restrict AC
 * @priority 1000
 *
 * @description
 * The `ngNonBindable` directive tells Angular not to compile or bind the contents of the current
 * DOM element. This is useful if the element contains what appears to be Angular directives and
 * bindings but which should be ignored by Angular. This could be the case if you have a site that
 * displays snippets of code, for instance.
 *
 * @element ANY
 *
 * @example
 * In this example there are two locations where a simple interpolation binding (`{{}}`) is present,
 * but the one wrapped in `ngNonBindable` is left alone.
 *
 * @example
    <example>
      <file name="index.html">
        <div>Normal: {{1 + 2}}</div>
        <div ng-non-bindable>Ignored: {{1 + 2}}</div>
      </file>
      <file name="protractor.js" type="protractor">
       it('should check ng-non-bindable', function() {
         expect(element(by.binding('1 + 2')).getText()).toContain('3');
         expect(element.all(by.css('div')).last().getText()).toMatch(/1 \+ 2/);
       });
      </file>
    </example>
 */
  var ngNonBindableDirective = ngDirective({
      terminal: true,
      priority: 1000
    });
  /**
 * @ngdoc directive
 * @name ngPluralize
 * @restrict EA
 *
 * @description
 * `ngPluralize` is a directive that displays messages according to en-US localization rules.
 * These rules are bundled with angular.js, but can be overridden
 * (see {@link guide/i18n Angular i18n} dev guide). You configure ngPluralize directive
 * by specifying the mappings between
 * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)
 * and the strings to be displayed.
 *
 * # Plural categories and explicit number rules
 * There are two
 * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)
 * in Angular's default en-US locale: "one" and "other".
 *
 * While a plural category may match many numbers (for example, in en-US locale, "other" can match
 * any number that is not 1), an explicit number rule can only match one number. For example, the
 * explicit number rule for "3" matches the number 3. There are examples of plural categories
 * and explicit number rules throughout the rest of this documentation.
 *
 * # Configuring ngPluralize
 * You configure ngPluralize by providing 2 attributes: `count` and `when`.
 * You can also provide an optional attribute, `offset`.
 *
 * The value of the `count` attribute can be either a string or an {@link guide/expression
 * Angular expression}; these are evaluated on the current scope for its bound value.
 *
 * The `when` attribute specifies the mappings between plural categories and the actual
 * string to be displayed. The value of the attribute should be a JSON object.
 *
 * The following example shows how to configure ngPluralize:
 *
 * ```html
 * <ng-pluralize count="personCount"
                 when="{'0': 'Nobody is viewing.',
 *                      'one': '1 person is viewing.',
 *                      'other': '{} people are viewing.'}">
 * </ng-pluralize>
 *```
 *
 * In the example, `"0: Nobody is viewing."` is an explicit number rule. If you did not
 * specify this rule, 0 would be matched to the "other" category and "0 people are viewing"
 * would be shown instead of "Nobody is viewing". You can specify an explicit number rule for
 * other numbers, for example 12, so that instead of showing "12 people are viewing", you can
 * show "a dozen people are viewing".
 *
 * You can use a set of closed braces (`{}`) as a placeholder for the number that you want substituted
 * into pluralized strings. In the previous example, Angular will replace `{}` with
 * <span ng-non-bindable>`{{personCount}}`</span>. The closed braces `{}` is a placeholder
 * for <span ng-non-bindable>{{numberExpression}}</span>.
 *
 * # Configuring ngPluralize with offset
 * The `offset` attribute allows further customization of pluralized text, which can result in
 * a better user experience. For example, instead of the message "4 people are viewing this document",
 * you might display "John, Kate and 2 others are viewing this document".
 * The offset attribute allows you to offset a number by any desired value.
 * Let's take a look at an example:
 *
 * ```html
 * <ng-pluralize count="personCount" offset=2
 *               when="{'0': 'Nobody is viewing.',
 *                      '1': '{{person1}} is viewing.',
 *                      '2': '{{person1}} and {{person2}} are viewing.',
 *                      'one': '{{person1}}, {{person2}} and one other person are viewing.',
 *                      'other': '{{person1}}, {{person2}} and {} other people are viewing.'}">
 * </ng-pluralize>
 * ```
 *
 * Notice that we are still using two plural categories(one, other), but we added
 * three explicit number rules 0, 1 and 2.
 * When one person, perhaps John, views the document, "John is viewing" will be shown.
 * When three people view the document, no explicit number rule is found, so
 * an offset of 2 is taken off 3, and Angular uses 1 to decide the plural category.
 * In this case, plural category 'one' is matched and "John, Mary and one other person are viewing"
 * is shown.
 *
 * Note that when you specify offsets, you must provide explicit number rules for
 * numbers from 0 up to and including the offset. If you use an offset of 3, for example,
 * you must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for
 * plural categories "one" and "other".
 *
 * @param {string|expression} count The variable to be bound to.
 * @param {string} when The mapping between plural category to its corresponding strings.
 * @param {number=} offset Offset to deduct from the total number.
 *
 * @example
    <example module="pluralizeExample">
      <file name="index.html">
        <script>
          angular.module('pluralizeExample', [])
            .controller('ExampleController', ['$scope', function($scope) {
              $scope.person1 = 'Igor';
              $scope.person2 = 'Misko';
              $scope.personCount = 1;
            }]);
        </script>
        <div ng-controller="ExampleController">
          Person 1:<input type="text" ng-model="person1" value="Igor" /><br/>
          Person 2:<input type="text" ng-model="person2" value="Misko" /><br/>
          Number of People:<input type="text" ng-model="personCount" value="1" /><br/>

          <!--- Example with simple pluralization rules for en locale --->
          Without Offset:
          <ng-pluralize count="personCount"
                        when="{'0': 'Nobody is viewing.',
                               'one': '1 person is viewing.',
                               'other': '{} people are viewing.'}">
          </ng-pluralize><br>

          <!--- Example with offset --->
          With Offset(2):
          <ng-pluralize count="personCount" offset=2
                        when="{'0': 'Nobody is viewing.',
                               '1': '{{person1}} is viewing.',
                               '2': '{{person1}} and {{person2}} are viewing.',
                               'one': '{{person1}}, {{person2}} and one other person are viewing.',
                               'other': '{{person1}}, {{person2}} and {} other people are viewing.'}">
          </ng-pluralize>
        </div>
      </file>
      <file name="protractor.js" type="protractor">
        it('should show correct pluralized string', function() {
          var withoutOffset = element.all(by.css('ng-pluralize')).get(0);
          var withOffset = element.all(by.css('ng-pluralize')).get(1);
          var countInput = element(by.model('personCount'));

          expect(withoutOffset.getText()).toEqual('1 person is viewing.');
          expect(withOffset.getText()).toEqual('Igor is viewing.');

          countInput.clear();
          countInput.sendKeys('0');

          expect(withoutOffset.getText()).toEqual('Nobody is viewing.');
          expect(withOffset.getText()).toEqual('Nobody is viewing.');

          countInput.clear();
          countInput.sendKeys('2');

          expect(withoutOffset.getText()).toEqual('2 people are viewing.');
          expect(withOffset.getText()).toEqual('Igor and Misko are viewing.');

          countInput.clear();
          countInput.sendKeys('3');

          expect(withoutOffset.getText()).toEqual('3 people are viewing.');
          expect(withOffset.getText()).toEqual('Igor, Misko and one other person are viewing.');

          countInput.clear();
          countInput.sendKeys('4');

          expect(withoutOffset.getText()).toEqual('4 people are viewing.');
          expect(withOffset.getText()).toEqual('Igor, Misko and 2 other people are viewing.');
        });
        it('should show data-bound names', function() {
          var withOffset = element.all(by.css('ng-pluralize')).get(1);
          var personCount = element(by.model('personCount'));
          var person1 = element(by.model('person1'));
          var person2 = element(by.model('person2'));
          personCount.clear();
          personCount.sendKeys('4');
          person1.clear();
          person1.sendKeys('Di');
          person2.clear();
          person2.sendKeys('Vojta');
          expect(withOffset.getText()).toEqual('Di, Vojta and 2 other people are viewing.');
        });
      </file>
    </example>
 */
  var ngPluralizeDirective = [
      '$locale',
      '$interpolate',
      function ($locale, $interpolate) {
        var BRACE = /{}/g;
        return {
          restrict: 'EA',
          link: function (scope, element, attr) {
            var numberExp = attr.count, whenExp = attr.$attr.when && element.attr(attr.$attr.when),
              // we have {{}} in attrs
              offset = attr.offset || 0, whens = scope.$eval(whenExp) || {}, whensExpFns = {}, startSymbol = $interpolate.startSymbol(), endSymbol = $interpolate.endSymbol(), isWhen = /^when(Minus)?(.+)$/;
            forEach(attr, function (expression, attributeName) {
              if (isWhen.test(attributeName)) {
                whens[lowercase(attributeName.replace('when', '').replace('Minus', '-'))] = element.attr(attr.$attr[attributeName]);
              }
            });
            forEach(whens, function (expression, key) {
              whensExpFns[key] = $interpolate(expression.replace(BRACE, startSymbol + numberExp + '-' + offset + endSymbol));
            });
            scope.$watch(function ngPluralizeWatch() {
              var value = parseFloat(scope.$eval(numberExp));
              if (!isNaN(value)) {
                //if explicit number rule such as 1, 2, 3... is defined, just use it. Otherwise,
                //check it against pluralization rules in $locale service
                if (!(value in whens))
                  value = $locale.pluralCat(value - offset);
                return whensExpFns[value](scope, element, true);
              } else {
                return '';
              }
            }, function ngPluralizeWatchAction(newVal) {
              element.text(newVal);
            });
          }
        };
      }
    ];
  /**
 * @ngdoc directive
 * @name ngRepeat
 *
 * @description
 * The `ngRepeat` directive instantiates a template once per item from a collection. Each template
 * instance gets its own scope, where the given loop variable is set to the current collection item,
 * and `$index` is set to the item index or key.
 *
 * Special properties are exposed on the local scope of each template instance, including:
 *
 * | Variable  | Type            | Details                                                                     |
 * |-----------|-----------------|-----------------------------------------------------------------------------|
 * | `$index`  | {@type number}  | iterator offset of the repeated element (0..length-1)                       |
 * | `$first`  | {@type boolean} | true if the repeated element is first in the iterator.                      |
 * | `$middle` | {@type boolean} | true if the repeated element is between the first and last in the iterator. |
 * | `$last`   | {@type boolean} | true if the repeated element is last in the iterator.                       |
 * | `$even`   | {@type boolean} | true if the iterator position `$index` is even (otherwise false).           |
 * | `$odd`    | {@type boolean} | true if the iterator position `$index` is odd (otherwise false).            |
 *
 * Creating aliases for these properties is possible with {@link ng.directive:ngInit `ngInit`}.
 * This may be useful when, for instance, nesting ngRepeats.
 *
 * # Special repeat start and end points
 * To repeat a series of elements instead of just one parent element, ngRepeat (as well as other ng directives) supports extending
 * the range of the repeater by defining explicit start and end points by using **ng-repeat-start** and **ng-repeat-end** respectively.
 * The **ng-repeat-start** directive works the same as **ng-repeat**, but will repeat all the HTML code (including the tag it's defined on)
 * up to and including the ending HTML tag where **ng-repeat-end** is placed.
 *
 * The example below makes use of this feature:
 * ```html
 *   <header ng-repeat-start="item in items">
 *     Header {{ item }}
 *   </header>
 *   <div class="body">
 *     Body {{ item }}
 *   </div>
 *   <footer ng-repeat-end>
 *     Footer {{ item }}
 *   </footer>
 * ```
 *
 * And with an input of {@type ['A','B']} for the items variable in the example above, the output will evaluate to:
 * ```html
 *   <header>
 *     Header A
 *   </header>
 *   <div class="body">
 *     Body A
 *   </div>
 *   <footer>
 *     Footer A
 *   </footer>
 *   <header>
 *     Header B
 *   </header>
 *   <div class="body">
 *     Body B
 *   </div>
 *   <footer>
 *     Footer B
 *   </footer>
 * ```
 *
 * The custom start and end points for ngRepeat also support all other HTML directive syntax flavors provided in AngularJS (such
 * as **data-ng-repeat-start**, **x-ng-repeat-start** and **ng:repeat-start**).
 *
 * @animations
 * **.enter** - when a new item is added to the list or when an item is revealed after a filter
 *
 * **.leave** - when an item is removed from the list or when an item is filtered out
 *
 * **.move** - when an adjacent item is filtered out causing a reorder or when the item contents are reordered
 *
 * @element ANY
 * @scope
 * @priority 1000
 * @param {repeat_expression} ngRepeat The expression indicating how to enumerate a collection. These
 *   formats are currently supported:
 *
 *   * `variable in expression` – where variable is the user defined loop variable and `expression`
 *     is a scope expression giving the collection to enumerate.
 *
 *     For example: `album in artist.albums`.
 *
 *   * `(key, value) in expression` – where `key` and `value` can be any user defined identifiers,
 *     and `expression` is the scope expression giving the collection to enumerate.
 *
 *     For example: `(name, age) in {'adam':10, 'amalie':12}`.
 *
 *   * `variable in expression track by tracking_expression` – You can also provide an optional tracking function
 *     which can be used to associate the objects in the collection with the DOM elements. If no tracking function
 *     is specified the ng-repeat associates elements by identity in the collection. It is an error to have
 *     more than one tracking function to resolve to the same key. (This would mean that two distinct objects are
 *     mapped to the same DOM element, which is not possible.)  Filters should be applied to the expression,
 *     before specifying a tracking expression.
 *
 *     For example: `item in items` is equivalent to `item in items track by $id(item)`. This implies that the DOM elements
 *     will be associated by item identity in the array.
 *
 *     For example: `item in items track by $id(item)`. A built in `$id()` function can be used to assign a unique
 *     `$$hashKey` property to each item in the array. This property is then used as a key to associated DOM elements
 *     with the corresponding item in the array by identity. Moving the same object in array would move the DOM
 *     element in the same way in the DOM.
 *
 *     For example: `item in items track by item.id` is a typical pattern when the items come from the database. In this
 *     case the object identity does not matter. Two objects are considered equivalent as long as their `id`
 *     property is same.
 *
 *     For example: `item in items | filter:searchText track by item.id` is a pattern that might be used to apply a filter
 *     to items in conjunction with a tracking expression.
 *
 * @example
 * This example initializes the scope to a list of names and
 * then uses `ngRepeat` to display every person:
  <example module="ngAnimate" deps="angular-animate.js" animations="true">
    <file name="index.html">
      <div ng-init="friends = [
        {name:'John', age:25, gender:'boy'},
        {name:'Jessie', age:30, gender:'girl'},
        {name:'Johanna', age:28, gender:'girl'},
        {name:'Joy', age:15, gender:'girl'},
        {name:'Mary', age:28, gender:'girl'},
        {name:'Peter', age:95, gender:'boy'},
        {name:'Sebastian', age:50, gender:'boy'},
        {name:'Erika', age:27, gender:'girl'},
        {name:'Patrick', age:40, gender:'boy'},
        {name:'Samantha', age:60, gender:'girl'}
      ]">
        I have {{friends.length}} friends. They are:
        <input type="search" ng-model="q" placeholder="filter friends..." />
        <ul class="example-animate-container">
          <li class="animate-repeat" ng-repeat="friend in friends | filter:q">
            [{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.
          </li>
        </ul>
      </div>
    </file>
    <file name="animations.css">
      .example-animate-container {
        background:white;
        border:1px solid black;
        list-style:none;
        margin:0;
        padding:0 10px;
      }

      .animate-repeat {
        line-height:40px;
        list-style:none;
        box-sizing:border-box;
      }

      .animate-repeat.ng-move,
      .animate-repeat.ng-enter,
      .animate-repeat.ng-leave {
        -webkit-transition:all linear 0.5s;
        transition:all linear 0.5s;
      }

      .animate-repeat.ng-leave.ng-leave-active,
      .animate-repeat.ng-move,
      .animate-repeat.ng-enter {
        opacity:0;
        max-height:0;
      }

      .animate-repeat.ng-leave,
      .animate-repeat.ng-move.ng-move-active,
      .animate-repeat.ng-enter.ng-enter-active {
        opacity:1;
        max-height:40px;
      }
    </file>
    <file name="protractor.js" type="protractor">
      var friends = element.all(by.repeater('friend in friends'));

      it('should render initial data set', function() {
        expect(friends.count()).toBe(10);
        expect(friends.get(0).getText()).toEqual('[1] John who is 25 years old.');
        expect(friends.get(1).getText()).toEqual('[2] Jessie who is 30 years old.');
        expect(friends.last().getText()).toEqual('[10] Samantha who is 60 years old.');
        expect(element(by.binding('friends.length')).getText())
            .toMatch("I have 10 friends. They are:");
      });

       it('should update repeater when filter predicate changes', function() {
         expect(friends.count()).toBe(10);

         element(by.model('q')).sendKeys('ma');

         expect(friends.count()).toBe(2);
         expect(friends.get(0).getText()).toEqual('[1] Mary who is 28 years old.');
         expect(friends.last().getText()).toEqual('[2] Samantha who is 60 years old.');
       });
      </file>
    </example>
 */
  var ngRepeatDirective = [
      '$parse',
      '$animate',
      function ($parse, $animate) {
        var NG_REMOVED = '$$NG_REMOVED';
        var ngRepeatMinErr = minErr('ngRepeat');
        return {
          transclude: 'element',
          priority: 1000,
          terminal: true,
          $$tlb: true,
          link: function ($scope, $element, $attr, ctrl, $transclude) {
            var expression = $attr.ngRepeat;
            var match = expression.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?\s*$/), trackByExp, trackByExpGetter, trackByIdExpFn, trackByIdArrayFn, trackByIdObjFn, lhs, rhs, valueIdentifier, keyIdentifier, hashFnLocals = { $id: hashKey };
            if (!match) {
              throw ngRepeatMinErr('iexp', 'Expected expression in form of \'_item_ in _collection_[ track by _id_]\' but got \'{0}\'.', expression);
            }
            lhs = match[1];
            rhs = match[2];
            trackByExp = match[3];
            if (trackByExp) {
              trackByExpGetter = $parse(trackByExp);
              trackByIdExpFn = function (key, value, index) {
                // assign key, value, and $index to the locals so that they can be used in hash functions
                if (keyIdentifier)
                  hashFnLocals[keyIdentifier] = key;
                hashFnLocals[valueIdentifier] = value;
                hashFnLocals.$index = index;
                return trackByExpGetter($scope, hashFnLocals);
              };
            } else {
              trackByIdArrayFn = function (key, value) {
                return hashKey(value);
              };
              trackByIdObjFn = function (key) {
                return key;
              };
            }
            match = lhs.match(/^(?:([\$\w]+)|\(([\$\w]+)\s*,\s*([\$\w]+)\))$/);
            if (!match) {
              throw ngRepeatMinErr('iidexp', '\'_item_\' in \'_item_ in _collection_\' should be an identifier or \'(_key_, _value_)\' expression, but got \'{0}\'.', lhs);
            }
            valueIdentifier = match[3] || match[1];
            keyIdentifier = match[2];
            // Store a list of elements from previous run. This is a hash where key is the item from the
            // iterator, and the value is objects with following properties.
            //   - scope: bound scope
            //   - element: previous element.
            //   - index: position
            var lastBlockMap = {};
            //watch props
            $scope.$watchCollection(rhs, function ngRepeatAction(collection) {
              var index, length, previousNode = $element[0],
                // current position of the node
                nextNode,
                // Same as lastBlockMap but it has the current state. It will become the
                // lastBlockMap on the next iteration.
                nextBlockMap = {}, arrayLength, childScope, key, value,
                // key/value of iteration
                trackById, trackByIdFn, collectionKeys, block,
                // last object information {scope, element, id}
                nextBlockOrder = [], elementsToRemove;
              if (isArrayLike(collection)) {
                collectionKeys = collection;
                trackByIdFn = trackByIdExpFn || trackByIdArrayFn;
              } else {
                trackByIdFn = trackByIdExpFn || trackByIdObjFn;
                // if object, extract keys, sort them and use to determine order of iteration over obj props
                collectionKeys = [];
                for (key in collection) {
                  if (collection.hasOwnProperty(key) && key.charAt(0) != '$') {
                    collectionKeys.push(key);
                  }
                }
                collectionKeys.sort();
              }
              arrayLength = collectionKeys.length;
              // locate existing items
              length = nextBlockOrder.length = collectionKeys.length;
              for (index = 0; index < length; index++) {
                key = collection === collectionKeys ? index : collectionKeys[index];
                value = collection[key];
                trackById = trackByIdFn(key, value, index);
                assertNotHasOwnProperty(trackById, '`track by` id');
                if (lastBlockMap.hasOwnProperty(trackById)) {
                  block = lastBlockMap[trackById];
                  delete lastBlockMap[trackById];
                  nextBlockMap[trackById] = block;
                  nextBlockOrder[index] = block;
                } else if (nextBlockMap.hasOwnProperty(trackById)) {
                  // restore lastBlockMap
                  forEach(nextBlockOrder, function (block) {
                    if (block && block.scope)
                      lastBlockMap[block.id] = block;
                  });
                  // This is a duplicate and we need to throw an error
                  throw ngRepeatMinErr('dupes', 'Duplicates in a repeater are not allowed. Use \'track by\' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}', expression, trackById, toJson(value));
                } else {
                  // new never before seen block
                  nextBlockOrder[index] = { id: trackById };
                  nextBlockMap[trackById] = false;
                }
              }
              // remove existing items
              for (key in lastBlockMap) {
                // lastBlockMap is our own object so we don't need to use special hasOwnPropertyFn
                if (lastBlockMap.hasOwnProperty(key)) {
                  block = lastBlockMap[key];
                  elementsToRemove = getBlockElements(block.clone);
                  $animate.leave(elementsToRemove);
                  forEach(elementsToRemove, function (element) {
                    element[NG_REMOVED] = true;
                  });
                  block.scope.$destroy();
                }
              }
              // we are not using forEach for perf reasons (trying to avoid #call)
              for (index = 0, length = collectionKeys.length; index < length; index++) {
                key = collection === collectionKeys ? index : collectionKeys[index];
                value = collection[key];
                block = nextBlockOrder[index];
                if (nextBlockOrder[index - 1])
                  previousNode = getBlockEnd(nextBlockOrder[index - 1]);
                if (block.scope) {
                  // if we have already seen this object, then we need to reuse the
                  // associated scope/element
                  childScope = block.scope;
                  nextNode = previousNode;
                  do {
                    nextNode = nextNode.nextSibling;
                  } while (nextNode && nextNode[NG_REMOVED]);
                  if (getBlockStart(block) != nextNode) {
                    // existing item which got moved
                    $animate.move(getBlockElements(block.clone), null, jqLite(previousNode));
                  }
                  previousNode = getBlockEnd(block);
                } else {
                  // new item which we don't know about
                  childScope = $scope.$new();
                }
                childScope[valueIdentifier] = value;
                if (keyIdentifier)
                  childScope[keyIdentifier] = key;
                childScope.$index = index;
                childScope.$first = index === 0;
                childScope.$last = index === arrayLength - 1;
                childScope.$middle = !(childScope.$first || childScope.$last);
                // jshint bitwise: false
                childScope.$odd = !(childScope.$even = (index & 1) === 0);
                // jshint bitwise: true
                if (!block.scope) {
                  $transclude(childScope, function (clone) {
                    clone[clone.length++] = document.createComment(' end ngRepeat: ' + expression + ' ');
                    $animate.enter(clone, null, jqLite(previousNode));
                    previousNode = clone;
                    block.scope = childScope;
                    // Note: We only need the first/last node of the cloned nodes.
                    // However, we need to keep the reference to the jqlite wrapper as it might be changed later
                    // by a directive with templateUrl when its template arrives.
                    block.clone = clone;
                    nextBlockMap[block.id] = block;
                  });
                }
              }
              lastBlockMap = nextBlockMap;
            });
          }
        };
        function getBlockStart(block) {
          return block.clone[0];
        }
        function getBlockEnd(block) {
          return block.clone[block.clone.length - 1];
        }
      }
    ];
  /**
 * @ngdoc directive
 * @name ngShow
 *
 * @description
 * The `ngShow` directive shows or hides the given HTML element based on the expression
 * provided to the `ngShow` attribute. The element is shown or hidden by removing or adding
 * the `.ng-hide` CSS class onto the element. The `.ng-hide` CSS class is predefined
 * in AngularJS and sets the display style to none (using an !important flag).
 * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).
 *
 * ```html
 * <!-- when $scope.myValue is truthy (element is visible) -->
 * <div ng-show="myValue"></div>
 *
 * <!-- when $scope.myValue is falsy (element is hidden) -->
 * <div ng-show="myValue" class="ng-hide"></div>
 * ```
 *
 * When the `ngShow` expression evaluates to false then the `.ng-hide` CSS class is added to the class attribute
 * on the element causing it to become hidden. When true, the `.ng-hide` CSS class is removed
 * from the element causing the element not to appear hidden.
 *
 * <div class="alert alert-warning">
 * **Note:** Here is a list of values that ngShow will consider as a falsy value (case insensitive):<br />
 * "f" / "0" / "false" / "no" / "n" / "[]"
 * </div>
 *
 * ## Why is !important used?
 *
 * You may be wondering why !important is used for the `.ng-hide` CSS class. This is because the `.ng-hide` selector
 * can be easily overridden by heavier selectors. For example, something as simple
 * as changing the display style on a HTML list item would make hidden elements appear visible.
 * This also becomes a bigger issue when dealing with CSS frameworks.
 *
 * By using !important, the show and hide behavior will work as expected despite any clash between CSS selector
 * specificity (when !important isn't used with any conflicting styles). If a developer chooses to override the
 * styling to change how to hide an element then it is just a matter of using !important in their own CSS code.
 *
 * ### Overriding `.ng-hide`
 *
 * By default, the `.ng-hide` class will style the element with `display:none!important`. If you wish to change
 * the hide behavior with ngShow/ngHide then this can be achieved by restating the styles for the `.ng-hide`
 * class in CSS:
 *
 * ```css
 * .ng-hide {
 *   //this is just another form of hiding an element
 *   display:block!important;
 *   position:absolute;
 *   top:-9999px;
 *   left:-9999px;
 * }
 * ```
 *
 * By default you don't need to override in CSS anything and the animations will work around the display style.
 *
 * ## A note about animations with `ngShow`
 *
 * Animations in ngShow/ngHide work with the show and hide events that are triggered when the directive expression
 * is true and false. This system works like the animation system present with ngClass except that
 * you must also include the !important flag to override the display property
 * so that you can perform an animation when the element is hidden during the time of the animation.
 *
 * ```css
 * //
 * //a working example can be found at the bottom of this page
 * //
 * .my-element.ng-hide-add, .my-element.ng-hide-remove {
 *   transition:0.5s linear all;
 * }
 *
 * .my-element.ng-hide-add { ... }
 * .my-element.ng-hide-add.ng-hide-add-active { ... }
 * .my-element.ng-hide-remove { ... }
 * .my-element.ng-hide-remove.ng-hide-remove-active { ... }
 * ```
 *
 * Keep in mind that, as of AngularJS version 1.2.17 (and 1.3.0-beta.11), there is no need to change the display
 * property to block during animation states--ngAnimate will handle the style toggling automatically for you.
 *
 * @animations
 * addClass: `.ng-hide` - happens after the `ngShow` expression evaluates to a truthy value and the just before contents are set to visible
 * removeClass: `.ng-hide` - happens after the `ngShow` expression evaluates to a non truthy value and just before the contents are set to hidden
 *
 * @element ANY
 * @param {expression} ngShow If the {@link guide/expression expression} is truthy
 *     then the element is shown or hidden respectively.
 *
 * @example
  <example module="ngAnimate" deps="angular-animate.js" animations="true">
    <file name="index.html">
      Click me: <input type="checkbox" ng-model="checked"><br/>
      <div>
        Show:
        <div class="check-element animate-show" ng-show="checked">
          <span class="glyphicon glyphicon-thumbs-up"></span> I show up when your checkbox is checked.
        </div>
      </div>
      <div>
        Hide:
        <div class="check-element animate-show" ng-hide="checked">
          <span class="glyphicon glyphicon-thumbs-down"></span> I hide when your checkbox is checked.
        </div>
      </div>
    </file>
    <file name="glyphicons.css">
      @import url(//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css);
    </file>
    <file name="animations.css">
      .animate-show {
        -webkit-transition:all linear 0.5s;
        transition:all linear 0.5s;
        line-height:20px;
        opacity:1;
        padding:10px;
        border:1px solid black;
        background:white;
      }

      .animate-show.ng-hide {
        line-height:0;
        opacity:0;
        padding:0 10px;
      }

      .check-element {
        padding:10px;
        border:1px solid black;
        background:white;
      }
    </file>
    <file name="protractor.js" type="protractor">
      var thumbsUp = element(by.css('span.glyphicon-thumbs-up'));
      var thumbsDown = element(by.css('span.glyphicon-thumbs-down'));

      it('should check ng-show / ng-hide', function() {
        expect(thumbsUp.isDisplayed()).toBeFalsy();
        expect(thumbsDown.isDisplayed()).toBeTruthy();

        element(by.model('checked')).click();

        expect(thumbsUp.isDisplayed()).toBeTruthy();
        expect(thumbsDown.isDisplayed()).toBeFalsy();
      });
    </file>
  </example>
 */
  var ngShowDirective = [
      '$animate',
      function ($animate) {
        return function (scope, element, attr) {
          scope.$watch(attr.ngShow, function ngShowWatchAction(value) {
            $animate[toBoolean(value) ? 'removeClass' : 'addClass'](element, 'ng-hide');
          });
        };
      }
    ];
  /**
 * @ngdoc directive
 * @name ngHide
 *
 * @description
 * The `ngHide` directive shows or hides the given HTML element based on the expression
 * provided to the `ngHide` attribute. The element is shown or hidden by removing or adding
 * the `ng-hide` CSS class onto the element. The `.ng-hide` CSS class is predefined
 * in AngularJS and sets the display style to none (using an !important flag).
 * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).
 *
 * ```html
 * <!-- when $scope.myValue is truthy (element is hidden) -->
 * <div ng-hide="myValue" class="ng-hide"></div>
 *
 * <!-- when $scope.myValue is falsy (element is visible) -->
 * <div ng-hide="myValue"></div>
 * ```
 *
 * When the `.ngHide` expression evaluates to true then the `.ng-hide` CSS class is added to the class attribute
 * on the element causing it to become hidden. When false, the `.ng-hide` CSS class is removed
 * from the element causing the element not to appear hidden.
 *
 * <div class="alert alert-warning">
 * **Note:** Here is a list of values that ngHide will consider as a falsy value (case insensitive):<br />
 * "f" / "0" / "false" / "no" / "n" / "[]"
 * </div>
 *
 * ## Why is !important used?
 *
 * You may be wondering why !important is used for the `.ng-hide` CSS class. This is because the `.ng-hide` selector
 * can be easily overridden by heavier selectors. For example, something as simple
 * as changing the display style on a HTML list item would make hidden elements appear visible.
 * This also becomes a bigger issue when dealing with CSS frameworks.
 *
 * By using !important, the show and hide behavior will work as expected despite any clash between CSS selector
 * specificity (when !important isn't used with any conflicting styles). If a developer chooses to override the
 * styling to change how to hide an element then it is just a matter of using !important in their own CSS code.
 *
 * ### Overriding `.ng-hide`
 *
 * By default, the `.ng-hide` class will style the element with `display:none!important`. If you wish to change
 * the hide behavior with ngShow/ngHide then this can be achieved by restating the styles for the `.ng-hide`
 * class in CSS:
 *
 * ```css
 * .ng-hide {
 *   //this is just another form of hiding an element
 *   display:block!important;
 *   position:absolute;
 *   top:-9999px;
 *   left:-9999px;
 * }
 * ```
 *
 * By default you don't need to override in CSS anything and the animations will work around the display style.
 *
 * ## A note about animations with `ngHide`
 *
 * Animations in ngShow/ngHide work with the show and hide events that are triggered when the directive expression
 * is true and false. This system works like the animation system present with ngClass, except that the `.ng-hide`
 * CSS class is added and removed for you instead of your own CSS class.
 *
 * ```css
 * //
 * //a working example can be found at the bottom of this page
 * //
 * .my-element.ng-hide-add, .my-element.ng-hide-remove {
 *   transition:0.5s linear all;
 * }
 *
 * .my-element.ng-hide-add { ... }
 * .my-element.ng-hide-add.ng-hide-add-active { ... }
 * .my-element.ng-hide-remove { ... }
 * .my-element.ng-hide-remove.ng-hide-remove-active { ... }
 * ```
 *
 * Keep in mind that, as of AngularJS version 1.2.17 (and 1.3.0-beta.11), there is no need to change the display
 * property to block during animation states--ngAnimate will handle the style toggling automatically for you.
 *
 * @animations
 * removeClass: `.ng-hide` - happens after the `ngHide` expression evaluates to a truthy value and just before the contents are set to hidden
 * addClass: `.ng-hide` - happens after the `ngHide` expression evaluates to a non truthy value and just before the contents are set to visible
 *
 * @element ANY
 * @param {expression} ngHide If the {@link guide/expression expression} is truthy then
 *     the element is shown or hidden respectively.
 *
 * @example
  <example module="ngAnimate" deps="angular-animate.js" animations="true">
    <file name="index.html">
      Click me: <input type="checkbox" ng-model="checked"><br/>
      <div>
        Show:
        <div class="check-element animate-hide" ng-show="checked">
          <span class="glyphicon glyphicon-thumbs-up"></span> I show up when your checkbox is checked.
        </div>
      </div>
      <div>
        Hide:
        <div class="check-element animate-hide" ng-hide="checked">
          <span class="glyphicon glyphicon-thumbs-down"></span> I hide when your checkbox is checked.
        </div>
      </div>
    </file>
    <file name="glyphicons.css">
      @import url(//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css);
    </file>
    <file name="animations.css">
      .animate-hide {
        -webkit-transition:all linear 0.5s;
        transition:all linear 0.5s;
        line-height:20px;
        opacity:1;
        padding:10px;
        border:1px solid black;
        background:white;
      }

      .animate-hide.ng-hide {
        line-height:0;
        opacity:0;
        padding:0 10px;
      }

      .check-element {
        padding:10px;
        border:1px solid black;
        background:white;
      }
    </file>
    <file name="protractor.js" type="protractor">
      var thumbsUp = element(by.css('span.glyphicon-thumbs-up'));
      var thumbsDown = element(by.css('span.glyphicon-thumbs-down'));

      it('should check ng-show / ng-hide', function() {
        expect(thumbsUp.isDisplayed()).toBeFalsy();
        expect(thumbsDown.isDisplayed()).toBeTruthy();

        element(by.model('checked')).click();

        expect(thumbsUp.isDisplayed()).toBeTruthy();
        expect(thumbsDown.isDisplayed()).toBeFalsy();
      });
    </file>
  </example>
 */
  var ngHideDirective = [
      '$animate',
      function ($animate) {
        return function (scope, element, attr) {
          scope.$watch(attr.ngHide, function ngHideWatchAction(value) {
            $animate[toBoolean(value) ? 'addClass' : 'removeClass'](element, 'ng-hide');
          });
        };
      }
    ];
  /**
 * @ngdoc directive
 * @name ngStyle
 * @restrict AC
 *
 * @description
 * The `ngStyle` directive allows you to set CSS style on an HTML element conditionally.
 *
 * @element ANY
 * @param {expression} ngStyle
 *
 * {@link guide/expression Expression} which evals to an
 * object whose keys are CSS style names and values are corresponding values for those CSS
 * keys.
 *
 * Since some CSS style names are not valid keys for an object, they must be quoted.
 * See the 'background-color' style in the example below.
 *
 * @example
   <example>
     <file name="index.html">
        <input type="button" value="set color" ng-click="myStyle={color:'red'}">
        <input type="button" value="set background" ng-click="myStyle={'background-color':'blue'}">
        <input type="button" value="clear" ng-click="myStyle={}">
        <br/>
        <span ng-style="myStyle">Sample Text</span>
        <pre>myStyle={{myStyle}}</pre>
     </file>
     <file name="style.css">
       span {
         color: black;
       }
     </file>
     <file name="protractor.js" type="protractor">
       var colorSpan = element(by.css('span'));

       it('should check ng-style', function() {
         expect(colorSpan.getCssValue('color')).toBe('rgba(0, 0, 0, 1)');
         element(by.css('input[value=\'set color\']')).click();
         expect(colorSpan.getCssValue('color')).toBe('rgba(255, 0, 0, 1)');
         element(by.css('input[value=clear]')).click();
         expect(colorSpan.getCssValue('color')).toBe('rgba(0, 0, 0, 1)');
       });
     </file>
   </example>
 */
  var ngStyleDirective = ngDirective(function (scope, element, attr) {
      scope.$watch(attr.ngStyle, function ngStyleWatchAction(newStyles, oldStyles) {
        if (oldStyles && newStyles !== oldStyles) {
          forEach(oldStyles, function (val, style) {
            element.css(style, '');
          });
        }
        if (newStyles)
          element.css(newStyles);
      }, true);
    });
  /**
 * @ngdoc directive
 * @name ngSwitch
 * @restrict EA
 *
 * @description
 * The `ngSwitch` directive is used to conditionally swap DOM structure on your template based on a scope expression.
 * Elements within `ngSwitch` but without `ngSwitchWhen` or `ngSwitchDefault` directives will be preserved at the location
 * as specified in the template.
 *
 * The directive itself works similar to ngInclude, however, instead of downloading template code (or loading it
 * from the template cache), `ngSwitch` simply chooses one of the nested elements and makes it visible based on which element
 * matches the value obtained from the evaluated expression. In other words, you define a container element
 * (where you place the directive), place an expression on the **`on="..."` attribute**
 * (or the **`ng-switch="..."` attribute**), define any inner elements inside of the directive and place
 * a when attribute per element. The when attribute is used to inform ngSwitch which element to display when the on
 * expression is evaluated. If a matching expression is not found via a when attribute then an element with the default
 * attribute is displayed.
 *
 * <div class="alert alert-info">
 * Be aware that the attribute values to match against cannot be expressions. They are interpreted
 * as literal string values to match against.
 * For example, **`ng-switch-when="someVal"`** will match against the string `"someVal"` not against the
 * value of the expression `$scope.someVal`.
 * </div>

 * @animations
 * enter - happens after the ngSwitch contents change and the matched child element is placed inside the container
 * leave - happens just after the ngSwitch contents change and just before the former contents are removed from the DOM
 *
 * @usage
 *
 * ```
 * <ANY ng-switch="expression">
 *   <ANY ng-switch-when="matchValue1">...</ANY>
 *   <ANY ng-switch-when="matchValue2">...</ANY>
 *   <ANY ng-switch-default>...</ANY>
 * </ANY>
 * ```
 *
 *
 * @scope
 * @priority 800
 * @param {*} ngSwitch|on expression to match against <tt>ng-switch-when</tt>.
 * On child elements add:
 *
 * * `ngSwitchWhen`: the case statement to match against. If match then this
 *   case will be displayed. If the same match appears multiple times, all the
 *   elements will be displayed.
 * * `ngSwitchDefault`: the default case when no other case match. If there
 *   are multiple default cases, all of them will be displayed when no other
 *   case match.
 *
 *
 * @example
  <example module="switchExample" deps="angular-animate.js" animations="true">
    <file name="index.html">
      <div ng-controller="ExampleController">
        <select ng-model="selection" ng-options="item for item in items">
        </select>
        <tt>selection={{selection}}</tt>
        <hr/>
        <div class="animate-switch-container"
          ng-switch on="selection">
            <div class="animate-switch" ng-switch-when="settings">Settings Div</div>
            <div class="animate-switch" ng-switch-when="home">Home Span</div>
            <div class="animate-switch" ng-switch-default>default</div>
        </div>
      </div>
    </file>
    <file name="script.js">
      angular.module('switchExample', ['ngAnimate'])
        .controller('ExampleController', ['$scope', function($scope) {
          $scope.items = ['settings', 'home', 'other'];
          $scope.selection = $scope.items[0];
        }]);
    </file>
    <file name="animations.css">
      .animate-switch-container {
        position:relative;
        background:white;
        border:1px solid black;
        height:40px;
        overflow:hidden;
      }

      .animate-switch {
        padding:10px;
      }

      .animate-switch.ng-animate {
        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;
        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;

        position:absolute;
        top:0;
        left:0;
        right:0;
        bottom:0;
      }

      .animate-switch.ng-leave.ng-leave-active,
      .animate-switch.ng-enter {
        top:-50px;
      }
      .animate-switch.ng-leave,
      .animate-switch.ng-enter.ng-enter-active {
        top:0;
      }
    </file>
    <file name="protractor.js" type="protractor">
      var switchElem = element(by.css('[ng-switch]'));
      var select = element(by.model('selection'));

      it('should start in settings', function() {
        expect(switchElem.getText()).toMatch(/Settings Div/);
      });
      it('should change to home', function() {
        select.all(by.css('option')).get(1).click();
        expect(switchElem.getText()).toMatch(/Home Span/);
      });
      it('should select default', function() {
        select.all(by.css('option')).get(2).click();
        expect(switchElem.getText()).toMatch(/default/);
      });
    </file>
  </example>
 */
  var ngSwitchDirective = [
      '$animate',
      function ($animate) {
        return {
          restrict: 'EA',
          require: 'ngSwitch',
          controller: [
            '$scope',
            function ngSwitchController() {
              this.cases = {};
            }
          ],
          link: function (scope, element, attr, ngSwitchController) {
            var watchExpr = attr.ngSwitch || attr.on, selectedTranscludes = [], selectedElements = [], previousElements = [], selectedScopes = [];
            scope.$watch(watchExpr, function ngSwitchWatchAction(value) {
              var i, ii;
              for (i = 0, ii = previousElements.length; i < ii; ++i) {
                previousElements[i].remove();
              }
              previousElements.length = 0;
              for (i = 0, ii = selectedScopes.length; i < ii; ++i) {
                var selected = selectedElements[i];
                selectedScopes[i].$destroy();
                previousElements[i] = selected;
                $animate.leave(selected, function () {
                  previousElements.splice(i, 1);
                });
              }
              selectedElements.length = 0;
              selectedScopes.length = 0;
              if (selectedTranscludes = ngSwitchController.cases['!' + value] || ngSwitchController.cases['?']) {
                scope.$eval(attr.change);
                forEach(selectedTranscludes, function (selectedTransclude) {
                  var selectedScope = scope.$new();
                  selectedScopes.push(selectedScope);
                  selectedTransclude.transclude(selectedScope, function (caseElement) {
                    var anchor = selectedTransclude.element;
                    selectedElements.push(caseElement);
                    $animate.enter(caseElement, anchor.parent(), anchor);
                  });
                });
              }
            });
          }
        };
      }
    ];
  var ngSwitchWhenDirective = ngDirective({
      transclude: 'element',
      priority: 800,
      require: '^ngSwitch',
      link: function (scope, element, attrs, ctrl, $transclude) {
        ctrl.cases['!' + attrs.ngSwitchWhen] = ctrl.cases['!' + attrs.ngSwitchWhen] || [];
        ctrl.cases['!' + attrs.ngSwitchWhen].push({
          transclude: $transclude,
          element: element
        });
      }
    });
  var ngSwitchDefaultDirective = ngDirective({
      transclude: 'element',
      priority: 800,
      require: '^ngSwitch',
      link: function (scope, element, attr, ctrl, $transclude) {
        ctrl.cases['?'] = ctrl.cases['?'] || [];
        ctrl.cases['?'].push({
          transclude: $transclude,
          element: element
        });
      }
    });
  /**
 * @ngdoc directive
 * @name ngTransclude
 * @restrict AC
 *
 * @description
 * Directive that marks the insertion point for the transcluded DOM of the nearest parent directive that uses transclusion.
 *
 * Any existing content of the element that this directive is placed on will be removed before the transcluded content is inserted.
 *
 * @element ANY
 *
 * @example
   <example module="transcludeExample">
     <file name="index.html">
       <script>
         angular.module('transcludeExample', [])
          .directive('pane', function(){
             return {
               restrict: 'E',
               transclude: true,
               scope: { title:'@' },
               template: '<div style="border: 1px solid black;">' +
                           '<div style="background-color: gray">{{title}}</div>' +
                           '<div ng-transclude></div>' +
                         '</div>'
             };
         })
         .controller('ExampleController', ['$scope', function($scope) {
           $scope.title = 'Lorem Ipsum';
           $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';
         }]);
       </script>
       <div ng-controller="ExampleController">
         <input ng-model="title"><br>
         <textarea ng-model="text"></textarea> <br/>
         <pane title="{{title}}">{{text}}</pane>
       </div>
     </file>
     <file name="protractor.js" type="protractor">
        it('should have transcluded', function() {
          var titleElement = element(by.model('title'));
          titleElement.clear();
          titleElement.sendKeys('TITLE');
          var textElement = element(by.model('text'));
          textElement.clear();
          textElement.sendKeys('TEXT');
          expect(element(by.binding('title')).getText()).toEqual('TITLE');
          expect(element(by.binding('text')).getText()).toEqual('TEXT');
        });
     </file>
   </example>
 *
 */
  var ngTranscludeDirective = ngDirective({
      link: function ($scope, $element, $attrs, controller, $transclude) {
        if (!$transclude) {
          throw minErr('ngTransclude')('orphan', 'Illegal use of ngTransclude directive in the template! ' + 'No parent directive that requires a transclusion found. ' + 'Element: {0}', startingTag($element));
        }
        $transclude(function (clone) {
          $element.empty();
          $element.append(clone);
        });
      }
    });
  /**
 * @ngdoc directive
 * @name script
 * @restrict E
 *
 * @description
 * Load the content of a `<script>` element into {@link ng.$templateCache `$templateCache`}, so that the
 * template can be used by {@link ng.directive:ngInclude `ngInclude`},
 * {@link ngRoute.directive:ngView `ngView`}, or {@link guide/directive directives}. The type of the
 * `<script>` element must be specified as `text/ng-template`, and a cache name for the template must be
 * assigned through the element's `id`, which can then be used as a directive's `templateUrl`.
 *
 * @param {string} type Must be set to `'text/ng-template'`.
 * @param {string} id Cache name of the template.
 *
 * @example
  <example>
    <file name="index.html">
      <script type="text/ng-template" id="/tpl.html">
        Content of the template.
      </script>

      <a ng-click="currentTpl='/tpl.html'" id="tpl-link">Load inlined template</a>
      <div id="tpl-content" ng-include src="currentTpl"></div>
    </file>
    <file name="protractor.js" type="protractor">
      it('should load template defined inside script tag', function() {
        element(by.css('#tpl-link')).click();
        expect(element(by.css('#tpl-content')).getText()).toMatch(/Content of the template/);
      });
    </file>
  </example>
 */
  var scriptDirective = [
      '$templateCache',
      function ($templateCache) {
        return {
          restrict: 'E',
          terminal: true,
          compile: function (element, attr) {
            if (attr.type == 'text/ng-template') {
              var templateUrl = attr.id, text = element[0].text;
              $templateCache.put(templateUrl, text);
            }
          }
        };
      }
    ];
  var ngOptionsMinErr = minErr('ngOptions');
  /**
 * @ngdoc directive
 * @name select
 * @restrict E
 *
 * @description
 * HTML `SELECT` element with angular data-binding.
 *
 * # `ngOptions`
 *
 * The `ngOptions` attribute can be used to dynamically generate a list of `<option>`
 * elements for the `<select>` element using the array or object obtained by evaluating the
 * `ngOptions` comprehension_expression.
 *
 * When an item in the `<select>` menu is selected, the array element or object property
 * represented by the selected option will be bound to the model identified by the `ngModel`
 * directive.
 *
 * <div class="alert alert-warning">
 * **Note:** `ngModel` compares by reference, not value. This is important when binding to an
 * array of objects. See an example [in this jsfiddle](http://jsfiddle.net/qWzTb/).
 * </div>
 *
 * Optionally, a single hard-coded `<option>` element, with the value set to an empty string, can
 * be nested into the `<select>` element. This element will then represent the `null` or "not selected"
 * option. See example below for demonstration.
 *
 * <div class="alert alert-warning">
 * **Note:** `ngOptions` provides an iterator facility for the `<option>` element which should be used instead
 * of {@link ng.directive:ngRepeat ngRepeat} when you want the
 * `select` model to be bound to a non-string value. This is because an option element can only
 * be bound to string values at present.
 * </div>
 *
 * @param {string} ngModel Assignable angular expression to data-bind to.
 * @param {string=} name Property name of the form under which the control is published.
 * @param {string=} required The control is considered valid only if value is entered.
 * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
 *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
 *    `required` when you want to data-bind to the `required` attribute.
 * @param {comprehension_expression=} ngOptions in one of the following forms:
 *
 *   * for array data sources:
 *     * `label` **`for`** `value` **`in`** `array`
 *     * `select` **`as`** `label` **`for`** `value` **`in`** `array`
 *     * `label`  **`group by`** `group` **`for`** `value` **`in`** `array`
 *     * `select` **`as`** `label` **`group by`** `group` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`
 *   * for object data sources:
 *     * `label` **`for (`**`key` **`,`** `value`**`) in`** `object`
 *     * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object`
 *     * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object`
 *     * `select` **`as`** `label` **`group by`** `group`
 *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`
 *
 * Where:
 *
 *   * `array` / `object`: an expression which evaluates to an array / object to iterate over.
 *   * `value`: local variable which will refer to each item in the `array` or each property value
 *      of `object` during iteration.
 *   * `key`: local variable which will refer to a property name in `object` during iteration.
 *   * `label`: The result of this expression will be the label for `<option>` element. The
 *     `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`).
 *   * `select`: The result of this expression will be bound to the model of the parent `<select>`
 *      element. If not specified, `select` expression will default to `value`.
 *   * `group`: The result of this expression will be used to group options using the `<optgroup>`
 *      DOM element.
 *   * `trackexpr`: Used when working with an array of objects. The result of this expression will be
 *      used to identify the objects in the array. The `trackexpr` will most likely refer to the
 *     `value` variable (e.g. `value.propertyName`).
 *
 * @example
    <example module="selectExample">
      <file name="index.html">
        <script>
        angular.module('selectExample', [])
          .controller('ExampleController', ['$scope', function($scope) {
            $scope.colors = [
              {name:'black', shade:'dark'},
              {name:'white', shade:'light'},
              {name:'red', shade:'dark'},
              {name:'blue', shade:'dark'},
              {name:'yellow', shade:'light'}
            ];
            $scope.myColor = $scope.colors[2]; // red
          }]);
        </script>
        <div ng-controller="ExampleController">
          <ul>
            <li ng-repeat="color in colors">
              Name: <input ng-model="color.name">
              [<a href ng-click="colors.splice($index, 1)">X</a>]
            </li>
            <li>
              [<a href ng-click="colors.push({})">add</a>]
            </li>
          </ul>
          <hr/>
          Color (null not allowed):
          <select ng-model="myColor" ng-options="color.name for color in colors"></select><br>

          Color (null allowed):
          <span  class="nullable">
            <select ng-model="myColor" ng-options="color.name for color in colors">
              <option value="">-- choose color --</option>
            </select>
          </span><br/>

          Color grouped by shade:
          <select ng-model="myColor" ng-options="color.name group by color.shade for color in colors">
          </select><br/>


          Select <a href ng-click="myColor = { name:'not in list', shade: 'other' }">bogus</a>.<br>
          <hr/>
          Currently selected: {{ {selected_color:myColor}  }}
          <div style="border:solid 1px black; height:20px"
               ng-style="{'background-color':myColor.name}">
          </div>
        </div>
      </file>
      <file name="protractor.js" type="protractor">
         it('should check ng-options', function() {
           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('red');
           element.all(by.model('myColor')).first().click();
           element.all(by.css('select[ng-model="myColor"] option')).first().click();
           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('black');
           element(by.css('.nullable select[ng-model="myColor"]')).click();
           element.all(by.css('.nullable select[ng-model="myColor"] option')).first().click();
           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('null');
         });
      </file>
    </example>
 */
  var ngOptionsDirective = valueFn({ terminal: true });
  // jshint maxlen: false
  var selectDirective = [
      '$compile',
      '$parse',
      function ($compile, $parse) {
        //000011111111110000000000022222222220000000000000000000003333333333000000000000004444444444444440000000005555555555555550000000666666666666666000000000000000777777777700000000000000000008888888888
        var NG_OPTIONS_REGEXP = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/, nullModelCtrl = { $setViewValue: noop };
        // jshint maxlen: 100
        return {
          restrict: 'E',
          require: [
            'select',
            '?ngModel'
          ],
          controller: [
            '$element',
            '$scope',
            '$attrs',
            function ($element, $scope, $attrs) {
              var self = this, optionsMap = {}, ngModelCtrl = nullModelCtrl, nullOption, unknownOption;
              self.databound = $attrs.ngModel;
              self.init = function (ngModelCtrl_, nullOption_, unknownOption_) {
                ngModelCtrl = ngModelCtrl_;
                nullOption = nullOption_;
                unknownOption = unknownOption_;
              };
              self.addOption = function (value) {
                assertNotHasOwnProperty(value, '"option value"');
                optionsMap[value] = true;
                if (ngModelCtrl.$viewValue == value) {
                  $element.val(value);
                  if (unknownOption.parent())
                    unknownOption.remove();
                }
              };
              self.removeOption = function (value) {
                if (this.hasOption(value)) {
                  delete optionsMap[value];
                  if (ngModelCtrl.$viewValue == value) {
                    this.renderUnknownOption(value);
                  }
                }
              };
              self.renderUnknownOption = function (val) {
                var unknownVal = '? ' + hashKey(val) + ' ?';
                unknownOption.val(unknownVal);
                $element.prepend(unknownOption);
                $element.val(unknownVal);
                unknownOption.prop('selected', true);  // needed for IE
              };
              self.hasOption = function (value) {
                return optionsMap.hasOwnProperty(value);
              };
              $scope.$on('$destroy', function () {
                // disable unknown option so that we don't do work when the whole select is being destroyed
                self.renderUnknownOption = noop;
              });
            }
          ],
          link: function (scope, element, attr, ctrls) {
            // if ngModel is not defined, we don't need to do anything
            if (!ctrls[1])
              return;
            var selectCtrl = ctrls[0], ngModelCtrl = ctrls[1], multiple = attr.multiple, optionsExp = attr.ngOptions, nullOption = false,
              // if false, user will not be able to select it (used by ngOptions)
              emptyOption,
              // we can't just jqLite('<option>') since jqLite is not smart enough
              // to create it in <select> and IE barfs otherwise.
              optionTemplate = jqLite(document.createElement('option')), optGroupTemplate = jqLite(document.createElement('optgroup')), unknownOption = optionTemplate.clone();
            // find "null" option
            for (var i = 0, children = element.children(), ii = children.length; i < ii; i++) {
              if (children[i].value === '') {
                emptyOption = nullOption = children.eq(i);
                break;
              }
            }
            selectCtrl.init(ngModelCtrl, nullOption, unknownOption);
            // required validator
            if (multiple) {
              ngModelCtrl.$isEmpty = function (value) {
                return !value || value.length === 0;
              };
            }
            if (optionsExp)
              setupAsOptions(scope, element, ngModelCtrl);
            else if (multiple)
              setupAsMultiple(scope, element, ngModelCtrl);
            else
              setupAsSingle(scope, element, ngModelCtrl, selectCtrl);
            ////////////////////////////
            function setupAsSingle(scope, selectElement, ngModelCtrl, selectCtrl) {
              ngModelCtrl.$render = function () {
                var viewValue = ngModelCtrl.$viewValue;
                if (selectCtrl.hasOption(viewValue)) {
                  if (unknownOption.parent())
                    unknownOption.remove();
                  selectElement.val(viewValue);
                  if (viewValue === '')
                    emptyOption.prop('selected', true);  // to make IE9 happy
                } else {
                  if (isUndefined(viewValue) && emptyOption) {
                    selectElement.val('');
                  } else {
                    selectCtrl.renderUnknownOption(viewValue);
                  }
                }
              };
              selectElement.on('change', function () {
                scope.$apply(function () {
                  if (unknownOption.parent())
                    unknownOption.remove();
                  ngModelCtrl.$setViewValue(selectElement.val());
                });
              });
            }
            function setupAsMultiple(scope, selectElement, ctrl) {
              var lastView;
              ctrl.$render = function () {
                var items = new HashMap(ctrl.$viewValue);
                forEach(selectElement.find('option'), function (option) {
                  option.selected = isDefined(items.get(option.value));
                });
              };
              // we have to do it on each watch since ngModel watches reference, but
              // we need to work of an array, so we need to see if anything was inserted/removed
              scope.$watch(function selectMultipleWatch() {
                if (!equals(lastView, ctrl.$viewValue)) {
                  lastView = shallowCopy(ctrl.$viewValue);
                  ctrl.$render();
                }
              });
              selectElement.on('change', function () {
                scope.$apply(function () {
                  var array = [];
                  forEach(selectElement.find('option'), function (option) {
                    if (option.selected) {
                      array.push(option.value);
                    }
                  });
                  ctrl.$setViewValue(array);
                });
              });
            }
            function setupAsOptions(scope, selectElement, ctrl) {
              var match;
              if (!(match = optionsExp.match(NG_OPTIONS_REGEXP))) {
                throw ngOptionsMinErr('iexp', 'Expected expression in form of ' + '\'_select_ (as _label_)? for (_key_,)?_value_ in _collection_\'' + ' but got \'{0}\'. Element: {1}', optionsExp, startingTag(selectElement));
              }
              var displayFn = $parse(match[2] || match[1]), valueName = match[4] || match[6], keyName = match[5], groupByFn = $parse(match[3] || ''), valueFn = $parse(match[2] ? match[1] : valueName), valuesFn = $parse(match[7]), track = match[8], trackFn = track ? $parse(match[8]) : null,
                // This is an array of array of existing option groups in DOM.
                // We try to reuse these if possible
                // - optionGroupsCache[0] is the options with no option group
                // - optionGroupsCache[?][0] is the parent: either the SELECT or OPTGROUP element
                optionGroupsCache = [[{
                      element: selectElement,
                      label: ''
                    }]];
              if (nullOption) {
                // compile the element since there might be bindings in it
                $compile(nullOption)(scope);
                // remove the class, which is added automatically because we recompile the element and it
                // becomes the compilation root
                nullOption.removeClass('ng-scope');
                // we need to remove it before calling selectElement.empty() because otherwise IE will
                // remove the label from the element. wtf?
                nullOption.remove();
              }
              // clear contents, we'll add what's needed based on the model
              selectElement.empty();
              selectElement.on('change', function () {
                scope.$apply(function () {
                  var optionGroup, collection = valuesFn(scope) || [], locals = {}, key, value, optionElement, index, groupIndex, length, groupLength, trackIndex;
                  if (multiple) {
                    value = [];
                    for (groupIndex = 0, groupLength = optionGroupsCache.length; groupIndex < groupLength; groupIndex++) {
                      // list of options for that group. (first item has the parent)
                      optionGroup = optionGroupsCache[groupIndex];
                      for (index = 1, length = optionGroup.length; index < length; index++) {
                        if ((optionElement = optionGroup[index].element)[0].selected) {
                          key = optionElement.val();
                          if (keyName)
                            locals[keyName] = key;
                          if (trackFn) {
                            for (trackIndex = 0; trackIndex < collection.length; trackIndex++) {
                              locals[valueName] = collection[trackIndex];
                              if (trackFn(scope, locals) == key)
                                break;
                            }
                          } else {
                            locals[valueName] = collection[key];
                          }
                          value.push(valueFn(scope, locals));
                        }
                      }
                    }
                  } else {
                    key = selectElement.val();
                    if (key == '?') {
                      value = undefined;
                    } else if (key === '') {
                      value = null;
                    } else {
                      if (trackFn) {
                        for (trackIndex = 0; trackIndex < collection.length; trackIndex++) {
                          locals[valueName] = collection[trackIndex];
                          if (trackFn(scope, locals) == key) {
                            value = valueFn(scope, locals);
                            break;
                          }
                        }
                      } else {
                        locals[valueName] = collection[key];
                        if (keyName)
                          locals[keyName] = key;
                        value = valueFn(scope, locals);
                      }
                    }
                  }
                  ctrl.$setViewValue(value);
                  render();
                });
              });
              ctrl.$render = render;
              scope.$watchCollection(valuesFn, render);
              scope.$watchCollection(function () {
                var locals = {}, values = valuesFn(scope);
                if (values) {
                  var toDisplay = new Array(values.length);
                  for (var i = 0, ii = values.length; i < ii; i++) {
                    locals[valueName] = values[i];
                    toDisplay[i] = displayFn(scope, locals);
                  }
                  return toDisplay;
                }
              }, render);
              if (multiple) {
                scope.$watchCollection(function () {
                  return ctrl.$modelValue;
                }, render);
              }
              function getSelectedSet() {
                var selectedSet = false;
                if (multiple) {
                  var modelValue = ctrl.$modelValue;
                  if (trackFn && isArray(modelValue)) {
                    selectedSet = new HashMap([]);
                    var locals = {};
                    for (var trackIndex = 0; trackIndex < modelValue.length; trackIndex++) {
                      locals[valueName] = modelValue[trackIndex];
                      selectedSet.put(trackFn(scope, locals), modelValue[trackIndex]);
                    }
                  } else {
                    selectedSet = new HashMap(modelValue);
                  }
                }
                return selectedSet;
              }
              function render() {
                // Temporary location for the option groups before we render them
                var optionGroups = { '': [] }, optionGroupNames = [''], optionGroupName, optionGroup, option, existingParent, existingOptions, existingOption, modelValue = ctrl.$modelValue, values = valuesFn(scope) || [], keys = keyName ? sortedKeys(values) : values, key, groupLength, length, groupIndex, index, locals = {}, selected, selectedSet = getSelectedSet(), lastElement, element, label;
                // We now build up the list of options we need (we merge later)
                for (index = 0; length = keys.length, index < length; index++) {
                  key = index;
                  if (keyName) {
                    key = keys[index];
                    if (key.charAt(0) === '$')
                      continue;
                    locals[keyName] = key;
                  }
                  locals[valueName] = values[key];
                  optionGroupName = groupByFn(scope, locals) || '';
                  if (!(optionGroup = optionGroups[optionGroupName])) {
                    optionGroup = optionGroups[optionGroupName] = [];
                    optionGroupNames.push(optionGroupName);
                  }
                  if (multiple) {
                    selected = isDefined(selectedSet.remove(trackFn ? trackFn(scope, locals) : valueFn(scope, locals)));
                  } else {
                    if (trackFn) {
                      var modelCast = {};
                      modelCast[valueName] = modelValue;
                      selected = trackFn(scope, modelCast) === trackFn(scope, locals);
                    } else {
                      selected = modelValue === valueFn(scope, locals);
                    }
                    selectedSet = selectedSet || selected;  // see if at least one item is selected
                  }
                  label = displayFn(scope, locals);
                  // what will be seen by the user
                  // doing displayFn(scope, locals) || '' overwrites zero values
                  label = isDefined(label) ? label : '';
                  optionGroup.push({
                    id: trackFn ? trackFn(scope, locals) : keyName ? keys[index] : index,
                    label: label,
                    selected: selected
                  });
                }
                if (!multiple) {
                  if (nullOption || modelValue === null) {
                    // insert null option if we have a placeholder, or the model is null
                    optionGroups[''].unshift({
                      id: '',
                      label: '',
                      selected: !selectedSet
                    });
                  } else if (!selectedSet) {
                    // option could not be found, we have to insert the undefined item
                    optionGroups[''].unshift({
                      id: '?',
                      label: '',
                      selected: true
                    });
                  }
                }
                // Now we need to update the list of DOM nodes to match the optionGroups we computed above
                for (groupIndex = 0, groupLength = optionGroupNames.length; groupIndex < groupLength; groupIndex++) {
                  // current option group name or '' if no group
                  optionGroupName = optionGroupNames[groupIndex];
                  // list of options for that group. (first item has the parent)
                  optionGroup = optionGroups[optionGroupName];
                  if (optionGroupsCache.length <= groupIndex) {
                    // we need to grow the optionGroups
                    existingParent = {
                      element: optGroupTemplate.clone().attr('label', optionGroupName),
                      label: optionGroup.label
                    };
                    existingOptions = [existingParent];
                    optionGroupsCache.push(existingOptions);
                    selectElement.append(existingParent.element);
                  } else {
                    existingOptions = optionGroupsCache[groupIndex];
                    existingParent = existingOptions[0];
                    // either SELECT (no group) or OPTGROUP element
                    // update the OPTGROUP label if not the same.
                    if (existingParent.label != optionGroupName) {
                      existingParent.element.attr('label', existingParent.label = optionGroupName);
                    }
                  }
                  lastElement = null;
                  // start at the beginning
                  for (index = 0, length = optionGroup.length; index < length; index++) {
                    option = optionGroup[index];
                    if (existingOption = existingOptions[index + 1]) {
                      // reuse elements
                      lastElement = existingOption.element;
                      if (existingOption.label !== option.label) {
                        lastElement.text(existingOption.label = option.label);
                        lastElement.prop('label', existingOption.label);
                      }
                      if (existingOption.id !== option.id) {
                        lastElement.val(existingOption.id = option.id);
                      }
                      // lastElement.prop('selected') provided by jQuery has side-effects
                      if (lastElement[0].selected !== option.selected) {
                        lastElement.prop('selected', existingOption.selected = option.selected);
                        if (msie) {
                          // See #7692
                          // The selected item wouldn't visually update on IE without this.
                          // Tested on Win7: IE9, IE10 and IE11. Future IEs should be tested as well
                          lastElement.prop('selected', existingOption.selected);
                        }
                      }
                    } else {
                      // grow elements
                      // if it's a null option
                      if (option.id === '' && nullOption) {
                        // put back the pre-compiled element
                        element = nullOption;
                      } else {
                        // jQuery(v1.4.2) Bug: We should be able to chain the method calls, but
                        // in this version of jQuery on some browser the .text() returns a string
                        // rather then the element.
                        (element = optionTemplate.clone()).val(option.id).prop('selected', option.selected).attr('selected', option.selected).prop('label', option.label).text(option.label);
                      }
                      existingOptions.push(existingOption = {
                        element: element,
                        label: option.label,
                        id: option.id,
                        selected: option.selected
                      });
                      selectCtrl.addOption(option.label, element);
                      if (lastElement) {
                        lastElement.after(element);
                      } else {
                        existingParent.element.append(element);
                      }
                      lastElement = element;
                    }
                  }
                  // remove any excessive OPTIONs in a group
                  index++;
                  // increment since the existingOptions[0] is parent element not OPTION
                  while (existingOptions.length > index) {
                    option = existingOptions.pop();
                    selectCtrl.removeOption(option.label);
                    option.element.remove();
                  }
                }
                // remove any excessive OPTGROUPs from select
                while (optionGroupsCache.length > groupIndex) {
                  optionGroupsCache.pop()[0].element.remove();
                }
              }
            }
          }
        };
      }
    ];
  var optionDirective = [
      '$interpolate',
      function ($interpolate) {
        var nullSelectCtrl = {
            addOption: noop,
            removeOption: noop
          };
        return {
          restrict: 'E',
          priority: 100,
          compile: function (element, attr) {
            if (isUndefined(attr.value)) {
              var interpolateFn = $interpolate(element.text(), true);
              if (!interpolateFn) {
                attr.$set('value', element.text());
              }
            }
            return function (scope, element, attr) {
              var selectCtrlName = '$selectController', parent = element.parent(), selectCtrl = parent.data(selectCtrlName) || parent.parent().data(selectCtrlName);
              // in case we are in optgroup
              if (selectCtrl && selectCtrl.databound) {
                // For some reason Opera defaults to true and if not overridden this messes up the repeater.
                // We don't want the view to drive the initialization of the model anyway.
                element.prop('selected', false);
              } else {
                selectCtrl = nullSelectCtrl;
              }
              if (interpolateFn) {
                scope.$watch(interpolateFn, function interpolateWatchAction(newVal, oldVal) {
                  attr.$set('value', newVal);
                  if (newVal !== oldVal)
                    selectCtrl.removeOption(oldVal);
                  selectCtrl.addOption(newVal);
                });
              } else {
                selectCtrl.addOption(attr.value);
              }
              element.on('$destroy', function () {
                selectCtrl.removeOption(attr.value);
              });
            };
          }
        };
      }
    ];
  var styleDirective = valueFn({
      restrict: 'E',
      terminal: true
    });
  if (window.angular.bootstrap) {
    //AngularJS is already loaded, so we can return here...
    console.log('WARNING: Tried to load angular more than once.');
    return;
  }
  //try to bind to jquery now so that one can write angular.element().read()
  //but we will rebind on bootstrap again.
  bindJQuery();
  publishExternalAPI(angular);
  jqLite(document).ready(function () {
    angularInit(document, bootstrap);
  });
}(window, document));
!window.angular.$$csp() && window.angular.element(document).find('head').prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide{display:none !important;}ng\\:form{display:block;}.ng-animate-block-transitions{transition:0s all!important;-webkit-transition:0s all!important;}.ng-hide-add-active,.ng-hide-remove{display:block!important;}</style>');
/**
 * State-based routing for AngularJS
 * @version v0.2.13
 * @link http://angular-ui.github.com/
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
/* commonjs package manager support (eg componentjs) */
if (typeof module !== 'undefined' && typeof exports !== 'undefined' && module.exports === exports) {
  module.exports = 'ui.router';
}
(function (window, angular, undefined) {
  /*jshint globalstrict:true*/
  /*global angular:false*/
  'use strict';
  var isDefined = angular.isDefined, isFunction = angular.isFunction, isString = angular.isString, isObject = angular.isObject, isArray = angular.isArray, forEach = angular.forEach, extend = angular.extend, copy = angular.copy;
  function inherit(parent, extra) {
    return extend(new (extend(function () {
    }, { prototype: parent }))(), extra);
  }
  function merge(dst) {
    forEach(arguments, function (obj) {
      if (obj !== dst) {
        forEach(obj, function (value, key) {
          if (!dst.hasOwnProperty(key))
            dst[key] = value;
        });
      }
    });
    return dst;
  }
  /**
 * Finds the common ancestor path between two states.
 *
 * @param {Object} first The first state.
 * @param {Object} second The second state.
 * @return {Array} Returns an array of state names in descending order, not including the root.
 */
  function ancestors(first, second) {
    var path = [];
    for (var n in first.path) {
      if (first.path[n] !== second.path[n])
        break;
      path.push(first.path[n]);
    }
    return path;
  }
  /**
 * IE8-safe wrapper for `Object.keys()`.
 *
 * @param {Object} object A JavaScript object.
 * @return {Array} Returns the keys of the object as an array.
 */
  function objectKeys(object) {
    if (Object.keys) {
      return Object.keys(object);
    }
    var result = [];
    angular.forEach(object, function (val, key) {
      result.push(key);
    });
    return result;
  }
  /**
 * IE8-safe wrapper for `Array.prototype.indexOf()`.
 *
 * @param {Array} array A JavaScript array.
 * @param {*} value A value to search the array for.
 * @return {Number} Returns the array index value of `value`, or `-1` if not present.
 */
  function indexOf(array, value) {
    if (Array.prototype.indexOf) {
      return array.indexOf(value, Number(arguments[2]) || 0);
    }
    var len = array.length >>> 0, from = Number(arguments[2]) || 0;
    from = from < 0 ? Math.ceil(from) : Math.floor(from);
    if (from < 0)
      from += len;
    for (; from < len; from++) {
      if (from in array && array[from] === value)
        return from;
    }
    return -1;
  }
  /**
 * Merges a set of parameters with all parameters inherited between the common parents of the
 * current state and a given destination state.
 *
 * @param {Object} currentParams The value of the current state parameters ($stateParams).
 * @param {Object} newParams The set of parameters which will be composited with inherited params.
 * @param {Object} $current Internal definition of object representing the current state.
 * @param {Object} $to Internal definition of object representing state to transition to.
 */
  function inheritParams(currentParams, newParams, $current, $to) {
    var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];
    for (var i in parents) {
      if (!parents[i].params)
        continue;
      parentParams = objectKeys(parents[i].params);
      if (!parentParams.length)
        continue;
      for (var j in parentParams) {
        if (indexOf(inheritList, parentParams[j]) >= 0)
          continue;
        inheritList.push(parentParams[j]);
        inherited[parentParams[j]] = currentParams[parentParams[j]];
      }
    }
    return extend({}, inherited, newParams);
  }
  /**
 * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.
 *
 * @param {Object} a The first object.
 * @param {Object} b The second object.
 * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,
 *                     it defaults to the list of keys in `a`.
 * @return {Boolean} Returns `true` if the keys match, otherwise `false`.
 */
  function equalForKeys(a, b, keys) {
    if (!keys) {
      keys = [];
      for (var n in a)
        keys.push(n);  // Used instead of Object.keys() for IE8 compatibility
    }
    for (var i = 0; i < keys.length; i++) {
      var k = keys[i];
      if (a[k] != b[k])
        return false;  // Not '===', values aren't necessarily normalized
    }
    return true;
  }
  /**
 * Returns the subset of an object, based on a list of keys.
 *
 * @param {Array} keys
 * @param {Object} values
 * @return {Boolean} Returns a subset of `values`.
 */
  function filterByKeys(keys, values) {
    var filtered = {};
    forEach(keys, function (name) {
      filtered[name] = values[name];
    });
    return filtered;
  }
  // like _.indexBy
  // when you know that your index values will be unique, or you want last-one-in to win
  function indexBy(array, propName) {
    var result = {};
    forEach(array, function (item) {
      result[item[propName]] = item;
    });
    return result;
  }
  // extracted from underscore.js
  // Return a copy of the object only containing the whitelisted properties.
  function pick(obj) {
    var copy = {};
    var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
    forEach(keys, function (key) {
      if (key in obj)
        copy[key] = obj[key];
    });
    return copy;
  }
  // extracted from underscore.js
  // Return a copy of the object omitting the blacklisted properties.
  function omit(obj) {
    var copy = {};
    var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
    for (var key in obj) {
      if (indexOf(keys, key) == -1)
        copy[key] = obj[key];
    }
    return copy;
  }
  function pluck(collection, key) {
    var result = isArray(collection) ? [] : {};
    forEach(collection, function (val, i) {
      result[i] = isFunction(key) ? key(val) : val[key];
    });
    return result;
  }
  function filter(collection, callback) {
    var array = isArray(collection);
    var result = array ? [] : {};
    forEach(collection, function (val, i) {
      if (callback(val, i)) {
        result[array ? result.length : i] = val;
      }
    });
    return result;
  }
  function map(collection, callback) {
    var result = isArray(collection) ? [] : {};
    forEach(collection, function (val, i) {
      result[i] = callback(val, i);
    });
    return result;
  }
  /**
 * @ngdoc overview
 * @name ui.router.util
 *
 * @description
 * # ui.router.util sub-module
 *
 * This module is a dependency of other sub-modules. Do not include this module as a dependency
 * in your angular app (use {@link ui.router} module instead).
 *
 */
  angular.module('ui.router.util', ['ng']);
  /**
 * @ngdoc overview
 * @name ui.router.router
 * 
 * @requires ui.router.util
 *
 * @description
 * # ui.router.router sub-module
 *
 * This module is a dependency of other sub-modules. Do not include this module as a dependency
 * in your angular app (use {@link ui.router} module instead).
 */
  angular.module('ui.router.router', ['ui.router.util']);
  /**
 * @ngdoc overview
 * @name ui.router.state
 * 
 * @requires ui.router.router
 * @requires ui.router.util
 *
 * @description
 * # ui.router.state sub-module
 *
 * This module is a dependency of the main ui.router module. Do not include this module as a dependency
 * in your angular app (use {@link ui.router} module instead).
 * 
 */
  angular.module('ui.router.state', [
    'ui.router.router',
    'ui.router.util'
  ]);
  /**
 * @ngdoc overview
 * @name ui.router
 *
 * @requires ui.router.state
 *
 * @description
 * # ui.router
 * 
 * ## The main module for ui.router 
 * There are several sub-modules included with the ui.router module, however only this module is needed
 * as a dependency within your angular app. The other modules are for organization purposes. 
 *
 * The modules are:
 * * ui.router - the main "umbrella" module
 * * ui.router.router - 
 * 
 * *You'll need to include **only** this module as the dependency within your angular app.*
 * 
 * <pre>
 * <!doctype html>
 * <html ng-app="myApp">
 * <head>
 *   <script src="js/angular.js"></script>
 *   <!-- Include the ui-router script -->
 *   <script src="js/angular-ui-router.min.js"></script>
 *   <script>
 *     // ...and add 'ui.router' as a dependency
 *     var myApp = angular.module('myApp', ['ui.router']);
 *   </script>
 * </head>
 * <body>
 * </body>
 * </html>
 * </pre>
 */
  angular.module('ui.router', ['ui.router.state']);
  angular.module('ui.router.compat', ['ui.router']);
  /**
 * @ngdoc object
 * @name ui.router.util.$resolve
 *
 * @requires $q
 * @requires $injector
 *
 * @description
 * Manages resolution of (acyclic) graphs of promises.
 */
  $Resolve.$inject = [
    '$q',
    '$injector'
  ];
  function $Resolve($q, $injector) {
    var VISIT_IN_PROGRESS = 1, VISIT_DONE = 2, NOTHING = {}, NO_DEPENDENCIES = [], NO_LOCALS = NOTHING, NO_PARENT = extend($q.when(NOTHING), {
        $$promises: NOTHING,
        $$values: NOTHING
      });
    /**
   * @ngdoc function
   * @name ui.router.util.$resolve#study
   * @methodOf ui.router.util.$resolve
   *
   * @description
   * Studies a set of invocables that are likely to be used multiple times.
   * <pre>
   * $resolve.study(invocables)(locals, parent, self)
   * </pre>
   * is equivalent to
   * <pre>
   * $resolve.resolve(invocables, locals, parent, self)
   * </pre>
   * but the former is more efficient (in fact `resolve` just calls `study` 
   * internally).
   *
   * @param {object} invocables Invocable objects
   * @return {function} a function to pass in locals, parent and self
   */
    this.study = function (invocables) {
      if (!isObject(invocables))
        throw new Error('\'invocables\' must be an object');
      var invocableKeys = objectKeys(invocables || {});
      // Perform a topological sort of invocables to build an ordered plan
      var plan = [], cycle = [], visited = {};
      function visit(value, key) {
        if (visited[key] === VISIT_DONE)
          return;
        cycle.push(key);
        if (visited[key] === VISIT_IN_PROGRESS) {
          cycle.splice(0, indexOf(cycle, key));
          throw new Error('Cyclic dependency: ' + cycle.join(' -> '));
        }
        visited[key] = VISIT_IN_PROGRESS;
        if (isString(value)) {
          plan.push(key, [function () {
              return $injector.get(value);
            }], NO_DEPENDENCIES);
        } else {
          var params = $injector.annotate(value);
          forEach(params, function (param) {
            if (param !== key && invocables.hasOwnProperty(param))
              visit(invocables[param], param);
          });
          plan.push(key, value, params);
        }
        cycle.pop();
        visited[key] = VISIT_DONE;
      }
      forEach(invocables, visit);
      invocables = cycle = visited = null;
      // plan is all that's required
      function isResolve(value) {
        return isObject(value) && value.then && value.$$promises;
      }
      return function (locals, parent, self) {
        if (isResolve(locals) && self === undefined) {
          self = parent;
          parent = locals;
          locals = null;
        }
        if (!locals)
          locals = NO_LOCALS;
        else if (!isObject(locals)) {
          throw new Error('\'locals\' must be an object');
        }
        if (!parent)
          parent = NO_PARENT;
        else if (!isResolve(parent)) {
          throw new Error('\'parent\' must be a promise returned by $resolve.resolve()');
        }
        // To complete the overall resolution, we have to wait for the parent
        // promise and for the promise for each invokable in our plan.
        var resolution = $q.defer(), result = resolution.promise, promises = result.$$promises = {}, values = extend({}, locals), wait = 1 + plan.length / 3, merged = false;
        function done() {
          // Merge parent values we haven't got yet and publish our own $$values
          if (!--wait) {
            if (!merged)
              merge(values, parent.$$values);
            result.$$values = values;
            result.$$promises = result.$$promises || true;
            // keep for isResolve()
            delete result.$$inheritedValues;
            resolution.resolve(values);
          }
        }
        function fail(reason) {
          result.$$failure = reason;
          resolution.reject(reason);
        }
        // Short-circuit if parent has already failed
        if (isDefined(parent.$$failure)) {
          fail(parent.$$failure);
          return result;
        }
        if (parent.$$inheritedValues) {
          merge(values, omit(parent.$$inheritedValues, invocableKeys));
        }
        // Merge parent values if the parent has already resolved, or merge
        // parent promises and wait if the parent resolve is still in progress.
        extend(promises, parent.$$promises);
        if (parent.$$values) {
          merged = merge(values, omit(parent.$$values, invocableKeys));
          result.$$inheritedValues = omit(parent.$$values, invocableKeys);
          done();
        } else {
          if (parent.$$inheritedValues) {
            result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);
          }
          parent.then(done, fail);
        }
        // Process each invocable in the plan, but ignore any where a local of the same name exists.
        for (var i = 0, ii = plan.length; i < ii; i += 3) {
          if (locals.hasOwnProperty(plan[i]))
            done();
          else
            invoke(plan[i], plan[i + 1], plan[i + 2]);
        }
        function invoke(key, invocable, params) {
          // Create a deferred for this invocation. Failures will propagate to the resolution as well.
          var invocation = $q.defer(), waitParams = 0;
          function onfailure(reason) {
            invocation.reject(reason);
            fail(reason);
          }
          // Wait for any parameter that we have a promise for (either from parent or from this
          // resolve; in that case study() will have made sure it's ordered before us in the plan).
          forEach(params, function (dep) {
            if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {
              waitParams++;
              promises[dep].then(function (result) {
                values[dep] = result;
                if (!--waitParams)
                  proceed();
              }, onfailure);
            }
          });
          if (!waitParams)
            proceed();
          function proceed() {
            if (isDefined(result.$$failure))
              return;
            try {
              invocation.resolve($injector.invoke(invocable, self, values));
              invocation.promise.then(function (result) {
                values[key] = result;
                done();
              }, onfailure);
            } catch (e) {
              onfailure(e);
            }
          }
          // Publish promise synchronously; invocations further down in the plan may depend on it.
          promises[key] = invocation.promise;
        }
        return result;
      };
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$resolve#resolve
   * @methodOf ui.router.util.$resolve
   *
   * @description
   * Resolves a set of invocables. An invocable is a function to be invoked via 
   * `$injector.invoke()`, and can have an arbitrary number of dependencies. 
   * An invocable can either return a value directly,
   * or a `$q` promise. If a promise is returned it will be resolved and the 
   * resulting value will be used instead. Dependencies of invocables are resolved 
   * (in this order of precedence)
   *
   * - from the specified `locals`
   * - from another invocable that is part of this `$resolve` call
   * - from an invocable that is inherited from a `parent` call to `$resolve` 
   *   (or recursively
   * - from any ancestor `$resolve` of that parent).
   *
   * The return value of `$resolve` is a promise for an object that contains 
   * (in this order of precedence)
   *
   * - any `locals` (if specified)
   * - the resolved return values of all injectables
   * - any values inherited from a `parent` call to `$resolve` (if specified)
   *
   * The promise will resolve after the `parent` promise (if any) and all promises 
   * returned by injectables have been resolved. If any invocable 
   * (or `$injector.invoke`) throws an exception, or if a promise returned by an 
   * invocable is rejected, the `$resolve` promise is immediately rejected with the 
   * same error. A rejection of a `parent` promise (if specified) will likewise be 
   * propagated immediately. Once the `$resolve` promise has been rejected, no 
   * further invocables will be called.
   * 
   * Cyclic dependencies between invocables are not permitted and will caues `$resolve`
   * to throw an error. As a special case, an injectable can depend on a parameter 
   * with the same name as the injectable, which will be fulfilled from the `parent` 
   * injectable of the same name. This allows inherited values to be decorated. 
   * Note that in this case any other injectable in the same `$resolve` with the same
   * dependency would see the decorated value, not the inherited value.
   *
   * Note that missing dependencies -- unlike cyclic dependencies -- will cause an 
   * (asynchronous) rejection of the `$resolve` promise rather than a (synchronous) 
   * exception.
   *
   * Invocables are invoked eagerly as soon as all dependencies are available. 
   * This is true even for dependencies inherited from a `parent` call to `$resolve`.
   *
   * As a special case, an invocable can be a string, in which case it is taken to 
   * be a service name to be passed to `$injector.get()`. This is supported primarily 
   * for backwards-compatibility with the `resolve` property of `$routeProvider` 
   * routes.
   *
   * @param {object} invocables functions to invoke or 
   * `$injector` services to fetch.
   * @param {object} locals  values to make available to the injectables
   * @param {object} parent  a promise returned by another call to `$resolve`.
   * @param {object} self  the `this` for the invoked methods
   * @return {object} Promise for an object that contains the resolved return value
   * of all invocables, as well as any inherited and local values.
   */
    this.resolve = function (invocables, locals, parent, self) {
      return this.study(invocables)(locals, parent, self);
    };
  }
  angular.module('ui.router.util').service('$resolve', $Resolve);
  /**
 * @ngdoc object
 * @name ui.router.util.$templateFactory
 *
 * @requires $http
 * @requires $templateCache
 * @requires $injector
 *
 * @description
 * Service. Manages loading of templates.
 */
  $TemplateFactory.$inject = [
    '$http',
    '$templateCache',
    '$injector'
  ];
  function $TemplateFactory($http, $templateCache, $injector) {
    /**
   * @ngdoc function
   * @name ui.router.util.$templateFactory#fromConfig
   * @methodOf ui.router.util.$templateFactory
   *
   * @description
   * Creates a template from a configuration object. 
   *
   * @param {object} config Configuration object for which to load a template. 
   * The following properties are search in the specified order, and the first one 
   * that is defined is used to create the template:
   *
   * @param {string|object} config.template html string template or function to 
   * load via {@link ui.router.util.$templateFactory#fromString fromString}.
   * @param {string|object} config.templateUrl url to load or a function returning 
   * the url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.
   * @param {Function} config.templateProvider function to invoke via 
   * {@link ui.router.util.$templateFactory#fromProvider fromProvider}.
   * @param {object} params  Parameters to pass to the template function.
   * @param {object} locals Locals to pass to `invoke` if the template is loaded 
   * via a `templateProvider`. Defaults to `{ params: params }`.
   *
   * @return {string|object}  The template html as a string, or a promise for 
   * that string,or `null` if no template is configured.
   */
    this.fromConfig = function (config, params, locals) {
      return isDefined(config.template) ? this.fromString(config.template, params) : isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) : isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) : null;
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$templateFactory#fromString
   * @methodOf ui.router.util.$templateFactory
   *
   * @description
   * Creates a template from a string or a function returning a string.
   *
   * @param {string|object} template html template as a string or function that 
   * returns an html template as a string.
   * @param {object} params Parameters to pass to the template function.
   *
   * @return {string|object} The template html as a string, or a promise for that 
   * string.
   */
    this.fromString = function (template, params) {
      return isFunction(template) ? template(params) : template;
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$templateFactory#fromUrl
   * @methodOf ui.router.util.$templateFactory
   * 
   * @description
   * Loads a template from the a URL via `$http` and `$templateCache`.
   *
   * @param {string|Function} url url of the template to load, or a function 
   * that returns a url.
   * @param {Object} params Parameters to pass to the url function.
   * @return {string|Promise.<string>} The template html as a string, or a promise 
   * for that string.
   */
    this.fromUrl = function (url, params) {
      if (isFunction(url))
        url = url(params);
      if (url == null)
        return null;
      else
        return $http.get(url, {
          cache: $templateCache,
          headers: { Accept: 'text/html' }
        }).then(function (response) {
          return response.data;
        });
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$templateFactory#fromProvider
   * @methodOf ui.router.util.$templateFactory
   *
   * @description
   * Creates a template by invoking an injectable provider function.
   *
   * @param {Function} provider Function to invoke via `$injector.invoke`
   * @param {Object} params Parameters for the template.
   * @param {Object} locals Locals to pass to `invoke`. Defaults to 
   * `{ params: params }`.
   * @return {string|Promise.<string>} The template html as a string, or a promise 
   * for that string.
   */
    this.fromProvider = function (provider, params, locals) {
      return $injector.invoke(provider, null, locals || { params: params });
    };
  }
  angular.module('ui.router.util').service('$templateFactory', $TemplateFactory);
  var $$UMFP;
  // reference to $UrlMatcherFactoryProvider
  /**
 * @ngdoc object
 * @name ui.router.util.type:UrlMatcher
 *
 * @description
 * Matches URLs against patterns and extracts named parameters from the path or the search
 * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list
 * of search parameters. Multiple search parameter names are separated by '&'. Search parameters
 * do not influence whether or not a URL is matched, but their values are passed through into
 * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.
 * 
 * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace
 * syntax, which optionally allows a regular expression for the parameter to be specified:
 *
 * * `':'` name - colon placeholder
 * * `'*'` name - catch-all placeholder
 * * `'{' name '}'` - curly placeholder
 * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the
 *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.
 *
 * Parameter names may contain only word characters (latin letters, digits, and underscore) and
 * must be unique within the pattern (across both path and search parameters). For colon 
 * placeholders or curly placeholders without an explicit regexp, a path parameter matches any
 * number of characters other than '/'. For catch-all placeholders the path parameter matches
 * any number of characters.
 * 
 * Examples:
 * 
 * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for
 *   trailing slashes, and patterns have to match the entire path, not just a prefix.
 * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or
 *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.
 * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.
 * * `'/user/{id:[^/]*}'` - Same as the previous example.
 * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id
 *   parameter consists of 1 to 8 hex digits.
 * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the
 *   path into the parameter 'path'.
 * * `'/files/*path'` - ditto.
 * * `'/calendar/{start:date}'` - Matches "/calendar/2014-11-12" (because the pattern defined
 *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start
 *
 * @param {string} pattern  The pattern to compile into a matcher.
 * @param {Object} config  A configuration object hash:
 * @param {Object=} parentMatcher Used to concatenate the pattern/config onto
 *   an existing UrlMatcher
 *
 * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.
 * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.
 *
 * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any
 *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns
 *   non-null) will start with this prefix.
 *
 * @property {string} source  The pattern that was passed into the constructor
 *
 * @property {string} sourcePath  The path portion of the source property
 *
 * @property {string} sourceSearch  The search portion of the source property
 *
 * @property {string} regex  The constructed regex that will be used to match against the url when 
 *   it is time to determine which url will match.
 *
 * @returns {Object}  New `UrlMatcher` object
 */
  function UrlMatcher(pattern, config, parentMatcher) {
    config = extend({ params: {} }, isObject(config) ? config : {});
    // Find all placeholders and create a compiled pattern, using either classic or curly syntax:
    //   '*' name
    //   ':' name
    //   '{' name '}'
    //   '{' name ':' regexp '}'
    // The regular expression is somewhat complicated due to the need to allow curly braces
    // inside the regular expression. The placeholder regexp breaks down as follows:
    //    ([:*])([\w\[\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)
    //    \{([\w\[\]]+)(?:\:( ... ))?\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case
    //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either
    //    [^{}\\]+                       - anything other than curly braces or backslash
    //    \\.                            - a backslash escape
    //    \{(?:[^{}\\]+|\\.)*\}          - a matched set of curly braces containing other atoms
    var placeholder = /([:*])([\w\[\]]+)|\{([\w\[\]]+)(?:\:((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g, searchPlaceholder = /([:]?)([\w\[\]-]+)|\{([\w\[\]-]+)(?:\:((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g, compiled = '^', last = 0, m, segments = this.segments = [], parentParams = parentMatcher ? parentMatcher.params : {}, params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(), paramNames = [];
    function addParameter(id, type, config, location) {
      paramNames.push(id);
      if (parentParams[id])
        return parentParams[id];
      if (!/^\w+(-+\w+)*(?:\[\])?$/.test(id))
        throw new Error('Invalid parameter name \'' + id + '\' in pattern \'' + pattern + '\'');
      if (params[id])
        throw new Error('Duplicate parameter name \'' + id + '\' in pattern \'' + pattern + '\'');
      params[id] = new $$UMFP.Param(id, type, config, location);
      return params[id];
    }
    function quoteRegExp(string, pattern, squash) {
      var surroundPattern = [
          '',
          ''
        ], result = string.replace(/[\\\[\]\^$*+?.()|{}]/g, '\\$&');
      if (!pattern)
        return result;
      switch (squash) {
      case false:
        surroundPattern = [
          '(',
          ')'
        ];
        break;
      case true:
        surroundPattern = [
          '?(',
          ')?'
        ];
        break;
      default:
        surroundPattern = [
          '(' + squash + '|',
          ')?'
        ];
        break;
      }
      return result + surroundPattern[0] + pattern + surroundPattern[1];
    }
    this.source = pattern;
    // Split into static segments separated by path parameter placeholders.
    // The number of segments is always 1 more than the number of parameters.
    function matchDetails(m, isSearch) {
      var id, regexp, segment, type, cfg, arrayMode;
      id = m[2] || m[3];
      // IE[78] returns '' for unmatched groups instead of null
      cfg = config.params[id];
      segment = pattern.substring(last, m.index);
      regexp = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);
      type = $$UMFP.type(regexp || 'string') || inherit($$UMFP.type('string'), { pattern: new RegExp(regexp) });
      return {
        id: id,
        regexp: regexp,
        segment: segment,
        type: type,
        cfg: cfg
      };
    }
    var p, param, segment;
    while (m = placeholder.exec(pattern)) {
      p = matchDetails(m, false);
      if (p.segment.indexOf('?') >= 0)
        break;
      // we're into the search part
      param = addParameter(p.id, p.type, p.cfg, 'path');
      compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash);
      segments.push(p.segment);
      last = placeholder.lastIndex;
    }
    segment = pattern.substring(last);
    // Find any search parameter names and remove them from the last segment
    var i = segment.indexOf('?');
    if (i >= 0) {
      var search = this.sourceSearch = segment.substring(i);
      segment = segment.substring(0, i);
      this.sourcePath = pattern.substring(0, last + i);
      if (search.length > 0) {
        last = 0;
        while (m = searchPlaceholder.exec(search)) {
          p = matchDetails(m, true);
          param = addParameter(p.id, p.type, p.cfg, 'search');
          last = placeholder.lastIndex;  // check if ?&
        }
      }
    } else {
      this.sourcePath = pattern;
      this.sourceSearch = '';
    }
    compiled += quoteRegExp(segment) + (config.strict === false ? '/?' : '') + '$';
    segments.push(segment);
    this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);
    this.prefix = segments[0];
    this.$$paramNames = paramNames;
  }
  /**
 * @ngdoc function
 * @name ui.router.util.type:UrlMatcher#concat
 * @methodOf ui.router.util.type:UrlMatcher
 *
 * @description
 * Returns a new matcher for a pattern constructed by appending the path part and adding the
 * search parameters of the specified pattern to this pattern. The current pattern is not
 * modified. This can be understood as creating a pattern for URLs that are relative to (or
 * suffixes of) the current pattern.
 *
 * @example
 * The following two matchers are equivalent:
 * <pre>
 * new UrlMatcher('/user/{id}?q').concat('/details?date');
 * new UrlMatcher('/user/{id}/details?q&date');
 * </pre>
 *
 * @param {string} pattern  The pattern to append.
 * @param {Object} config  An object hash of the configuration for the matcher.
 * @returns {UrlMatcher}  A matcher for the concatenated pattern.
 */
  UrlMatcher.prototype.concat = function (pattern, config) {
    // Because order of search parameters is irrelevant, we can add our own search
    // parameters to the end of the new pattern. Parse the new pattern by itself
    // and then join the bits together, but it's much easier to do this on a string level.
    var defaultConfig = {
        caseInsensitive: $$UMFP.caseInsensitive(),
        strict: $$UMFP.strictMode(),
        squash: $$UMFP.defaultSquashPolicy()
      };
    return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);
  };
  UrlMatcher.prototype.toString = function () {
    return this.source;
  };
  /**
 * @ngdoc function
 * @name ui.router.util.type:UrlMatcher#exec
 * @methodOf ui.router.util.type:UrlMatcher
 *
 * @description
 * Tests the specified path against this matcher, and returns an object containing the captured
 * parameter values, or null if the path does not match. The returned object contains the values
 * of any search parameters that are mentioned in the pattern, but their value may be null if
 * they are not present in `searchParams`. This means that search parameters are always treated
 * as optional.
 *
 * @example
 * <pre>
 * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {
 *   x: '1', q: 'hello'
 * });
 * // returns { id: 'bob', q: 'hello', r: null }
 * </pre>
 *
 * @param {string} path  The URL path to match, e.g. `$location.path()`.
 * @param {Object} searchParams  URL search parameters, e.g. `$location.search()`.
 * @returns {Object}  The captured parameter values.
 */
  UrlMatcher.prototype.exec = function (path, searchParams) {
    var m = this.regexp.exec(path);
    if (!m)
      return null;
    searchParams = searchParams || {};
    var paramNames = this.parameters(), nTotal = paramNames.length, nPath = this.segments.length - 1, values = {}, i, j, cfg, paramName;
    if (nPath !== m.length - 1)
      throw new Error('Unbalanced capture group in route \'' + this.source + '\'');
    function decodePathArray(string) {
      function reverseString(str) {
        return str.split('').reverse().join('');
      }
      function unquoteDashes(str) {
        return str.replace(/\\-/, '-');
      }
      var split = reverseString(string).split(/-(?!\\)/);
      var allReversed = map(split, reverseString);
      return map(allReversed, unquoteDashes).reverse();
    }
    for (i = 0; i < nPath; i++) {
      paramName = paramNames[i];
      var param = this.params[paramName];
      var paramVal = m[i + 1];
      // if the param value matches a pre-replace pair, replace the value before decoding.
      for (j = 0; j < param.replace; j++) {
        if (param.replace[j].from === paramVal)
          paramVal = param.replace[j].to;
      }
      if (paramVal && param.array === true)
        paramVal = decodePathArray(paramVal);
      values[paramName] = param.value(paramVal);
    }
    for (; i < nTotal; i++) {
      paramName = paramNames[i];
      values[paramName] = this.params[paramName].value(searchParams[paramName]);
    }
    return values;
  };
  /**
 * @ngdoc function
 * @name ui.router.util.type:UrlMatcher#parameters
 * @methodOf ui.router.util.type:UrlMatcher
 *
 * @description
 * Returns the names of all path and search parameters of this pattern in an unspecified order.
 * 
 * @returns {Array.<string>}  An array of parameter names. Must be treated as read-only. If the
 *    pattern has no parameters, an empty array is returned.
 */
  UrlMatcher.prototype.parameters = function (param) {
    if (!isDefined(param))
      return this.$$paramNames;
    return this.params[param] || null;
  };
  /**
 * @ngdoc function
 * @name ui.router.util.type:UrlMatcher#validate
 * @methodOf ui.router.util.type:UrlMatcher
 *
 * @description
 * Checks an object hash of parameters to validate their correctness according to the parameter
 * types of this `UrlMatcher`.
 *
 * @param {Object} params The object hash of parameters to validate.
 * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.
 */
  UrlMatcher.prototype.validates = function (params) {
    return this.params.$$validates(params);
  };
  /**
 * @ngdoc function
 * @name ui.router.util.type:UrlMatcher#format
 * @methodOf ui.router.util.type:UrlMatcher
 *
 * @description
 * Creates a URL that matches this pattern by substituting the specified values
 * for the path and search parameters. Null values for path parameters are
 * treated as empty strings.
 *
 * @example
 * <pre>
 * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });
 * // returns '/user/bob?q=yes'
 * </pre>
 *
 * @param {Object} values  the values to substitute for the parameters in this pattern.
 * @returns {string}  the formatted URL (path and optionally search part).
 */
  UrlMatcher.prototype.format = function (values) {
    values = values || {};
    var segments = this.segments, params = this.parameters(), paramset = this.params;
    if (!this.validates(values))
      return null;
    var i, search = false, nPath = segments.length - 1, nTotal = params.length, result = segments[0];
    function encodeDashes(str) {
      // Replace dashes with encoded "\-"
      return encodeURIComponent(str).replace(/-/g, function (c) {
        return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase();
      });
    }
    for (i = 0; i < nTotal; i++) {
      var isPathParam = i < nPath;
      var name = params[i], param = paramset[name], value = param.value(values[name]);
      var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);
      var squash = isDefaultValue ? param.squash : false;
      var encoded = param.type.encode(value);
      if (isPathParam) {
        var nextSegment = segments[i + 1];
        if (squash === false) {
          if (encoded != null) {
            if (isArray(encoded)) {
              result += map(encoded, encodeDashes).join('-');
            } else {
              result += encodeURIComponent(encoded);
            }
          }
          result += nextSegment;
        } else if (squash === true) {
          var capture = result.match(/\/$/) ? /\/?(.*)/ : /(.*)/;
          result += nextSegment.match(capture)[1];
        } else if (isString(squash)) {
          result += squash + nextSegment;
        }
      } else {
        if (encoded == null || isDefaultValue && squash !== false)
          continue;
        if (!isArray(encoded))
          encoded = [encoded];
        encoded = map(encoded, encodeURIComponent).join('&' + name + '=');
        result += (search ? '&' : '?') + (name + '=' + encoded);
        search = true;
      }
    }
    return result;
  };
  /**
 * @ngdoc object
 * @name ui.router.util.type:Type
 *
 * @description
 * Implements an interface to define custom parameter types that can be decoded from and encoded to
 * string parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}
 * objects when matching or formatting URLs, or comparing or validating parameter values.
 *
 * See {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more
 * information on registering custom types.
 *
 * @param {Object} config  A configuration object which contains the custom type definition.  The object's
 *        properties will override the default methods and/or pattern in `Type`'s public interface.
 * @example
 * <pre>
 * {
 *   decode: function(val) { return parseInt(val, 10); },
 *   encode: function(val) { return val && val.toString(); },
 *   equals: function(a, b) { return this.is(a) && a === b; },
 *   is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },
 *   pattern: /\d+/
 * }
 * </pre>
 *
 * @property {RegExp} pattern The regular expression pattern used to match values of this type when
 *           coming from a substring of a URL.
 *
 * @returns {Object}  Returns a new `Type` object.
 */
  function Type(config) {
    extend(this, config);
  }
  /**
 * @ngdoc function
 * @name ui.router.util.type:Type#is
 * @methodOf ui.router.util.type:Type
 *
 * @description
 * Detects whether a value is of a particular type. Accepts a native (decoded) value
 * and determines whether it matches the current `Type` object.
 *
 * @param {*} val  The value to check.
 * @param {string} key  Optional. If the type check is happening in the context of a specific
 *        {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the
 *        parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.
 * @returns {Boolean}  Returns `true` if the value matches the type, otherwise `false`.
 */
  Type.prototype.is = function (val, key) {
    return true;
  };
  /**
 * @ngdoc function
 * @name ui.router.util.type:Type#encode
 * @methodOf ui.router.util.type:Type
 *
 * @description
 * Encodes a custom/native type value to a string that can be embedded in a URL. Note that the
 * return value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it
 * only needs to be a representation of `val` that has been coerced to a string.
 *
 * @param {*} val  The value to encode.
 * @param {string} key  The name of the parameter in which `val` is stored. Can be used for
 *        meta-programming of `Type` objects.
 * @returns {string}  Returns a string representation of `val` that can be encoded in a URL.
 */
  Type.prototype.encode = function (val, key) {
    return val;
  };
  /**
 * @ngdoc function
 * @name ui.router.util.type:Type#decode
 * @methodOf ui.router.util.type:Type
 *
 * @description
 * Converts a parameter value (from URL string or transition param) to a custom/native value.
 *
 * @param {string} val  The URL parameter value to decode.
 * @param {string} key  The name of the parameter in which `val` is stored. Can be used for
 *        meta-programming of `Type` objects.
 * @returns {*}  Returns a custom representation of the URL parameter value.
 */
  Type.prototype.decode = function (val, key) {
    return val;
  };
  /**
 * @ngdoc function
 * @name ui.router.util.type:Type#equals
 * @methodOf ui.router.util.type:Type
 *
 * @description
 * Determines whether two decoded values are equivalent.
 *
 * @param {*} a  A value to compare against.
 * @param {*} b  A value to compare against.
 * @returns {Boolean}  Returns `true` if the values are equivalent/equal, otherwise `false`.
 */
  Type.prototype.equals = function (a, b) {
    return a == b;
  };
  Type.prototype.$subPattern = function () {
    var sub = this.pattern.toString();
    return sub.substr(1, sub.length - 2);
  };
  Type.prototype.pattern = /.*/;
  Type.prototype.toString = function () {
    return '{Type:' + this.name + '}';
  };
  /*
 * Wraps an existing custom Type as an array of Type, depending on 'mode'.
 * e.g.:
 * - urlmatcher pattern "/path?{queryParam[]:int}"
 * - url: "/path?queryParam=1&queryParam=2
 * - $stateParams.queryParam will be [1, 2]
 * if `mode` is "auto", then
 * - url: "/path?queryParam=1 will create $stateParams.queryParam: 1
 * - url: "/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]
 */
  Type.prototype.$asArray = function (mode, isSearch) {
    if (!mode)
      return this;
    if (mode === 'auto' && !isSearch)
      throw new Error('\'auto\' array mode is for query parameters only');
    return new ArrayType(this, mode);
    function ArrayType(type, mode) {
      function bindTo(type, callbackName) {
        return function () {
          return type[callbackName].apply(type, arguments);
        };
      }
      // Wrap non-array value as array
      function arrayWrap(val) {
        return isArray(val) ? val : isDefined(val) ? [val] : [];
      }
      // Unwrap array value for "auto" mode. Return undefined for empty array.
      function arrayUnwrap(val) {
        switch (val.length) {
        case 0:
          return undefined;
        case 1:
          return mode === 'auto' ? val[0] : val;
        default:
          return val;
        }
      }
      function falsey(val) {
        return !val;
      }
      // Wraps type (.is/.encode/.decode) functions to operate on each value of an array
      function arrayHandler(callback, allTruthyMode) {
        return function handleArray(val) {
          val = arrayWrap(val);
          var result = map(val, callback);
          if (allTruthyMode === true)
            return filter(result, falsey).length === 0;
          return arrayUnwrap(result);
        };
      }
      // Wraps type (.equals) functions to operate on each value of an array
      function arrayEqualsHandler(callback) {
        return function handleArray(val1, val2) {
          var left = arrayWrap(val1), right = arrayWrap(val2);
          if (left.length !== right.length)
            return false;
          for (var i = 0; i < left.length; i++) {
            if (!callback(left[i], right[i]))
              return false;
          }
          return true;
        };
      }
      this.encode = arrayHandler(bindTo(type, 'encode'));
      this.decode = arrayHandler(bindTo(type, 'decode'));
      this.is = arrayHandler(bindTo(type, 'is'), true);
      this.equals = arrayEqualsHandler(bindTo(type, 'equals'));
      this.pattern = type.pattern;
      this.$arrayMode = mode;
    }
  };
  /**
 * @ngdoc object
 * @name ui.router.util.$urlMatcherFactory
 *
 * @description
 * Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory
 * is also available to providers under the name `$urlMatcherFactoryProvider`.
 */
  function $UrlMatcherFactory() {
    $$UMFP = this;
    var isCaseInsensitive = false, isStrictMode = true, defaultSquashPolicy = false;
    function valToString(val) {
      return val != null ? val.toString().replace(/\//g, '%2F') : val;
    }
    function valFromString(val) {
      return val != null ? val.toString().replace(/%2F/g, '/') : val;
    }
    //  TODO: in 1.0, make string .is() return false if value is undefined by default.
    //  function regexpMatches(val) { /*jshint validthis:true */ return isDefined(val) && this.pattern.test(val); }
    function regexpMatches(val) {
      /*jshint validthis:true */
      return this.pattern.test(val);
    }
    var $types = {}, enqueue = true, typeQueue = [], injector, defaultTypes = {
        string: {
          encode: valToString,
          decode: valFromString,
          is: regexpMatches,
          pattern: /[^/]*/
        },
        int: {
          encode: valToString,
          decode: function (val) {
            return parseInt(val, 10);
          },
          is: function (val) {
            return isDefined(val) && this.decode(val.toString()) === val;
          },
          pattern: /\d+/
        },
        bool: {
          encode: function (val) {
            return val ? 1 : 0;
          },
          decode: function (val) {
            return parseInt(val, 10) !== 0;
          },
          is: function (val) {
            return val === true || val === false;
          },
          pattern: /0|1/
        },
        date: {
          encode: function (val) {
            if (!this.is(val))
              return undefined;
            return [
              val.getFullYear(),
              ('0' + (val.getMonth() + 1)).slice(-2),
              ('0' + val.getDate()).slice(-2)
            ].join('-');
          },
          decode: function (val) {
            if (this.is(val))
              return val;
            var match = this.capture.exec(val);
            return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;
          },
          is: function (val) {
            return val instanceof Date && !isNaN(val.valueOf());
          },
          equals: function (a, b) {
            return this.is(a) && this.is(b) && a.toISOString() === b.toISOString();
          },
          pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,
          capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/
        },
        json: {
          encode: angular.toJson,
          decode: angular.fromJson,
          is: angular.isObject,
          equals: angular.equals,
          pattern: /[^/]*/
        },
        any: {
          encode: angular.identity,
          decode: angular.identity,
          is: angular.identity,
          equals: angular.equals,
          pattern: /.*/
        }
      };
    function getDefaultConfig() {
      return {
        strict: isStrictMode,
        caseInsensitive: isCaseInsensitive
      };
    }
    function isInjectable(value) {
      return isFunction(value) || isArray(value) && isFunction(value[value.length - 1]);
    }
    /**
   * [Internal] Get the default value of a parameter, which may be an injectable function.
   */
    $UrlMatcherFactory.$$getDefaultValue = function (config) {
      if (!isInjectable(config.value))
        return config.value;
      if (!injector)
        throw new Error('Injectable functions cannot be called at configuration time');
      return injector.invoke(config.value);
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#caseInsensitive
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Defines whether URL matching should be case sensitive (the default behavior), or not.
   *
   * @param {boolean} value `false` to match URL in a case sensitive manner; otherwise `true`;
   * @returns {boolean} the current value of caseInsensitive
   */
    this.caseInsensitive = function (value) {
      if (isDefined(value))
        isCaseInsensitive = value;
      return isCaseInsensitive;
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#strictMode
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Defines whether URLs should match trailing slashes, or not (the default behavior).
   *
   * @param {boolean=} value `false` to match trailing slashes in URLs, otherwise `true`.
   * @returns {boolean} the current value of strictMode
   */
    this.strictMode = function (value) {
      if (isDefined(value))
        isStrictMode = value;
      return isStrictMode;
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#defaultSquashPolicy
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Sets the default behavior when generating or matching URLs with default parameter values.
   *
   * @param {string} value A string that defines the default parameter URL squashing behavior.
   *    `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL
   *    `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the
   *             parameter is surrounded by slashes, squash (remove) one slash from the URL
   *    any other string, e.g. "~": When generating an href with a default parameter value, squash (remove)
   *             the parameter value from the URL and replace it with this string.
   */
    this.defaultSquashPolicy = function (value) {
      if (!isDefined(value))
        return defaultSquashPolicy;
      if (value !== true && value !== false && !isString(value))
        throw new Error('Invalid squash policy: ' + value + '. Valid policies: false, true, arbitrary-string');
      defaultSquashPolicy = value;
      return value;
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#compile
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.
   *
   * @param {string} pattern  The URL pattern.
   * @param {Object} config  The config object hash.
   * @returns {UrlMatcher}  The UrlMatcher.
   */
    this.compile = function (pattern, config) {
      return new UrlMatcher(pattern, extend(getDefaultConfig(), config));
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#isMatcher
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Returns true if the specified object is a `UrlMatcher`, or false otherwise.
   *
   * @param {Object} object  The object to perform the type check against.
   * @returns {Boolean}  Returns `true` if the object matches the `UrlMatcher` interface, by
   *          implementing all the same methods.
   */
    this.isMatcher = function (o) {
      if (!isObject(o))
        return false;
      var result = true;
      forEach(UrlMatcher.prototype, function (val, name) {
        if (isFunction(val)) {
          result = result && (isDefined(o[name]) && isFunction(o[name]));
        }
      });
      return result;
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#type
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to
   * generate URLs with typed parameters.
   *
   * @param {string} name  The type name.
   * @param {Object|Function} definition   The type definition. See
   *        {@link ui.router.util.type:Type `Type`} for information on the values accepted.
   * @param {Object|Function} definitionFn (optional) A function that is injected before the app
   *        runtime starts.  The result of this function is merged into the existing `definition`.
   *        See {@link ui.router.util.type:Type `Type`} for information on the values accepted.
   *
   * @returns {Object}  Returns `$urlMatcherFactoryProvider`.
   *
   * @example
   * This is a simple example of a custom type that encodes and decodes items from an
   * array, using the array index as the URL-encoded value:
   *
   * <pre>
   * var list = ['John', 'Paul', 'George', 'Ringo'];
   *
   * $urlMatcherFactoryProvider.type('listItem', {
   *   encode: function(item) {
   *     // Represent the list item in the URL using its corresponding index
   *     return list.indexOf(item);
   *   },
   *   decode: function(item) {
   *     // Look up the list item by index
   *     return list[parseInt(item, 10)];
   *   },
   *   is: function(item) {
   *     // Ensure the item is valid by checking to see that it appears
   *     // in the list
   *     return list.indexOf(item) > -1;
   *   }
   * });
   *
   * $stateProvider.state('list', {
   *   url: "/list/{item:listItem}",
   *   controller: function($scope, $stateParams) {
   *     console.log($stateParams.item);
   *   }
   * });
   *
   * // ...
   *
   * // Changes URL to '/list/3', logs "Ringo" to the console
   * $state.go('list', { item: "Ringo" });
   * </pre>
   *
   * This is a more complex example of a type that relies on dependency injection to
   * interact with services, and uses the parameter name from the URL to infer how to
   * handle encoding and decoding parameter values:
   *
   * <pre>
   * // Defines a custom type that gets a value from a service,
   * // where each service gets different types of values from
   * // a backend API:
   * $urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {
   *
   *   // Matches up services to URL parameter names
   *   var services = {
   *     user: Users,
   *     post: Posts
   *   };
   *
   *   return {
   *     encode: function(object) {
   *       // Represent the object in the URL using its unique ID
   *       return object.id;
   *     },
   *     decode: function(value, key) {
   *       // Look up the object by ID, using the parameter
   *       // name (key) to call the correct service
   *       return services[key].findById(value);
   *     },
   *     is: function(object, key) {
   *       // Check that object is a valid dbObject
   *       return angular.isObject(object) && object.id && services[key];
   *     }
   *     equals: function(a, b) {
   *       // Check the equality of decoded objects by comparing
   *       // their unique IDs
   *       return a.id === b.id;
   *     }
   *   };
   * });
   *
   * // In a config() block, you can then attach URLs with
   * // type-annotated parameters:
   * $stateProvider.state('users', {
   *   url: "/users",
   *   // ...
   * }).state('users.item', {
   *   url: "/{user:dbObject}",
   *   controller: function($scope, $stateParams) {
   *     // $stateParams.user will now be an object returned from
   *     // the Users service
   *   },
   *   // ...
   * });
   * </pre>
   */
    this.type = function (name, definition, definitionFn) {
      if (!isDefined(definition))
        return $types[name];
      if ($types.hasOwnProperty(name))
        throw new Error('A type named \'' + name + '\' has already been defined.');
      $types[name] = new Type(extend({ name: name }, definition));
      if (definitionFn) {
        typeQueue.push({
          name: name,
          def: definitionFn
        });
        if (!enqueue)
          flushTypeQueue();
      }
      return this;
    };
    // `flushTypeQueue()` waits until `$urlMatcherFactory` is injected before invoking the queued `definitionFn`s
    function flushTypeQueue() {
      while (typeQueue.length) {
        var type = typeQueue.shift();
        if (type.pattern)
          throw new Error('You cannot override a type\'s .pattern at runtime.');
        angular.extend($types[type.name], injector.invoke(type.def));
      }
    }
    // Register default types. Store them in the prototype of $types.
    forEach(defaultTypes, function (type, name) {
      $types[name] = new Type(extend({ name: name }, type));
    });
    $types = inherit($types, {});
    /* No need to document $get, since it returns this */
    this.$get = [
      '$injector',
      function ($injector) {
        injector = $injector;
        enqueue = false;
        flushTypeQueue();
        forEach(defaultTypes, function (type, name) {
          if (!$types[name])
            $types[name] = new Type(type);
        });
        return this;
      }
    ];
    this.Param = function Param(id, type, config, location) {
      var self = this;
      config = unwrapShorthand(config);
      type = getType(config, type, location);
      var arrayMode = getArrayMode();
      type = arrayMode ? type.$asArray(arrayMode, location === 'search') : type;
      if (type.name === 'string' && !arrayMode && location === 'path' && config.value === undefined)
        config.value = '';
      // for 0.2.x; in 0.3.0+ do not automatically default to ""
      var isOptional = config.value !== undefined;
      var squash = getSquashPolicy(config, isOptional);
      var replace = getReplace(config, arrayMode, isOptional, squash);
      function unwrapShorthand(config) {
        var keys = isObject(config) ? objectKeys(config) : [];
        var isShorthand = indexOf(keys, 'value') === -1 && indexOf(keys, 'type') === -1 && indexOf(keys, 'squash') === -1 && indexOf(keys, 'array') === -1;
        if (isShorthand)
          config = { value: config };
        config.$$fn = isInjectable(config.value) ? config.value : function () {
          return config.value;
        };
        return config;
      }
      function getType(config, urlType, location) {
        if (config.type && urlType)
          throw new Error('Param \'' + id + '\' has two type configurations.');
        if (urlType)
          return urlType;
        if (!config.type)
          return location === 'config' ? $types.any : $types.string;
        return config.type instanceof Type ? config.type : new Type(config.type);
      }
      // array config: param name (param[]) overrides default settings.  explicit config overrides param name.
      function getArrayMode() {
        var arrayDefaults = { array: location === 'search' ? 'auto' : false };
        var arrayParamNomenclature = id.match(/\[\]$/) ? { array: true } : {};
        return extend(arrayDefaults, arrayParamNomenclature, config).array;
      }
      /**
     * returns false, true, or the squash value to indicate the "default parameter url squash policy".
     */
      function getSquashPolicy(config, isOptional) {
        var squash = config.squash;
        if (!isOptional || squash === false)
          return false;
        if (!isDefined(squash) || squash == null)
          return defaultSquashPolicy;
        if (squash === true || isString(squash))
          return squash;
        throw new Error('Invalid squash policy: \'' + squash + '\'. Valid policies: false, true, or arbitrary string');
      }
      function getReplace(config, arrayMode, isOptional, squash) {
        var replace, configuredKeys, defaultPolicy = [
            {
              from: '',
              to: isOptional || arrayMode ? undefined : ''
            },
            {
              from: null,
              to: isOptional || arrayMode ? undefined : ''
            }
          ];
        replace = isArray(config.replace) ? config.replace : [];
        if (isString(squash))
          replace.push({
            from: squash,
            to: undefined
          });
        configuredKeys = map(replace, function (item) {
          return item.from;
        });
        return filter(defaultPolicy, function (item) {
          return indexOf(configuredKeys, item.from) === -1;
        }).concat(replace);
      }
      /**
     * [Internal] Get the default value of a parameter, which may be an injectable function.
     */
      function $$getDefaultValue() {
        if (!injector)
          throw new Error('Injectable functions cannot be called at configuration time');
        return injector.invoke(config.$$fn);
      }
      /**
     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the
     * default value, which may be the result of an injectable function.
     */
      function $value(value) {
        function hasReplaceVal(val) {
          return function (obj) {
            return obj.from === val;
          };
        }
        function $replace(value) {
          var replacement = map(filter(self.replace, hasReplaceVal(value)), function (obj) {
              return obj.to;
            });
          return replacement.length ? replacement[0] : value;
        }
        value = $replace(value);
        return isDefined(value) ? self.type.decode(value) : $$getDefaultValue();
      }
      function toString() {
        return '{Param:' + id + ' ' + type + ' squash: \'' + squash + '\' optional: ' + isOptional + '}';
      }
      extend(this, {
        id: id,
        type: type,
        location: location,
        array: arrayMode,
        squash: squash,
        replace: replace,
        isOptional: isOptional,
        value: $value,
        dynamic: undefined,
        config: config,
        toString: toString
      });
    };
    function ParamSet(params) {
      extend(this, params || {});
    }
    ParamSet.prototype = {
      $$new: function () {
        return inherit(this, extend(new ParamSet(), { $$parent: this }));
      },
      $$keys: function () {
        var keys = [], chain = [], parent = this, ignore = objectKeys(ParamSet.prototype);
        while (parent) {
          chain.push(parent);
          parent = parent.$$parent;
        }
        chain.reverse();
        forEach(chain, function (paramset) {
          forEach(objectKeys(paramset), function (key) {
            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1)
              keys.push(key);
          });
        });
        return keys;
      },
      $$values: function (paramValues) {
        var values = {}, self = this;
        forEach(self.$$keys(), function (key) {
          values[key] = self[key].value(paramValues && paramValues[key]);
        });
        return values;
      },
      $$equals: function (paramValues1, paramValues2) {
        var equal = true, self = this;
        forEach(self.$$keys(), function (key) {
          var left = paramValues1 && paramValues1[key], right = paramValues2 && paramValues2[key];
          if (!self[key].type.equals(left, right))
            equal = false;
        });
        return equal;
      },
      $$validates: function $$validate(paramValues) {
        var result = true, isOptional, val, param, self = this;
        forEach(this.$$keys(), function (key) {
          param = self[key];
          val = paramValues[key];
          isOptional = !val && param.isOptional;
          result = result && (isOptional || !!param.type.is(val));
        });
        return result;
      },
      $$parent: undefined
    };
    this.ParamSet = ParamSet;
  }
  // Register as a provider so it's available to other providers
  angular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);
  angular.module('ui.router.util').run([
    '$urlMatcherFactory',
    function ($urlMatcherFactory) {
    }
  ]);
  /**
 * @ngdoc object
 * @name ui.router.router.$urlRouterProvider
 *
 * @requires ui.router.util.$urlMatcherFactoryProvider
 * @requires $locationProvider
 *
 * @description
 * `$urlRouterProvider` has the responsibility of watching `$location`. 
 * When `$location` changes it runs through a list of rules one by one until a 
 * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify 
 * a url in a state configuration. All urls are compiled into a UrlMatcher object.
 *
 * There are several methods on `$urlRouterProvider` that make it useful to use directly
 * in your module config.
 */
  $UrlRouterProvider.$inject = [
    '$locationProvider',
    '$urlMatcherFactoryProvider'
  ];
  function $UrlRouterProvider($locationProvider, $urlMatcherFactory) {
    var rules = [], otherwise = null, interceptDeferred = false, listener;
    // Returns a string that is a prefix of all strings matching the RegExp
    function regExpPrefix(re) {
      var prefix = /^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/.exec(re.source);
      return prefix != null ? prefix[1].replace(/\\(.)/g, '$1') : '';
    }
    // Interpolates matched values into a String.replace()-style pattern
    function interpolate(pattern, match) {
      return pattern.replace(/\$(\$|\d{1,2})/, function (m, what) {
        return match[what === '$' ? 0 : Number(what)];
      });
    }
    /**
   * @ngdoc function
   * @name ui.router.router.$urlRouterProvider#rule
   * @methodOf ui.router.router.$urlRouterProvider
   *
   * @description
   * Defines rules that are used by `$urlRouterProvider` to find matches for
   * specific URLs.
   *
   * @example
   * <pre>
   * var app = angular.module('app', ['ui.router.router']);
   *
   * app.config(function ($urlRouterProvider) {
   *   // Here's an example of how you might allow case insensitive urls
   *   $urlRouterProvider.rule(function ($injector, $location) {
   *     var path = $location.path(),
   *         normalized = path.toLowerCase();
   *
   *     if (path !== normalized) {
   *       return normalized;
   *     }
   *   });
   * });
   * </pre>
   *
   * @param {object} rule Handler function that takes `$injector` and `$location`
   * services as arguments. You can use them to return a valid path as a string.
   *
   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance
   */
    this.rule = function (rule) {
      if (!isFunction(rule))
        throw new Error('\'rule\' must be a function');
      rules.push(rule);
      return this;
    };
    /**
   * @ngdoc object
   * @name ui.router.router.$urlRouterProvider#otherwise
   * @methodOf ui.router.router.$urlRouterProvider
   *
   * @description
   * Defines a path that is used when an invalid route is requested.
   *
   * @example
   * <pre>
   * var app = angular.module('app', ['ui.router.router']);
   *
   * app.config(function ($urlRouterProvider) {
   *   // if the path doesn't match any of the urls you configured
   *   // otherwise will take care of routing the user to the
   *   // specified url
   *   $urlRouterProvider.otherwise('/index');
   *
   *   // Example of using function rule as param
   *   $urlRouterProvider.otherwise(function ($injector, $location) {
   *     return '/a/valid/url';
   *   });
   * });
   * </pre>
   *
   * @param {string|object} rule The url path you want to redirect to or a function 
   * rule that returns the url path. The function version is passed two params: 
   * `$injector` and `$location` services, and must return a url string.
   *
   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance
   */
    this.otherwise = function (rule) {
      if (isString(rule)) {
        var redirect = rule;
        rule = function () {
          return redirect;
        };
      } else if (!isFunction(rule))
        throw new Error('\'rule\' must be a function');
      otherwise = rule;
      return this;
    };
    function handleIfMatch($injector, handler, match) {
      if (!match)
        return false;
      var result = $injector.invoke(handler, handler, { $match: match });
      return isDefined(result) ? result : true;
    }
    /**
   * @ngdoc function
   * @name ui.router.router.$urlRouterProvider#when
   * @methodOf ui.router.router.$urlRouterProvider
   *
   * @description
   * Registers a handler for a given url matching. if handle is a string, it is
   * treated as a redirect, and is interpolated according to the syntax of match
   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).
   *
   * If the handler is a function, it is injectable. It gets invoked if `$location`
   * matches. You have the option of inject the match object as `$match`.
   *
   * The handler can return
   *
   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`
   *   will continue trying to find another one that matches.
   * - **string** which is treated as a redirect and passed to `$location.url()`
   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.
   *
   * @example
   * <pre>
   * var app = angular.module('app', ['ui.router.router']);
   *
   * app.config(function ($urlRouterProvider) {
   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {
   *     if ($state.$current.navigable !== state ||
   *         !equalForKeys($match, $stateParams) {
   *      $state.transitionTo(state, $match, false);
   *     }
   *   });
   * });
   * </pre>
   *
   * @param {string|object} what The incoming path that you want to redirect.
   * @param {string|object} handler The path you want to redirect your user to.
   */
    this.when = function (what, handler) {
      var redirect, handlerIsString = isString(handler);
      if (isString(what))
        what = $urlMatcherFactory.compile(what);
      if (!handlerIsString && !isFunction(handler) && !isArray(handler))
        throw new Error('invalid \'handler\' in when()');
      var strategies = {
          matcher: function (what, handler) {
            if (handlerIsString) {
              redirect = $urlMatcherFactory.compile(handler);
              handler = [
                '$match',
                function ($match) {
                  return redirect.format($match);
                }
              ];
            }
            return extend(function ($injector, $location) {
              return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));
            }, { prefix: isString(what.prefix) ? what.prefix : '' });
          },
          regex: function (what, handler) {
            if (what.global || what.sticky)
              throw new Error('when() RegExp must not be global or sticky');
            if (handlerIsString) {
              redirect = handler;
              handler = [
                '$match',
                function ($match) {
                  return interpolate(redirect, $match);
                }
              ];
            }
            return extend(function ($injector, $location) {
              return handleIfMatch($injector, handler, what.exec($location.path()));
            }, { prefix: regExpPrefix(what) });
          }
        };
      var check = {
          matcher: $urlMatcherFactory.isMatcher(what),
          regex: what instanceof RegExp
        };
      for (var n in check) {
        if (check[n])
          return this.rule(strategies[n](what, handler));
      }
      throw new Error('invalid \'what\' in when()');
    };
    /**
   * @ngdoc function
   * @name ui.router.router.$urlRouterProvider#deferIntercept
   * @methodOf ui.router.router.$urlRouterProvider
   *
   * @description
   * Disables (or enables) deferring location change interception.
   *
   * If you wish to customize the behavior of syncing the URL (for example, if you wish to
   * defer a transition but maintain the current URL), call this method at configuration time.
   * Then, at run time, call `$urlRouter.listen()` after you have configured your own
   * `$locationChangeSuccess` event handler.
   *
   * @example
   * <pre>
   * var app = angular.module('app', ['ui.router.router']);
   *
   * app.config(function ($urlRouterProvider) {
   *
   *   // Prevent $urlRouter from automatically intercepting URL changes;
   *   // this allows you to configure custom behavior in between
   *   // location changes and route synchronization:
   *   $urlRouterProvider.deferIntercept();
   *
   * }).run(function ($rootScope, $urlRouter, UserService) {
   *
   *   $rootScope.$on('$locationChangeSuccess', function(e) {
   *     // UserService is an example service for managing user state
   *     if (UserService.isLoggedIn()) return;
   *
   *     // Prevent $urlRouter's default handler from firing
   *     e.preventDefault();
   *
   *     UserService.handleLogin().then(function() {
   *       // Once the user has logged in, sync the current URL
   *       // to the router:
   *       $urlRouter.sync();
   *     });
   *   });
   *
   *   // Configures $urlRouter's listener *after* your custom listener
   *   $urlRouter.listen();
   * });
   * </pre>
   *
   * @param {boolean} defer Indicates whether to defer location change interception. Passing
            no parameter is equivalent to `true`.
   */
    this.deferIntercept = function (defer) {
      if (defer === undefined)
        defer = true;
      interceptDeferred = defer;
    };
    /**
   * @ngdoc object
   * @name ui.router.router.$urlRouter
   *
   * @requires $location
   * @requires $rootScope
   * @requires $injector
   * @requires $browser
   *
   * @description
   *
   */
    this.$get = $get;
    $get.$inject = [
      '$location',
      '$rootScope',
      '$injector',
      '$browser'
    ];
    function $get($location, $rootScope, $injector, $browser) {
      var baseHref = $browser.baseHref(), location = $location.url(), lastPushedUrl;
      function appendBasePath(url, isHtml5, absolute) {
        if (baseHref === '/')
          return url;
        if (isHtml5)
          return baseHref.slice(0, -1) + url;
        if (absolute)
          return baseHref.slice(1) + url;
        return url;
      }
      // TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree
      function update(evt) {
        if (evt && evt.defaultPrevented)
          return;
        var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;
        lastPushedUrl = undefined;
        if (ignoreUpdate)
          return true;
        function check(rule) {
          var handled = rule($injector, $location);
          if (!handled)
            return false;
          if (isString(handled))
            $location.replace().url(handled);
          return true;
        }
        var n = rules.length, i;
        for (i = 0; i < n; i++) {
          if (check(rules[i]))
            return;
        }
        // always check otherwise last to allow dynamic updates to the set of rules
        if (otherwise)
          check(otherwise);
      }
      function listen() {
        listener = listener || $rootScope.$on('$locationChangeSuccess', update);
        return listener;
      }
      if (!interceptDeferred)
        listen();
      return {
        sync: function () {
          update();
        },
        listen: function () {
          return listen();
        },
        update: function (read) {
          if (read) {
            location = $location.url();
            return;
          }
          if ($location.url() === location)
            return;
          $location.url(location);
          $location.replace();
        },
        push: function (urlMatcher, params, options) {
          $location.url(urlMatcher.format(params || {}));
          lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;
          if (options && options.replace)
            $location.replace();
        },
        href: function (urlMatcher, params, options) {
          if (!urlMatcher.validates(params))
            return null;
          var isHtml5 = $locationProvider.html5Mode();
          if (angular.isObject(isHtml5)) {
            isHtml5 = isHtml5.enabled;
          }
          var url = urlMatcher.format(params);
          options = options || {};
          if (!isHtml5 && url !== null) {
            url = '#' + $locationProvider.hashPrefix() + url;
          }
          url = appendBasePath(url, isHtml5, options.absolute);
          if (!options.absolute || !url) {
            return url;
          }
          var slash = !isHtml5 && url ? '/' : '', port = $location.port();
          port = port === 80 || port === 443 ? '' : ':' + port;
          return [
            $location.protocol(),
            '://',
            $location.host(),
            port,
            slash,
            url
          ].join('');
        }
      };
    }
  }
  angular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);
  /**
 * @ngdoc object
 * @name ui.router.state.$stateProvider
 *
 * @requires ui.router.router.$urlRouterProvider
 * @requires ui.router.util.$urlMatcherFactoryProvider
 *
 * @description
 * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely
 * on state.
 *
 * A state corresponds to a "place" in the application in terms of the overall UI and
 * navigation. A state describes (via the controller / template / view properties) what
 * the UI looks like and does at that place.
 *
 * States often have things in common, and the primary way of factoring out these
 * commonalities in this model is via the state hierarchy, i.e. parent/child states aka
 * nested states.
 *
 * The `$stateProvider` provides interfaces to declare these states for your app.
 */
  $StateProvider.$inject = [
    '$urlRouterProvider',
    '$urlMatcherFactoryProvider'
  ];
  function $StateProvider($urlRouterProvider, $urlMatcherFactory) {
    var root, states = {}, $state, queue = {}, abstractKey = 'abstract';
    // Builds state properties from definition passed to registerState()
    var stateBuilder = {
        parent: function (state) {
          if (isDefined(state.parent) && state.parent)
            return findState(state.parent);
          // regex matches any valid composite state name
          // would match "contact.list" but not "contacts"
          var compositeName = /^(.+)\.[^.]+$/.exec(state.name);
          return compositeName ? findState(compositeName[1]) : root;
        },
        data: function (state) {
          if (state.parent && state.parent.data) {
            state.data = state.self.data = extend({}, state.parent.data, state.data);
          }
          return state.data;
        },
        url: function (state) {
          var url = state.url, config = { params: state.params || {} };
          if (isString(url)) {
            if (url.charAt(0) == '^')
              return $urlMatcherFactory.compile(url.substring(1), config);
            return (state.parent.navigable || root).url.concat(url, config);
          }
          if (!url || $urlMatcherFactory.isMatcher(url))
            return url;
          throw new Error('Invalid url \'' + url + '\' in state \'' + state + '\'');
        },
        navigable: function (state) {
          return state.url ? state : state.parent ? state.parent.navigable : null;
        },
        ownParams: function (state) {
          var params = state.url && state.url.params || new $$UMFP.ParamSet();
          forEach(state.params || {}, function (config, id) {
            if (!params[id])
              params[id] = new $$UMFP.Param(id, null, config, 'config');
          });
          return params;
        },
        params: function (state) {
          return state.parent && state.parent.params ? extend(state.parent.params.$$new(), state.ownParams) : new $$UMFP.ParamSet();
        },
        views: function (state) {
          var views = {};
          forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {
            if (name.indexOf('@') < 0)
              name += '@' + state.parent.name;
            views[name] = view;
          });
          return views;
        },
        path: function (state) {
          return state.parent ? state.parent.path.concat(state) : [];  // exclude root from path
        },
        includes: function (state) {
          var includes = state.parent ? extend({}, state.parent.includes) : {};
          includes[state.name] = true;
          return includes;
        },
        $delegates: {}
      };
    function isRelative(stateName) {
      return stateName.indexOf('.') === 0 || stateName.indexOf('^') === 0;
    }
    function findState(stateOrName, base) {
      if (!stateOrName)
        return undefined;
      var isStr = isString(stateOrName), name = isStr ? stateOrName : stateOrName.name, path = isRelative(name);
      if (path) {
        if (!base)
          throw new Error('No reference point given for path \'' + name + '\'');
        base = findState(base);
        var rel = name.split('.'), i = 0, pathLength = rel.length, current = base;
        for (; i < pathLength; i++) {
          if (rel[i] === '' && i === 0) {
            current = base;
            continue;
          }
          if (rel[i] === '^') {
            if (!current.parent)
              throw new Error('Path \'' + name + '\' not valid for state \'' + base.name + '\'');
            current = current.parent;
            continue;
          }
          break;
        }
        rel = rel.slice(i).join('.');
        name = current.name + (current.name && rel ? '.' : '') + rel;
      }
      var state = states[name];
      if (state && (isStr || !isStr && (state === stateOrName || state.self === stateOrName))) {
        return state;
      }
      return undefined;
    }
    function queueState(parentName, state) {
      if (!queue[parentName]) {
        queue[parentName] = [];
      }
      queue[parentName].push(state);
    }
    function flushQueuedChildren(parentName) {
      var queued = queue[parentName] || [];
      while (queued.length) {
        registerState(queued.shift());
      }
    }
    function registerState(state) {
      // Wrap a new object around the state so we can store our private details easily.
      state = inherit(state, {
        self: state,
        resolve: state.resolve || {},
        toString: function () {
          return this.name;
        }
      });
      var name = state.name;
      if (!isString(name) || name.indexOf('@') >= 0)
        throw new Error('State must have a valid name');
      if (states.hasOwnProperty(name))
        throw new Error('State \'' + name + '\'\' is already defined');
      // Get parent name
      var parentName = name.indexOf('.') !== -1 ? name.substring(0, name.lastIndexOf('.')) : isString(state.parent) ? state.parent : isObject(state.parent) && isString(state.parent.name) ? state.parent.name : '';
      // If parent is not registered yet, add state to queue and register later
      if (parentName && !states[parentName]) {
        return queueState(parentName, state.self);
      }
      for (var key in stateBuilder) {
        if (isFunction(stateBuilder[key]))
          state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);
      }
      states[name] = state;
      // Register the state in the global state list and with $urlRouter if necessary.
      if (!state[abstractKey] && state.url) {
        $urlRouterProvider.when(state.url, [
          '$match',
          '$stateParams',
          function ($match, $stateParams) {
            if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {
              $state.transitionTo(state, $match, {
                inherit: true,
                location: false
              });
            }
          }
        ]);
      }
      // Register any queued children
      flushQueuedChildren(name);
      return state;
    }
    // Checks text to see if it looks like a glob.
    function isGlob(text) {
      return text.indexOf('*') > -1;
    }
    // Returns true if glob matches current $state name.
    function doesStateMatchGlob(glob) {
      var globSegments = glob.split('.'), segments = $state.$current.name.split('.');
      //match greedy starts
      if (globSegments[0] === '**') {
        segments = segments.slice(indexOf(segments, globSegments[1]));
        segments.unshift('**');
      }
      //match greedy ends
      if (globSegments[globSegments.length - 1] === '**') {
        segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);
        segments.push('**');
      }
      if (globSegments.length != segments.length) {
        return false;
      }
      //match single stars
      for (var i = 0, l = globSegments.length; i < l; i++) {
        if (globSegments[i] === '*') {
          segments[i] = '*';
        }
      }
      return segments.join('') === globSegments.join('');
    }
    // Implicit root state that is always active
    root = registerState({
      name: '',
      url: '^',
      views: null,
      'abstract': true
    });
    root.navigable = null;
    /**
   * @ngdoc function
   * @name ui.router.state.$stateProvider#decorator
   * @methodOf ui.router.state.$stateProvider
   *
   * @description
   * Allows you to extend (carefully) or override (at your own peril) the 
   * `stateBuilder` object used internally by `$stateProvider`. This can be used 
   * to add custom functionality to ui-router, for example inferring templateUrl 
   * based on the state name.
   *
   * When passing only a name, it returns the current (original or decorated) builder
   * function that matches `name`.
   *
   * The builder functions that can be decorated are listed below. Though not all
   * necessarily have a good use case for decoration, that is up to you to decide.
   *
   * In addition, users can attach custom decorators, which will generate new 
   * properties within the state's internal definition. There is currently no clear 
   * use-case for this beyond accessing internal states (i.e. $state.$current), 
   * however, expect this to become increasingly relevant as we introduce additional 
   * meta-programming features.
   *
   * **Warning**: Decorators should not be interdependent because the order of 
   * execution of the builder functions in non-deterministic. Builder functions 
   * should only be dependent on the state definition object and super function.
   *
   *
   * Existing builder functions and current return values:
   *
   * - **parent** `{object}` - returns the parent state object.
   * - **data** `{object}` - returns state data, including any inherited data that is not
   *   overridden by own values (if any).
   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}
   *   or `null`.
   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is 
   *   navigable).
   * - **params** `{object}` - returns an array of state params that are ensured to 
   *   be a super-set of parent's params.
   * - **views** `{object}` - returns a views object where each key is an absolute view 
   *   name (i.e. "viewName@stateName") and each value is the config object 
   *   (template, controller) for the view. Even when you don't use the views object 
   *   explicitly on a state config, one is still created for you internally.
   *   So by decorating this builder function you have access to decorating template 
   *   and controller properties.
   * - **ownParams** `{object}` - returns an array of params that belong to the state, 
   *   not including any params defined by ancestor states.
   * - **path** `{string}` - returns the full path from the root down to this state. 
   *   Needed for state activation.
   * - **includes** `{object}` - returns an object that includes every state that 
   *   would pass a `$state.includes()` test.
   *
   * @example
   * <pre>
   * // Override the internal 'views' builder with a function that takes the state
   * // definition, and a reference to the internal function being overridden:
   * $stateProvider.decorator('views', function (state, parent) {
   *   var result = {},
   *       views = parent(state);
   *
   *   angular.forEach(views, function (config, name) {
   *     var autoName = (state.name + '.' + name).replace('.', '/');
   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';
   *     result[name] = config;
   *   });
   *   return result;
   * });
   *
   * $stateProvider.state('home', {
   *   views: {
   *     'contact.list': { controller: 'ListController' },
   *     'contact.item': { controller: 'ItemController' }
   *   }
   * });
   *
   * // ...
   *
   * $state.go('home');
   * // Auto-populates list and item views with /partials/home/contact/list.html,
   * // and /partials/home/contact/item.html, respectively.
   * </pre>
   *
   * @param {string} name The name of the builder function to decorate. 
   * @param {object} func A function that is responsible for decorating the original 
   * builder function. The function receives two parameters:
   *
   *   - `{object}` - state - The state config object.
   *   - `{object}` - super - The original builder function.
   *
   * @return {object} $stateProvider - $stateProvider instance
   */
    this.decorator = decorator;
    function decorator(name, func) {
      /*jshint validthis: true */
      if (isString(name) && !isDefined(func)) {
        return stateBuilder[name];
      }
      if (!isFunction(func) || !isString(name)) {
        return this;
      }
      if (stateBuilder[name] && !stateBuilder.$delegates[name]) {
        stateBuilder.$delegates[name] = stateBuilder[name];
      }
      stateBuilder[name] = func;
      return this;
    }
    /**
   * @ngdoc function
   * @name ui.router.state.$stateProvider#state
   * @methodOf ui.router.state.$stateProvider
   *
   * @description
   * Registers a state configuration under a given state name. The stateConfig object
   * has the following acceptable properties.
   *
   * @param {string} name A unique state name, e.g. "home", "about", "contacts".
   * To create a parent/child state use a dot, e.g. "about.sales", "home.newest".
   * @param {object} stateConfig State configuration object.
   * @param {string|function=} stateConfig.template
   * <a id='template'></a>
   *   html template as a string or a function that returns
   *   an html template as a string which should be used by the uiView directives. This property 
   *   takes precedence over templateUrl.
   *   
   *   If `template` is a function, it will be called with the following parameters:
   *
   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by
   *     applying the current state
   *
   * <pre>template:
   *   "<h1>inline template definition</h1>" +
   *   "<div ui-view></div>"</pre>
   * <pre>template: function(params) {
   *       return "<h1>generated template</h1>"; }</pre>
   * </div>
   *
   * @param {string|function=} stateConfig.templateUrl
   * <a id='templateUrl'></a>
   *
   *   path or function that returns a path to an html
   *   template that should be used by uiView.
   *   
   *   If `templateUrl` is a function, it will be called with the following parameters:
   *
   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by 
   *     applying the current state
   *
   * <pre>templateUrl: "home.html"</pre>
   * <pre>templateUrl: function(params) {
   *     return myTemplates[params.pageId]; }</pre>
   *
   * @param {function=} stateConfig.templateProvider
   * <a id='templateProvider'></a>
   *    Provider function that returns HTML content string.
   * <pre> templateProvider:
   *       function(MyTemplateService, params) {
   *         return MyTemplateService.getTemplate(params.pageId);
   *       }</pre>
   *
   * @param {string|function=} stateConfig.controller
   * <a id='controller'></a>
   *
   *  Controller fn that should be associated with newly
   *   related scope or the name of a registered controller if passed as a string.
   *   Optionally, the ControllerAs may be declared here.
   * <pre>controller: "MyRegisteredController"</pre>
   * <pre>controller:
   *     "MyRegisteredController as fooCtrl"}</pre>
   * <pre>controller: function($scope, MyService) {
   *     $scope.data = MyService.getData(); }</pre>
   *
   * @param {function=} stateConfig.controllerProvider
   * <a id='controllerProvider'></a>
   *
   * Injectable provider function that returns the actual controller or string.
   * <pre>controllerProvider:
   *   function(MyResolveData) {
   *     if (MyResolveData.foo)
   *       return "FooCtrl"
   *     else if (MyResolveData.bar)
   *       return "BarCtrl";
   *     else return function($scope) {
   *       $scope.baz = "Qux";
   *     }
   *   }</pre>
   *
   * @param {string=} stateConfig.controllerAs
   * <a id='controllerAs'></a>
   * 
   * A controller alias name. If present the controller will be
   *   published to scope under the controllerAs name.
   * <pre>controllerAs: "myCtrl"</pre>
   *
   * @param {object=} stateConfig.resolve
   * <a id='resolve'></a>
   *
   * An optional map&lt;string, function&gt; of dependencies which
   *   should be injected into the controller. If any of these dependencies are promises, 
   *   the router will wait for them all to be resolved before the controller is instantiated.
   *   If all the promises are resolved successfully, the $stateChangeSuccess event is fired
   *   and the values of the resolved promises are injected into any controllers that reference them.
   *   If any  of the promises are rejected the $stateChangeError event is fired.
   *
   *   The map object is:
   *   
   *   - key - {string}: name of dependency to be injected into controller
   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function, 
   *     it is injected and return value it treated as dependency. If result is a promise, it is 
   *     resolved before its value is injected into controller.
   *
   * <pre>resolve: {
   *     myResolve1:
   *       function($http, $stateParams) {
   *         return $http.get("/api/foos/"+stateParams.fooID);
   *       }
   *     }</pre>
   *
   * @param {string=} stateConfig.url
   * <a id='url'></a>
   *
   *   A url fragment with optional parameters. When a state is navigated or
   *   transitioned to, the `$stateParams` service will be populated with any 
   *   parameters that were passed.
   *
   * examples:
   * <pre>url: "/home"
   * url: "/users/:userid"
   * url: "/books/{bookid:[a-zA-Z_-]}"
   * url: "/books/{categoryid:int}"
   * url: "/books/{publishername:string}/{categoryid:int}"
   * url: "/messages?before&after"
   * url: "/messages?{before:date}&{after:date}"</pre>
   * url: "/messages/:mailboxid?{before:date}&{after:date}"
   *
   * @param {object=} stateConfig.views
   * <a id='views'></a>
   * an optional map&lt;string, object&gt; which defined multiple views, or targets views
   * manually/explicitly.
   *
   * Examples:
   *
   * Targets three named `ui-view`s in the parent state's template
   * <pre>views: {
   *     header: {
   *       controller: "headerCtrl",
   *       templateUrl: "header.html"
   *     }, body: {
   *       controller: "bodyCtrl",
   *       templateUrl: "body.html"
   *     }, footer: {
   *       controller: "footCtrl",
   *       templateUrl: "footer.html"
   *     }
   *   }</pre>
   *
   * Targets named `ui-view="header"` from grandparent state 'top''s template, and named `ui-view="body" from parent state's template.
   * <pre>views: {
   *     'header@top': {
   *       controller: "msgHeaderCtrl",
   *       templateUrl: "msgHeader.html"
   *     }, 'body': {
   *       controller: "messagesCtrl",
   *       templateUrl: "messages.html"
   *     }
   *   }</pre>
   *
   * @param {boolean=} [stateConfig.abstract=false]
   * <a id='abstract'></a>
   * An abstract state will never be directly activated,
   *   but can provide inherited properties to its common children states.
   * <pre>abstract: true</pre>
   *
   * @param {function=} stateConfig.onEnter
   * <a id='onEnter'></a>
   *
   * Callback function for when a state is entered. Good way
   *   to trigger an action or dispatch an event, such as opening a dialog.
   * If minifying your scripts, make sure to explictly annotate this function,
   * because it won't be automatically annotated by your build tools.
   *
   * <pre>onEnter: function(MyService, $stateParams) {
   *     MyService.foo($stateParams.myParam);
   * }</pre>
   *
   * @param {function=} stateConfig.onExit
   * <a id='onExit'></a>
   *
   * Callback function for when a state is exited. Good way to
   *   trigger an action or dispatch an event, such as opening a dialog.
   * If minifying your scripts, make sure to explictly annotate this function,
   * because it won't be automatically annotated by your build tools.
   *
   * <pre>onExit: function(MyService, $stateParams) {
   *     MyService.cleanup($stateParams.myParam);
   * }</pre>
   *
   * @param {boolean=} [stateConfig.reloadOnSearch=true]
   * <a id='reloadOnSearch'></a>
   *
   * If `false`, will not retrigger the same state
   *   just because a search/query parameter has changed (via $location.search() or $location.hash()). 
   *   Useful for when you'd like to modify $location.search() without triggering a reload.
   * <pre>reloadOnSearch: false</pre>
   *
   * @param {object=} stateConfig.data
   * <a id='data'></a>
   *
   * Arbitrary data object, useful for custom configuration.  The parent state's `data` is
   *   prototypally inherited.  In other words, adding a data property to a state adds it to
   *   the entire subtree via prototypal inheritance.
   *
   * <pre>data: {
   *     requiredRole: 'foo'
   * } </pre>
   *
   * @param {object=} stateConfig.params
   * <a id='params'></a>
   *
   * A map which optionally configures parameters declared in the `url`, or
   *   defines additional non-url parameters.  For each parameter being
   *   configured, add a configuration object keyed to the name of the parameter.
   *
   *   Each parameter configuration object may contain the following properties:
   *
   *   - ** value ** - {object|function=}: specifies the default value for this
   *     parameter.  This implicitly sets this parameter as optional.
   *
   *     When UI-Router routes to a state and no value is
   *     specified for this parameter in the URL or transition, the
   *     default value will be used instead.  If `value` is a function,
   *     it will be injected and invoked, and the return value used.
   *
   *     *Note*: `undefined` is treated as "no default value" while `null`
   *     is treated as "the default value is `null`".
   *
   *     *Shorthand*: If you only need to configure the default value of the
   *     parameter, you may use a shorthand syntax.   In the **`params`**
   *     map, instead mapping the param name to a full parameter configuration
   *     object, simply set map it to the default parameter value, e.g.:
   *
   * <pre>// define a parameter's default value
   * params: {
   *     param1: { value: "defaultValue" }
   * }
   * // shorthand default values
   * params: {
   *     param1: "defaultValue",
   *     param2: "param2Default"
   * }</pre>
   *
   *   - ** array ** - {boolean=}: *(default: false)* If true, the param value will be
   *     treated as an array of values.  If you specified a Type, the value will be
   *     treated as an array of the specified Type.  Note: query parameter values
   *     default to a special `"auto"` mode.
   *
   *     For query parameters in `"auto"` mode, if multiple  values for a single parameter
   *     are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values
   *     are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if
   *     only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single
   *     value (e.g.: `{ foo: '1' }`).
   *
   * <pre>params: {
   *     param1: { array: true }
   * }</pre>
   *
   *   - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when
   *     the current parameter value is the same as the default value. If `squash` is not set, it uses the
   *     configured default squash policy.
   *     (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})
   *
   *   There are three squash settings:
   *
   *     - false: The parameter's default value is not squashed.  It is encoded and included in the URL
   *     - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed
   *       by slashes in the state's `url` declaration, then one of those slashes are omitted.
   *       This can allow for cleaner looking URLs.
   *     - `"<arbitrary string>"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.
   *
   * <pre>params: {
   *     param1: {
   *       value: "defaultId",
   *       squash: true
   * } }
   * // squash "defaultValue" to "~"
   * params: {
   *     param1: {
   *       value: "defaultValue",
   *       squash: "~"
   * } }
   * </pre>
   *
   *
   * @example
   * <pre>
   * // Some state name examples
   *
   * // stateName can be a single top-level name (must be unique).
   * $stateProvider.state("home", {});
   *
   * // Or it can be a nested state name. This state is a child of the
   * // above "home" state.
   * $stateProvider.state("home.newest", {});
   *
   * // Nest states as deeply as needed.
   * $stateProvider.state("home.newest.abc.xyz.inception", {});
   *
   * // state() returns $stateProvider, so you can chain state declarations.
   * $stateProvider
   *   .state("home", {})
   *   .state("about", {})
   *   .state("contacts", {});
   * </pre>
   *
   */
    this.state = state;
    function state(name, definition) {
      /*jshint validthis: true */
      if (isObject(name))
        definition = name;
      else
        definition.name = name;
      registerState(definition);
      return this;
    }
    /**
   * @ngdoc object
   * @name ui.router.state.$state
   *
   * @requires $rootScope
   * @requires $q
   * @requires ui.router.state.$view
   * @requires $injector
   * @requires ui.router.util.$resolve
   * @requires ui.router.state.$stateParams
   * @requires ui.router.router.$urlRouter
   *
   * @property {object} params A param object, e.g. {sectionId: section.id)}, that 
   * you'd like to test against the current active state.
   * @property {object} current A reference to the state's config object. However 
   * you passed it in. Useful for accessing custom data.
   * @property {object} transition Currently pending transition. A promise that'll 
   * resolve or reject.
   *
   * @description
   * `$state` service is responsible for representing states as well as transitioning
   * between them. It also provides interfaces to ask for current state or even states
   * you're coming from.
   */
    this.$get = $get;
    $get.$inject = [
      '$rootScope',
      '$q',
      '$view',
      '$injector',
      '$resolve',
      '$stateParams',
      '$urlRouter',
      '$location',
      '$urlMatcherFactory'
    ];
    function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) {
      var TransitionSuperseded = $q.reject(new Error('transition superseded'));
      var TransitionPrevented = $q.reject(new Error('transition prevented'));
      var TransitionAborted = $q.reject(new Error('transition aborted'));
      var TransitionFailed = $q.reject(new Error('transition failed'));
      // Handles the case where a state which is the target of a transition is not found, and the user
      // can optionally retry or defer the transition
      function handleRedirect(redirect, state, params, options) {
        /**
       * @ngdoc event
       * @name ui.router.state.$state#$stateNotFound
       * @eventOf ui.router.state.$state
       * @eventType broadcast on root scope
       * @description
       * Fired when a requested state **cannot be found** using the provided state name during transition.
       * The event is broadcast allowing any handlers a single chance to deal with the error (usually by
       * lazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,
       * you can see its three properties in the example. You can use `event.preventDefault()` to abort the
       * transition and the promise returned from `go` will be rejected with a `'transition aborted'` value.
       *
       * @param {Object} event Event object.
       * @param {Object} unfoundState Unfound State information. Contains: `to, toParams, options` properties.
       * @param {State} fromState Current state object.
       * @param {Object} fromParams Current state params.
       *
       * @example
       *
       * <pre>
       * // somewhere, assume lazy.state has not been defined
       * $state.go("lazy.state", {a:1, b:2}, {inherit:false});
       *
       * // somewhere else
       * $scope.$on('$stateNotFound',
       * function(event, unfoundState, fromState, fromParams){
       *     console.log(unfoundState.to); // "lazy.state"
       *     console.log(unfoundState.toParams); // {a:1, b:2}
       *     console.log(unfoundState.options); // {inherit:false} + default options
       * })
       * </pre>
       */
        var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);
        if (evt.defaultPrevented) {
          $urlRouter.update();
          return TransitionAborted;
        }
        if (!evt.retry) {
          return null;
        }
        // Allow the handler to return a promise to defer state lookup retry
        if (options.$retry) {
          $urlRouter.update();
          return TransitionFailed;
        }
        var retryTransition = $state.transition = $q.when(evt.retry);
        retryTransition.then(function () {
          if (retryTransition !== $state.transition)
            return TransitionSuperseded;
          redirect.options.$retry = true;
          return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);
        }, function () {
          return TransitionAborted;
        });
        $urlRouter.update();
        return retryTransition;
      }
      root.locals = {
        resolve: null,
        globals: { $stateParams: {} }
      };
      $state = {
        params: {},
        current: root.self,
        $current: root,
        transition: null
      };
      /**
     * @ngdoc function
     * @name ui.router.state.$state#reload
     * @methodOf ui.router.state.$state
     *
     * @description
     * A method that force reloads the current state. All resolves are re-resolved, events are not re-fired, 
     * and controllers reinstantiated (bug with controllers reinstantiating right now, fixing soon).
     *
     * @example
     * <pre>
     * var app angular.module('app', ['ui.router']);
     *
     * app.controller('ctrl', function ($scope, $state) {
     *   $scope.reload = function(){
     *     $state.reload();
     *   }
     * });
     * </pre>
     *
     * `reload()` is just an alias for:
     * <pre>
     * $state.transitionTo($state.current, $stateParams, { 
     *   reload: true, inherit: false, notify: true
     * });
     * </pre>
     *
     * @returns {promise} A promise representing the state of the new transition. See
     * {@link ui.router.state.$state#methods_go $state.go}.
     */
      $state.reload = function reload() {
        return $state.transitionTo($state.current, $stateParams, {
          reload: true,
          inherit: false,
          notify: true
        });
      };
      /**
     * @ngdoc function
     * @name ui.router.state.$state#go
     * @methodOf ui.router.state.$state
     *
     * @description
     * Convenience method for transitioning to a new state. `$state.go` calls 
     * `$state.transitionTo` internally but automatically sets options to 
     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`. 
     * This allows you to easily use an absolute or relative to path and specify 
     * only the parameters you'd like to update (while letting unspecified parameters 
     * inherit from the currently active ancestor states).
     *
     * @example
     * <pre>
     * var app = angular.module('app', ['ui.router']);
     *
     * app.controller('ctrl', function ($scope, $state) {
     *   $scope.changeState = function () {
     *     $state.go('contact.detail');
     *   };
     * });
     * </pre>
     * <img src='../ngdoc_assets/StateGoExamples.png'/>
     *
     * @param {string} to Absolute state name or relative state path. Some examples:
     *
     * - `$state.go('contact.detail')` - will go to the `contact.detail` state
     * - `$state.go('^')` - will go to a parent state
     * - `$state.go('^.sibling')` - will go to a sibling state
     * - `$state.go('.child.grandchild')` - will go to grandchild state
     *
     * @param {object=} params A map of the parameters that will be sent to the state, 
     * will populate $stateParams. Any parameters that are not specified will be inherited from currently 
     * defined parameters. This allows, for example, going to a sibling state that shares parameters
     * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.
     * transitioning to a sibling will get you the parameters for all parents, transitioning to a child
     * will get you all current parameters, etc.
     * @param {object=} options Options object. The options are:
     *
     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`
     *    will not. If string, must be `"replace"`, which will update url and also replace last history record.
     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.
     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), 
     *    defines which state to be relative from.
     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.
     * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params 
     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd
     *    use this when you want to force a reload when *everything* is the same, including search params.
     *
     * @returns {promise} A promise representing the state of the new transition.
     *
     * Possible success values:
     *
     * - $state.current
     *
     * <br/>Possible rejection values:
     *
     * - 'transition superseded' - when a newer transition has been started after this one
     * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener
     * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or
     *   when a `$stateNotFound` `event.retry` promise errors.
     * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.
     * - *resolve error* - when an error has occurred with a `resolve`
     *
     */
      $state.go = function go(to, params, options) {
        return $state.transitionTo(to, params, extend({
          inherit: true,
          relative: $state.$current
        }, options));
      };
      /**
     * @ngdoc function
     * @name ui.router.state.$state#transitionTo
     * @methodOf ui.router.state.$state
     *
     * @description
     * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}
     * uses `transitionTo` internally. `$state.go` is recommended in most situations.
     *
     * @example
     * <pre>
     * var app = angular.module('app', ['ui.router']);
     *
     * app.controller('ctrl', function ($scope, $state) {
     *   $scope.changeState = function () {
     *     $state.transitionTo('contact.detail');
     *   };
     * });
     * </pre>
     *
     * @param {string} to State name.
     * @param {object=} toParams A map of the parameters that will be sent to the state,
     * will populate $stateParams.
     * @param {object=} options Options object. The options are:
     *
     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`
     *    will not. If string, must be `"replace"`, which will update url and also replace last history record.
     * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.
     * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'), 
     *    defines which state to be relative from.
     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.
     * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params 
     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd
     *    use this when you want to force a reload when *everything* is the same, including search params.
     *
     * @returns {promise} A promise representing the state of the new transition. See
     * {@link ui.router.state.$state#methods_go $state.go}.
     */
      $state.transitionTo = function transitionTo(to, toParams, options) {
        toParams = toParams || {};
        options = extend({
          location: true,
          inherit: false,
          relative: null,
          notify: true,
          reload: false,
          $retry: false
        }, options || {});
        var from = $state.$current, fromParams = $state.params, fromPath = from.path;
        var evt, toState = findState(to, options.relative);
        if (!isDefined(toState)) {
          var redirect = {
              to: to,
              toParams: toParams,
              options: options
            };
          var redirectResult = handleRedirect(redirect, from.self, fromParams, options);
          if (redirectResult) {
            return redirectResult;
          }
          // Always retry once if the $stateNotFound was not prevented
          // (handles either redirect changed or state lazy-definition)
          to = redirect.to;
          toParams = redirect.toParams;
          options = redirect.options;
          toState = findState(to, options.relative);
          if (!isDefined(toState)) {
            if (!options.relative)
              throw new Error('No such state \'' + to + '\'');
            throw new Error('Could not resolve \'' + to + '\' from state \'' + options.relative + '\'');
          }
        }
        if (toState[abstractKey])
          throw new Error('Cannot transition to abstract state \'' + to + '\'');
        if (options.inherit)
          toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);
        if (!toState.params.$$validates(toParams))
          return TransitionFailed;
        toParams = toState.params.$$values(toParams);
        to = toState;
        var toPath = to.path;
        // Starting from the root of the path, keep all levels that haven't changed
        var keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];
        if (!options.reload) {
          while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {
            locals = toLocals[keep] = state.locals;
            keep++;
            state = toPath[keep];
          }
        }
        // If we're going to the same state and all locals are kept, we've got nothing to do.
        // But clear 'transition', as we still want to cancel any other pending transitions.
        // TODO: We may not want to bump 'transition' if we're called from a location change
        // that we've initiated ourselves, because we might accidentally abort a legitimate
        // transition initiated from code?
        if (shouldTriggerReload(to, from, locals, options)) {
          if (to.self.reloadOnSearch !== false)
            $urlRouter.update();
          $state.transition = null;
          return $q.when($state.current);
        }
        // Filter parameters before we pass them to event handlers etc.
        toParams = filterByKeys(to.params.$$keys(), toParams || {});
        // Broadcast start event and cancel the transition if requested
        if (options.notify) {
          /**
         * @ngdoc event
         * @name ui.router.state.$state#$stateChangeStart
         * @eventOf ui.router.state.$state
         * @eventType broadcast on root scope
         * @description
         * Fired when the state transition **begins**. You can use `event.preventDefault()`
         * to prevent the transition from happening and then the transition promise will be
         * rejected with a `'transition prevented'` value.
         *
         * @param {Object} event Event object.
         * @param {State} toState The state being transitioned to.
         * @param {Object} toParams The params supplied to the `toState`.
         * @param {State} fromState The current state, pre-transition.
         * @param {Object} fromParams The params supplied to the `fromState`.
         *
         * @example
         *
         * <pre>
         * $rootScope.$on('$stateChangeStart',
         * function(event, toState, toParams, fromState, fromParams){
         *     event.preventDefault();
         *     // transitionTo() promise will be rejected with
         *     // a 'transition prevented' error
         * })
         * </pre>
         */
          if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams).defaultPrevented) {
            $urlRouter.update();
            return TransitionPrevented;
          }
        }
        // Resolve locals for the remaining states, but don't update any global state just
        // yet -- if anything fails to resolve the current state needs to remain untouched.
        // We also set up an inheritance chain for the locals here. This allows the view directive
        // to quickly look up the correct definition for each view in the current state. Even
        // though we create the locals object itself outside resolveState(), it is initially
        // empty and gets filled asynchronously. We need to keep track of the promise for the
        // (fully resolved) current locals, and pass this down the chain.
        var resolved = $q.when(locals);
        for (var l = keep; l < toPath.length; l++, state = toPath[l]) {
          locals = toLocals[l] = inherit(locals);
          resolved = resolveState(state, toParams, state === to, resolved, locals, options);
        }
        // Once everything is resolved, we are ready to perform the actual transition
        // and return a promise for the new state. We also keep track of what the
        // current promise is, so that we can detect overlapping transitions and
        // keep only the outcome of the last transition.
        var transition = $state.transition = resolved.then(function () {
            var l, entering, exiting;
            if ($state.transition !== transition)
              return TransitionSuperseded;
            // Exit 'from' states not kept
            for (l = fromPath.length - 1; l >= keep; l--) {
              exiting = fromPath[l];
              if (exiting.self.onExit) {
                $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);
              }
              exiting.locals = null;
            }
            // Enter 'to' states not kept
            for (l = keep; l < toPath.length; l++) {
              entering = toPath[l];
              entering.locals = toLocals[l];
              if (entering.self.onEnter) {
                $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);
              }
            }
            // Run it again, to catch any transitions in callbacks
            if ($state.transition !== transition)
              return TransitionSuperseded;
            // Update globals in $state
            $state.$current = to;
            $state.current = to.self;
            $state.params = toParams;
            copy($state.params, $stateParams);
            $state.transition = null;
            if (options.location && to.navigable) {
              $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {
                $$avoidResync: true,
                replace: options.location === 'replace'
              });
            }
            if (options.notify) {
              /**
         * @ngdoc event
         * @name ui.router.state.$state#$stateChangeSuccess
         * @eventOf ui.router.state.$state
         * @eventType broadcast on root scope
         * @description
         * Fired once the state transition is **complete**.
         *
         * @param {Object} event Event object.
         * @param {State} toState The state being transitioned to.
         * @param {Object} toParams The params supplied to the `toState`.
         * @param {State} fromState The current state, pre-transition.
         * @param {Object} fromParams The params supplied to the `fromState`.
         */
              $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);
            }
            $urlRouter.update(true);
            return $state.current;
          }, function (error) {
            if ($state.transition !== transition)
              return TransitionSuperseded;
            $state.transition = null;
            /**
         * @ngdoc event
         * @name ui.router.state.$state#$stateChangeError
         * @eventOf ui.router.state.$state
         * @eventType broadcast on root scope
         * @description
         * Fired when an **error occurs** during transition. It's important to note that if you
         * have any errors in your resolve functions (javascript errors, non-existent services, etc)
         * they will not throw traditionally. You must listen for this $stateChangeError event to
         * catch **ALL** errors.
         *
         * @param {Object} event Event object.
         * @param {State} toState The state being transitioned to.
         * @param {Object} toParams The params supplied to the `toState`.
         * @param {State} fromState The current state, pre-transition.
         * @param {Object} fromParams The params supplied to the `fromState`.
         * @param {Error} error The resolve error object.
         */
            evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);
            if (!evt.defaultPrevented) {
              $urlRouter.update();
            }
            return $q.reject(error);
          });
        return transition;
      };
      /**
     * @ngdoc function
     * @name ui.router.state.$state#is
     * @methodOf ui.router.state.$state
     *
     * @description
     * Similar to {@link ui.router.state.$state#methods_includes $state.includes},
     * but only checks for the full state name. If params is supplied then it will be
     * tested for strict equality against the current active params object, so all params
     * must match with none missing and no extras.
     *
     * @example
     * <pre>
     * $state.$current.name = 'contacts.details.item';
     *
     * // absolute name
     * $state.is('contact.details.item'); // returns true
     * $state.is(contactDetailItemStateObject); // returns true
     *
     * // relative name (. and ^), typically from a template
     * // E.g. from the 'contacts.details' template
     * <div ng-class="{highlighted: $state.is('.item')}">Item</div>
     * </pre>
     *
     * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.
     * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like
     * to test against the current active state.
     * @param {object=} options An options object.  The options are:
     *
     * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will
     * test relative to `options.relative` state (or name).
     *
     * @returns {boolean} Returns true if it is the state.
     */
      $state.is = function is(stateOrName, params, options) {
        options = extend({ relative: $state.$current }, options || {});
        var state = findState(stateOrName, options.relative);
        if (!isDefined(state)) {
          return undefined;
        }
        if ($state.$current !== state) {
          return false;
        }
        return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;
      };
      /**
     * @ngdoc function
     * @name ui.router.state.$state#includes
     * @methodOf ui.router.state.$state
     *
     * @description
     * A method to determine if the current active state is equal to or is the child of the
     * state stateName. If any params are passed then they will be tested for a match as well.
     * Not all the parameters need to be passed, just the ones you'd like to test for equality.
     *
     * @example
     * Partial and relative names
     * <pre>
     * $state.$current.name = 'contacts.details.item';
     *
     * // Using partial names
     * $state.includes("contacts"); // returns true
     * $state.includes("contacts.details"); // returns true
     * $state.includes("contacts.details.item"); // returns true
     * $state.includes("contacts.list"); // returns false
     * $state.includes("about"); // returns false
     *
     * // Using relative names (. and ^), typically from a template
     * // E.g. from the 'contacts.details' template
     * <div ng-class="{highlighted: $state.includes('.item')}">Item</div>
     * </pre>
     *
     * Basic globbing patterns
     * <pre>
     * $state.$current.name = 'contacts.details.item.url';
     *
     * $state.includes("*.details.*.*"); // returns true
     * $state.includes("*.details.**"); // returns true
     * $state.includes("**.item.**"); // returns true
     * $state.includes("*.details.item.url"); // returns true
     * $state.includes("*.details.*.url"); // returns true
     * $state.includes("*.details.*"); // returns false
     * $state.includes("item.**"); // returns false
     * </pre>
     *
     * @param {string} stateOrName A partial name, relative name, or glob pattern
     * to be searched for within the current state name.
     * @param {object=} params A param object, e.g. `{sectionId: section.id}`,
     * that you'd like to test against the current active state.
     * @param {object=} options An options object.  The options are:
     *
     * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,
     * .includes will test relative to `options.relative` state (or name).
     *
     * @returns {boolean} Returns true if it does include the state
     */
      $state.includes = function includes(stateOrName, params, options) {
        options = extend({ relative: $state.$current }, options || {});
        if (isString(stateOrName) && isGlob(stateOrName)) {
          if (!doesStateMatchGlob(stateOrName)) {
            return false;
          }
          stateOrName = $state.$current.name;
        }
        var state = findState(stateOrName, options.relative);
        if (!isDefined(state)) {
          return undefined;
        }
        if (!isDefined($state.$current.includes[state.name])) {
          return false;
        }
        return params ? equalForKeys(state.params.$$values(params), $stateParams, objectKeys(params)) : true;
      };
      /**
     * @ngdoc function
     * @name ui.router.state.$state#href
     * @methodOf ui.router.state.$state
     *
     * @description
     * A url generation method that returns the compiled url for the given state populated with the given params.
     *
     * @example
     * <pre>
     * expect($state.href("about.person", { person: "bob" })).toEqual("/about/bob");
     * </pre>
     *
     * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.
     * @param {object=} params An object of parameter values to fill the state's required parameters.
     * @param {object=} options Options object. The options are:
     *
     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the
     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka
     *    ancestor with a valid url).
     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.
     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), 
     *    defines which state to be relative from.
     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. "http://www.example.com/fullurl".
     * 
     * @returns {string} compiled state url
     */
      $state.href = function href(stateOrName, params, options) {
        options = extend({
          lossy: true,
          inherit: true,
          absolute: false,
          relative: $state.$current
        }, options || {});
        var state = findState(stateOrName, options.relative);
        if (!isDefined(state))
          return null;
        if (options.inherit)
          params = inheritParams($stateParams, params || {}, $state.$current, state);
        var nav = state && options.lossy ? state.navigable : state;
        if (!nav || nav.url === undefined || nav.url === null) {
          return null;
        }
        return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys(), params || {}), { absolute: options.absolute });
      };
      /**
     * @ngdoc function
     * @name ui.router.state.$state#get
     * @methodOf ui.router.state.$state
     *
     * @description
     * Returns the state configuration object for any specific state or all states.
     *
     * @param {string|object=} stateOrName (absolute or relative) If provided, will only get the config for
     * the requested state. If not provided, returns an array of ALL state configs.
     * @param {string|object=} context When stateOrName is a relative state reference, the state will be retrieved relative to context.
     * @returns {Object|Array} State configuration object or array of all objects.
     */
      $state.get = function (stateOrName, context) {
        if (arguments.length === 0)
          return map(objectKeys(states), function (name) {
            return states[name].self;
          });
        var state = findState(stateOrName, context || $state.$current);
        return state && state.self ? state.self : null;
      };
      function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {
        // Make a restricted $stateParams with only the parameters that apply to this state if
        // necessary. In addition to being available to the controller and onEnter/onExit callbacks,
        // we also need $stateParams to be available for any $injector calls we make during the
        // dependency resolution process.
        var $stateParams = paramsAreFiltered ? params : filterByKeys(state.params.$$keys(), params);
        var locals = { $stateParams: $stateParams };
        // Resolve 'global' dependencies for the state, i.e. those not specific to a view.
        // We're also including $stateParams in this; that way the parameters are restricted
        // to the set that should be visible to the state, and are independent of when we update
        // the global $state and $stateParams values.
        dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);
        var promises = [dst.resolve.then(function (globals) {
              dst.globals = globals;
            })];
        if (inherited)
          promises.push(inherited);
        // Resolve template and dependencies for all views.
        forEach(state.views, function (view, name) {
          var injectables = view.resolve && view.resolve !== state.resolve ? view.resolve : {};
          injectables.$template = [function () {
              return $view.load(name, {
                view: view,
                locals: locals,
                params: $stateParams,
                notify: options.notify
              }) || '';
            }];
          promises.push($resolve.resolve(injectables, locals, dst.resolve, state).then(function (result) {
            // References to the controller (only instantiated at link time)
            if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {
              var injectLocals = angular.extend({}, injectables, locals);
              result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);
            } else {
              result.$$controller = view.controller;
            }
            // Provide access to the state itself for internal use
            result.$$state = state;
            result.$$controllerAs = view.controllerAs;
            dst[name] = result;
          }));
        });
        // Wait for all the promises and then return the activation object
        return $q.all(promises).then(function (values) {
          return dst;
        });
      }
      return $state;
    }
    function shouldTriggerReload(to, from, locals, options) {
      if (to === from && (locals === from.locals && !options.reload || to.self.reloadOnSearch === false)) {
        return true;
      }
    }
  }
  angular.module('ui.router.state').value('$stateParams', {}).provider('$state', $StateProvider);
  $ViewProvider.$inject = [];
  function $ViewProvider() {
    this.$get = $get;
    /**
   * @ngdoc object
   * @name ui.router.state.$view
   *
   * @requires ui.router.util.$templateFactory
   * @requires $rootScope
   *
   * @description
   *
   */
    $get.$inject = [
      '$rootScope',
      '$templateFactory'
    ];
    function $get($rootScope, $templateFactory) {
      return {
        load: function load(name, options) {
          var result, defaults = {
              template: null,
              controller: null,
              view: null,
              locals: null,
              notify: true,
              async: true,
              params: {}
            };
          options = extend(defaults, options);
          if (options.view) {
            result = $templateFactory.fromConfig(options.view, options.params, options.locals);
          }
          if (result && options.notify) {
            /**
         * @ngdoc event
         * @name ui.router.state.$state#$viewContentLoading
         * @eventOf ui.router.state.$view
         * @eventType broadcast on root scope
         * @description
         *
         * Fired once the view **begins loading**, *before* the DOM is rendered.
         *
         * @param {Object} event Event object.
         * @param {Object} viewConfig The view config properties (template, controller, etc).
         *
         * @example
         *
         * <pre>
         * $scope.$on('$viewContentLoading',
         * function(event, viewConfig){
         *     // Access to all the view config properties.
         *     // and one special property 'targetView'
         *     // viewConfig.targetView
         * });
         * </pre>
         */
            $rootScope.$broadcast('$viewContentLoading', options);
          }
          return result;
        }
      };
    }
  }
  angular.module('ui.router.state').provider('$view', $ViewProvider);
  /**
 * @ngdoc object
 * @name ui.router.state.$uiViewScrollProvider
 *
 * @description
 * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.
 */
  function $ViewScrollProvider() {
    var useAnchorScroll = false;
    /**
   * @ngdoc function
   * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll
   * @methodOf ui.router.state.$uiViewScrollProvider
   *
   * @description
   * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for
   * scrolling based on the url anchor.
   */
    this.useAnchorScroll = function () {
      useAnchorScroll = true;
    };
    /**
   * @ngdoc object
   * @name ui.router.state.$uiViewScroll
   *
   * @requires $anchorScroll
   * @requires $timeout
   *
   * @description
   * When called with a jqLite element, it scrolls the element into view (after a
   * `$timeout` so the DOM has time to refresh).
   *
   * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,
   * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.
   */
    this.$get = [
      '$anchorScroll',
      '$timeout',
      function ($anchorScroll, $timeout) {
        if (useAnchorScroll) {
          return $anchorScroll;
        }
        return function ($element) {
          $timeout(function () {
            $element[0].scrollIntoView();
          }, 0, false);
        };
      }
    ];
  }
  angular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);
  /**
 * @ngdoc directive
 * @name ui.router.state.directive:ui-view
 *
 * @requires ui.router.state.$state
 * @requires $compile
 * @requires $controller
 * @requires $injector
 * @requires ui.router.state.$uiViewScroll
 * @requires $document
 *
 * @restrict ECA
 *
 * @description
 * The ui-view directive tells $state where to place your templates.
 *
 * @param {string=} name A view name. The name should be unique amongst the other views in the
 * same state. You can have views of the same name that live in different states.
 *
 * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window
 * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll
 * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you
 * scroll ui-view elements into view when they are populated during a state activation.
 *
 * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)
 * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*
 *
 * @param {string=} onload Expression to evaluate whenever the view updates.
 * 
 * @example
 * A view can be unnamed or named. 
 * <pre>
 * <!-- Unnamed -->
 * <div ui-view></div> 
 * 
 * <!-- Named -->
 * <div ui-view="viewName"></div>
 * </pre>
 *
 * You can only have one unnamed view within any template (or root html). If you are only using a 
 * single view and it is unnamed then you can populate it like so:
 * <pre>
 * <div ui-view></div> 
 * $stateProvider.state("home", {
 *   template: "<h1>HELLO!</h1>"
 * })
 * </pre>
 * 
 * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#views `views`}
 * config property, by name, in this case an empty name:
 * <pre>
 * $stateProvider.state("home", {
 *   views: {
 *     "": {
 *       template: "<h1>HELLO!</h1>"
 *     }
 *   }    
 * })
 * </pre>
 * 
 * But typically you'll only use the views property if you name your view or have more than one view 
 * in the same template. There's not really a compelling reason to name a view if its the only one, 
 * but you could if you wanted, like so:
 * <pre>
 * <div ui-view="main"></div>
 * </pre> 
 * <pre>
 * $stateProvider.state("home", {
 *   views: {
 *     "main": {
 *       template: "<h1>HELLO!</h1>"
 *     }
 *   }    
 * })
 * </pre>
 * 
 * Really though, you'll use views to set up multiple views:
 * <pre>
 * <div ui-view></div>
 * <div ui-view="chart"></div> 
 * <div ui-view="data"></div> 
 * </pre>
 * 
 * <pre>
 * $stateProvider.state("home", {
 *   views: {
 *     "": {
 *       template: "<h1>HELLO!</h1>"
 *     },
 *     "chart": {
 *       template: "<chart_thing/>"
 *     },
 *     "data": {
 *       template: "<data_thing/>"
 *     }
 *   }    
 * })
 * </pre>
 *
 * Examples for `autoscroll`:
 *
 * <pre>
 * <!-- If autoscroll present with no expression,
 *      then scroll ui-view into view -->
 * <ui-view autoscroll/>
 *
 * <!-- If autoscroll present with valid expression,
 *      then scroll ui-view into view if expression evaluates to true -->
 * <ui-view autoscroll='true'/>
 * <ui-view autoscroll='false'/>
 * <ui-view autoscroll='scopeVariable'/>
 * </pre>
 */
  $ViewDirective.$inject = [
    '$state',
    '$injector',
    '$uiViewScroll',
    '$interpolate'
  ];
  function $ViewDirective($state, $injector, $uiViewScroll, $interpolate) {
    function getService() {
      return $injector.has ? function (service) {
        return $injector.has(service) ? $injector.get(service) : null;
      } : function (service) {
        try {
          return $injector.get(service);
        } catch (e) {
          return null;
        }
      };
    }
    var service = getService(), $animator = service('$animator'), $animate = service('$animate');
    // Returns a set of DOM manipulation functions based on which Angular version
    // it should use
    function getRenderer(attrs, scope) {
      var statics = function () {
        return {
          enter: function (element, target, cb) {
            target.after(element);
            cb();
          },
          leave: function (element, cb) {
            element.remove();
            cb();
          }
        };
      };
      if ($animate) {
        return {
          enter: function (element, target, cb) {
            var promise = $animate.enter(element, null, target, cb);
            if (promise && promise.then)
              promise.then(cb);
          },
          leave: function (element, cb) {
            var promise = $animate.leave(element, cb);
            if (promise && promise.then)
              promise.then(cb);
          }
        };
      }
      if ($animator) {
        var animate = $animator && $animator(scope, attrs);
        return {
          enter: function (element, target, cb) {
            animate.enter(element, null, target);
            cb();
          },
          leave: function (element, cb) {
            animate.leave(element);
            cb();
          }
        };
      }
      return statics();
    }
    var directive = {
        restrict: 'ECA',
        terminal: true,
        priority: 400,
        transclude: 'element',
        compile: function (tElement, tAttrs, $transclude) {
          return function (scope, $element, attrs) {
            var previousEl, currentEl, currentScope, latestLocals, onloadExp = attrs.onload || '', autoScrollExp = attrs.autoscroll, renderer = getRenderer(attrs, scope);
            scope.$on('$stateChangeSuccess', function () {
              updateView(false);
            });
            scope.$on('$viewContentLoading', function () {
              updateView(false);
            });
            updateView(true);
            function cleanupLastView() {
              if (previousEl) {
                previousEl.remove();
                previousEl = null;
              }
              if (currentScope) {
                currentScope.$destroy();
                currentScope = null;
              }
              if (currentEl) {
                renderer.leave(currentEl, function () {
                  previousEl = null;
                });
                previousEl = currentEl;
                currentEl = null;
              }
            }
            function updateView(firstTime) {
              var newScope, name = getUiViewName(scope, attrs, $element, $interpolate), previousLocals = name && $state.$current && $state.$current.locals[name];
              if (!firstTime && previousLocals === latestLocals)
                return;
              // nothing to do
              newScope = scope.$new();
              latestLocals = $state.$current.locals[name];
              var clone = $transclude(newScope, function (clone) {
                  renderer.enter(clone, $element, function onUiViewEnter() {
                    if (currentScope) {
                      currentScope.$emit('$viewContentAnimationEnded');
                    }
                    if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {
                      $uiViewScroll(clone);
                    }
                  });
                  cleanupLastView();
                });
              currentEl = clone;
              currentScope = newScope;
              /**
           * @ngdoc event
           * @name ui.router.state.directive:ui-view#$viewContentLoaded
           * @eventOf ui.router.state.directive:ui-view
           * @eventType emits on ui-view directive scope
           * @description           *
           * Fired once the view is **loaded**, *after* the DOM is rendered.
           *
           * @param {Object} event Event object.
           */
              currentScope.$emit('$viewContentLoaded');
              currentScope.$eval(onloadExp);
            }
          };
        }
      };
    return directive;
  }
  $ViewDirectiveFill.$inject = [
    '$compile',
    '$controller',
    '$state',
    '$interpolate'
  ];
  function $ViewDirectiveFill($compile, $controller, $state, $interpolate) {
    return {
      restrict: 'ECA',
      priority: -400,
      compile: function (tElement) {
        var initial = tElement.html();
        return function (scope, $element, attrs) {
          var current = $state.$current, name = getUiViewName(scope, attrs, $element, $interpolate), locals = current && current.locals[name];
          if (!locals) {
            return;
          }
          $element.data('$uiView', {
            name: name,
            state: locals.$$state
          });
          $element.html(locals.$template ? locals.$template : initial);
          var link = $compile($element.contents());
          if (locals.$$controller) {
            locals.$scope = scope;
            var controller = $controller(locals.$$controller, locals);
            if (locals.$$controllerAs) {
              scope[locals.$$controllerAs] = controller;
            }
            $element.data('$ngControllerController', controller);
            $element.children().data('$ngControllerController', controller);
          }
          link(scope);
        };
      }
    };
  }
  /**
 * Shared ui-view code for both directives:
 * Given scope, element, and its attributes, return the view's name
 */
  function getUiViewName(scope, attrs, element, $interpolate) {
    var name = $interpolate(attrs.uiView || attrs.name || '')(scope);
    var inherited = element.inheritedData('$uiView');
    return name.indexOf('@') >= 0 ? name : name + '@' + (inherited ? inherited.state.name : '');
  }
  angular.module('ui.router.state').directive('uiView', $ViewDirective);
  angular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);
  function parseStateRef(ref, current) {
    var preparsed = ref.match(/^\s*({[^}]*})\s*$/), parsed;
    if (preparsed)
      ref = current + '(' + preparsed[1] + ')';
    parsed = ref.replace(/\n/g, ' ').match(/^([^(]+?)\s*(\((.*)\))?$/);
    if (!parsed || parsed.length !== 4)
      throw new Error('Invalid state ref \'' + ref + '\'');
    return {
      state: parsed[1],
      paramExpr: parsed[3] || null
    };
  }
  function stateContext(el) {
    var stateData = el.parent().inheritedData('$uiView');
    if (stateData && stateData.state && stateData.state.name) {
      return stateData.state;
    }
  }
  /**
 * @ngdoc directive
 * @name ui.router.state.directive:ui-sref
 *
 * @requires ui.router.state.$state
 * @requires $timeout
 *
 * @restrict A
 *
 * @description
 * A directive that binds a link (`<a>` tag) to a state. If the state has an associated 
 * URL, the directive will automatically generate & update the `href` attribute via 
 * the {@link ui.router.state.$state#methods_href $state.href()} method. Clicking 
 * the link will trigger a state transition with optional parameters. 
 *
 * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be 
 * handled natively by the browser.
 *
 * You can also use relative state paths within ui-sref, just like the relative 
 * paths passed to `$state.go()`. You just need to be aware that the path is relative
 * to the state that the link lives in, in other words the state that loaded the 
 * template containing the link.
 *
 * You can specify options to pass to {@link ui.router.state.$state#go $state.go()}
 * using the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,
 * and `reload`.
 *
 * @example
 * Here's an example of how you'd use ui-sref and how it would compile. If you have the 
 * following template:
 * <pre>
 * <a ui-sref="home">Home</a> | <a ui-sref="about">About</a> | <a ui-sref="{page: 2}">Next page</a>
 * 
 * <ul>
 *     <li ng-repeat="contact in contacts">
 *         <a ui-sref="contacts.detail({ id: contact.id })">{{ contact.name }}</a>
 *     </li>
 * </ul>
 * </pre>
 * 
 * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):
 * <pre>
 * <a href="#/home" ui-sref="home">Home</a> | <a href="#/about" ui-sref="about">About</a> | <a href="#/contacts?page=2" ui-sref="{page: 2}">Next page</a>
 * 
 * <ul>
 *     <li ng-repeat="contact in contacts">
 *         <a href="#/contacts/1" ui-sref="contacts.detail({ id: contact.id })">Joe</a>
 *     </li>
 *     <li ng-repeat="contact in contacts">
 *         <a href="#/contacts/2" ui-sref="contacts.detail({ id: contact.id })">Alice</a>
 *     </li>
 *     <li ng-repeat="contact in contacts">
 *         <a href="#/contacts/3" ui-sref="contacts.detail({ id: contact.id })">Bob</a>
 *     </li>
 * </ul>
 *
 * <a ui-sref="home" ui-sref-opts="{reload: true}">Home</a>
 * </pre>
 *
 * @param {string} ui-sref 'stateName' can be any valid absolute or relative state
 * @param {Object} ui-sref-opts options to pass to {@link ui.router.state.$state#go $state.go()}
 */
  $StateRefDirective.$inject = [
    '$state',
    '$timeout'
  ];
  function $StateRefDirective($state, $timeout) {
    var allowedOptions = [
        'location',
        'inherit',
        'reload'
      ];
    return {
      restrict: 'A',
      require: [
        '?^uiSrefActive',
        '?^uiSrefActiveEq'
      ],
      link: function (scope, element, attrs, uiSrefActive) {
        var ref = parseStateRef(attrs.uiSref, $state.current.name);
        var params = null, url = null, base = stateContext(element) || $state.$current;
        var newHref = null, isAnchor = element.prop('tagName') === 'A';
        var isForm = element[0].nodeName === 'FORM';
        var attr = isForm ? 'action' : 'href', nav = true;
        var options = {
            relative: base,
            inherit: true
          };
        var optionsOverride = scope.$eval(attrs.uiSrefOpts) || {};
        angular.forEach(allowedOptions, function (option) {
          if (option in optionsOverride) {
            options[option] = optionsOverride[option];
          }
        });
        var update = function (newVal) {
          if (newVal)
            params = angular.copy(newVal);
          if (!nav)
            return;
          newHref = $state.href(ref.state, params, options);
          var activeDirective = uiSrefActive[1] || uiSrefActive[0];
          if (activeDirective) {
            activeDirective.$$setStateInfo(ref.state, params);
          }
          if (newHref === null) {
            nav = false;
            return false;
          }
          attrs.$set(attr, newHref);
        };
        if (ref.paramExpr) {
          scope.$watch(ref.paramExpr, function (newVal, oldVal) {
            if (newVal !== params)
              update(newVal);
          }, true);
          params = angular.copy(scope.$eval(ref.paramExpr));
        }
        update();
        if (isForm)
          return;
        element.bind('click', function (e) {
          var button = e.which || e.button;
          if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || element.attr('target'))) {
            // HACK: This is to allow ng-clicks to be processed before the transition is initiated:
            var transition = $timeout(function () {
                $state.go(ref.state, params, options);
              });
            e.preventDefault();
            // if the state has no URL, ignore one preventDefault from the <a> directive.
            var ignorePreventDefaultCount = isAnchor && !newHref ? 1 : 0;
            e.preventDefault = function () {
              if (ignorePreventDefaultCount-- <= 0)
                $timeout.cancel(transition);
            };
          }
        });
      }
    };
  }
  /**
 * @ngdoc directive
 * @name ui.router.state.directive:ui-sref-active
 *
 * @requires ui.router.state.$state
 * @requires ui.router.state.$stateParams
 * @requires $interpolate
 *
 * @restrict A
 *
 * @description
 * A directive working alongside ui-sref to add classes to an element when the
 * related ui-sref directive's state is active, and removing them when it is inactive.
 * The primary use-case is to simplify the special appearance of navigation menus
 * relying on `ui-sref`, by having the "active" state's menu button appear different,
 * distinguishing it from the inactive menu items.
 *
 * ui-sref-active can live on the same element as ui-sref or on a parent element. The first
 * ui-sref-active found at the same level or above the ui-sref will be used.
 *
 * Will activate when the ui-sref's target state or any child state is active. If you
 * need to activate only when the ui-sref target state is active and *not* any of
 * it's children, then you will use
 * {@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}
 *
 * @example
 * Given the following template:
 * <pre>
 * <ul>
 *   <li ui-sref-active="active" class="item">
 *     <a href ui-sref="app.user({user: 'bilbobaggins'})">@bilbobaggins</a>
 *   </li>
 * </ul>
 * </pre>
 *
 *
 * When the app state is "app.user" (or any children states), and contains the state parameter "user" with value "bilbobaggins",
 * the resulting HTML will appear as (note the 'active' class):
 * <pre>
 * <ul>
 *   <li ui-sref-active="active" class="item active">
 *     <a ui-sref="app.user({user: 'bilbobaggins'})" href="/users/bilbobaggins">@bilbobaggins</a>
 *   </li>
 * </ul>
 * </pre>
 *
 * The class name is interpolated **once** during the directives link time (any further changes to the
 * interpolated value are ignored).
 *
 * Multiple classes may be specified in a space-separated format:
 * <pre>
 * <ul>
 *   <li ui-sref-active='class1 class2 class3'>
 *     <a ui-sref="app.user">link</a>
 *   </li>
 * </ul>
 * </pre>
 */
  /**
 * @ngdoc directive
 * @name ui.router.state.directive:ui-sref-active-eq
 *
 * @requires ui.router.state.$state
 * @requires ui.router.state.$stateParams
 * @requires $interpolate
 *
 * @restrict A
 *
 * @description
 * The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate
 * when the exact target state used in the `ui-sref` is active; no child states.
 *
 */
  $StateRefActiveDirective.$inject = [
    '$state',
    '$stateParams',
    '$interpolate'
  ];
  function $StateRefActiveDirective($state, $stateParams, $interpolate) {
    return {
      restrict: 'A',
      controller: [
        '$scope',
        '$element',
        '$attrs',
        function ($scope, $element, $attrs) {
          var state, params, activeClass;
          // There probably isn't much point in $observing this
          // uiSrefActive and uiSrefActiveEq share the same directive object with some
          // slight difference in logic routing
          activeClass = $interpolate($attrs.uiSrefActiveEq || $attrs.uiSrefActive || '', false)($scope);
          // Allow uiSref to communicate with uiSrefActive[Equals]
          this.$$setStateInfo = function (newState, newParams) {
            state = $state.get(newState, stateContext($element));
            params = newParams;
            update();
          };
          $scope.$on('$stateChangeSuccess', update);
          // Update route state
          function update() {
            if (isMatch()) {
              $element.addClass(activeClass);
            } else {
              $element.removeClass(activeClass);
            }
          }
          function isMatch() {
            if (typeof $attrs.uiSrefActiveEq !== 'undefined') {
              return state && $state.is(state.name, params);
            } else {
              return state && $state.includes(state.name, params);
            }
          }
        }
      ]
    };
  }
  angular.module('ui.router.state').directive('uiSref', $StateRefDirective).directive('uiSrefActive', $StateRefActiveDirective).directive('uiSrefActiveEq', $StateRefActiveDirective);
  /**
 * @ngdoc filter
 * @name ui.router.state.filter:isState
 *
 * @requires ui.router.state.$state
 *
 * @description
 * Translates to {@link ui.router.state.$state#methods_is $state.is("stateName")}.
 */
  $IsStateFilter.$inject = ['$state'];
  function $IsStateFilter($state) {
    var isFilter = function (state) {
      return $state.is(state);
    };
    isFilter.$stateful = true;
    return isFilter;
  }
  /**
 * @ngdoc filter
 * @name ui.router.state.filter:includedByState
 *
 * @requires ui.router.state.$state
 *
 * @description
 * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.
 */
  $IncludedByStateFilter.$inject = ['$state'];
  function $IncludedByStateFilter($state) {
    var includesFilter = function (state) {
      return $state.includes(state);
    };
    includesFilter.$stateful = true;
    return includesFilter;
  }
  angular.module('ui.router.state').filter('isState', $IsStateFilter).filter('includedByState', $IncludedByStateFilter);
}(window, window.angular));
/**
 * @license AngularJS v1.2.28
 * (c) 2010-2014 Google, Inc. http://angularjs.org
 * License: MIT
 */
(function (window, angular, undefined) {
  'use strict';
  /* jshint maxlen: false */
  /**
 * @ngdoc module
 * @name ngAnimate
 * @description
 *
 * # ngAnimate
 *
 * The `ngAnimate` module provides support for JavaScript, CSS3 transition and CSS3 keyframe animation hooks within existing core and custom directives.
 *
 *
 * <div doc-module-components="ngAnimate"></div>
 *
 * # Usage
 *
 * To see animations in action, all that is required is to define the appropriate CSS classes
 * or to register a JavaScript animation via the myModule.animation() function. The directives that support animation automatically are:
 * `ngRepeat`, `ngInclude`, `ngIf`, `ngSwitch`, `ngShow`, `ngHide`, `ngView` and `ngClass`. Custom directives can take advantage of animation
 * by using the `$animate` service.
 *
 * Below is a more detailed breakdown of the supported animation events provided by pre-existing ng directives:
 *
 * | Directive                                                 | Supported Animations                               |
 * |---------------------------------------------------------- |----------------------------------------------------|
 * | {@link ng.directive:ngRepeat#usage_animations ngRepeat}         | enter, leave and move                              |
 * | {@link ngRoute.directive:ngView#usage_animations ngView}        | enter and leave                                    |
 * | {@link ng.directive:ngInclude#usage_animations ngInclude}       | enter and leave                                    |
 * | {@link ng.directive:ngSwitch#usage_animations ngSwitch}         | enter and leave                                    |
 * | {@link ng.directive:ngIf#usage_animations ngIf}                 | enter and leave                                    |
 * | {@link ng.directive:ngClass#usage_animations ngClass}           | add and remove                                     |
 * | {@link ng.directive:ngShow#usage_animations ngShow & ngHide}    | add and remove (the ng-hide class value)           |
 * | {@link ng.directive:form#usage_animations form}                 | add and remove (dirty, pristine, valid, invalid & all other validations)                |
 * | {@link ng.directive:ngModel#usage_animations ngModel}           | add and remove (dirty, pristine, valid, invalid & all other validations)                |
 *
 * You can find out more information about animations upon visiting each directive page.
 *
 * Below is an example of how to apply animations to a directive that supports animation hooks:
 *
 * ```html
 * <style type="text/css">
 * .slide.ng-enter, .slide.ng-leave {
 *   -webkit-transition:0.5s linear all;
 *   transition:0.5s linear all;
 * }
 *
 * .slide.ng-enter { }        /&#42; starting animations for enter &#42;/
 * .slide.ng-enter.ng-enter-active { } /&#42; terminal animations for enter &#42;/
 * .slide.ng-leave { }        /&#42; starting animations for leave &#42;/
 * .slide.ng-leave.ng-leave-active { } /&#42; terminal animations for leave &#42;/
 * </style>
 *
 * <!--
 * the animate service will automatically add .ng-enter and .ng-leave to the element
 * to trigger the CSS transition/animations
 * -->
 * <ANY class="slide" ng-include="..."></ANY>
 * ```
 *
 * Keep in mind that, by default, if an animation is running, any child elements cannot be animated
 * until the parent element's animation has completed. This blocking feature can be overridden by
 * placing the `ng-animate-children` attribute on a parent container tag.
 *
 * ```html
 * <div class="slide-animation" ng-if="on" ng-animate-children>
 *   <div class="fade-animation" ng-if="on">
 *     <div class="explode-animation" ng-if="on">
 *        ...
 *     </div>
 *   </div>
 * </div>
 * ```
 *
 * When the `on` expression value changes and an animation is triggered then each of the elements within
 * will all animate without the block being applied to child elements.
 *
 * <h2>CSS-defined Animations</h2>
 * The animate service will automatically apply two CSS classes to the animated element and these two CSS classes
 * are designed to contain the start and end CSS styling. Both CSS transitions and keyframe animations are supported
 * and can be used to play along with this naming structure.
 *
 * The following code below demonstrates how to perform animations using **CSS transitions** with Angular:
 *
 * ```html
 * <style type="text/css">
 * /&#42;
 *  The animate class is apart of the element and the ng-enter class
 *  is attached to the element once the enter animation event is triggered
 * &#42;/
 * .reveal-animation.ng-enter {
 *  -webkit-transition: 1s linear all; /&#42; Safari/Chrome &#42;/
 *  transition: 1s linear all; /&#42; All other modern browsers and IE10+ &#42;/
 *
 *  /&#42; The animation preparation code &#42;/
 *  opacity: 0;
 * }
 *
 * /&#42;
 *  Keep in mind that you want to combine both CSS
 *  classes together to avoid any CSS-specificity
 *  conflicts
 * &#42;/
 * .reveal-animation.ng-enter.ng-enter-active {
 *  /&#42; The animation code itself &#42;/
 *  opacity: 1;
 * }
 * </style>
 *
 * <div class="view-container">
 *   <div ng-view class="reveal-animation"></div>
 * </div>
 * ```
 *
 * The following code below demonstrates how to perform animations using **CSS animations** with Angular:
 *
 * ```html
 * <style type="text/css">
 * .reveal-animation.ng-enter {
 *   -webkit-animation: enter_sequence 1s linear; /&#42; Safari/Chrome &#42;/
 *   animation: enter_sequence 1s linear; /&#42; IE10+ and Future Browsers &#42;/
 * }
 * @-webkit-keyframes enter_sequence {
 *   from { opacity:0; }
 *   to { opacity:1; }
 * }
 * @keyframes enter_sequence {
 *   from { opacity:0; }
 *   to { opacity:1; }
 * }
 * </style>
 *
 * <div class="view-container">
 *   <div ng-view class="reveal-animation"></div>
 * </div>
 * ```
 *
 * Both CSS3 animations and transitions can be used together and the animate service will figure out the correct duration and delay timing.
 *
 * Upon DOM mutation, the event class is added first (something like `ng-enter`), then the browser prepares itself to add
 * the active class (in this case `ng-enter-active`) which then triggers the animation. The animation module will automatically
 * detect the CSS code to determine when the animation ends. Once the animation is over then both CSS classes will be
 * removed from the DOM. If a browser does not support CSS transitions or CSS animations then the animation will start and end
 * immediately resulting in a DOM element that is at its final state. This final state is when the DOM element
 * has no CSS transition/animation classes applied to it.
 *
 * <h3>CSS Staggering Animations</h3>
 * A Staggering animation is a collection of animations that are issued with a slight delay in between each successive operation resulting in a
 * curtain-like effect. The ngAnimate module, as of 1.2.0, supports staggering animations and the stagger effect can be
 * performed by creating a **ng-EVENT-stagger** CSS class and attaching that class to the base CSS class used for
 * the animation. The style property expected within the stagger class can either be a **transition-delay** or an
 * **animation-delay** property (or both if your animation contains both transitions and keyframe animations).
 *
 * ```css
 * .my-animation.ng-enter {
 *   /&#42; standard transition code &#42;/
 *   -webkit-transition: 1s linear all;
 *   transition: 1s linear all;
 *   opacity:0;
 * }
 * .my-animation.ng-enter-stagger {
 *   /&#42; this will have a 100ms delay between each successive leave animation &#42;/
 *   -webkit-transition-delay: 0.1s;
 *   transition-delay: 0.1s;
 *
 *   /&#42; in case the stagger doesn't work then these two values
 *    must be set to 0 to avoid an accidental CSS inheritance &#42;/
 *   -webkit-transition-duration: 0s;
 *   transition-duration: 0s;
 * }
 * .my-animation.ng-enter.ng-enter-active {
 *   /&#42; standard transition styles &#42;/
 *   opacity:1;
 * }
 * ```
 *
 * Staggering animations work by default in ngRepeat (so long as the CSS class is defined). Outside of ngRepeat, to use staggering animations
 * on your own, they can be triggered by firing multiple calls to the same event on $animate. However, the restrictions surrounding this
 * are that each of the elements must have the same CSS className value as well as the same parent element. A stagger operation
 * will also be reset if more than 10ms has passed after the last animation has been fired.
 *
 * The following code will issue the **ng-leave-stagger** event on the element provided:
 *
 * ```js
 * var kids = parent.children();
 *
 * $animate.leave(kids[0]); //stagger index=0
 * $animate.leave(kids[1]); //stagger index=1
 * $animate.leave(kids[2]); //stagger index=2
 * $animate.leave(kids[3]); //stagger index=3
 * $animate.leave(kids[4]); //stagger index=4
 *
 * $timeout(function() {
 *   //stagger has reset itself
 *   $animate.leave(kids[5]); //stagger index=0
 *   $animate.leave(kids[6]); //stagger index=1
 * }, 100, false);
 * ```
 *
 * Stagger animations are currently only supported within CSS-defined animations.
 *
 * <h2>JavaScript-defined Animations</h2>
 * In the event that you do not want to use CSS3 transitions or CSS3 animations or if you wish to offer animations on browsers that do not
 * yet support CSS transitions/animations, then you can make use of JavaScript animations defined inside of your AngularJS module.
 *
 * ```js
 * //!annotate="YourApp" Your AngularJS Module|Replace this or ngModule with the module that you used to define your application.
 * var ngModule = angular.module('YourApp', ['ngAnimate']);
 * ngModule.animation('.my-crazy-animation', function() {
 *   return {
 *     enter: function(element, done) {
 *       //run the animation here and call done when the animation is complete
 *       return function(cancelled) {
 *         //this (optional) function will be called when the animation
 *         //completes or when the animation is cancelled (the cancelled
 *         //flag will be set to true if cancelled).
 *       };
 *     },
 *     leave: function(element, done) { },
 *     move: function(element, done) { },
 *
 *     //animation that can be triggered before the class is added
 *     beforeAddClass: function(element, className, done) { },
 *
 *     //animation that can be triggered after the class is added
 *     addClass: function(element, className, done) { },
 *
 *     //animation that can be triggered before the class is removed
 *     beforeRemoveClass: function(element, className, done) { },
 *
 *     //animation that can be triggered after the class is removed
 *     removeClass: function(element, className, done) { }
 *   };
 * });
 * ```
 *
 * JavaScript-defined animations are created with a CSS-like class selector and a collection of events which are set to run
 * a javascript callback function. When an animation is triggered, $animate will look for a matching animation which fits
 * the element's CSS class attribute value and then run the matching animation event function (if found).
 * In other words, if the CSS classes present on the animated element match any of the JavaScript animations then the callback function will
 * be executed. It should be also noted that only simple, single class selectors are allowed (compound class selectors are not supported).
 *
 * Within a JavaScript animation, an object containing various event callback animation functions is expected to be returned.
 * As explained above, these callbacks are triggered based on the animation event. Therefore if an enter animation is run,
 * and the JavaScript animation is found, then the enter callback will handle that animation (in addition to the CSS keyframe animation
 * or transition code that is defined via a stylesheet).
 *
 */
  angular.module('ngAnimate', ['ng']).directive('ngAnimateChildren', function () {
    var NG_ANIMATE_CHILDREN = '$$ngAnimateChildren';
    return function (scope, element, attrs) {
      var val = attrs.ngAnimateChildren;
      if (angular.isString(val) && val.length === 0) {
        //empty attribute
        element.data(NG_ANIMATE_CHILDREN, true);
      } else {
        scope.$watch(val, function (value) {
          element.data(NG_ANIMATE_CHILDREN, !!value);
        });
      }
    };
  }).factory('$$animateReflow', [
    '$$rAF',
    '$document',
    function ($$rAF, $document) {
      var bod = $document[0].body;
      return function (fn) {
        //the returned function acts as the cancellation function
        return $$rAF(function () {
          //the line below will force the browser to perform a repaint
          //so that all the animated elements within the animation frame
          //will be properly updated and drawn on screen. This is
          //required to perform multi-class CSS based animations with
          //Firefox. DO NOT REMOVE THIS LINE.
          var a = bod.offsetWidth + 1;
          fn();
        });
      };
    }
  ]).config([
    '$provide',
    '$animateProvider',
    function ($provide, $animateProvider) {
      var noop = angular.noop;
      var forEach = angular.forEach;
      var selectors = $animateProvider.$$selectors;
      var ELEMENT_NODE = 1;
      var NG_ANIMATE_STATE = '$$ngAnimateState';
      var NG_ANIMATE_CHILDREN = '$$ngAnimateChildren';
      var NG_ANIMATE_CLASS_NAME = 'ng-animate';
      var rootAnimateState = { running: true };
      function extractElementNode(element) {
        for (var i = 0; i < element.length; i++) {
          var elm = element[i];
          if (elm.nodeType == ELEMENT_NODE) {
            return elm;
          }
        }
      }
      function prepareElement(element) {
        return element && angular.element(element);
      }
      function stripCommentsFromElement(element) {
        return angular.element(extractElementNode(element));
      }
      function isMatchingElement(elm1, elm2) {
        return extractElementNode(elm1) == extractElementNode(elm2);
      }
      $provide.decorator('$animate', [
        '$delegate',
        '$injector',
        '$sniffer',
        '$rootElement',
        '$$asyncCallback',
        '$rootScope',
        '$document',
        function ($delegate, $injector, $sniffer, $rootElement, $$asyncCallback, $rootScope, $document) {
          var globalAnimationCounter = 0;
          $rootElement.data(NG_ANIMATE_STATE, rootAnimateState);
          // disable animations during bootstrap, but once we bootstrapped, wait again
          // for another digest until enabling animations. The reason why we digest twice
          // is because all structural animations (enter, leave and move) all perform a
          // post digest operation before animating. If we only wait for a single digest
          // to pass then the structural animation would render its animation on page load.
          // (which is what we're trying to avoid when the application first boots up.)
          $rootScope.$$postDigest(function () {
            $rootScope.$$postDigest(function () {
              rootAnimateState.running = false;
            });
          });
          var classNameFilter = $animateProvider.classNameFilter();
          var isAnimatableClassName = !classNameFilter ? function () {
              return true;
            } : function (className) {
              return classNameFilter.test(className);
            };
          function blockElementAnimations(element) {
            var data = element.data(NG_ANIMATE_STATE) || {};
            data.running = true;
            element.data(NG_ANIMATE_STATE, data);
          }
          function lookup(name) {
            if (name) {
              var matches = [], flagMap = {}, classes = name.substr(1).split('.');
              //the empty string value is the default animation
              //operation which performs CSS transition and keyframe
              //animations sniffing. This is always included for each
              //element animation procedure if the browser supports
              //transitions and/or keyframe animations. The default
              //animation is added to the top of the list to prevent
              //any previous animations from affecting the element styling
              //prior to the element being animated.
              if ($sniffer.transitions || $sniffer.animations) {
                matches.push($injector.get(selectors['']));
              }
              for (var i = 0; i < classes.length; i++) {
                var klass = classes[i], selectorFactoryName = selectors[klass];
                if (selectorFactoryName && !flagMap[klass]) {
                  matches.push($injector.get(selectorFactoryName));
                  flagMap[klass] = true;
                }
              }
              return matches;
            }
          }
          function animationRunner(element, animationEvent, className) {
            //transcluded directives may sometimes fire an animation using only comment nodes
            //best to catch this early on to prevent any animation operations from occurring
            var node = element[0];
            if (!node) {
              return;
            }
            var isSetClassOperation = animationEvent == 'setClass';
            var isClassBased = isSetClassOperation || animationEvent == 'addClass' || animationEvent == 'removeClass';
            var classNameAdd, classNameRemove;
            if (angular.isArray(className)) {
              classNameAdd = className[0];
              classNameRemove = className[1];
              className = classNameAdd + ' ' + classNameRemove;
            }
            var currentClassName = element.attr('class');
            var classes = currentClassName + ' ' + className;
            if (!isAnimatableClassName(classes)) {
              return;
            }
            var beforeComplete = noop, beforeCancel = [], before = [], afterComplete = noop, afterCancel = [], after = [];
            var animationLookup = (' ' + classes).replace(/\s+/g, '.');
            forEach(lookup(animationLookup), function (animationFactory) {
              var created = registerAnimation(animationFactory, animationEvent);
              if (!created && isSetClassOperation) {
                registerAnimation(animationFactory, 'addClass');
                registerAnimation(animationFactory, 'removeClass');
              }
            });
            function registerAnimation(animationFactory, event) {
              var afterFn = animationFactory[event];
              var beforeFn = animationFactory['before' + event.charAt(0).toUpperCase() + event.substr(1)];
              if (afterFn || beforeFn) {
                if (event == 'leave') {
                  beforeFn = afterFn;
                  //when set as null then animation knows to skip this phase
                  afterFn = null;
                }
                after.push({
                  event: event,
                  fn: afterFn
                });
                before.push({
                  event: event,
                  fn: beforeFn
                });
                return true;
              }
            }
            function run(fns, cancellations, allCompleteFn) {
              var animations = [];
              forEach(fns, function (animation) {
                animation.fn && animations.push(animation);
              });
              var count = 0;
              function afterAnimationComplete(index) {
                if (cancellations) {
                  (cancellations[index] || noop)();
                  if (++count < animations.length)
                    return;
                  cancellations = null;
                }
                allCompleteFn();
              }
              //The code below adds directly to the array in order to work with
              //both sync and async animations. Sync animations are when the done()
              //operation is called right away. DO NOT REFACTOR!
              forEach(animations, function (animation, index) {
                var progress = function () {
                  afterAnimationComplete(index);
                };
                switch (animation.event) {
                case 'setClass':
                  cancellations.push(animation.fn(element, classNameAdd, classNameRemove, progress));
                  break;
                case 'addClass':
                  cancellations.push(animation.fn(element, classNameAdd || className, progress));
                  break;
                case 'removeClass':
                  cancellations.push(animation.fn(element, classNameRemove || className, progress));
                  break;
                default:
                  cancellations.push(animation.fn(element, progress));
                  break;
                }
              });
              if (cancellations && cancellations.length === 0) {
                allCompleteFn();
              }
            }
            return {
              node: node,
              event: animationEvent,
              className: className,
              isClassBased: isClassBased,
              isSetClassOperation: isSetClassOperation,
              before: function (allCompleteFn) {
                beforeComplete = allCompleteFn;
                run(before, beforeCancel, function () {
                  beforeComplete = noop;
                  allCompleteFn();
                });
              },
              after: function (allCompleteFn) {
                afterComplete = allCompleteFn;
                run(after, afterCancel, function () {
                  afterComplete = noop;
                  allCompleteFn();
                });
              },
              cancel: function () {
                if (beforeCancel) {
                  forEach(beforeCancel, function (cancelFn) {
                    (cancelFn || noop)(true);
                  });
                  beforeComplete(true);
                }
                if (afterCancel) {
                  forEach(afterCancel, function (cancelFn) {
                    (cancelFn || noop)(true);
                  });
                  afterComplete(true);
                }
              }
            };
          }
          /**
       * @ngdoc service
       * @name $animate
       * @kind function
       *
       * @description
       * The `$animate` service provides animation detection support while performing DOM operations (enter, leave and move) as well as during addClass and removeClass operations.
       * When any of these operations are run, the $animate service
       * will examine any JavaScript-defined animations (which are defined by using the $animateProvider provider object)
       * as well as any CSS-defined animations against the CSS classes present on the element once the DOM operation is run.
       *
       * The `$animate` service is used behind the scenes with pre-existing directives and animation with these directives
       * will work out of the box without any extra configuration.
       *
       * Requires the {@link ngAnimate `ngAnimate`} module to be installed.
       *
       * Please visit the {@link ngAnimate `ngAnimate`} module overview page learn more about how to use animations in your application.
       *
       */
          return {
            enter: function (element, parentElement, afterElement, doneCallback) {
              element = angular.element(element);
              parentElement = prepareElement(parentElement);
              afterElement = prepareElement(afterElement);
              blockElementAnimations(element);
              $delegate.enter(element, parentElement, afterElement);
              $rootScope.$$postDigest(function () {
                element = stripCommentsFromElement(element);
                performAnimation('enter', 'ng-enter', element, parentElement, afterElement, noop, doneCallback);
              });
            },
            leave: function (element, doneCallback) {
              element = angular.element(element);
              cancelChildAnimations(element);
              blockElementAnimations(element);
              $rootScope.$$postDigest(function () {
                performAnimation('leave', 'ng-leave', stripCommentsFromElement(element), null, null, function () {
                  $delegate.leave(element);
                }, doneCallback);
              });
            },
            move: function (element, parentElement, afterElement, doneCallback) {
              element = angular.element(element);
              parentElement = prepareElement(parentElement);
              afterElement = prepareElement(afterElement);
              cancelChildAnimations(element);
              blockElementAnimations(element);
              $delegate.move(element, parentElement, afterElement);
              $rootScope.$$postDigest(function () {
                element = stripCommentsFromElement(element);
                performAnimation('move', 'ng-move', element, parentElement, afterElement, noop, doneCallback);
              });
            },
            addClass: function (element, className, doneCallback) {
              element = angular.element(element);
              element = stripCommentsFromElement(element);
              performAnimation('addClass', className, element, null, null, function () {
                $delegate.addClass(element, className);
              }, doneCallback);
            },
            removeClass: function (element, className, doneCallback) {
              element = angular.element(element);
              element = stripCommentsFromElement(element);
              performAnimation('removeClass', className, element, null, null, function () {
                $delegate.removeClass(element, className);
              }, doneCallback);
            },
            setClass: function (element, add, remove, doneCallback) {
              element = angular.element(element);
              element = stripCommentsFromElement(element);
              performAnimation('setClass', [
                add,
                remove
              ], element, null, null, function () {
                $delegate.setClass(element, add, remove);
              }, doneCallback);
            },
            enabled: function (value, element) {
              switch (arguments.length) {
              case 2:
                if (value) {
                  cleanup(element);
                } else {
                  var data = element.data(NG_ANIMATE_STATE) || {};
                  data.disabled = true;
                  element.data(NG_ANIMATE_STATE, data);
                }
                break;
              case 1:
                rootAnimateState.disabled = !value;
                break;
              default:
                value = !rootAnimateState.disabled;
                break;
              }
              return !!value;
            }
          };
          /*
        all animations call this shared animation triggering function internally.
        The animationEvent variable refers to the JavaScript animation event that will be triggered
        and the className value is the name of the animation that will be applied within the
        CSS code. Element, parentElement and afterElement are provided DOM elements for the animation
        and the onComplete callback will be fired once the animation is fully complete.
      */
          function performAnimation(animationEvent, className, element, parentElement, afterElement, domOperation, doneCallback) {
            var runner = animationRunner(element, animationEvent, className);
            if (!runner) {
              fireDOMOperation();
              fireBeforeCallbackAsync();
              fireAfterCallbackAsync();
              closeAnimation();
              return;
            }
            className = runner.className;
            var elementEvents = angular.element._data(runner.node);
            elementEvents = elementEvents && elementEvents.events;
            if (!parentElement) {
              parentElement = afterElement ? afterElement.parent() : element.parent();
            }
            var ngAnimateState = element.data(NG_ANIMATE_STATE) || {};
            var runningAnimations = ngAnimateState.active || {};
            var totalActiveAnimations = ngAnimateState.totalActive || 0;
            var lastAnimation = ngAnimateState.last;
            //only allow animations if the currently running animation is not structural
            //or if there is no animation running at all
            var skipAnimations;
            if (runner.isClassBased) {
              skipAnimations = ngAnimateState.running || ngAnimateState.disabled || lastAnimation && !lastAnimation.isClassBased;
            }
            //skip the animation if animations are disabled, a parent is already being animated,
            //the element is not currently attached to the document body or then completely close
            //the animation if any matching animations are not found at all.
            //NOTE: IE8 + IE9 should close properly (run closeAnimation()) in case an animation was found.
            if (skipAnimations || animationsDisabled(element, parentElement)) {
              fireDOMOperation();
              fireBeforeCallbackAsync();
              fireAfterCallbackAsync();
              closeAnimation();
              return;
            }
            var skipAnimation = false;
            if (totalActiveAnimations > 0) {
              var animationsToCancel = [];
              if (!runner.isClassBased) {
                if (animationEvent == 'leave' && runningAnimations['ng-leave']) {
                  skipAnimation = true;
                } else {
                  //cancel all animations when a structural animation takes place
                  for (var klass in runningAnimations) {
                    animationsToCancel.push(runningAnimations[klass]);
                    cleanup(element, klass);
                  }
                  runningAnimations = {};
                  totalActiveAnimations = 0;
                }
              } else if (lastAnimation.event == 'setClass') {
                animationsToCancel.push(lastAnimation);
                cleanup(element, className);
              } else if (runningAnimations[className]) {
                var current = runningAnimations[className];
                if (current.event == animationEvent) {
                  skipAnimation = true;
                } else {
                  animationsToCancel.push(current);
                  cleanup(element, className);
                }
              }
              if (animationsToCancel.length > 0) {
                forEach(animationsToCancel, function (operation) {
                  operation.cancel();
                });
              }
            }
            if (runner.isClassBased && !runner.isSetClassOperation && !skipAnimation) {
              skipAnimation = animationEvent == 'addClass' == element.hasClass(className);  //opposite of XOR
            }
            if (skipAnimation) {
              fireDOMOperation();
              fireBeforeCallbackAsync();
              fireAfterCallbackAsync();
              fireDoneCallbackAsync();
              return;
            }
            if (animationEvent == 'leave') {
              //there's no need to ever remove the listener since the element
              //will be removed (destroyed) after the leave animation ends or
              //is cancelled midway
              element.one('$destroy', function (e) {
                var element = angular.element(this);
                var state = element.data(NG_ANIMATE_STATE);
                if (state) {
                  var activeLeaveAnimation = state.active['ng-leave'];
                  if (activeLeaveAnimation) {
                    activeLeaveAnimation.cancel();
                    cleanup(element, 'ng-leave');
                  }
                }
              });
            }
            //the ng-animate class does nothing, but it's here to allow for
            //parent animations to find and cancel child animations when needed
            element.addClass(NG_ANIMATE_CLASS_NAME);
            var localAnimationCount = globalAnimationCounter++;
            totalActiveAnimations++;
            runningAnimations[className] = runner;
            element.data(NG_ANIMATE_STATE, {
              last: runner,
              active: runningAnimations,
              index: localAnimationCount,
              totalActive: totalActiveAnimations
            });
            //first we run the before animations and when all of those are complete
            //then we perform the DOM operation and run the next set of animations
            fireBeforeCallbackAsync();
            runner.before(function (cancelled) {
              var data = element.data(NG_ANIMATE_STATE);
              cancelled = cancelled || !data || !data.active[className] || runner.isClassBased && data.active[className].event != animationEvent;
              fireDOMOperation();
              if (cancelled === true) {
                closeAnimation();
              } else {
                fireAfterCallbackAsync();
                runner.after(closeAnimation);
              }
            });
            function fireDOMCallback(animationPhase) {
              var eventName = '$animate:' + animationPhase;
              if (elementEvents && elementEvents[eventName] && elementEvents[eventName].length > 0) {
                $$asyncCallback(function () {
                  element.triggerHandler(eventName, {
                    event: animationEvent,
                    className: className
                  });
                });
              }
            }
            function fireBeforeCallbackAsync() {
              fireDOMCallback('before');
            }
            function fireAfterCallbackAsync() {
              fireDOMCallback('after');
            }
            function fireDoneCallbackAsync() {
              fireDOMCallback('close');
              if (doneCallback) {
                $$asyncCallback(function () {
                  doneCallback();
                });
              }
            }
            //it is less complicated to use a flag than managing and canceling
            //timeouts containing multiple callbacks.
            function fireDOMOperation() {
              if (!fireDOMOperation.hasBeenRun) {
                fireDOMOperation.hasBeenRun = true;
                domOperation();
              }
            }
            function closeAnimation() {
              if (!closeAnimation.hasBeenRun) {
                closeAnimation.hasBeenRun = true;
                var data = element.data(NG_ANIMATE_STATE);
                if (data) {
                  /* only structural animations wait for reflow before removing an
                 animation, but class-based animations don't. An example of this
                 failing would be when a parent HTML tag has a ng-class attribute
                 causing ALL directives below to skip animations during the digest */
                  if (runner && runner.isClassBased) {
                    cleanup(element, className);
                  } else {
                    $$asyncCallback(function () {
                      var data = element.data(NG_ANIMATE_STATE) || {};
                      if (localAnimationCount == data.index) {
                        cleanup(element, className, animationEvent);
                      }
                    });
                    element.data(NG_ANIMATE_STATE, data);
                  }
                }
                fireDoneCallbackAsync();
              }
            }
          }
          function cancelChildAnimations(element) {
            var node = extractElementNode(element);
            if (node) {
              var nodes = angular.isFunction(node.getElementsByClassName) ? node.getElementsByClassName(NG_ANIMATE_CLASS_NAME) : node.querySelectorAll('.' + NG_ANIMATE_CLASS_NAME);
              forEach(nodes, function (element) {
                element = angular.element(element);
                var data = element.data(NG_ANIMATE_STATE);
                if (data && data.active) {
                  forEach(data.active, function (runner) {
                    runner.cancel();
                  });
                }
              });
            }
          }
          function cleanup(element, className) {
            if (isMatchingElement(element, $rootElement)) {
              if (!rootAnimateState.disabled) {
                rootAnimateState.running = false;
                rootAnimateState.structural = false;
              }
            } else if (className) {
              var data = element.data(NG_ANIMATE_STATE) || {};
              var removeAnimations = className === true;
              if (!removeAnimations && data.active && data.active[className]) {
                data.totalActive--;
                delete data.active[className];
              }
              if (removeAnimations || !data.totalActive) {
                element.removeClass(NG_ANIMATE_CLASS_NAME);
                element.removeData(NG_ANIMATE_STATE);
              }
            }
          }
          function animationsDisabled(element, parentElement) {
            if (rootAnimateState.disabled) {
              return true;
            }
            if (isMatchingElement(element, $rootElement)) {
              return rootAnimateState.running;
            }
            var allowChildAnimations, parentRunningAnimation, hasParent;
            do {
              //the element did not reach the root element which means that it
              //is not apart of the DOM. Therefore there is no reason to do
              //any animations on it
              if (parentElement.length === 0)
                break;
              var isRoot = isMatchingElement(parentElement, $rootElement);
              var state = isRoot ? rootAnimateState : parentElement.data(NG_ANIMATE_STATE) || {};
              if (state.disabled) {
                return true;
              }
              //no matter what, for an animation to work it must reach the root element
              //this implies that the element is attached to the DOM when the animation is run
              if (isRoot) {
                hasParent = true;
              }
              //once a flag is found that is strictly false then everything before
              //it will be discarded and all child animations will be restricted
              if (allowChildAnimations !== false) {
                var animateChildrenFlag = parentElement.data(NG_ANIMATE_CHILDREN);
                if (angular.isDefined(animateChildrenFlag)) {
                  allowChildAnimations = animateChildrenFlag;
                }
              }
              parentRunningAnimation = parentRunningAnimation || state.running || state.last && !state.last.isClassBased;
            } while (parentElement = parentElement.parent());
            return !hasParent || !allowChildAnimations && parentRunningAnimation;
          }
        }
      ]);
      $animateProvider.register('', [
        '$window',
        '$sniffer',
        '$timeout',
        '$$animateReflow',
        function ($window, $sniffer, $timeout, $$animateReflow) {
          // Detect proper transitionend/animationend event names.
          var CSS_PREFIX = '', TRANSITION_PROP, TRANSITIONEND_EVENT, ANIMATION_PROP, ANIMATIONEND_EVENT;
          // If unprefixed events are not supported but webkit-prefixed are, use the latter.
          // Otherwise, just use W3C names, browsers not supporting them at all will just ignore them.
          // Note: Chrome implements `window.onwebkitanimationend` and doesn't implement `window.onanimationend`
          // but at the same time dispatches the `animationend` event and not `webkitAnimationEnd`.
          // Register both events in case `window.onanimationend` is not supported because of that,
          // do the same for `transitionend` as Safari is likely to exhibit similar behavior.
          // Also, the only modern browser that uses vendor prefixes for transitions/keyframes is webkit
          // therefore there is no reason to test anymore for other vendor prefixes: http://caniuse.com/#search=transition
          if (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {
            CSS_PREFIX = '-webkit-';
            TRANSITION_PROP = 'WebkitTransition';
            TRANSITIONEND_EVENT = 'webkitTransitionEnd transitionend';
          } else {
            TRANSITION_PROP = 'transition';
            TRANSITIONEND_EVENT = 'transitionend';
          }
          if (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {
            CSS_PREFIX = '-webkit-';
            ANIMATION_PROP = 'WebkitAnimation';
            ANIMATIONEND_EVENT = 'webkitAnimationEnd animationend';
          } else {
            ANIMATION_PROP = 'animation';
            ANIMATIONEND_EVENT = 'animationend';
          }
          var DURATION_KEY = 'Duration';
          var PROPERTY_KEY = 'Property';
          var DELAY_KEY = 'Delay';
          var ANIMATION_ITERATION_COUNT_KEY = 'IterationCount';
          var NG_ANIMATE_PARENT_KEY = '$$ngAnimateKey';
          var NG_ANIMATE_CSS_DATA_KEY = '$$ngAnimateCSS3Data';
          var NG_ANIMATE_BLOCK_CLASS_NAME = 'ng-animate-block-transitions';
          var ELAPSED_TIME_MAX_DECIMAL_PLACES = 3;
          var CLOSING_TIME_BUFFER = 1.5;
          var ONE_SECOND = 1000;
          var lookupCache = {};
          var parentCounter = 0;
          var animationReflowQueue = [];
          var cancelAnimationReflow;
          function clearCacheAfterReflow() {
            if (!cancelAnimationReflow) {
              cancelAnimationReflow = $$animateReflow(function () {
                animationReflowQueue = [];
                cancelAnimationReflow = null;
                lookupCache = {};
              });
            }
          }
          function afterReflow(element, callback) {
            if (cancelAnimationReflow) {
              cancelAnimationReflow();
            }
            animationReflowQueue.push(callback);
            cancelAnimationReflow = $$animateReflow(function () {
              forEach(animationReflowQueue, function (fn) {
                fn();
              });
              animationReflowQueue = [];
              cancelAnimationReflow = null;
              lookupCache = {};
            });
          }
          var closingTimer = null;
          var closingTimestamp = 0;
          var animationElementQueue = [];
          function animationCloseHandler(element, totalTime) {
            var node = extractElementNode(element);
            element = angular.element(node);
            //this item will be garbage collected by the closing
            //animation timeout
            animationElementQueue.push(element);
            //but it may not need to cancel out the existing timeout
            //if the timestamp is less than the previous one
            var futureTimestamp = Date.now() + totalTime;
            if (futureTimestamp <= closingTimestamp) {
              return;
            }
            $timeout.cancel(closingTimer);
            closingTimestamp = futureTimestamp;
            closingTimer = $timeout(function () {
              closeAllAnimations(animationElementQueue);
              animationElementQueue = [];
            }, totalTime, false);
          }
          function closeAllAnimations(elements) {
            forEach(elements, function (element) {
              var elementData = element.data(NG_ANIMATE_CSS_DATA_KEY);
              if (elementData) {
                (elementData.closeAnimationFn || noop)();
              }
            });
          }
          function getElementAnimationDetails(element, cacheKey) {
            var data = cacheKey ? lookupCache[cacheKey] : null;
            if (!data) {
              var transitionDuration = 0;
              var transitionDelay = 0;
              var animationDuration = 0;
              var animationDelay = 0;
              var transitionDelayStyle;
              var animationDelayStyle;
              var transitionDurationStyle;
              var transitionPropertyStyle;
              //we want all the styles defined before and after
              forEach(element, function (element) {
                if (element.nodeType == ELEMENT_NODE) {
                  var elementStyles = $window.getComputedStyle(element) || {};
                  transitionDurationStyle = elementStyles[TRANSITION_PROP + DURATION_KEY];
                  transitionDuration = Math.max(parseMaxTime(transitionDurationStyle), transitionDuration);
                  transitionPropertyStyle = elementStyles[TRANSITION_PROP + PROPERTY_KEY];
                  transitionDelayStyle = elementStyles[TRANSITION_PROP + DELAY_KEY];
                  transitionDelay = Math.max(parseMaxTime(transitionDelayStyle), transitionDelay);
                  animationDelayStyle = elementStyles[ANIMATION_PROP + DELAY_KEY];
                  animationDelay = Math.max(parseMaxTime(animationDelayStyle), animationDelay);
                  var aDuration = parseMaxTime(elementStyles[ANIMATION_PROP + DURATION_KEY]);
                  if (aDuration > 0) {
                    aDuration *= parseInt(elementStyles[ANIMATION_PROP + ANIMATION_ITERATION_COUNT_KEY], 10) || 1;
                  }
                  animationDuration = Math.max(aDuration, animationDuration);
                }
              });
              data = {
                total: 0,
                transitionPropertyStyle: transitionPropertyStyle,
                transitionDurationStyle: transitionDurationStyle,
                transitionDelayStyle: transitionDelayStyle,
                transitionDelay: transitionDelay,
                transitionDuration: transitionDuration,
                animationDelayStyle: animationDelayStyle,
                animationDelay: animationDelay,
                animationDuration: animationDuration
              };
              if (cacheKey) {
                lookupCache[cacheKey] = data;
              }
            }
            return data;
          }
          function parseMaxTime(str) {
            var maxValue = 0;
            var values = angular.isString(str) ? str.split(/\s*,\s*/) : [];
            forEach(values, function (value) {
              maxValue = Math.max(parseFloat(value) || 0, maxValue);
            });
            return maxValue;
          }
          function getCacheKey(element) {
            var parentElement = element.parent();
            var parentID = parentElement.data(NG_ANIMATE_PARENT_KEY);
            if (!parentID) {
              parentElement.data(NG_ANIMATE_PARENT_KEY, ++parentCounter);
              parentID = parentCounter;
            }
            return parentID + '-' + extractElementNode(element).getAttribute('class');
          }
          function animateSetup(animationEvent, element, className, calculationDecorator) {
            var cacheKey = getCacheKey(element);
            var eventCacheKey = cacheKey + ' ' + className;
            var itemIndex = lookupCache[eventCacheKey] ? ++lookupCache[eventCacheKey].total : 0;
            var stagger = {};
            if (itemIndex > 0) {
              var staggerClassName = className + '-stagger';
              var staggerCacheKey = cacheKey + ' ' + staggerClassName;
              var applyClasses = !lookupCache[staggerCacheKey];
              applyClasses && element.addClass(staggerClassName);
              stagger = getElementAnimationDetails(element, staggerCacheKey);
              applyClasses && element.removeClass(staggerClassName);
            }
            /* the animation itself may need to add/remove special CSS classes
         * before calculating the anmation styles */
            calculationDecorator = calculationDecorator || function (fn) {
              return fn();
            };
            element.addClass(className);
            var formerData = element.data(NG_ANIMATE_CSS_DATA_KEY) || {};
            var timings = calculationDecorator(function () {
                return getElementAnimationDetails(element, eventCacheKey);
              });
            var transitionDuration = timings.transitionDuration;
            var animationDuration = timings.animationDuration;
            if (transitionDuration === 0 && animationDuration === 0) {
              element.removeClass(className);
              return false;
            }
            element.data(NG_ANIMATE_CSS_DATA_KEY, {
              running: formerData.running || 0,
              itemIndex: itemIndex,
              stagger: stagger,
              timings: timings,
              closeAnimationFn: noop
            });
            //temporarily disable the transition so that the enter styles
            //don't animate twice (this is here to avoid a bug in Chrome/FF).
            var isCurrentlyAnimating = formerData.running > 0 || animationEvent == 'setClass';
            if (transitionDuration > 0) {
              blockTransitions(element, className, isCurrentlyAnimating);
            }
            //staggering keyframe animations work by adjusting the `animation-delay` CSS property
            //on the given element, however, the delay value can only calculated after the reflow
            //since by that time $animate knows how many elements are being animated. Therefore,
            //until the reflow occurs the element needs to be blocked (where the keyframe animation
            //is set to `none 0s`). This blocking mechanism should only be set for when a stagger
            //animation is detected and when the element item index is greater than 0.
            if (animationDuration > 0 && stagger.animationDelay > 0 && stagger.animationDuration === 0) {
              blockKeyframeAnimations(element);
            }
            return true;
          }
          function isStructuralAnimation(className) {
            return className == 'ng-enter' || className == 'ng-move' || className == 'ng-leave';
          }
          function blockTransitions(element, className, isAnimating) {
            if (isStructuralAnimation(className) || !isAnimating) {
              extractElementNode(element).style[TRANSITION_PROP + PROPERTY_KEY] = 'none';
            } else {
              element.addClass(NG_ANIMATE_BLOCK_CLASS_NAME);
            }
          }
          function blockKeyframeAnimations(element) {
            extractElementNode(element).style[ANIMATION_PROP] = 'none 0s';
          }
          function unblockTransitions(element, className) {
            var prop = TRANSITION_PROP + PROPERTY_KEY;
            var node = extractElementNode(element);
            if (node.style[prop] && node.style[prop].length > 0) {
              node.style[prop] = '';
            }
            element.removeClass(NG_ANIMATE_BLOCK_CLASS_NAME);
          }
          function unblockKeyframeAnimations(element) {
            var prop = ANIMATION_PROP;
            var node = extractElementNode(element);
            if (node.style[prop] && node.style[prop].length > 0) {
              node.style[prop] = '';
            }
          }
          function animateRun(animationEvent, element, className, activeAnimationComplete) {
            var node = extractElementNode(element);
            var elementData = element.data(NG_ANIMATE_CSS_DATA_KEY);
            if (node.getAttribute('class').indexOf(className) == -1 || !elementData) {
              activeAnimationComplete();
              return;
            }
            var activeClassName = '';
            forEach(className.split(' '), function (klass, i) {
              activeClassName += (i > 0 ? ' ' : '') + klass + '-active';
            });
            var stagger = elementData.stagger;
            var timings = elementData.timings;
            var itemIndex = elementData.itemIndex;
            var maxDuration = Math.max(timings.transitionDuration, timings.animationDuration);
            var maxDelay = Math.max(timings.transitionDelay, timings.animationDelay);
            var maxDelayTime = maxDelay * ONE_SECOND;
            var startTime = Date.now();
            var css3AnimationEvents = ANIMATIONEND_EVENT + ' ' + TRANSITIONEND_EVENT;
            var style = '', appliedStyles = [];
            if (timings.transitionDuration > 0) {
              var propertyStyle = timings.transitionPropertyStyle;
              if (propertyStyle.indexOf('all') == -1) {
                style += CSS_PREFIX + 'transition-property: ' + propertyStyle + ';';
                style += CSS_PREFIX + 'transition-duration: ' + timings.transitionDurationStyle + ';';
                appliedStyles.push(CSS_PREFIX + 'transition-property');
                appliedStyles.push(CSS_PREFIX + 'transition-duration');
              }
            }
            if (itemIndex > 0) {
              if (stagger.transitionDelay > 0 && stagger.transitionDuration === 0) {
                var delayStyle = timings.transitionDelayStyle;
                style += CSS_PREFIX + 'transition-delay: ' + prepareStaggerDelay(delayStyle, stagger.transitionDelay, itemIndex) + '; ';
                appliedStyles.push(CSS_PREFIX + 'transition-delay');
              }
              if (stagger.animationDelay > 0 && stagger.animationDuration === 0) {
                style += CSS_PREFIX + 'animation-delay: ' + prepareStaggerDelay(timings.animationDelayStyle, stagger.animationDelay, itemIndex) + '; ';
                appliedStyles.push(CSS_PREFIX + 'animation-delay');
              }
            }
            if (appliedStyles.length > 0) {
              //the element being animated may sometimes contain comment nodes in
              //the jqLite object, so we're safe to use a single variable to house
              //the styles since there is always only one element being animated
              var oldStyle = node.getAttribute('style') || '';
              node.setAttribute('style', oldStyle + '; ' + style);
            }
            element.on(css3AnimationEvents, onAnimationProgress);
            element.addClass(activeClassName);
            elementData.closeAnimationFn = function () {
              onEnd();
              activeAnimationComplete();
            };
            var staggerTime = itemIndex * (Math.max(stagger.animationDelay, stagger.transitionDelay) || 0);
            var animationTime = (maxDelay + maxDuration) * CLOSING_TIME_BUFFER;
            var totalTime = (staggerTime + animationTime) * ONE_SECOND;
            elementData.running++;
            animationCloseHandler(element, totalTime);
            return onEnd;
            // This will automatically be called by $animate so
            // there is no need to attach this internally to the
            // timeout done method.
            function onEnd(cancelled) {
              element.off(css3AnimationEvents, onAnimationProgress);
              element.removeClass(activeClassName);
              animateClose(element, className);
              var node = extractElementNode(element);
              for (var i in appliedStyles) {
                node.style.removeProperty(appliedStyles[i]);
              }
            }
            function onAnimationProgress(event) {
              event.stopPropagation();
              var ev = event.originalEvent || event;
              var timeStamp = ev.$manualTimeStamp || ev.timeStamp || Date.now();
              /* Firefox (or possibly just Gecko) likes to not round values up
           * when a ms measurement is used for the animation */
              var elapsedTime = parseFloat(ev.elapsedTime.toFixed(ELAPSED_TIME_MAX_DECIMAL_PLACES));
              /* $manualTimeStamp is a mocked timeStamp value which is set
           * within browserTrigger(). This is only here so that tests can
           * mock animations properly. Real events fallback to event.timeStamp,
           * or, if they don't, then a timeStamp is automatically created for them.
           * We're checking to see if the timeStamp surpasses the expected delay,
           * but we're using elapsedTime instead of the timeStamp on the 2nd
           * pre-condition since animations sometimes close off early */
              if (Math.max(timeStamp - startTime, 0) >= maxDelayTime && elapsedTime >= maxDuration) {
                activeAnimationComplete();
              }
            }
          }
          function prepareStaggerDelay(delayStyle, staggerDelay, index) {
            var style = '';
            forEach(delayStyle.split(','), function (val, i) {
              style += (i > 0 ? ',' : '') + (index * staggerDelay + parseInt(val, 10)) + 's';
            });
            return style;
          }
          function animateBefore(animationEvent, element, className, calculationDecorator) {
            if (animateSetup(animationEvent, element, className, calculationDecorator)) {
              return function (cancelled) {
                cancelled && animateClose(element, className);
              };
            }
          }
          function animateAfter(animationEvent, element, className, afterAnimationComplete) {
            if (element.data(NG_ANIMATE_CSS_DATA_KEY)) {
              return animateRun(animationEvent, element, className, afterAnimationComplete);
            } else {
              animateClose(element, className);
              afterAnimationComplete();
            }
          }
          function animate(animationEvent, element, className, animationComplete) {
            //If the animateSetup function doesn't bother returning a
            //cancellation function then it means that there is no animation
            //to perform at all
            var preReflowCancellation = animateBefore(animationEvent, element, className);
            if (!preReflowCancellation) {
              clearCacheAfterReflow();
              animationComplete();
              return;
            }
            //There are two cancellation functions: one is before the first
            //reflow animation and the second is during the active state
            //animation. The first function will take care of removing the
            //data from the element which will not make the 2nd animation
            //happen in the first place
            var cancel = preReflowCancellation;
            afterReflow(element, function () {
              unblockTransitions(element, className);
              unblockKeyframeAnimations(element);
              //once the reflow is complete then we point cancel to
              //the new cancellation function which will remove all of the
              //animation properties from the active animation
              cancel = animateAfter(animationEvent, element, className, animationComplete);
            });
            return function (cancelled) {
              (cancel || noop)(cancelled);
            };
          }
          function animateClose(element, className) {
            element.removeClass(className);
            var data = element.data(NG_ANIMATE_CSS_DATA_KEY);
            if (data) {
              if (data.running) {
                data.running--;
              }
              if (!data.running || data.running === 0) {
                element.removeData(NG_ANIMATE_CSS_DATA_KEY);
              }
            }
          }
          return {
            enter: function (element, animationCompleted) {
              return animate('enter', element, 'ng-enter', animationCompleted);
            },
            leave: function (element, animationCompleted) {
              return animate('leave', element, 'ng-leave', animationCompleted);
            },
            move: function (element, animationCompleted) {
              return animate('move', element, 'ng-move', animationCompleted);
            },
            beforeSetClass: function (element, add, remove, animationCompleted) {
              var className = suffixClasses(remove, '-remove') + ' ' + suffixClasses(add, '-add');
              var cancellationMethod = animateBefore('setClass', element, className, function (fn) {
                  /* when classes are removed from an element then the transition style
             * that is applied is the transition defined on the element without the
             * CSS class being there. This is how CSS3 functions outside of ngAnimate.
             * http://plnkr.co/edit/j8OzgTNxHTb4n3zLyjGW?p=preview */
                  var klass = element.attr('class');
                  element.removeClass(remove);
                  element.addClass(add);
                  var timings = fn();
                  element.attr('class', klass);
                  return timings;
                });
              if (cancellationMethod) {
                afterReflow(element, function () {
                  unblockTransitions(element, className);
                  unblockKeyframeAnimations(element);
                  animationCompleted();
                });
                return cancellationMethod;
              }
              clearCacheAfterReflow();
              animationCompleted();
            },
            beforeAddClass: function (element, className, animationCompleted) {
              var cancellationMethod = animateBefore('addClass', element, suffixClasses(className, '-add'), function (fn) {
                  /* when a CSS class is added to an element then the transition style that
             * is applied is the transition defined on the element when the CSS class
             * is added at the time of the animation. This is how CSS3 functions
             * outside of ngAnimate. */
                  element.addClass(className);
                  var timings = fn();
                  element.removeClass(className);
                  return timings;
                });
              if (cancellationMethod) {
                afterReflow(element, function () {
                  unblockTransitions(element, className);
                  unblockKeyframeAnimations(element);
                  animationCompleted();
                });
                return cancellationMethod;
              }
              clearCacheAfterReflow();
              animationCompleted();
            },
            setClass: function (element, add, remove, animationCompleted) {
              remove = suffixClasses(remove, '-remove');
              add = suffixClasses(add, '-add');
              var className = remove + ' ' + add;
              return animateAfter('setClass', element, className, animationCompleted);
            },
            addClass: function (element, className, animationCompleted) {
              return animateAfter('addClass', element, suffixClasses(className, '-add'), animationCompleted);
            },
            beforeRemoveClass: function (element, className, animationCompleted) {
              var cancellationMethod = animateBefore('removeClass', element, suffixClasses(className, '-remove'), function (fn) {
                  /* when classes are removed from an element then the transition style
             * that is applied is the transition defined on the element without the
             * CSS class being there. This is how CSS3 functions outside of ngAnimate.
             * http://plnkr.co/edit/j8OzgTNxHTb4n3zLyjGW?p=preview */
                  var klass = element.attr('class');
                  element.removeClass(className);
                  var timings = fn();
                  element.attr('class', klass);
                  return timings;
                });
              if (cancellationMethod) {
                afterReflow(element, function () {
                  unblockTransitions(element, className);
                  unblockKeyframeAnimations(element);
                  animationCompleted();
                });
                return cancellationMethod;
              }
              animationCompleted();
            },
            removeClass: function (element, className, animationCompleted) {
              return animateAfter('removeClass', element, suffixClasses(className, '-remove'), animationCompleted);
            }
          };
          function suffixClasses(classes, suffix) {
            var className = '';
            classes = angular.isArray(classes) ? classes : classes.split(/\s+/);
            forEach(classes, function (klass, i) {
              if (klass && klass.length > 0) {
                className += (i > 0 ? ' ' : '') + klass + suffix;
              }
            });
            return className;
          }
        }
      ]);
    }
  ]);
}(window, window.angular));
/**
 * @license AngularJS v1.2.28
 * (c) 2010-2014 Google, Inc. http://angularjs.org
 * License: MIT
 */
(function (window, angular, undefined) {
  'use strict';
  var $resourceMinErr = angular.$$minErr('$resource');
  // Helper functions and regex to lookup a dotted path on an object
  // stopping at undefined/null.  The path must be composed of ASCII
  // identifiers (just like $parse)
  var MEMBER_NAME_REGEX = /^(\.[a-zA-Z_$][0-9a-zA-Z_$]*)+$/;
  function isValidDottedPath(path) {
    return path != null && path !== '' && path !== 'hasOwnProperty' && MEMBER_NAME_REGEX.test('.' + path);
  }
  function lookupDottedPath(obj, path) {
    if (!isValidDottedPath(path)) {
      throw $resourceMinErr('badmember', 'Dotted member path "@{0}" is invalid.', path);
    }
    var keys = path.split('.');
    for (var i = 0, ii = keys.length; i < ii && obj !== undefined; i++) {
      var key = keys[i];
      obj = obj !== null ? obj[key] : undefined;
    }
    return obj;
  }
  /**
 * Create a shallow copy of an object and clear other fields from the destination
 */
  function shallowClearAndCopy(src, dst) {
    dst = dst || {};
    angular.forEach(dst, function (value, key) {
      delete dst[key];
    });
    for (var key in src) {
      if (src.hasOwnProperty(key) && !(key.charAt(0) === '$' && key.charAt(1) === '$')) {
        dst[key] = src[key];
      }
    }
    return dst;
  }
  /**
 * @ngdoc module
 * @name ngResource
 * @description
 *
 * # ngResource
 *
 * The `ngResource` module provides interaction support with RESTful services
 * via the $resource service.
 *
 *
 * <div doc-module-components="ngResource"></div>
 *
 * See {@link ngResource.$resource `$resource`} for usage.
 */
  /**
 * @ngdoc service
 * @name $resource
 * @requires $http
 *
 * @description
 * A factory which creates a resource object that lets you interact with
 * [RESTful](http://en.wikipedia.org/wiki/Representational_State_Transfer) server-side data sources.
 *
 * The returned resource object has action methods which provide high-level behaviors without
 * the need to interact with the low level {@link ng.$http $http} service.
 *
 * Requires the {@link ngResource `ngResource`} module to be installed.
 *
 * @param {string} url A parametrized URL template with parameters prefixed by `:` as in
 *   `/user/:username`. If you are using a URL with a port number (e.g.
 *   `http://example.com:8080/api`), it will be respected.
 *
 *   If you are using a url with a suffix, just add the suffix, like this:
 *   `$resource('http://example.com/resource.json')` or `$resource('http://example.com/:id.json')`
 *   or even `$resource('http://example.com/resource/:resource_id.:format')`
 *   If the parameter before the suffix is empty, :resource_id in this case, then the `/.` will be
 *   collapsed down to a single `.`.  If you need this sequence to appear and not collapse then you
 *   can escape it with `/\.`.
 *
 * @param {Object=} paramDefaults Default values for `url` parameters. These can be overridden in
 *   `actions` methods. If any of the parameter value is a function, it will be executed every time
 *   when a param value needs to be obtained for a request (unless the param was overridden).
 *
 *   Each key value in the parameter object is first bound to url template if present and then any
 *   excess keys are appended to the url search query after the `?`.
 *
 *   Given a template `/path/:verb` and parameter `{verb:'greet', salutation:'Hello'}` results in
 *   URL `/path/greet?salutation=Hello`.
 *
 *   If the parameter value is prefixed with `@` then the value for that parameter will be extracted
 *   from the corresponding property on the `data` object (provided when calling an action method).  For
 *   example, if the `defaultParam` object is `{someParam: '@someProp'}` then the value of `someParam`
 *   will be `data.someProp`.
 *
 * @param {Object.<Object>=} actions Hash with declaration of custom action that should extend
 *   the default set of resource actions. The declaration should be created in the format of {@link
 *   ng.$http#usage_parameters $http.config}:
 *
 *       {action1: {method:?, params:?, isArray:?, headers:?, ...},
 *        action2: {method:?, params:?, isArray:?, headers:?, ...},
 *        ...}
 *
 *   Where:
 *
 *   - **`action`** – {string} – The name of action. This name becomes the name of the method on
 *     your resource object.
 *   - **`method`** – {string} – Case insensitive HTTP method (e.g. `GET`, `POST`, `PUT`,
 *     `DELETE`, `JSONP`, etc).
 *   - **`params`** – {Object=} – Optional set of pre-bound parameters for this action. If any of
 *     the parameter value is a function, it will be executed every time when a param value needs to
 *     be obtained for a request (unless the param was overridden).
 *   - **`url`** – {string} – action specific `url` override. The url templating is supported just
 *     like for the resource-level urls.
 *   - **`isArray`** – {boolean=} – If true then the returned object for this action is an array,
 *     see `returns` section.
 *   - **`transformRequest`** –
 *     `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –
 *     transform function or an array of such functions. The transform function takes the http
 *     request body and headers and returns its transformed (typically serialized) version.
 *     By default, transformRequest will contain one function that checks if the request data is
 *     an object and serializes to using `angular.toJson`. To prevent this behavior, set
 *     `transformRequest` to an empty array: `transformRequest: []`
 *   - **`transformResponse`** –
 *     `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –
 *     transform function or an array of such functions. The transform function takes the http
 *     response body and headers and returns its transformed (typically deserialized) version.
 *     By default, transformResponse will contain one function that checks if the response looks like
 *     a JSON string and deserializes it using `angular.fromJson`. To prevent this behavior, set
 *     `transformResponse` to an empty array: `transformResponse: []`
 *   - **`cache`** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the
 *     GET request, otherwise if a cache instance built with
 *     {@link ng.$cacheFactory $cacheFactory}, this cache will be used for
 *     caching.
 *   - **`timeout`** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise} that
 *     should abort the request when resolved.
 *   - **`withCredentials`** - `{boolean}` - whether to set the `withCredentials` flag on the
 *     XHR object. See
 *     [requests with credentials](https://developer.mozilla.org/en/http_access_control#section_5)
 *     for more information.
 *   - **`responseType`** - `{string}` - see
 *     [requestType](https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType).
 *   - **`interceptor`** - `{Object=}` - The interceptor object has two optional methods -
 *     `response` and `responseError`. Both `response` and `responseError` interceptors get called
 *     with `http response` object. See {@link ng.$http $http interceptors}.
 *
 * @returns {Object} A resource "class" object with methods for the default set of resource actions
 *   optionally extended with custom `actions`. The default set contains these actions:
 *   ```js
 *   { 'get':    {method:'GET'},
 *     'save':   {method:'POST'},
 *     'query':  {method:'GET', isArray:true},
 *     'remove': {method:'DELETE'},
 *     'delete': {method:'DELETE'} };
 *   ```
 *
 *   Calling these methods invoke an {@link ng.$http} with the specified http method,
 *   destination and parameters. When the data is returned from the server then the object is an
 *   instance of the resource class. The actions `save`, `remove` and `delete` are available on it
 *   as  methods with the `$` prefix. This allows you to easily perform CRUD operations (create,
 *   read, update, delete) on server-side data like this:
 *   ```js
 *   var User = $resource('/user/:userId', {userId:'@id'});
 *   var user = User.get({userId:123}, function() {
 *     user.abc = true;
 *     user.$save();
 *   });
 *   ```
 *
 *   It is important to realize that invoking a $resource object method immediately returns an
 *   empty reference (object or array depending on `isArray`). Once the data is returned from the
 *   server the existing reference is populated with the actual data. This is a useful trick since
 *   usually the resource is assigned to a model which is then rendered by the view. Having an empty
 *   object results in no rendering, once the data arrives from the server then the object is
 *   populated with the data and the view automatically re-renders itself showing the new data. This
 *   means that in most cases one never has to write a callback function for the action methods.
 *
 *   The action methods on the class object or instance object can be invoked with the following
 *   parameters:
 *
 *   - HTTP GET "class" actions: `Resource.action([parameters], [success], [error])`
 *   - non-GET "class" actions: `Resource.action([parameters], postData, [success], [error])`
 *   - non-GET instance actions:  `instance.$action([parameters], [success], [error])`
 *
 *   Success callback is called with (value, responseHeaders) arguments. Error callback is called
 *   with (httpResponse) argument.
 *
 *   Class actions return empty instance (with additional properties below).
 *   Instance actions return promise of the action.
 *
 *   The Resource instances and collection have these additional properties:
 *
 *   - `$promise`: the {@link ng.$q promise} of the original server interaction that created this
 *     instance or collection.
 *
 *     On success, the promise is resolved with the same resource instance or collection object,
 *     updated with data from server. This makes it easy to use in
 *     {@link ngRoute.$routeProvider resolve section of $routeProvider.when()} to defer view
 *     rendering until the resource(s) are loaded.
 *
 *     On failure, the promise is resolved with the {@link ng.$http http response} object, without
 *     the `resource` property.
 *
 *     If an interceptor object was provided, the promise will instead be resolved with the value
 *     returned by the interceptor.
 *
 *   - `$resolved`: `true` after first server interaction is completed (either with success or
 *      rejection), `false` before that. Knowing if the Resource has been resolved is useful in
 *      data-binding.
 *
 * @example
 *
 * # Credit card resource
 *
 * ```js
     // Define CreditCard class
     var CreditCard = $resource('/user/:userId/card/:cardId',
      {userId:123, cardId:'@id'}, {
       charge: {method:'POST', params:{charge:true}}
      });

     // We can retrieve a collection from the server
     var cards = CreditCard.query(function() {
       // GET: /user/123/card
       // server returns: [ {id:456, number:'1234', name:'Smith'} ];

       var card = cards[0];
       // each item is an instance of CreditCard
       expect(card instanceof CreditCard).toEqual(true);
       card.name = "J. Smith";
       // non GET methods are mapped onto the instances
       card.$save();
       // POST: /user/123/card/456 {id:456, number:'1234', name:'J. Smith'}
       // server returns: {id:456, number:'1234', name: 'J. Smith'};

       // our custom method is mapped as well.
       card.$charge({amount:9.99});
       // POST: /user/123/card/456?amount=9.99&charge=true {id:456, number:'1234', name:'J. Smith'}
     });

     // we can create an instance as well
     var newCard = new CreditCard({number:'0123'});
     newCard.name = "Mike Smith";
     newCard.$save();
     // POST: /user/123/card {number:'0123', name:'Mike Smith'}
     // server returns: {id:789, number:'0123', name: 'Mike Smith'};
     expect(newCard.id).toEqual(789);
 * ```
 *
 * The object returned from this function execution is a resource "class" which has "static" method
 * for each action in the definition.
 *
 * Calling these methods invoke `$http` on the `url` template with the given `method`, `params` and
 * `headers`.
 * When the data is returned from the server then the object is an instance of the resource type and
 * all of the non-GET methods are available with `$` prefix. This allows you to easily support CRUD
 * operations (create, read, update, delete) on server-side data.

   ```js
     var User = $resource('/user/:userId', {userId:'@id'});
     User.get({userId:123}, function(user) {
       user.abc = true;
       user.$save();
     });
   ```
 *
 * It's worth noting that the success callback for `get`, `query` and other methods gets passed
 * in the response that came from the server as well as $http header getter function, so one
 * could rewrite the above example and get access to http headers as:
 *
   ```js
     var User = $resource('/user/:userId', {userId:'@id'});
     User.get({userId:123}, function(u, getResponseHeaders){
       u.abc = true;
       u.$save(function(u, putResponseHeaders) {
         //u => saved user object
         //putResponseHeaders => $http header getter
       });
     });
   ```
 *
 * You can also access the raw `$http` promise via the `$promise` property on the object returned
 *
   ```
     var User = $resource('/user/:userId', {userId:'@id'});
     User.get({userId:123})
         .$promise.then(function(user) {
           $scope.user = user;
         });
   ```

 * # Creating a custom 'PUT' request
 * In this example we create a custom method on our resource to make a PUT request
 * ```js
 *    var app = angular.module('app', ['ngResource', 'ngRoute']);
 *
 *    // Some APIs expect a PUT request in the format URL/object/ID
 *    // Here we are creating an 'update' method
 *    app.factory('Notes', ['$resource', function($resource) {
 *    return $resource('/notes/:id', null,
 *        {
 *            'update': { method:'PUT' }
 *        });
 *    }]);
 *
 *    // In our controller we get the ID from the URL using ngRoute and $routeParams
 *    // We pass in $routeParams and our Notes factory along with $scope
 *    app.controller('NotesCtrl', ['$scope', '$routeParams', 'Notes',
                                      function($scope, $routeParams, Notes) {
 *    // First get a note object from the factory
 *    var note = Notes.get({ id:$routeParams.id });
 *    $id = note.id;
 *
 *    // Now call update passing in the ID first then the object you are updating
 *    Notes.update({ id:$id }, note);
 *
 *    // This will PUT /notes/ID with the note object in the request payload
 *    }]);
 * ```
 */
  angular.module('ngResource', ['ng']).factory('$resource', [
    '$http',
    '$q',
    function ($http, $q) {
      var DEFAULT_ACTIONS = {
          'get': { method: 'GET' },
          'save': { method: 'POST' },
          'query': {
            method: 'GET',
            isArray: true
          },
          'remove': { method: 'DELETE' },
          'delete': { method: 'DELETE' }
        };
      var noop = angular.noop, forEach = angular.forEach, extend = angular.extend, copy = angular.copy, isFunction = angular.isFunction;
      /**
     * We need our custom method because encodeURIComponent is too aggressive and doesn't follow
     * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path
     * segments:
     *    segment       = *pchar
     *    pchar         = unreserved / pct-encoded / sub-delims / ":" / "@"
     *    pct-encoded   = "%" HEXDIG HEXDIG
     *    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
     *    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
     *                     / "*" / "+" / "," / ";" / "="
     */
      function encodeUriSegment(val) {
        return encodeUriQuery(val, true).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+');
      }
      /**
     * This method is intended for encoding *key* or *value* parts of query component. We need a
     * custom method because encodeURIComponent is too aggressive and encodes stuff that doesn't
     * have to be encoded per http://tools.ietf.org/html/rfc3986:
     *    query       = *( pchar / "/" / "?" )
     *    pchar         = unreserved / pct-encoded / sub-delims / ":" / "@"
     *    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
     *    pct-encoded   = "%" HEXDIG HEXDIG
     *    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
     *                     / "*" / "+" / "," / ";" / "="
     */
      function encodeUriQuery(val, pctEncodeSpaces) {
        return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, pctEncodeSpaces ? '%20' : '+');
      }
      function Route(template, defaults) {
        this.template = template;
        this.defaults = defaults || {};
        this.urlParams = {};
      }
      Route.prototype = {
        setUrlParams: function (config, params, actionUrl) {
          var self = this, url = actionUrl || self.template, val, encodedVal;
          var urlParams = self.urlParams = {};
          forEach(url.split(/\W/), function (param) {
            if (param === 'hasOwnProperty') {
              throw $resourceMinErr('badname', 'hasOwnProperty is not a valid parameter name.');
            }
            if (!new RegExp('^\\d+$').test(param) && param && new RegExp('(^|[^\\\\]):' + param + '(\\W|$)').test(url)) {
              urlParams[param] = true;
            }
          });
          url = url.replace(/\\:/g, ':');
          params = params || {};
          forEach(self.urlParams, function (_, urlParam) {
            val = params.hasOwnProperty(urlParam) ? params[urlParam] : self.defaults[urlParam];
            if (angular.isDefined(val) && val !== null) {
              encodedVal = encodeUriSegment(val);
              url = url.replace(new RegExp(':' + urlParam + '(\\W|$)', 'g'), function (match, p1) {
                return encodedVal + p1;
              });
            } else {
              url = url.replace(new RegExp('(/?):' + urlParam + '(\\W|$)', 'g'), function (match, leadingSlashes, tail) {
                if (tail.charAt(0) == '/') {
                  return tail;
                } else {
                  return leadingSlashes + tail;
                }
              });
            }
          });
          // strip trailing slashes and set the url
          url = url.replace(/\/+$/, '') || '/';
          // then replace collapse `/.` if found in the last URL path segment before the query
          // E.g. `http://url.com/id./format?q=x` becomes `http://url.com/id.format?q=x`
          url = url.replace(/\/\.(?=\w+($|\?))/, '.');
          // replace escaped `/\.` with `/.`
          config.url = url.replace(/\/\\\./, '/.');
          // set params - delegate param encoding to $http
          forEach(params, function (value, key) {
            if (!self.urlParams[key]) {
              config.params = config.params || {};
              config.params[key] = value;
            }
          });
        }
      };
      function resourceFactory(url, paramDefaults, actions) {
        var route = new Route(url);
        actions = extend({}, DEFAULT_ACTIONS, actions);
        function extractParams(data, actionParams) {
          var ids = {};
          actionParams = extend({}, paramDefaults, actionParams);
          forEach(actionParams, function (value, key) {
            if (isFunction(value)) {
              value = value();
            }
            ids[key] = value && value.charAt && value.charAt(0) == '@' ? lookupDottedPath(data, value.substr(1)) : value;
          });
          return ids;
        }
        function defaultResponseInterceptor(response) {
          return response.resource;
        }
        function Resource(value) {
          shallowClearAndCopy(value || {}, this);
        }
        forEach(actions, function (action, name) {
          var hasBody = /^(POST|PUT|PATCH)$/i.test(action.method);
          Resource[name] = function (a1, a2, a3, a4) {
            var params = {}, data, success, error;
            /* jshint -W086 */
            /* (purposefully fall through case statements) */
            switch (arguments.length) {
            case 4:
              error = a4;
              success = a3;
            //fallthrough
            case 3:
            case 2:
              if (isFunction(a2)) {
                if (isFunction(a1)) {
                  success = a1;
                  error = a2;
                  break;
                }
                success = a2;
                error = a3;  //fallthrough
              } else {
                params = a1;
                data = a2;
                success = a3;
                break;
              }
            case 1:
              if (isFunction(a1))
                success = a1;
              else if (hasBody)
                data = a1;
              else
                params = a1;
              break;
            case 0:
              break;
            default:
              throw $resourceMinErr('badargs', 'Expected up to 4 arguments [params, data, success, error], got {0} arguments', arguments.length);
            }
            /* jshint +W086 */
            /* (purposefully fall through case statements) */
            var isInstanceCall = this instanceof Resource;
            var value = isInstanceCall ? data : action.isArray ? [] : new Resource(data);
            var httpConfig = {};
            var responseInterceptor = action.interceptor && action.interceptor.response || defaultResponseInterceptor;
            var responseErrorInterceptor = action.interceptor && action.interceptor.responseError || undefined;
            forEach(action, function (value, key) {
              if (key != 'params' && key != 'isArray' && key != 'interceptor') {
                httpConfig[key] = copy(value);
              }
            });
            if (hasBody)
              httpConfig.data = data;
            route.setUrlParams(httpConfig, extend({}, extractParams(data, action.params || {}), params), action.url);
            var promise = $http(httpConfig).then(function (response) {
                var data = response.data, promise = value.$promise;
                if (data) {
                  // Need to convert action.isArray to boolean in case it is undefined
                  // jshint -W018
                  if (angular.isArray(data) !== !!action.isArray) {
                    throw $resourceMinErr('badcfg', 'Error in resource configuration. Expected ' + 'response to contain an {0} but got an {1}', action.isArray ? 'array' : 'object', angular.isArray(data) ? 'array' : 'object');
                  }
                  // jshint +W018
                  if (action.isArray) {
                    value.length = 0;
                    forEach(data, function (item) {
                      if (typeof item === 'object') {
                        value.push(new Resource(item));
                      } else {
                        // Valid JSON values may be string literals, and these should not be converted
                        // into objects. These items will not have access to the Resource prototype
                        // methods, but unfortunately there
                        value.push(item);
                      }
                    });
                  } else {
                    shallowClearAndCopy(data, value);
                    value.$promise = promise;
                  }
                }
                value.$resolved = true;
                response.resource = value;
                return response;
              }, function (response) {
                value.$resolved = true;
                (error || noop)(response);
                return $q.reject(response);
              });
            promise = promise.then(function (response) {
              var value = responseInterceptor(response);
              (success || noop)(value, response.headers);
              return value;
            }, responseErrorInterceptor);
            if (!isInstanceCall) {
              // we are creating instance / collection
              // - set the initial promise
              // - return the instance / collection
              value.$promise = promise;
              value.$resolved = false;
              return value;
            }
            // instance call
            return promise;
          };
          Resource.prototype['$' + name] = function (params, success, error) {
            if (isFunction(params)) {
              error = success;
              success = params;
              params = {};
            }
            var result = Resource[name].call(this, params, this, success, error);
            return result.$promise || result;
          };
        });
        Resource.bind = function (additionalParamDefaults) {
          return resourceFactory(url, extend({}, paramDefaults, additionalParamDefaults), actions);
        };
        return Resource;
      }
      return resourceFactory;
    }
  ]);
}(window, window.angular));
/*!
 * Bootstrap v3.1.1 (http://getbootstrap.com)
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
if (typeof jQuery === 'undefined') {
  throw new Error('Bootstrap\'s JavaScript requires jQuery');
}
/* ========================================================================
 * Bootstrap: transition.js v3.1.1
 * http://getbootstrap.com/javascript/#transitions
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict';
  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
  // ============================================================
  function transitionEnd() {
    var el = document.createElement('bootstrap');
    var transEndEventNames = {
        'WebkitTransition': 'webkitTransitionEnd',
        'MozTransition': 'transitionend',
        'OTransition': 'oTransitionEnd otransitionend',
        'transition': 'transitionend'
      };
    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] };
      }
    }
    return false;
  }
  // http://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false, $el = this;
    $(this).one($.support.transition.end, function () {
      called = true;
    });
    var callback = function () {
      if (!called)
        $($el).trigger($.support.transition.end);
    };
    setTimeout(callback, duration);
    return this;
  };
  $(function () {
    $.support.transition = transitionEnd();
  });
}(jQuery);
/* ========================================================================
 * Bootstrap: alert.js v3.1.1
 * http://getbootstrap.com/javascript/#alerts
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict';
  // ALERT CLASS DEFINITION
  // ======================
  var dismiss = '[data-dismiss="alert"]';
  var Alert = function (el) {
    $(el).on('click', dismiss, this.close);
  };
  Alert.prototype.close = function (e) {
    var $this = $(this);
    var selector = $this.attr('data-target');
    if (!selector) {
      selector = $this.attr('href');
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '');
    }
    var $parent = $(selector);
    if (e)
      e.preventDefault();
    if (!$parent.length) {
      $parent = $this.hasClass('alert') ? $this : $this.parent();
    }
    $parent.trigger(e = $.Event('close.bs.alert'));
    if (e.isDefaultPrevented())
      return;
    $parent.removeClass('in');
    function removeElement() {
      $parent.trigger('closed.bs.alert').remove();
    }
    $.support.transition && $parent.hasClass('fade') ? $parent.one($.support.transition.end, removeElement).emulateTransitionEnd(150) : removeElement();
  };
  // ALERT PLUGIN DEFINITION
  // =======================
  var old = $.fn.alert;
  $.fn.alert = function (option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.alert');
      if (!data)
        $this.data('bs.alert', data = new Alert(this));
      if (typeof option == 'string')
        data[option].call($this);
    });
  };
  $.fn.alert.Constructor = Alert;
  // ALERT NO CONFLICT
  // =================
  $.fn.alert.noConflict = function () {
    $.fn.alert = old;
    return this;
  };
  // ALERT DATA-API
  // ==============
  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close);
}(jQuery);
/* ========================================================================
 * Bootstrap: button.js v3.1.1
 * http://getbootstrap.com/javascript/#buttons
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict';
  // BUTTON PUBLIC CLASS DEFINITION
  // ==============================
  var Button = function (element, options) {
    this.$element = $(element);
    this.options = $.extend({}, Button.DEFAULTS, options);
    this.isLoading = false;
  };
  Button.DEFAULTS = { loadingText: 'loading...' };
  Button.prototype.setState = function (state) {
    var d = 'disabled';
    var $el = this.$element;
    var val = $el.is('input') ? 'val' : 'html';
    var data = $el.data();
    state = state + 'Text';
    if (!data.resetText)
      $el.data('resetText', $el[val]());
    $el[val](data[state] || this.options[state]);
    // push to event loop to allow forms to submit
    setTimeout($.proxy(function () {
      if (state == 'loadingText') {
        this.isLoading = true;
        $el.addClass(d).attr(d, d);
      } else if (this.isLoading) {
        this.isLoading = false;
        $el.removeClass(d).removeAttr(d);
      }
    }, this), 0);
  };
  Button.prototype.toggle = function () {
    var changed = true;
    var $parent = this.$element.closest('[data-toggle="buttons"]');
    if ($parent.length) {
      var $input = this.$element.find('input');
      if ($input.prop('type') == 'radio') {
        if ($input.prop('checked') && this.$element.hasClass('active'))
          changed = false;
        else
          $parent.find('.active').removeClass('active');
      }
      if (changed)
        $input.prop('checked', !this.$element.hasClass('active')).trigger('change');
    }
    if (changed)
      this.$element.toggleClass('active');
  };
  // BUTTON PLUGIN DEFINITION
  // ========================
  var old = $.fn.button;
  $.fn.button = function (option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.button');
      var options = typeof option == 'object' && option;
      if (!data)
        $this.data('bs.button', data = new Button(this, options));
      if (option == 'toggle')
        data.toggle();
      else if (option)
        data.setState(option);
    });
  };
  $.fn.button.Constructor = Button;
  // BUTTON NO CONFLICT
  // ==================
  $.fn.button.noConflict = function () {
    $.fn.button = old;
    return this;
  };
  // BUTTON DATA-API
  // ===============
  $(document).on('click.bs.button.data-api', '[data-toggle^=button]', function (e) {
    var $btn = $(e.target);
    if (!$btn.hasClass('btn'))
      $btn = $btn.closest('.btn');
    $btn.button('toggle');
    e.preventDefault();
  });
}(jQuery);
/* ========================================================================
 * Bootstrap: carousel.js v3.1.1
 * http://getbootstrap.com/javascript/#carousel
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict';
  // CAROUSEL CLASS DEFINITION
  // =========================
  var Carousel = function (element, options) {
    this.$element = $(element);
    this.$indicators = this.$element.find('.carousel-indicators');
    this.options = options;
    this.paused = this.sliding = this.interval = this.$active = this.$items = null;
    this.options.pause == 'hover' && this.$element.on('mouseenter', $.proxy(this.pause, this)).on('mouseleave', $.proxy(this.cycle, this));
  };
  Carousel.DEFAULTS = {
    interval: 5000,
    pause: 'hover',
    wrap: true
  };
  Carousel.prototype.cycle = function (e) {
    e || (this.paused = false);
    this.interval && clearInterval(this.interval);
    this.options.interval && !this.paused && (this.interval = setInterval($.proxy(this.next, this), this.options.interval));
    return this;
  };
  Carousel.prototype.getActiveIndex = function () {
    this.$active = this.$element.find('.item.active');
    this.$items = this.$active.parent().children();
    return this.$items.index(this.$active);
  };
  Carousel.prototype.to = function (pos) {
    var that = this;
    var activeIndex = this.getActiveIndex();
    if (pos > this.$items.length - 1 || pos < 0)
      return;
    if (this.sliding)
      return this.$element.one('slid.bs.carousel', function () {
        that.to(pos);
      });
    if (activeIndex == pos)
      return this.pause().cycle();
    return this.slide(pos > activeIndex ? 'next' : 'prev', $(this.$items[pos]));
  };
  Carousel.prototype.pause = function (e) {
    e || (this.paused = true);
    if (this.$element.find('.next, .prev').length && $.support.transition) {
      this.$element.trigger($.support.transition.end);
      this.cycle(true);
    }
    this.interval = clearInterval(this.interval);
    return this;
  };
  Carousel.prototype.next = function () {
    if (this.sliding)
      return;
    return this.slide('next');
  };
  Carousel.prototype.prev = function () {
    if (this.sliding)
      return;
    return this.slide('prev');
  };
  Carousel.prototype.slide = function (type, next) {
    var $active = this.$element.find('.item.active');
    var $next = next || $active[type]();
    var isCycling = this.interval;
    var direction = type == 'next' ? 'left' : 'right';
    var fallback = type == 'next' ? 'first' : 'last';
    var that = this;
    if (!$next.length) {
      if (!this.options.wrap)
        return;
      $next = this.$element.find('.item')[fallback]();
    }
    if ($next.hasClass('active'))
      return this.sliding = false;
    var e = $.Event('slide.bs.carousel', {
        relatedTarget: $next[0],
        direction: direction
      });
    this.$element.trigger(e);
    if (e.isDefaultPrevented())
      return;
    this.sliding = true;
    isCycling && this.pause();
    if (this.$indicators.length) {
      this.$indicators.find('.active').removeClass('active');
      this.$element.one('slid.bs.carousel', function () {
        var $nextIndicator = $(that.$indicators.children()[that.getActiveIndex()]);
        $nextIndicator && $nextIndicator.addClass('active');
      });
    }
    if ($.support.transition && this.$element.hasClass('slide')) {
      $next.addClass(type);
      $next[0].offsetWidth;
      // force reflow
      $active.addClass(direction);
      $next.addClass(direction);
      $active.one($.support.transition.end, function () {
        $next.removeClass([
          type,
          direction
        ].join(' ')).addClass('active');
        $active.removeClass([
          'active',
          direction
        ].join(' '));
        that.sliding = false;
        setTimeout(function () {
          that.$element.trigger('slid.bs.carousel');
        }, 0);
      }).emulateTransitionEnd($active.css('transition-duration').slice(0, -1) * 1000);
    } else {
      $active.removeClass('active');
      $next.addClass('active');
      this.sliding = false;
      this.$element.trigger('slid.bs.carousel');
    }
    isCycling && this.cycle();
    return this;
  };
  // CAROUSEL PLUGIN DEFINITION
  // ==========================
  var old = $.fn.carousel;
  $.fn.carousel = function (option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.carousel');
      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option);
      var action = typeof option == 'string' ? option : options.slide;
      if (!data)
        $this.data('bs.carousel', data = new Carousel(this, options));
      if (typeof option == 'number')
        data.to(option);
      else if (action)
        data[action]();
      else if (options.interval)
        data.pause().cycle();
    });
  };
  $.fn.carousel.Constructor = Carousel;
  // CAROUSEL NO CONFLICT
  // ====================
  $.fn.carousel.noConflict = function () {
    $.fn.carousel = old;
    return this;
  };
  // CAROUSEL DATA-API
  // =================
  $(document).on('click.bs.carousel.data-api', '[data-slide], [data-slide-to]', function (e) {
    var $this = $(this), href;
    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, ''));
    //strip for ie7
    var options = $.extend({}, $target.data(), $this.data());
    var slideIndex = $this.attr('data-slide-to');
    if (slideIndex)
      options.interval = false;
    $target.carousel(options);
    if (slideIndex = $this.attr('data-slide-to')) {
      $target.data('bs.carousel').to(slideIndex);
    }
    e.preventDefault();
  });
  $(window).on('load', function () {
    $('[data-ride="carousel"]').each(function () {
      var $carousel = $(this);
      $carousel.carousel($carousel.data());
    });
  });
}(jQuery);
/* ========================================================================
 * Bootstrap: collapse.js v3.1.1
 * http://getbootstrap.com/javascript/#collapse
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict';
  // COLLAPSE PUBLIC CLASS DEFINITION
  // ================================
  var Collapse = function (element, options) {
    this.$element = $(element);
    this.options = $.extend({}, Collapse.DEFAULTS, options);
    this.transitioning = null;
    if (this.options.parent)
      this.$parent = $(this.options.parent);
    if (this.options.toggle)
      this.toggle();
  };
  Collapse.DEFAULTS = { toggle: true };
  Collapse.prototype.dimension = function () {
    var hasWidth = this.$element.hasClass('width');
    return hasWidth ? 'width' : 'height';
  };
  Collapse.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass('in'))
      return;
    var startEvent = $.Event('show.bs.collapse');
    this.$element.trigger(startEvent);
    if (startEvent.isDefaultPrevented())
      return;
    var actives = this.$parent && this.$parent.find('> .panel > .in');
    if (actives && actives.length) {
      var hasData = actives.data('bs.collapse');
      if (hasData && hasData.transitioning)
        return;
      actives.collapse('hide');
      hasData || actives.data('bs.collapse', null);
    }
    var dimension = this.dimension();
    this.$element.removeClass('collapse').addClass('collapsing')[dimension](0);
    this.transitioning = 1;
    var complete = function () {
      this.$element.removeClass('collapsing').addClass('collapse in')[dimension]('auto');
      this.transitioning = 0;
      this.$element.trigger('shown.bs.collapse');
    };
    if (!$.support.transition)
      return complete.call(this);
    var scrollSize = $.camelCase([
        'scroll',
        dimension
      ].join('-'));
    this.$element.one($.support.transition.end, $.proxy(complete, this)).emulateTransitionEnd(350)[dimension](this.$element[0][scrollSize]);
  };
  Collapse.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass('in'))
      return;
    var startEvent = $.Event('hide.bs.collapse');
    this.$element.trigger(startEvent);
    if (startEvent.isDefaultPrevented())
      return;
    var dimension = this.dimension();
    this.$element[dimension](this.$element[dimension]())[0].offsetHeight;
    this.$element.addClass('collapsing').removeClass('collapse').removeClass('in');
    this.transitioning = 1;
    var complete = function () {
      this.transitioning = 0;
      this.$element.trigger('hidden.bs.collapse').removeClass('collapsing').addClass('collapse');
    };
    if (!$.support.transition)
      return complete.call(this);
    this.$element[dimension](0).one($.support.transition.end, $.proxy(complete, this)).emulateTransitionEnd(350);
  };
  Collapse.prototype.toggle = function () {
    this[this.$element.hasClass('in') ? 'hide' : 'show']();
  };
  // COLLAPSE PLUGIN DEFINITION
  // ==========================
  var old = $.fn.collapse;
  $.fn.collapse = function (option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.collapse');
      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option);
      if (!data && options.toggle && option == 'show')
        option = !option;
      if (!data)
        $this.data('bs.collapse', data = new Collapse(this, options));
      if (typeof option == 'string')
        data[option]();
    });
  };
  $.fn.collapse.Constructor = Collapse;
  // COLLAPSE NO CONFLICT
  // ====================
  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old;
    return this;
  };
  // COLLAPSE DATA-API
  // =================
  $(document).on('click.bs.collapse.data-api', '[data-toggle=collapse]', function (e) {
    var $this = $(this), href;
    var target = $this.attr('data-target') || e.preventDefault() || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '');
    //strip for ie7
    var $target = $(target);
    var data = $target.data('bs.collapse');
    var option = data ? 'toggle' : $this.data();
    var parent = $this.attr('data-parent');
    var $parent = parent && $(parent);
    if (!data || !data.transitioning) {
      if ($parent)
        $parent.find('[data-toggle=collapse][data-parent="' + parent + '"]').not($this).addClass('collapsed');
      $this[$target.hasClass('in') ? 'addClass' : 'removeClass']('collapsed');
    }
    $target.collapse(option);
  });
}(jQuery);
/* ========================================================================
 * Bootstrap: dropdown.js v3.1.1
 * http://getbootstrap.com/javascript/#dropdowns
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict';
  // DROPDOWN CLASS DEFINITION
  // =========================
  var backdrop = '.dropdown-backdrop';
  var toggle = '[data-toggle=dropdown]';
  var Dropdown = function (element) {
    $(element).on('click.bs.dropdown', this.toggle);
  };
  Dropdown.prototype.toggle = function (e) {
    var $this = $(this);
    if ($this.is('.disabled, :disabled'))
      return;
    var $parent = getParent($this);
    var isActive = $parent.hasClass('open');
    clearMenus();
    if (!isActive) {
      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {
        // if mobile we use a backdrop because click events don't delegate
        $('<div class="dropdown-backdrop"/>').insertAfter($(this)).on('click', clearMenus);
      }
      var relatedTarget = { relatedTarget: this };
      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget));
      if (e.isDefaultPrevented())
        return;
      $parent.toggleClass('open').trigger('shown.bs.dropdown', relatedTarget);
      $this.focus();
    }
    return false;
  };
  Dropdown.prototype.keydown = function (e) {
    if (!/(38|40|27)/.test(e.keyCode))
      return;
    var $this = $(this);
    e.preventDefault();
    e.stopPropagation();
    if ($this.is('.disabled, :disabled'))
      return;
    var $parent = getParent($this);
    var isActive = $parent.hasClass('open');
    if (!isActive || isActive && e.keyCode == 27) {
      if (e.which == 27)
        $parent.find(toggle).focus();
      return $this.click();
    }
    var desc = ' li:not(.divider):visible a';
    var $items = $parent.find('[role=menu]' + desc + ', [role=listbox]' + desc);
    if (!$items.length)
      return;
    var index = $items.index($items.filter(':focus'));
    if (e.keyCode == 38 && index > 0)
      index--;
    // up
    if (e.keyCode == 40 && index < $items.length - 1)
      index++;
    // down
    if (!~index)
      index = 0;
    $items.eq(index).focus();
  };
  function clearMenus(e) {
    $(backdrop).remove();
    $(toggle).each(function () {
      var $parent = getParent($(this));
      var relatedTarget = { relatedTarget: this };
      if (!$parent.hasClass('open'))
        return;
      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget));
      if (e.isDefaultPrevented())
        return;
      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget);
    });
  }
  function getParent($this) {
    var selector = $this.attr('data-target');
    if (!selector) {
      selector = $this.attr('href');
      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, '');
    }
    var $parent = selector && $(selector);
    return $parent && $parent.length ? $parent : $this.parent();
  }
  // DROPDOWN PLUGIN DEFINITION
  // ==========================
  var old = $.fn.dropdown;
  $.fn.dropdown = function (option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.dropdown');
      if (!data)
        $this.data('bs.dropdown', data = new Dropdown(this));
      if (typeof option == 'string')
        data[option].call($this);
    });
  };
  $.fn.dropdown.Constructor = Dropdown;
  // DROPDOWN NO CONFLICT
  // ====================
  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old;
    return this;
  };
  // APPLY TO STANDARD DROPDOWN ELEMENTS
  // ===================================
  $(document).on('click.bs.dropdown.data-api', clearMenus).on('click.bs.dropdown.data-api', '.dropdown form', function (e) {
    e.stopPropagation();
  }).on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle).on('keydown.bs.dropdown.data-api', toggle + ', [role=menu], [role=listbox]', Dropdown.prototype.keydown);
}(jQuery);
/* ========================================================================
 * Bootstrap: modal.js v3.1.1
 * http://getbootstrap.com/javascript/#modals
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict';
  // MODAL CLASS DEFINITION
  // ======================
  var Modal = function (element, options) {
    this.options = options;
    this.$element = $(element);
    this.$backdrop = this.isShown = null;
    if (this.options.remote) {
      this.$element.find('.modal-content').load(this.options.remote, $.proxy(function () {
        this.$element.trigger('loaded.bs.modal');
      }, this));
    }
  };
  Modal.DEFAULTS = {
    backdrop: true,
    keyboard: true,
    show: true
  };
  Modal.prototype.toggle = function (_relatedTarget) {
    return this[!this.isShown ? 'show' : 'hide'](_relatedTarget);
  };
  Modal.prototype.show = function (_relatedTarget) {
    var that = this;
    var e = $.Event('show.bs.modal', { relatedTarget: _relatedTarget });
    this.$element.trigger(e);
    if (this.isShown || e.isDefaultPrevented())
      return;
    this.isShown = true;
    this.escape();
    this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this));
    this.backdrop(function () {
      var transition = $.support.transition && that.$element.hasClass('fade');
      if (!that.$element.parent().length) {
        that.$element.appendTo(document.body);
      }
      that.$element.show().scrollTop(0);
      if (transition) {
        that.$element[0].offsetWidth;
      }
      that.$element.addClass('in').attr('aria-hidden', false);
      that.enforceFocus();
      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget });
      transition ? that.$element.find('.modal-dialog').one($.support.transition.end, function () {
        that.$element.focus().trigger(e);
      }).emulateTransitionEnd(300) : that.$element.focus().trigger(e);
    });
  };
  Modal.prototype.hide = function (e) {
    if (e)
      e.preventDefault();
    e = $.Event('hide.bs.modal');
    this.$element.trigger(e);
    if (!this.isShown || e.isDefaultPrevented())
      return;
    this.isShown = false;
    this.escape();
    $(document).off('focusin.bs.modal');
    this.$element.removeClass('in').attr('aria-hidden', true).off('click.dismiss.bs.modal');
    $.support.transition && this.$element.hasClass('fade') ? this.$element.one($.support.transition.end, $.proxy(this.hideModal, this)).emulateTransitionEnd(300) : this.hideModal();
  };
  Modal.prototype.enforceFocus = function () {
    $(document).off('focusin.bs.modal').on('focusin.bs.modal', $.proxy(function (e) {
      if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {
        this.$element.focus();
      }
    }, this));
  };
  Modal.prototype.escape = function () {
    if (this.isShown && this.options.keyboard) {
      this.$element.on('keyup.dismiss.bs.modal', $.proxy(function (e) {
        e.which == 27 && this.hide();
      }, this));
    } else if (!this.isShown) {
      this.$element.off('keyup.dismiss.bs.modal');
    }
  };
  Modal.prototype.hideModal = function () {
    var that = this;
    this.$element.hide();
    this.backdrop(function () {
      that.removeBackdrop();
      that.$element.trigger('hidden.bs.modal');
    });
  };
  Modal.prototype.removeBackdrop = function () {
    this.$backdrop && this.$backdrop.remove();
    this.$backdrop = null;
  };
  Modal.prototype.backdrop = function (callback) {
    var animate = this.$element.hasClass('fade') ? 'fade' : '';
    if (this.isShown && this.options.backdrop) {
      var doAnimate = $.support.transition && animate;
      this.$backdrop = $('<div class="modal-backdrop ' + animate + '" />').appendTo(document.body);
      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {
        if (e.target !== e.currentTarget)
          return;
        this.options.backdrop == 'static' ? this.$element[0].focus.call(this.$element[0]) : this.hide.call(this);
      }, this));
      if (doAnimate)
        this.$backdrop[0].offsetWidth;
      // force reflow
      this.$backdrop.addClass('in');
      if (!callback)
        return;
      doAnimate ? this.$backdrop.one($.support.transition.end, callback).emulateTransitionEnd(150) : callback();
    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass('in');
      $.support.transition && this.$element.hasClass('fade') ? this.$backdrop.one($.support.transition.end, callback).emulateTransitionEnd(150) : callback();
    } else if (callback) {
      callback();
    }
  };
  // MODAL PLUGIN DEFINITION
  // =======================
  var old = $.fn.modal;
  $.fn.modal = function (option, _relatedTarget) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.modal');
      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option);
      if (!data)
        $this.data('bs.modal', data = new Modal(this, options));
      if (typeof option == 'string')
        data[option](_relatedTarget);
      else if (options.show)
        data.show(_relatedTarget);
    });
  };
  $.fn.modal.Constructor = Modal;
  // MODAL NO CONFLICT
  // =================
  $.fn.modal.noConflict = function () {
    $.fn.modal = old;
    return this;
  };
  // MODAL DATA-API
  // ==============
  $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
    var $this = $(this);
    var href = $this.attr('href');
    var $target = $($this.attr('data-target') || href && href.replace(/.*(?=#[^\s]+$)/, ''));
    //strip for ie7
    var option = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data());
    if ($this.is('a'))
      e.preventDefault();
    $target.modal(option, this).one('hide', function () {
      $this.is(':visible') && $this.focus();
    });
  });
  $(document).on('show.bs.modal', '.modal', function () {
    $(document.body).addClass('modal-open');
  }).on('hidden.bs.modal', '.modal', function () {
    $(document.body).removeClass('modal-open');
  });
}(jQuery);
/* ========================================================================
 * Bootstrap: tooltip.js v3.1.1
 * http://getbootstrap.com/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict';
  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================
  var Tooltip = function (element, options) {
    this.type = this.options = this.enabled = this.timeout = this.hoverState = this.$element = null;
    this.init('tooltip', element, options);
  };
  Tooltip.DEFAULTS = {
    animation: true,
    placement: 'top',
    selector: false,
    template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    container: false
  };
  Tooltip.prototype.init = function (type, element, options) {
    this.enabled = true;
    this.type = type;
    this.$element = $(element);
    this.options = this.getOptions(options);
    var triggers = this.options.trigger.split(' ');
    for (var i = triggers.length; i--;) {
      var trigger = triggers[i];
      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this));
      } else if (trigger != 'manual') {
        var eventIn = trigger == 'hover' ? 'mouseenter' : 'focusin';
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout';
        this.$element.on(eventIn + '.' + this.type, this.options.selector, $.proxy(this.enter, this));
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this));
      }
    }
    this.options.selector ? this._options = $.extend({}, this.options, {
      trigger: 'manual',
      selector: ''
    }) : this.fixTitle();
  };
  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS;
  };
  Tooltip.prototype.getOptions = function (options) {
    options = $.extend({}, this.getDefaults(), this.$element.data(), options);
    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay,
        hide: options.delay
      };
    }
    return options;
  };
  Tooltip.prototype.getDelegateOptions = function () {
    var options = {};
    var defaults = this.getDefaults();
    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value)
        options[key] = value;
    });
    return options;
  };
  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ? obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type);
    clearTimeout(self.timeout);
    self.hoverState = 'in';
    if (!self.options.delay || !self.options.delay.show)
      return self.show();
    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in')
        self.show();
    }, self.options.delay.show);
  };
  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ? obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type);
    clearTimeout(self.timeout);
    self.hoverState = 'out';
    if (!self.options.delay || !self.options.delay.hide)
      return self.hide();
    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out')
        self.hide();
    }, self.options.delay.hide);
  };
  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.' + this.type);
    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e);
      if (e.isDefaultPrevented())
        return;
      var that = this;
      var $tip = this.tip();
      this.setContent();
      if (this.options.animation)
        $tip.addClass('fade');
      var placement = typeof this.options.placement == 'function' ? this.options.placement.call(this, $tip[0], this.$element[0]) : this.options.placement;
      var autoToken = /\s?auto?\s?/i;
      var autoPlace = autoToken.test(placement);
      if (autoPlace)
        placement = placement.replace(autoToken, '') || 'top';
      $tip.detach().css({
        top: 0,
        left: 0,
        display: 'block'
      }).addClass(placement);
      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element);
      var pos = this.getPosition();
      var actualWidth = $tip[0].offsetWidth;
      var actualHeight = $tip[0].offsetHeight;
      if (autoPlace) {
        var $parent = this.$element.parent();
        var orgPlacement = placement;
        var docScroll = document.documentElement.scrollTop || document.body.scrollTop;
        var parentWidth = this.options.container == 'body' ? window.innerWidth : $parent.outerWidth();
        var parentHeight = this.options.container == 'body' ? window.innerHeight : $parent.outerHeight();
        var parentLeft = this.options.container == 'body' ? 0 : $parent.offset().left;
        placement = placement == 'bottom' && pos.top + pos.height + actualHeight - docScroll > parentHeight ? 'top' : placement == 'top' && pos.top - docScroll - actualHeight < 0 ? 'bottom' : placement == 'right' && pos.right + actualWidth > parentWidth ? 'left' : placement == 'left' && pos.left - actualWidth < parentLeft ? 'right' : placement;
        $tip.removeClass(orgPlacement).addClass(placement);
      }
      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight);
      this.applyPlacement(calculatedOffset, placement);
      this.hoverState = null;
      var complete = function () {
        that.$element.trigger('shown.bs.' + that.type);
      };
      $.support.transition && this.$tip.hasClass('fade') ? $tip.one($.support.transition.end, complete).emulateTransitionEnd(150) : complete();
    }
  };
  Tooltip.prototype.applyPlacement = function (offset, placement) {
    var replace;
    var $tip = this.tip();
    var width = $tip[0].offsetWidth;
    var height = $tip[0].offsetHeight;
    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css('margin-top'), 10);
    var marginLeft = parseInt($tip.css('margin-left'), 10);
    // we must check for NaN for ie 8/9
    if (isNaN(marginTop))
      marginTop = 0;
    if (isNaN(marginLeft))
      marginLeft = 0;
    offset.top = offset.top + marginTop;
    offset.left = offset.left + marginLeft;
    // $.fn.offset doesn't round pixel values
    // so we use setOffset directly with our own function B-0
    $.offset.setOffset($tip[0], $.extend({
      using: function (props) {
        $tip.css({
          top: Math.round(props.top),
          left: Math.round(props.left)
        });
      }
    }, offset), 0);
    $tip.addClass('in');
    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth = $tip[0].offsetWidth;
    var actualHeight = $tip[0].offsetHeight;
    if (placement == 'top' && actualHeight != height) {
      replace = true;
      offset.top = offset.top + height - actualHeight;
    }
    if (/bottom|top/.test(placement)) {
      var delta = 0;
      if (offset.left < 0) {
        delta = offset.left * -2;
        offset.left = 0;
        $tip.offset(offset);
        actualWidth = $tip[0].offsetWidth;
        actualHeight = $tip[0].offsetHeight;
      }
      this.replaceArrow(delta - width + actualWidth, actualWidth, 'left');
    } else {
      this.replaceArrow(actualHeight - height, actualHeight, 'top');
    }
    if (replace)
      $tip.offset(offset);
  };
  Tooltip.prototype.replaceArrow = function (delta, dimension, position) {
    this.arrow().css(position, delta ? 50 * (1 - delta / dimension) + '%' : '');
  };
  Tooltip.prototype.setContent = function () {
    var $tip = this.tip();
    var title = this.getTitle();
    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title);
    $tip.removeClass('fade in top bottom left right');
  };
  Tooltip.prototype.hide = function () {
    var that = this;
    var $tip = this.tip();
    var e = $.Event('hide.bs.' + this.type);
    function complete() {
      if (that.hoverState != 'in')
        $tip.detach();
      that.$element.trigger('hidden.bs.' + that.type);
    }
    this.$element.trigger(e);
    if (e.isDefaultPrevented())
      return;
    $tip.removeClass('in');
    $.support.transition && this.$tip.hasClass('fade') ? $tip.one($.support.transition.end, complete).emulateTransitionEnd(150) : complete();
    this.hoverState = null;
    return this;
  };
  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element;
    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '');
    }
  };
  Tooltip.prototype.hasContent = function () {
    return this.getTitle();
  };
  Tooltip.prototype.getPosition = function () {
    var el = this.$element[0];
    return $.extend({}, typeof el.getBoundingClientRect == 'function' ? el.getBoundingClientRect() : {
      width: el.offsetWidth,
      height: el.offsetHeight
    }, this.$element.offset());
  };
  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? {
      top: pos.top + pos.height,
      left: pos.left + pos.width / 2 - actualWidth / 2
    } : placement == 'top' ? {
      top: pos.top - actualHeight,
      left: pos.left + pos.width / 2 - actualWidth / 2
    } : placement == 'left' ? {
      top: pos.top + pos.height / 2 - actualHeight / 2,
      left: pos.left - actualWidth
    } : {
      top: pos.top + pos.height / 2 - actualHeight / 2,
      left: pos.left + pos.width
    };
  };
  Tooltip.prototype.getTitle = function () {
    var title;
    var $e = this.$element;
    var o = this.options;
    title = $e.attr('data-original-title') || (typeof o.title == 'function' ? o.title.call($e[0]) : o.title);
    return title;
  };
  Tooltip.prototype.tip = function () {
    return this.$tip = this.$tip || $(this.options.template);
  };
  Tooltip.prototype.arrow = function () {
    return this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow');
  };
  Tooltip.prototype.validate = function () {
    if (!this.$element[0].parentNode) {
      this.hide();
      this.$element = null;
      this.options = null;
    }
  };
  Tooltip.prototype.enable = function () {
    this.enabled = true;
  };
  Tooltip.prototype.disable = function () {
    this.enabled = false;
  };
  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled;
  };
  Tooltip.prototype.toggle = function (e) {
    var self = e ? $(e.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type) : this;
    self.tip().hasClass('in') ? self.leave(self) : self.enter(self);
  };
  Tooltip.prototype.destroy = function () {
    clearTimeout(this.timeout);
    this.hide().$element.off('.' + this.type).removeData('bs.' + this.type);
  };
  // TOOLTIP PLUGIN DEFINITION
  // =========================
  var old = $.fn.tooltip;
  $.fn.tooltip = function (option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.tooltip');
      var options = typeof option == 'object' && option;
      if (!data && option == 'destroy')
        return;
      if (!data)
        $this.data('bs.tooltip', data = new Tooltip(this, options));
      if (typeof option == 'string')
        data[option]();
    });
  };
  $.fn.tooltip.Constructor = Tooltip;
  // TOOLTIP NO CONFLICT
  // ===================
  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old;
    return this;
  };
}(jQuery);
/* ========================================================================
 * Bootstrap: popover.js v3.1.1
 * http://getbootstrap.com/javascript/#popovers
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict';
  // POPOVER PUBLIC CLASS DEFINITION
  // ===============================
  var Popover = function (element, options) {
    this.init('popover', element, options);
  };
  if (!$.fn.tooltip)
    throw new Error('Popover requires tooltip.js');
  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {
    placement: 'right',
    trigger: 'click',
    content: '',
    template: '<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
  });
  // NOTE: POPOVER EXTENDS tooltip.js
  // ================================
  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype);
  Popover.prototype.constructor = Popover;
  Popover.prototype.getDefaults = function () {
    return Popover.DEFAULTS;
  };
  Popover.prototype.setContent = function () {
    var $tip = this.tip();
    var title = this.getTitle();
    var content = this.getContent();
    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title);
    $tip.find('.popover-content')[this.options.html ? typeof content == 'string' ? 'html' : 'append' : 'text'](content);
    $tip.removeClass('fade top bottom left right in');
    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do
    // this manually by checking the contents.
    if (!$tip.find('.popover-title').html())
      $tip.find('.popover-title').hide();
  };
  Popover.prototype.hasContent = function () {
    return this.getTitle() || this.getContent();
  };
  Popover.prototype.getContent = function () {
    var $e = this.$element;
    var o = this.options;
    return $e.attr('data-content') || (typeof o.content == 'function' ? o.content.call($e[0]) : o.content);
  };
  Popover.prototype.arrow = function () {
    return this.$arrow = this.$arrow || this.tip().find('.arrow');
  };
  Popover.prototype.tip = function () {
    if (!this.$tip)
      this.$tip = $(this.options.template);
    return this.$tip;
  };
  // POPOVER PLUGIN DEFINITION
  // =========================
  var old = $.fn.popover;
  $.fn.popover = function (option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.popover');
      var options = typeof option == 'object' && option;
      if (!data && option == 'destroy')
        return;
      if (!data)
        $this.data('bs.popover', data = new Popover(this, options));
      if (typeof option == 'string')
        data[option]();
    });
  };
  $.fn.popover.Constructor = Popover;
  // POPOVER NO CONFLICT
  // ===================
  $.fn.popover.noConflict = function () {
    $.fn.popover = old;
    return this;
  };
}(jQuery);
/* ========================================================================
 * Bootstrap: scrollspy.js v3.1.1
 * http://getbootstrap.com/javascript/#scrollspy
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict';
  // SCROLLSPY CLASS DEFINITION
  // ==========================
  function ScrollSpy(element, options) {
    var href;
    var process = $.proxy(this.process, this);
    this.$element = $(element).is('body') ? $(window) : $(element);
    this.$body = $('body');
    this.$scrollElement = this.$element.on('scroll.bs.scroll-spy.data-api', process);
    this.options = $.extend({}, ScrollSpy.DEFAULTS, options);
    this.selector = (this.options.target || (href = $(element).attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '') || '') + ' .nav li > a';
    this.offsets = $([]);
    this.targets = $([]);
    this.activeTarget = null;
    this.refresh();
    this.process();
  }
  ScrollSpy.DEFAULTS = { offset: 10 };
  ScrollSpy.prototype.refresh = function () {
    var offsetMethod = this.$element[0] == window ? 'offset' : 'position';
    this.offsets = $([]);
    this.targets = $([]);
    var self = this;
    var $targets = this.$body.find(this.selector).map(function () {
        var $el = $(this);
        var href = $el.data('target') || $el.attr('href');
        var $href = /^#./.test(href) && $(href);
        return $href && $href.length && $href.is(':visible') && [[
            $href[offsetMethod]().top + (!$.isWindow(self.$scrollElement.get(0)) && self.$scrollElement.scrollTop()),
            href
          ]] || null;
      }).sort(function (a, b) {
        return a[0] - b[0];
      }).each(function () {
        self.offsets.push(this[0]);
        self.targets.push(this[1]);
      });
  };
  ScrollSpy.prototype.process = function () {
    var scrollTop = this.$scrollElement.scrollTop() + this.options.offset;
    var scrollHeight = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight;
    var maxScroll = scrollHeight - this.$scrollElement.height();
    var offsets = this.offsets;
    var targets = this.targets;
    var activeTarget = this.activeTarget;
    var i;
    if (scrollTop >= maxScroll) {
      return activeTarget != (i = targets.last()[0]) && this.activate(i);
    }
    if (activeTarget && scrollTop <= offsets[0]) {
      return activeTarget != (i = targets[0]) && this.activate(i);
    }
    for (i = offsets.length; i--;) {
      activeTarget != targets[i] && scrollTop >= offsets[i] && (!offsets[i + 1] || scrollTop <= offsets[i + 1]) && this.activate(targets[i]);
    }
  };
  ScrollSpy.prototype.activate = function (target) {
    this.activeTarget = target;
    $(this.selector).parentsUntil(this.options.target, '.active').removeClass('active');
    var selector = this.selector + '[data-target="' + target + '"],' + this.selector + '[href="' + target + '"]';
    var active = $(selector).parents('li').addClass('active');
    if (active.parent('.dropdown-menu').length) {
      active = active.closest('li.dropdown').addClass('active');
    }
    active.trigger('activate.bs.scrollspy');
  };
  // SCROLLSPY PLUGIN DEFINITION
  // ===========================
  var old = $.fn.scrollspy;
  $.fn.scrollspy = function (option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.scrollspy');
      var options = typeof option == 'object' && option;
      if (!data)
        $this.data('bs.scrollspy', data = new ScrollSpy(this, options));
      if (typeof option == 'string')
        data[option]();
    });
  };
  $.fn.scrollspy.Constructor = ScrollSpy;
  // SCROLLSPY NO CONFLICT
  // =====================
  $.fn.scrollspy.noConflict = function () {
    $.fn.scrollspy = old;
    return this;
  };
  // SCROLLSPY DATA-API
  // ==================
  $(window).on('load', function () {
    $('[data-spy="scroll"]').each(function () {
      var $spy = $(this);
      $spy.scrollspy($spy.data());
    });
  });
}(jQuery);
/* ========================================================================
 * Bootstrap: tab.js v3.1.1
 * http://getbootstrap.com/javascript/#tabs
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict';
  // TAB CLASS DEFINITION
  // ====================
  var Tab = function (element) {
    this.element = $(element);
  };
  Tab.prototype.show = function () {
    var $this = this.element;
    var $ul = $this.closest('ul:not(.dropdown-menu)');
    var selector = $this.data('target');
    if (!selector) {
      selector = $this.attr('href');
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '');
    }
    if ($this.parent('li').hasClass('active'))
      return;
    var previous = $ul.find('.active:last a')[0];
    var e = $.Event('show.bs.tab', { relatedTarget: previous });
    $this.trigger(e);
    if (e.isDefaultPrevented())
      return;
    var $target = $(selector);
    this.activate($this.parent('li'), $ul);
    this.activate($target, $target.parent(), function () {
      $this.trigger({
        type: 'shown.bs.tab',
        relatedTarget: previous
      });
    });
  };
  Tab.prototype.activate = function (element, container, callback) {
    var $active = container.find('> .active');
    var transition = callback && $.support.transition && $active.hasClass('fade');
    function next() {
      $active.removeClass('active').find('> .dropdown-menu > .active').removeClass('active');
      element.addClass('active');
      if (transition) {
        element[0].offsetWidth;
        // reflow for transition
        element.addClass('in');
      } else {
        element.removeClass('fade');
      }
      if (element.parent('.dropdown-menu')) {
        element.closest('li.dropdown').addClass('active');
      }
      callback && callback();
    }
    transition ? $active.one($.support.transition.end, next).emulateTransitionEnd(150) : next();
    $active.removeClass('in');
  };
  // TAB PLUGIN DEFINITION
  // =====================
  var old = $.fn.tab;
  $.fn.tab = function (option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.tab');
      if (!data)
        $this.data('bs.tab', data = new Tab(this));
      if (typeof option == 'string')
        data[option]();
    });
  };
  $.fn.tab.Constructor = Tab;
  // TAB NO CONFLICT
  // ===============
  $.fn.tab.noConflict = function () {
    $.fn.tab = old;
    return this;
  };
  // TAB DATA-API
  // ============
  $(document).on('click.bs.tab.data-api', '[data-toggle="tab"], [data-toggle="pill"]', function (e) {
    e.preventDefault();
    $(this).tab('show');
  });
}(jQuery);
/* ========================================================================
 * Bootstrap: affix.js v3.1.1
 * http://getbootstrap.com/javascript/#affix
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict';
  // AFFIX CLASS DEFINITION
  // ======================
  var Affix = function (element, options) {
    this.options = $.extend({}, Affix.DEFAULTS, options);
    this.$window = $(window).on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this)).on('click.bs.affix.data-api', $.proxy(this.checkPositionWithEventLoop, this));
    this.$element = $(element);
    this.affixed = this.unpin = this.pinnedOffset = null;
    this.checkPosition();
  };
  Affix.RESET = 'affix affix-top affix-bottom';
  Affix.DEFAULTS = { offset: 0 };
  Affix.prototype.getPinnedOffset = function () {
    if (this.pinnedOffset)
      return this.pinnedOffset;
    this.$element.removeClass(Affix.RESET).addClass('affix');
    var scrollTop = this.$window.scrollTop();
    var position = this.$element.offset();
    return this.pinnedOffset = position.top - scrollTop;
  };
  Affix.prototype.checkPositionWithEventLoop = function () {
    setTimeout($.proxy(this.checkPosition, this), 1);
  };
  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible'))
      return;
    var scrollHeight = $(document).height();
    var scrollTop = this.$window.scrollTop();
    var position = this.$element.offset();
    var offset = this.options.offset;
    var offsetTop = offset.top;
    var offsetBottom = offset.bottom;
    if (this.affixed == 'top')
      position.top += scrollTop;
    if (typeof offset != 'object')
      offsetBottom = offsetTop = offset;
    if (typeof offsetTop == 'function')
      offsetTop = offset.top(this.$element);
    if (typeof offsetBottom == 'function')
      offsetBottom = offset.bottom(this.$element);
    var affix = this.unpin != null && scrollTop + this.unpin <= position.top ? false : offsetBottom != null && position.top + this.$element.height() >= scrollHeight - offsetBottom ? 'bottom' : offsetTop != null && scrollTop <= offsetTop ? 'top' : false;
    if (this.affixed === affix)
      return;
    if (this.unpin)
      this.$element.css('top', '');
    var affixType = 'affix' + (affix ? '-' + affix : '');
    var e = $.Event(affixType + '.bs.affix');
    this.$element.trigger(e);
    if (e.isDefaultPrevented())
      return;
    this.affixed = affix;
    this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null;
    this.$element.removeClass(Affix.RESET).addClass(affixType).trigger($.Event(affixType.replace('affix', 'affixed')));
    if (affix == 'bottom') {
      this.$element.offset({ top: scrollHeight - offsetBottom - this.$element.height() });
    }
  };
  // AFFIX PLUGIN DEFINITION
  // =======================
  var old = $.fn.affix;
  $.fn.affix = function (option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.affix');
      var options = typeof option == 'object' && option;
      if (!data)
        $this.data('bs.affix', data = new Affix(this, options));
      if (typeof option == 'string')
        data[option]();
    });
  };
  $.fn.affix.Constructor = Affix;
  // AFFIX NO CONFLICT
  // =================
  $.fn.affix.noConflict = function () {
    $.fn.affix = old;
    return this;
  };
  // AFFIX DATA-API
  // ==============
  $(window).on('load', function () {
    $('[data-spy="affix"]').each(function () {
      var $spy = $(this);
      var data = $spy.data();
      data.offset = data.offset || {};
      if (data.offsetBottom)
        data.offset.bottom = data.offsetBottom;
      if (data.offsetTop)
        data.offset.top = data.offsetTop;
      $spy.affix(data);
    });
  });
}(jQuery);
/**
 * angular-ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)
 * @version v0.1.1 - 2014-02-05
 * @link http://angular-ui.github.com
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
'use strict';
angular.module('ui.alias', []).config([
  '$compileProvider',
  'uiAliasConfig',
  function ($compileProvider, uiAliasConfig) {
    uiAliasConfig = uiAliasConfig || {};
    angular.forEach(uiAliasConfig, function (config, alias) {
      if (angular.isString(config)) {
        config = {
          replace: true,
          template: config
        };
      }
      $compileProvider.directive(alias, function () {
        return config;
      });
    });
  }
]);
'use strict';
/**
 * General-purpose Event binding. Bind any event not natively supported by Angular
 * Pass an object with keynames for events to ui-event
 * Allows $event object and $params object to be passed
 *
 * @example <input ui-event="{ focus : 'counter++', blur : 'someCallback()' }">
 * @example <input ui-event="{ myCustomEvent : 'myEventHandler($event, $params)'}">
 *
 * @param ui-event {string|object literal} The event to bind to as a string or a hash of events with their callbacks
 */
angular.module('ui.event', []).directive('uiEvent', [
  '$parse',
  function ($parse) {
    return function ($scope, elm, attrs) {
      var events = $scope.$eval(attrs.uiEvent);
      angular.forEach(events, function (uiEvent, eventName) {
        var fn = $parse(uiEvent);
        elm.bind(eventName, function (evt) {
          var params = Array.prototype.slice.call(arguments);
          //Take out first paramater (event object);
          params = params.splice(1);
          fn($scope, {
            $event: evt,
            $params: params
          });
          if (!$scope.$$phase) {
            $scope.$apply();
          }
        });
      });
    };
  }
]);
'use strict';
/**
 * A replacement utility for internationalization very similar to sprintf.
 *
 * @param replace {mixed} The tokens to replace depends on type
 *  string: all instances of $0 will be replaced
 *  array: each instance of $0, $1, $2 etc. will be placed with each array item in corresponding order
 *  object: all attributes will be iterated through, with :key being replaced with its corresponding value
 * @return string
 *
 * @example: 'Hello :name, how are you :day'.format({ name:'John', day:'Today' })
 * @example: 'Records $0 to $1 out of $2 total'.format(['10', '20', '3000'])
 * @example: '$0 agrees to all mentions $0 makes in the event that $0 hits a tree while $0 is driving drunk'.format('Bob')
 */
angular.module('ui.format', []).filter('format', function () {
  return function (value, replace) {
    var target = value;
    if (angular.isString(target) && replace !== undefined) {
      if (!angular.isArray(replace) && !angular.isObject(replace)) {
        replace = [replace];
      }
      if (angular.isArray(replace)) {
        var rlen = replace.length;
        var rfx = function (str, i) {
          i = parseInt(i, 10);
          return i >= 0 && i < rlen ? replace[i] : str;
        };
        target = target.replace(/\$([0-9]+)/g, rfx);
      } else {
        angular.forEach(replace, function (value, key) {
          target = target.split(':' + key).join(value);
        });
      }
    }
    return target;
  };
});
'use strict';
/**
 * Wraps the
 * @param text {string} haystack to search through
 * @param search {string} needle to search for
 * @param [caseSensitive] {boolean} optional boolean to use case-sensitive searching
 */
angular.module('ui.highlight', []).filter('highlight', function () {
  return function (text, search, caseSensitive) {
    if (search || angular.isNumber(search)) {
      text = text.toString();
      search = search.toString();
      if (caseSensitive) {
        return text.split(search).join('<span class="ui-match">' + search + '</span>');
      } else {
        return text.replace(new RegExp(search, 'gi'), '<span class="ui-match">$&</span>');
      }
    } else {
      return text;
    }
  };
});
'use strict';
// modeled after: angular-1.0.7/src/ng/directive/ngInclude.js
angular.module('ui.include', []).directive('uiInclude', [
  '$http',
  '$templateCache',
  '$anchorScroll',
  '$compile',
  function ($http, $templateCache, $anchorScroll, $compile) {
    return {
      restrict: 'ECA',
      terminal: true,
      compile: function (element, attr) {
        var srcExp = attr.uiInclude || attr.src, fragExp = attr.fragment || '', onloadExp = attr.onload || '', autoScrollExp = attr.autoscroll;
        return function (scope, element) {
          var changeCounter = 0, childScope;
          var clearContent = function () {
            if (childScope) {
              childScope.$destroy();
              childScope = null;
            }
            element.html('');
          };
          function ngIncludeWatchAction() {
            var thisChangeId = ++changeCounter;
            var src = scope.$eval(srcExp);
            var fragment = scope.$eval(fragExp);
            if (src) {
              $http.get(src, { cache: $templateCache }).success(function (response) {
                if (thisChangeId !== changeCounter) {
                  return;
                }
                if (childScope) {
                  childScope.$destroy();
                }
                childScope = scope.$new();
                var contents;
                if (fragment) {
                  contents = angular.element('<div/>').html(response).find(fragment);
                } else {
                  contents = angular.element('<div/>').html(response).contents();
                }
                element.html(contents);
                $compile(contents)(childScope);
                if (angular.isDefined(autoScrollExp) && (!autoScrollExp || scope.$eval(autoScrollExp))) {
                  $anchorScroll();
                }
                childScope.$emit('$includeContentLoaded');
                scope.$eval(onloadExp);
              }).error(function () {
                if (thisChangeId === changeCounter) {
                  clearContent();
                }
              });
            } else {
              clearContent();
            }
          }
          scope.$watch(fragExp, ngIncludeWatchAction);
          scope.$watch(srcExp, ngIncludeWatchAction);
        };
      }
    };
  }
]);
'use strict';
/**
 * Provides an easy way to toggle a checkboxes indeterminate property
 *
 * @example <input type="checkbox" ui-indeterminate="isUnkown">
 */
angular.module('ui.indeterminate', []).directive('uiIndeterminate', [function () {
    return {
      compile: function (tElm, tAttrs) {
        if (!tAttrs.type || tAttrs.type.toLowerCase() !== 'checkbox') {
          return angular.noop;
        }
        return function ($scope, elm, attrs) {
          $scope.$watch(attrs.uiIndeterminate, function (newVal) {
            elm[0].indeterminate = !!newVal;
          });
        };
      }
    };
  }]);
'use strict';
/**
 * Converts variable-esque naming conventions to something presentational, capitalized words separated by space.
 * @param {String} value The value to be parsed and prettified.
 * @param {String} [inflector] The inflector to use. Default: humanize.
 * @return {String}
 * @example {{ 'Here Is my_phoneNumber' | inflector:'humanize' }} => Here Is My Phone Number
 *          {{ 'Here Is my_phoneNumber' | inflector:'underscore' }} => here_is_my_phone_number
 *          {{ 'Here Is my_phoneNumber' | inflector:'variable' }} => hereIsMyPhoneNumber
 */
angular.module('ui.inflector', []).filter('inflector', function () {
  function ucwords(text) {
    return text.replace(/^([a-z])|\s+([a-z])/g, function ($1) {
      return $1.toUpperCase();
    });
  }
  function breakup(text, separator) {
    return text.replace(/[A-Z]/g, function (match) {
      return separator + match;
    });
  }
  var inflectors = {
      humanize: function (value) {
        return ucwords(breakup(value, ' ').split('_').join(' '));
      },
      underscore: function (value) {
        return value.substr(0, 1).toLowerCase() + breakup(value.substr(1), '_').toLowerCase().split(' ').join('_');
      },
      variable: function (value) {
        value = value.substr(0, 1).toLowerCase() + ucwords(value.split('_').join(' ')).substr(1).split(' ').join('');
        return value;
      }
    };
  return function (text, inflector) {
    if (inflector !== false && angular.isString(text)) {
      inflector = inflector || 'humanize';
      return inflectors[inflector](text);
    } else {
      return text;
    }
  };
});
'use strict';
/**
 * General-purpose jQuery wrapper. Simply pass the plugin name as the expression.
 *
 * It is possible to specify a default set of parameters for each jQuery plugin.
 * Under the jq key, namespace each plugin by that which will be passed to ui-jq.
 * Unfortunately, at this time you can only pre-define the first parameter.
 * @example { jq : { datepicker : { showOn:'click' } } }
 *
 * @param ui-jq {string} The $elm.[pluginName]() to call.
 * @param [ui-options] {mixed} Expression to be evaluated and passed as options to the function
 *     Multiple parameters can be separated by commas
 * @param [ui-refresh] {expression} Watch expression and refire plugin on changes
 *
 * @example <input ui-jq="datepicker" ui-options="{showOn:'click'},secondParameter,thirdParameter" ui-refresh="iChange">
 */
angular.module('ui.jq', []).value('uiJqConfig', {}).directive('uiJq', [
  'uiJqConfig',
  '$timeout',
  function uiJqInjectingFunction(uiJqConfig, $timeout) {
    return {
      restrict: 'A',
      compile: function uiJqCompilingFunction(tElm, tAttrs) {
        if (!angular.isFunction(tElm[tAttrs.uiJq])) {
          throw new Error('ui-jq: The "' + tAttrs.uiJq + '" function does not exist');
        }
        var options = uiJqConfig && uiJqConfig[tAttrs.uiJq];
        return function uiJqLinkingFunction(scope, elm, attrs) {
          var linkOptions = [];
          // If ui-options are passed, merge (or override) them onto global defaults and pass to the jQuery method
          if (attrs.uiOptions) {
            linkOptions = scope.$eval('[' + attrs.uiOptions + ']');
            if (angular.isObject(options) && angular.isObject(linkOptions[0])) {
              linkOptions[0] = angular.extend({}, options, linkOptions[0]);
            }
          } else if (options) {
            linkOptions = [options];
          }
          // If change compatibility is enabled, the form input's "change" event will trigger an "input" event
          if (attrs.ngModel && elm.is('select,input,textarea')) {
            elm.bind('change', function () {
              elm.trigger('input');
            });
          }
          // Call jQuery method and pass relevant options
          function callPlugin() {
            $timeout(function () {
              elm[attrs.uiJq].apply(elm, linkOptions);
            }, 0, false);
          }
          // If ui-refresh is used, re-fire the the method upon every change
          if (attrs.uiRefresh) {
            scope.$watch(attrs.uiRefresh, function () {
              callPlugin();
            });
          }
          callPlugin();
        };
      }
    };
  }
]);
'use strict';
angular.module('ui.keypress', []).factory('keypressHelper', [
  '$parse',
  function keypress($parse) {
    var keysByCode = {
        8: 'backspace',
        9: 'tab',
        13: 'enter',
        27: 'esc',
        32: 'space',
        33: 'pageup',
        34: 'pagedown',
        35: 'end',
        36: 'home',
        37: 'left',
        38: 'up',
        39: 'right',
        40: 'down',
        45: 'insert',
        46: 'delete'
      };
    var capitaliseFirstLetter = function (string) {
      return string.charAt(0).toUpperCase() + string.slice(1);
    };
    return function (mode, scope, elm, attrs) {
      var params, combinations = [];
      params = scope.$eval(attrs['ui' + capitaliseFirstLetter(mode)]);
      // Prepare combinations for simple checking
      angular.forEach(params, function (v, k) {
        var combination, expression;
        expression = $parse(v);
        angular.forEach(k.split(' '), function (variation) {
          combination = {
            expression: expression,
            keys: {}
          };
          angular.forEach(variation.split('-'), function (value) {
            combination.keys[value] = true;
          });
          combinations.push(combination);
        });
      });
      // Check only matching of pressed keys one of the conditions
      elm.bind(mode, function (event) {
        // No need to do that inside the cycle
        var metaPressed = !!(event.metaKey && !event.ctrlKey);
        var altPressed = !!event.altKey;
        var ctrlPressed = !!event.ctrlKey;
        var shiftPressed = !!event.shiftKey;
        var keyCode = event.keyCode;
        // normalize keycodes
        if (mode === 'keypress' && !shiftPressed && keyCode >= 97 && keyCode <= 122) {
          keyCode = keyCode - 32;
        }
        // Iterate over prepared combinations
        angular.forEach(combinations, function (combination) {
          var mainKeyPressed = combination.keys[keysByCode[keyCode]] || combination.keys[keyCode.toString()];
          var metaRequired = !!combination.keys.meta;
          var altRequired = !!combination.keys.alt;
          var ctrlRequired = !!combination.keys.ctrl;
          var shiftRequired = !!combination.keys.shift;
          if (mainKeyPressed && metaRequired === metaPressed && altRequired === altPressed && ctrlRequired === ctrlPressed && shiftRequired === shiftPressed) {
            // Run the function
            scope.$apply(function () {
              combination.expression(scope, { '$event': event });
            });
          }
        });
      });
    };
  }
]);
/**
 * Bind one or more handlers to particular keys or their combination
 * @param hash {mixed} keyBindings Can be an object or string where keybinding expression of keys or keys combinations and AngularJS Exspressions are set. Object syntax: "{ keys1: expression1 [, keys2: expression2 [ , ... ]]}". String syntax: ""expression1 on keys1 [ and expression2 on keys2 [ and ... ]]"". Expression is an AngularJS Expression, and key(s) are dash-separated combinations of keys and modifiers (one or many, if any. Order does not matter). Supported modifiers are 'ctrl', 'shift', 'alt' and key can be used either via its keyCode (13 for Return) or name. Named keys are 'backspace', 'tab', 'enter', 'esc', 'space', 'pageup', 'pagedown', 'end', 'home', 'left', 'up', 'right', 'down', 'insert', 'delete'.
 * @example <input ui-keypress="{enter:'x = 1', 'ctrl-shift-space':'foo()', 'shift-13':'bar()'}" /> <input ui-keypress="foo = 2 on ctrl-13 and bar('hello') on shift-esc" />
 **/
angular.module('ui.keypress').directive('uiKeydown', [
  'keypressHelper',
  function (keypressHelper) {
    return {
      link: function (scope, elm, attrs) {
        keypressHelper('keydown', scope, elm, attrs);
      }
    };
  }
]);
angular.module('ui.keypress').directive('uiKeypress', [
  'keypressHelper',
  function (keypressHelper) {
    return {
      link: function (scope, elm, attrs) {
        keypressHelper('keypress', scope, elm, attrs);
      }
    };
  }
]);
angular.module('ui.keypress').directive('uiKeyup', [
  'keypressHelper',
  function (keypressHelper) {
    return {
      link: function (scope, elm, attrs) {
        keypressHelper('keyup', scope, elm, attrs);
      }
    };
  }
]);
'use strict';
/*
 Attaches input mask onto input element
 */
angular.module('ui.mask', []).value('uiMaskConfig', {
  'maskDefinitions': {
    '9': /\d/,
    'A': /[a-zA-Z]/,
    '*': /[a-zA-Z0-9]/
  }
}).directive('uiMask', [
  'uiMaskConfig',
  function (maskConfig) {
    return {
      priority: 100,
      require: 'ngModel',
      restrict: 'A',
      compile: function uiMaskCompilingFunction() {
        var options = maskConfig;
        return function uiMaskLinkingFunction(scope, iElement, iAttrs, controller) {
          var maskProcessed = false, eventsBound = false, maskCaretMap, maskPatterns, maskPlaceholder, maskComponents,
            // Minimum required length of the value to be considered valid
            minRequiredLength, value, valueMasked, isValid,
            // Vars for initializing/uninitializing
            originalPlaceholder = iAttrs.placeholder, originalMaxlength = iAttrs.maxlength,
            // Vars used exclusively in eventHandler()
            oldValue, oldValueUnmasked, oldCaretPosition, oldSelectionLength;
          function initialize(maskAttr) {
            if (!angular.isDefined(maskAttr)) {
              return uninitialize();
            }
            processRawMask(maskAttr);
            if (!maskProcessed) {
              return uninitialize();
            }
            initializeElement();
            bindEventListeners();
            return true;
          }
          function initPlaceholder(placeholderAttr) {
            if (!angular.isDefined(placeholderAttr)) {
              return;
            }
            maskPlaceholder = placeholderAttr;
            // If the mask is processed, then we need to update the value
            if (maskProcessed) {
              eventHandler();
            }
          }
          function formatter(fromModelValue) {
            if (!maskProcessed) {
              return fromModelValue;
            }
            value = unmaskValue(fromModelValue || '');
            isValid = validateValue(value);
            controller.$setValidity('mask', isValid);
            return isValid && value.length ? maskValue(value) : undefined;
          }
          function parser(fromViewValue) {
            if (!maskProcessed) {
              return fromViewValue;
            }
            value = unmaskValue(fromViewValue || '');
            isValid = validateValue(value);
            // We have to set viewValue manually as the reformatting of the input
            // value performed by eventHandler() doesn't happen until after
            // this parser is called, which causes what the user sees in the input
            // to be out-of-sync with what the controller's $viewValue is set to.
            controller.$viewValue = value.length ? maskValue(value) : '';
            controller.$setValidity('mask', isValid);
            if (value === '' && controller.$error.required !== undefined) {
              controller.$setValidity('required', false);
            }
            return isValid ? value : undefined;
          }
          var linkOptions = {};
          if (iAttrs.uiOptions) {
            linkOptions = scope.$eval('[' + iAttrs.uiOptions + ']');
            if (angular.isObject(linkOptions[0])) {
              // we can't use angular.copy nor angular.extend, they lack the power to do a deep merge
              linkOptions = function (original, current) {
                for (var i in original) {
                  if (Object.prototype.hasOwnProperty.call(original, i)) {
                    if (!current[i]) {
                      current[i] = angular.copy(original[i]);
                    } else {
                      angular.extend(current[i], original[i]);
                    }
                  }
                }
                return current;
              }(options, linkOptions[0]);
            }
          } else {
            linkOptions = options;
          }
          iAttrs.$observe('uiMask', initialize);
          iAttrs.$observe('placeholder', initPlaceholder);
          controller.$formatters.push(formatter);
          controller.$parsers.push(parser);
          function uninitialize() {
            maskProcessed = false;
            unbindEventListeners();
            if (angular.isDefined(originalPlaceholder)) {
              iElement.attr('placeholder', originalPlaceholder);
            } else {
              iElement.removeAttr('placeholder');
            }
            if (angular.isDefined(originalMaxlength)) {
              iElement.attr('maxlength', originalMaxlength);
            } else {
              iElement.removeAttr('maxlength');
            }
            iElement.val(controller.$modelValue);
            controller.$viewValue = controller.$modelValue;
            return false;
          }
          function initializeElement() {
            value = oldValueUnmasked = unmaskValue(controller.$modelValue || '');
            valueMasked = oldValue = maskValue(value);
            isValid = validateValue(value);
            var viewValue = isValid && value.length ? valueMasked : '';
            if (iAttrs.maxlength) {
              // Double maxlength to allow pasting new val at end of mask
              iElement.attr('maxlength', maskCaretMap[maskCaretMap.length - 1] * 2);
            }
            iElement.attr('placeholder', maskPlaceholder);
            iElement.val(viewValue);
            controller.$viewValue = viewValue;  // Not using $setViewValue so we don't clobber the model value and dirty the form
                                                // without any kind of user interaction.
          }
          function bindEventListeners() {
            if (eventsBound) {
              return;
            }
            iElement.bind('blur', blurHandler);
            iElement.bind('mousedown mouseup', mouseDownUpHandler);
            iElement.bind('input keyup click focus', eventHandler);
            eventsBound = true;
          }
          function unbindEventListeners() {
            if (!eventsBound) {
              return;
            }
            iElement.unbind('blur', blurHandler);
            iElement.unbind('mousedown', mouseDownUpHandler);
            iElement.unbind('mouseup', mouseDownUpHandler);
            iElement.unbind('input', eventHandler);
            iElement.unbind('keyup', eventHandler);
            iElement.unbind('click', eventHandler);
            iElement.unbind('focus', eventHandler);
            eventsBound = false;
          }
          function validateValue(value) {
            // Zero-length value validity is ngRequired's determination
            return value.length ? value.length >= minRequiredLength : true;
          }
          function unmaskValue(value) {
            var valueUnmasked = '', maskPatternsCopy = maskPatterns.slice();
            // Preprocess by stripping mask components from value
            value = value.toString();
            angular.forEach(maskComponents, function (component) {
              value = value.replace(component, '');
            });
            angular.forEach(value.split(''), function (chr) {
              if (maskPatternsCopy.length && maskPatternsCopy[0].test(chr)) {
                valueUnmasked += chr;
                maskPatternsCopy.shift();
              }
            });
            return valueUnmasked;
          }
          function maskValue(unmaskedValue) {
            var valueMasked = '', maskCaretMapCopy = maskCaretMap.slice();
            angular.forEach(maskPlaceholder.split(''), function (chr, i) {
              if (unmaskedValue.length && i === maskCaretMapCopy[0]) {
                valueMasked += unmaskedValue.charAt(0) || '_';
                unmaskedValue = unmaskedValue.substr(1);
                maskCaretMapCopy.shift();
              } else {
                valueMasked += chr;
              }
            });
            return valueMasked;
          }
          function getPlaceholderChar(i) {
            var placeholder = iAttrs.placeholder;
            if (typeof placeholder !== 'undefined' && placeholder[i]) {
              return placeholder[i];
            } else {
              return '_';
            }
          }
          // Generate array of mask components that will be stripped from a masked value
          // before processing to prevent mask components from being added to the unmasked value.
          // E.g., a mask pattern of '+7 9999' won't have the 7 bleed into the unmasked value.
          // If a maskable char is followed by a mask char and has a mask
          // char behind it, we'll split it into it's own component so if
          // a user is aggressively deleting in the input and a char ahead
          // of the maskable char gets deleted, we'll still be able to strip
          // it in the unmaskValue() preprocessing.
          function getMaskComponents() {
            return maskPlaceholder.replace(/[_]+/g, '_').replace(/([^_]+)([a-zA-Z0-9])([^_])/g, '$1$2_$3').split('_');
          }
          function processRawMask(mask) {
            var characterCount = 0;
            maskCaretMap = [];
            maskPatterns = [];
            maskPlaceholder = '';
            if (typeof mask === 'string') {
              minRequiredLength = 0;
              var isOptional = false, splitMask = mask.split('');
              angular.forEach(splitMask, function (chr, i) {
                if (linkOptions.maskDefinitions[chr]) {
                  maskCaretMap.push(characterCount);
                  maskPlaceholder += getPlaceholderChar(i);
                  maskPatterns.push(linkOptions.maskDefinitions[chr]);
                  characterCount++;
                  if (!isOptional) {
                    minRequiredLength++;
                  }
                } else if (chr === '?') {
                  isOptional = true;
                } else {
                  maskPlaceholder += chr;
                  characterCount++;
                }
              });
            }
            // Caret position immediately following last position is valid.
            maskCaretMap.push(maskCaretMap.slice().pop() + 1);
            maskComponents = getMaskComponents();
            maskProcessed = maskCaretMap.length > 1 ? true : false;
          }
          function blurHandler() {
            oldCaretPosition = 0;
            oldSelectionLength = 0;
            if (!isValid || value.length === 0) {
              valueMasked = '';
              iElement.val('');
              scope.$apply(function () {
                controller.$setViewValue('');
              });
            }
          }
          function mouseDownUpHandler(e) {
            if (e.type === 'mousedown') {
              iElement.bind('mouseout', mouseoutHandler);
            } else {
              iElement.unbind('mouseout', mouseoutHandler);
            }
          }
          iElement.bind('mousedown mouseup', mouseDownUpHandler);
          function mouseoutHandler() {
            /*jshint validthis: true */
            oldSelectionLength = getSelectionLength(this);
            iElement.unbind('mouseout', mouseoutHandler);
          }
          function eventHandler(e) {
            /*jshint validthis: true */
            e = e || {};
            // Allows more efficient minification
            var eventWhich = e.which, eventType = e.type;
            // Prevent shift and ctrl from mucking with old values
            if (eventWhich === 16 || eventWhich === 91) {
              return;
            }
            var val = iElement.val(), valOld = oldValue, valMasked, valUnmasked = unmaskValue(val), valUnmaskedOld = oldValueUnmasked, valAltered = false, caretPos = getCaretPosition(this) || 0, caretPosOld = oldCaretPosition || 0, caretPosDelta = caretPos - caretPosOld, caretPosMin = maskCaretMap[0], caretPosMax = maskCaretMap[valUnmasked.length] || maskCaretMap.slice().shift(), selectionLenOld = oldSelectionLength || 0, isSelected = getSelectionLength(this) > 0, wasSelected = selectionLenOld > 0,
              // Case: Typing a character to overwrite a selection
              isAddition = val.length > valOld.length || selectionLenOld && val.length > valOld.length - selectionLenOld,
              // Case: Delete and backspace behave identically on a selection
              isDeletion = val.length < valOld.length || selectionLenOld && val.length === valOld.length - selectionLenOld, isSelection = eventWhich >= 37 && eventWhich <= 40 && e.shiftKey,
              // Arrow key codes
              isKeyLeftArrow = eventWhich === 37,
              // Necessary due to "input" event not providing a key code
              isKeyBackspace = eventWhich === 8 || eventType !== 'keyup' && isDeletion && caretPosDelta === -1, isKeyDelete = eventWhich === 46 || eventType !== 'keyup' && isDeletion && caretPosDelta === 0 && !wasSelected,
              // Handles cases where caret is moved and placed in front of invalid maskCaretMap position. Logic below
              // ensures that, on click or leftward caret placement, caret is moved leftward until directly right of
              // non-mask character. Also applied to click since users are (arguably) more likely to backspace
              // a character when clicking within a filled input.
              caretBumpBack = (isKeyLeftArrow || isKeyBackspace || eventType === 'click') && caretPos > caretPosMin;
            oldSelectionLength = getSelectionLength(this);
            // These events don't require any action
            if (isSelection || isSelected && (eventType === 'click' || eventType === 'keyup')) {
              return;
            }
            // Value Handling
            // ==============
            // User attempted to delete but raw value was unaffected--correct this grievous offense
            if (eventType === 'input' && isDeletion && !wasSelected && valUnmasked === valUnmaskedOld) {
              while (isKeyBackspace && caretPos > caretPosMin && !isValidCaretPosition(caretPos)) {
                caretPos--;
              }
              while (isKeyDelete && caretPos < caretPosMax && maskCaretMap.indexOf(caretPos) === -1) {
                caretPos++;
              }
              var charIndex = maskCaretMap.indexOf(caretPos);
              // Strip out non-mask character that user would have deleted if mask hadn't been in the way.
              valUnmasked = valUnmasked.substring(0, charIndex) + valUnmasked.substring(charIndex + 1);
              valAltered = true;
            }
            // Update values
            valMasked = maskValue(valUnmasked);
            oldValue = valMasked;
            oldValueUnmasked = valUnmasked;
            iElement.val(valMasked);
            if (valAltered) {
              // We've altered the raw value after it's been $digest'ed, we need to $apply the new value.
              scope.$apply(function () {
                controller.$setViewValue(valUnmasked);
              });
            }
            // Caret Repositioning
            // ===================
            // Ensure that typing always places caret ahead of typed character in cases where the first char of
            // the input is a mask char and the caret is placed at the 0 position.
            if (isAddition && caretPos <= caretPosMin) {
              caretPos = caretPosMin + 1;
            }
            if (caretBumpBack) {
              caretPos--;
            }
            // Make sure caret is within min and max position limits
            caretPos = caretPos > caretPosMax ? caretPosMax : caretPos < caretPosMin ? caretPosMin : caretPos;
            // Scoot the caret back or forth until it's in a non-mask position and within min/max position limits
            while (!isValidCaretPosition(caretPos) && caretPos > caretPosMin && caretPos < caretPosMax) {
              caretPos += caretBumpBack ? -1 : 1;
            }
            if (caretBumpBack && caretPos < caretPosMax || isAddition && !isValidCaretPosition(caretPosOld)) {
              caretPos++;
            }
            oldCaretPosition = caretPos;
            setCaretPosition(this, caretPos);
          }
          function isValidCaretPosition(pos) {
            return maskCaretMap.indexOf(pos) > -1;
          }
          function getCaretPosition(input) {
            if (!input)
              return 0;
            if (input.selectionStart !== undefined) {
              return input.selectionStart;
            } else if (document.selection) {
              // Curse you IE
              input.focus();
              var selection = document.selection.createRange();
              selection.moveStart('character', -input.value.length);
              return selection.text.length;
            }
            return 0;
          }
          function setCaretPosition(input, pos) {
            if (!input)
              return 0;
            if (input.offsetWidth === 0 || input.offsetHeight === 0) {
              return;  // Input's hidden
            }
            if (input.setSelectionRange) {
              input.focus();
              input.setSelectionRange(pos, pos);
            } else if (input.createTextRange) {
              // Curse you IE
              var range = input.createTextRange();
              range.collapse(true);
              range.moveEnd('character', pos);
              range.moveStart('character', pos);
              range.select();
            }
          }
          function getSelectionLength(input) {
            if (!input)
              return 0;
            if (input.selectionStart !== undefined) {
              return input.selectionEnd - input.selectionStart;
            }
            if (document.selection) {
              return document.selection.createRange().text.length;
            }
            return 0;
          }
          // https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/indexOf
          if (!Array.prototype.indexOf) {
            Array.prototype.indexOf = function (searchElement) {
              if (this === null) {
                throw new TypeError();
              }
              var t = Object(this);
              var len = t.length >>> 0;
              if (len === 0) {
                return -1;
              }
              var n = 0;
              if (arguments.length > 1) {
                n = Number(arguments[1]);
                if (n !== n) {
                  // shortcut for verifying if it's NaN
                  n = 0;
                } else if (n !== 0 && n !== Infinity && n !== -Infinity) {
                  n = (n > 0 || -1) * Math.floor(Math.abs(n));
                }
              }
              if (n >= len) {
                return -1;
              }
              var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);
              for (; k < len; k++) {
                if (k in t && t[k] === searchElement) {
                  return k;
                }
              }
              return -1;
            };
          }
        };
      }
    };
  }
]);
'use strict';
/**
 * Add a clear button to form inputs to reset their value
 */
angular.module('ui.reset', []).value('uiResetConfig', null).directive('uiReset', [
  'uiResetConfig',
  function (uiResetConfig) {
    var resetValue = null;
    if (uiResetConfig !== undefined) {
      resetValue = uiResetConfig;
    }
    return {
      require: 'ngModel',
      link: function (scope, elm, attrs, ctrl) {
        var aElement;
        aElement = angular.element('<a class="ui-reset" />');
        elm.wrap('<span class="ui-resetwrap" />').after(aElement);
        aElement.bind('click', function (e) {
          e.preventDefault();
          scope.$apply(function () {
            if (attrs.uiReset) {
              ctrl.$setViewValue(scope.$eval(attrs.uiReset));
            } else {
              ctrl.$setViewValue(resetValue);
            }
            ctrl.$render();
          });
        });
      }
    };
  }
]);
'use strict';
/**
 * Set a $uiRoute boolean to see if the current route matches
 */
angular.module('ui.route', []).directive('uiRoute', [
  '$location',
  '$parse',
  function ($location, $parse) {
    return {
      restrict: 'AC',
      scope: true,
      compile: function (tElement, tAttrs) {
        var useProperty;
        if (tAttrs.uiRoute) {
          useProperty = 'uiRoute';
        } else if (tAttrs.ngHref) {
          useProperty = 'ngHref';
        } else if (tAttrs.href) {
          useProperty = 'href';
        } else {
          throw new Error('uiRoute missing a route or href property on ' + tElement[0]);
        }
        return function ($scope, elm, attrs) {
          var modelSetter = $parse(attrs.ngModel || attrs.routeModel || '$uiRoute').assign;
          var watcher = angular.noop;
          // Used by href and ngHref
          function staticWatcher(newVal) {
            var hash = newVal.indexOf('#');
            if (hash > -1) {
              newVal = newVal.substr(hash + 1);
            }
            watcher = function watchHref() {
              modelSetter($scope, $location.path().indexOf(newVal) > -1);
            };
            watcher();
          }
          // Used by uiRoute
          function regexWatcher(newVal) {
            var hash = newVal.indexOf('#');
            if (hash > -1) {
              newVal = newVal.substr(hash + 1);
            }
            watcher = function watchRegex() {
              var regexp = new RegExp('^' + newVal + '$', ['i']);
              modelSetter($scope, regexp.test($location.path()));
            };
            watcher();
          }
          switch (useProperty) {
          case 'uiRoute':
            // if uiRoute={{}} this will be undefined, otherwise it will have a value and $observe() never gets triggered
            if (attrs.uiRoute) {
              regexWatcher(attrs.uiRoute);
            } else {
              attrs.$observe('uiRoute', regexWatcher);
            }
            break;
          case 'ngHref':
            // Setup watcher() every time ngHref changes
            if (attrs.ngHref) {
              staticWatcher(attrs.ngHref);
            } else {
              attrs.$observe('ngHref', staticWatcher);
            }
            break;
          case 'href':
            // Setup watcher()
            staticWatcher(attrs.href);
          }
          $scope.$on('$routeChangeSuccess', function () {
            watcher();
          });
          //Added for compatibility with ui-router
          $scope.$on('$stateChangeSuccess', function () {
            watcher();
          });
        };
      }
    };
  }
]);
'use strict';
angular.module('ui.scroll.jqlite', ['ui.scroll']).service('jqLiteExtras', [
  '$log',
  '$window',
  function (console, window) {
    return {
      registerFor: function (element) {
        var convertToPx, css, getMeasurements, getStyle, getWidthHeight, isWindow, scrollTo;
        css = angular.element.prototype.css;
        element.prototype.css = function (name, value) {
          var elem, self;
          self = this;
          elem = self[0];
          if (!(!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style)) {
            return css.call(self, name, value);
          }
        };
        isWindow = function (obj) {
          return obj && obj.document && obj.location && obj.alert && obj.setInterval;
        };
        scrollTo = function (self, direction, value) {
          var elem, method, preserve, prop, _ref;
          elem = self[0];
          _ref = {
            top: [
              'scrollTop',
              'pageYOffset',
              'scrollLeft'
            ],
            left: [
              'scrollLeft',
              'pageXOffset',
              'scrollTop'
            ]
          }[direction], method = _ref[0], prop = _ref[1], preserve = _ref[2];
          if (isWindow(elem)) {
            if (angular.isDefined(value)) {
              return elem.scrollTo(self[preserve].call(self), value);
            } else {
              if (prop in elem) {
                return elem[prop];
              } else {
                return elem.document.documentElement[method];
              }
            }
          } else {
            if (angular.isDefined(value)) {
              return elem[method] = value;
            } else {
              return elem[method];
            }
          }
        };
        if (window.getComputedStyle) {
          getStyle = function (elem) {
            return window.getComputedStyle(elem, null);
          };
          convertToPx = function (elem, value) {
            return parseFloat(value);
          };
        } else {
          getStyle = function (elem) {
            return elem.currentStyle;
          };
          convertToPx = function (elem, value) {
            var core_pnum, left, result, rnumnonpx, rs, rsLeft, style;
            core_pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
            rnumnonpx = new RegExp('^(' + core_pnum + ')(?!px)[a-z%]+$', 'i');
            if (!rnumnonpx.test(value)) {
              return parseFloat(value);
            } else {
              style = elem.style;
              left = style.left;
              rs = elem.runtimeStyle;
              rsLeft = rs && rs.left;
              if (rs) {
                rs.left = style.left;
              }
              style.left = value;
              result = style.pixelLeft;
              style.left = left;
              if (rsLeft) {
                rs.left = rsLeft;
              }
              return result;
            }
          };
        }
        getMeasurements = function (elem, measure) {
          var base, borderA, borderB, computedMarginA, computedMarginB, computedStyle, dirA, dirB, marginA, marginB, paddingA, paddingB, _ref;
          if (isWindow(elem)) {
            base = document.documentElement[{
              height: 'clientHeight',
              width: 'clientWidth'
            }[measure]];
            return {
              base: base,
              padding: 0,
              border: 0,
              margin: 0
            };
          }
          _ref = {
            width: [
              elem.offsetWidth,
              'Left',
              'Right'
            ],
            height: [
              elem.offsetHeight,
              'Top',
              'Bottom'
            ]
          }[measure], base = _ref[0], dirA = _ref[1], dirB = _ref[2];
          computedStyle = getStyle(elem);
          paddingA = convertToPx(elem, computedStyle['padding' + dirA]) || 0;
          paddingB = convertToPx(elem, computedStyle['padding' + dirB]) || 0;
          borderA = convertToPx(elem, computedStyle['border' + dirA + 'Width']) || 0;
          borderB = convertToPx(elem, computedStyle['border' + dirB + 'Width']) || 0;
          computedMarginA = computedStyle['margin' + dirA];
          computedMarginB = computedStyle['margin' + dirB];
          marginA = convertToPx(elem, computedMarginA) || 0;
          marginB = convertToPx(elem, computedMarginB) || 0;
          return {
            base: base,
            padding: paddingA + paddingB,
            border: borderA + borderB,
            margin: marginA + marginB
          };
        };
        getWidthHeight = function (elem, direction, measure) {
          var computedStyle, measurements, result;
          measurements = getMeasurements(elem, direction);
          if (measurements.base > 0) {
            return {
              base: measurements.base - measurements.padding - measurements.border,
              outer: measurements.base,
              outerfull: measurements.base + measurements.margin
            }[measure];
          } else {
            computedStyle = getStyle(elem);
            result = computedStyle[direction];
            if (result < 0 || result === null) {
              result = elem.style[direction] || 0;
            }
            result = parseFloat(result) || 0;
            return {
              base: result - measurements.padding - measurements.border,
              outer: result,
              outerfull: result + measurements.padding + measurements.border + measurements.margin
            }[measure];
          }
        };
        return angular.forEach({
          before: function (newElem) {
            var children, elem, i, parent, self, _i, _ref;
            self = this;
            elem = self[0];
            parent = self.parent();
            children = parent.contents();
            if (children[0] === elem) {
              return parent.prepend(newElem);
            } else {
              for (i = _i = 1, _ref = children.length - 1; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {
                if (children[i] === elem) {
                  angular.element(children[i - 1]).after(newElem);
                  return;
                }
              }
              throw new Error('invalid DOM structure ' + elem.outerHTML);
            }
          },
          height: function (value) {
            var self;
            self = this;
            if (angular.isDefined(value)) {
              if (angular.isNumber(value)) {
                value = value + 'px';
              }
              return css.call(self, 'height', value);
            } else {
              return getWidthHeight(this[0], 'height', 'base');
            }
          },
          outerHeight: function (option) {
            return getWidthHeight(this[0], 'height', option ? 'outerfull' : 'outer');
          },
          offset: function (value) {
            var box, doc, docElem, elem, self, win;
            self = this;
            if (arguments.length) {
              if (value === void 0) {
                return self;
              } else {
                return value;
              }
            }
            box = {
              top: 0,
              left: 0
            };
            elem = self[0];
            doc = elem && elem.ownerDocument;
            if (!doc) {
              return;
            }
            docElem = doc.documentElement;
            if (elem.getBoundingClientRect) {
              box = elem.getBoundingClientRect();
            }
            win = doc.defaultView || doc.parentWindow;
            return {
              top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),
              left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0)
            };
          },
          scrollTop: function (value) {
            return scrollTo(this, 'top', value);
          },
          scrollLeft: function (value) {
            return scrollTo(this, 'left', value);
          }
        }, function (value, key) {
          if (!element.prototype[key]) {
            return element.prototype[key] = value;
          }
        });
      }
    };
  }
]).run([
  '$log',
  '$window',
  'jqLiteExtras',
  function (console, window, jqLiteExtras) {
    if (!window.jQuery) {
      return jqLiteExtras.registerFor(angular.element);
    }
  }
]);
'use strict';
/*

 List of used element methods available in JQuery but not in JQuery Lite

 element.before(elem)
 element.height()
 element.outerHeight(true)
 element.height(value) = only for Top/Bottom padding elements
 element.scrollTop()
 element.scrollTop(value)
 */
angular.module('ui.scroll', []).directive('ngScrollViewport', [
  '$log',
  function () {
    return {
      controller: [
        '$scope',
        '$element',
        function (scope, element) {
          return element;
        }
      ]
    };
  }
]).directive('ngScroll', [
  '$log',
  '$injector',
  '$rootScope',
  '$timeout',
  function (console, $injector, $rootScope, $timeout) {
    return {
      require: ['?^ngScrollViewport'],
      transclude: 'element',
      priority: 1000,
      terminal: true,
      compile: function (element, attr, linker) {
        return function ($scope, $element, $attr, controllers) {
          var adapter, adjustBuffer, adjustRowHeight, bof, bottomVisiblePos, buffer, bufferPadding, bufferSize, clipBottom, clipTop, datasource, datasourceName, enqueueFetch, eof, eventListener, fetch, finalize, first, insert, isDatasource, isLoading, itemName, loading, match, next, pending, reload, removeFromBuffer, resizeHandler, scrollHandler, scrollHeight, shouldLoadBottom, shouldLoadTop, tempScope, topVisiblePos, viewport;
          match = $attr.ngScroll.match(/^\s*(\w+)\s+in\s+(\w+)\s*$/);
          if (!match) {
            throw new Error('Expected ngScroll in form of "item_ in _datasource_" but got "' + $attr.ngScroll + '"');
          }
          itemName = match[1];
          datasourceName = match[2];
          isDatasource = function (datasource) {
            return angular.isObject(datasource) && datasource.get && angular.isFunction(datasource.get);
          };
          datasource = $scope[datasourceName];
          if (!isDatasource(datasource)) {
            datasource = $injector.get(datasourceName);
            if (!isDatasource(datasource)) {
              throw new Error(datasourceName + ' is not a valid datasource');
            }
          }
          bufferSize = Math.max(3, +$attr.bufferSize || 10);
          bufferPadding = function () {
            return viewport.height() * Math.max(0.1, +$attr.padding || 0.1);
          };
          scrollHeight = function (elem) {
            return elem[0].scrollHeight || elem[0].document.documentElement.scrollHeight;
          };
          adapter = null;
          linker(tempScope = $scope.$new(), function (template) {
            var bottomPadding, createPadding, padding, repeaterType, topPadding, viewport;
            repeaterType = template[0].localName;
            if (repeaterType === 'dl') {
              throw new Error('ng-scroll directive does not support <' + template[0].localName + '> as a repeating tag: ' + template[0].outerHTML);
            }
            if (repeaterType !== 'li' && repeaterType !== 'tr') {
              repeaterType = 'div';
            }
            viewport = controllers[0] || angular.element(window);
            viewport.css({
              'overflow-y': 'auto',
              'display': 'block'
            });
            padding = function (repeaterType) {
              var div, result, table;
              switch (repeaterType) {
              case 'tr':
                table = angular.element('<table><tr><td><div></div></td></tr></table>');
                div = table.find('div');
                result = table.find('tr');
                result.paddingHeight = function () {
                  return div.height.apply(div, arguments);
                };
                return result;
              default:
                result = angular.element('<' + repeaterType + '></' + repeaterType + '>');
                result.paddingHeight = result.height;
                return result;
              }
            };
            createPadding = function (padding, element, direction) {
              element[{
                top: 'before',
                bottom: 'after'
              }[direction]](padding);
              return {
                paddingHeight: function () {
                  return padding.paddingHeight.apply(padding, arguments);
                },
                insert: function (element) {
                  return padding[{
                    top: 'after',
                    bottom: 'before'
                  }[direction]](element);
                }
              };
            };
            topPadding = createPadding(padding(repeaterType), element, 'top');
            bottomPadding = createPadding(padding(repeaterType), element, 'bottom');
            tempScope.$destroy();
            return adapter = {
              viewport: viewport,
              topPadding: topPadding.paddingHeight,
              bottomPadding: bottomPadding.paddingHeight,
              append: bottomPadding.insert,
              prepend: topPadding.insert,
              bottomDataPos: function () {
                return scrollHeight(viewport) - bottomPadding.paddingHeight();
              },
              topDataPos: function () {
                return topPadding.paddingHeight();
              }
            };
          });
          viewport = adapter.viewport;
          first = 1;
          next = 1;
          buffer = [];
          pending = [];
          eof = false;
          bof = false;
          loading = datasource.loading || function () {
          };
          isLoading = false;
          removeFromBuffer = function (start, stop) {
            var i, _i;
            for (i = _i = start; start <= stop ? _i < stop : _i > stop; i = start <= stop ? ++_i : --_i) {
              buffer[i].scope.$destroy();
              buffer[i].element.remove();
            }
            return buffer.splice(start, stop - start);
          };
          reload = function () {
            first = 1;
            next = 1;
            removeFromBuffer(0, buffer.length);
            adapter.topPadding(0);
            adapter.bottomPadding(0);
            pending = [];
            eof = false;
            bof = false;
            return adjustBuffer(false);
          };
          bottomVisiblePos = function () {
            return viewport.scrollTop() + viewport.height();
          };
          topVisiblePos = function () {
            return viewport.scrollTop();
          };
          shouldLoadBottom = function () {
            return !eof && adapter.bottomDataPos() < bottomVisiblePos() + bufferPadding();
          };
          clipBottom = function () {
            var bottomHeight, i, itemHeight, overage, _i, _ref;
            bottomHeight = 0;
            overage = 0;
            for (i = _i = _ref = buffer.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {
              itemHeight = buffer[i].element.outerHeight(true);
              if (adapter.bottomDataPos() - bottomHeight - itemHeight > bottomVisiblePos() + bufferPadding()) {
                bottomHeight += itemHeight;
                overage++;
                eof = false;
              } else {
                break;
              }
            }
            if (overage > 0) {
              adapter.bottomPadding(adapter.bottomPadding() + bottomHeight);
              removeFromBuffer(buffer.length - overage, buffer.length);
              next -= overage;
              return console.log('clipped off bottom ' + overage + ' bottom padding ' + adapter.bottomPadding());
            }
          };
          shouldLoadTop = function () {
            return !bof && adapter.topDataPos() > topVisiblePos() - bufferPadding();
          };
          clipTop = function () {
            var item, itemHeight, overage, topHeight, _i, _len;
            topHeight = 0;
            overage = 0;
            for (_i = 0, _len = buffer.length; _i < _len; _i++) {
              item = buffer[_i];
              itemHeight = item.element.outerHeight(true);
              if (adapter.topDataPos() + topHeight + itemHeight < topVisiblePos() - bufferPadding()) {
                topHeight += itemHeight;
                overage++;
                bof = false;
              } else {
                break;
              }
            }
            if (overage > 0) {
              adapter.topPadding(adapter.topPadding() + topHeight);
              removeFromBuffer(0, overage);
              first += overage;
              return console.log('clipped off top ' + overage + ' top padding ' + adapter.topPadding());
            }
          };
          enqueueFetch = function (direction, scrolling) {
            if (!isLoading) {
              isLoading = true;
              loading(true);
            }
            if (pending.push(direction) === 1) {
              return fetch(scrolling);
            }
          };
          insert = function (index, item) {
            var itemScope, toBeAppended, wrapper;
            itemScope = $scope.$new();
            itemScope[itemName] = item;
            toBeAppended = index > first;
            itemScope.$index = index;
            if (toBeAppended) {
              itemScope.$index--;
            }
            wrapper = { scope: itemScope };
            linker(itemScope, function (clone) {
              wrapper.element = clone;
              if (toBeAppended) {
                if (index === next) {
                  adapter.append(clone);
                  return buffer.push(wrapper);
                } else {
                  buffer[index - first].element.after(clone);
                  return buffer.splice(index - first + 1, 0, wrapper);
                }
              } else {
                adapter.prepend(clone);
                return buffer.unshift(wrapper);
              }
            });
            return {
              appended: toBeAppended,
              wrapper: wrapper
            };
          };
          adjustRowHeight = function (appended, wrapper) {
            var newHeight;
            if (appended) {
              return adapter.bottomPadding(Math.max(0, adapter.bottomPadding() - wrapper.element.outerHeight(true)));
            } else {
              newHeight = adapter.topPadding() - wrapper.element.outerHeight(true);
              if (newHeight >= 0) {
                return adapter.topPadding(newHeight);
              } else {
                return viewport.scrollTop(viewport.scrollTop() + wrapper.element.outerHeight(true));
              }
            }
          };
          adjustBuffer = function (scrolling, newItems, finalize) {
            var doAdjustment;
            doAdjustment = function () {
              console.log('top {actual=' + adapter.topDataPos() + ' visible from=' + topVisiblePos() + ' bottom {visible through=' + bottomVisiblePos() + ' actual=' + adapter.bottomDataPos() + '}');
              if (shouldLoadBottom()) {
                enqueueFetch(true, scrolling);
              } else {
                if (shouldLoadTop()) {
                  enqueueFetch(false, scrolling);
                }
              }
              if (finalize) {
                return finalize();
              }
            };
            if (newItems) {
              return $timeout(function () {
                var row, _i, _len;
                for (_i = 0, _len = newItems.length; _i < _len; _i++) {
                  row = newItems[_i];
                  adjustRowHeight(row.appended, row.wrapper);
                }
                return doAdjustment();
              });
            } else {
              return doAdjustment();
            }
          };
          finalize = function (scrolling, newItems) {
            return adjustBuffer(scrolling, newItems, function () {
              pending.shift();
              if (pending.length === 0) {
                isLoading = false;
                return loading(false);
              } else {
                return fetch(scrolling);
              }
            });
          };
          fetch = function (scrolling) {
            var direction;
            direction = pending[0];
            if (direction) {
              if (buffer.length && !shouldLoadBottom()) {
                return finalize(scrolling);
              } else {
                return datasource.get(next, bufferSize, function (result) {
                  var item, newItems, _i, _len;
                  newItems = [];
                  if (result.length === 0) {
                    eof = true;
                    adapter.bottomPadding(0);
                    console.log('appended: requested ' + bufferSize + ' records starting from ' + next + ' recieved: eof');
                  } else {
                    clipTop();
                    for (_i = 0, _len = result.length; _i < _len; _i++) {
                      item = result[_i];
                      newItems.push(insert(++next, item));
                    }
                    console.log('appended: requested ' + bufferSize + ' received ' + result.length + ' buffer size ' + buffer.length + ' first ' + first + ' next ' + next);
                  }
                  return finalize(scrolling, newItems);
                });
              }
            } else {
              if (buffer.length && !shouldLoadTop()) {
                return finalize(scrolling);
              } else {
                return datasource.get(first - bufferSize, bufferSize, function (result) {
                  var i, newItems, _i, _ref;
                  newItems = [];
                  if (result.length === 0) {
                    bof = true;
                    adapter.topPadding(0);
                    console.log('prepended: requested ' + bufferSize + ' records starting from ' + (first - bufferSize) + ' recieved: bof');
                  } else {
                    clipBottom();
                    for (i = _i = _ref = result.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {
                      newItems.unshift(insert(--first, result[i]));
                    }
                    console.log('prepended: requested ' + bufferSize + ' received ' + result.length + ' buffer size ' + buffer.length + ' first ' + first + ' next ' + next);
                  }
                  return finalize(scrolling, newItems);
                });
              }
            }
          };
          resizeHandler = function () {
            if (!$rootScope.$$phase && !isLoading) {
              adjustBuffer(false);
              return $scope.$apply();
            }
          };
          viewport.bind('resize', resizeHandler);
          scrollHandler = function () {
            if (!$rootScope.$$phase && !isLoading) {
              adjustBuffer(true);
              return $scope.$apply();
            }
          };
          viewport.bind('scroll', scrollHandler);
          $scope.$watch(datasource.revision, function () {
            return reload();
          });
          if (datasource.scope) {
            eventListener = datasource.scope.$new();
          } else {
            eventListener = $scope.$new();
          }
          $scope.$on('$destroy', function () {
            eventListener.$destroy();
            viewport.unbind('resize', resizeHandler);
            return viewport.unbind('scroll', scrollHandler);
          });
          eventListener.$on('update.items', function (event, locator, newItem) {
            var wrapper, _fn, _i, _len, _ref;
            if (angular.isFunction(locator)) {
              _fn = function (wrapper) {
                return locator(wrapper.scope);
              };
              for (_i = 0, _len = buffer.length; _i < _len; _i++) {
                wrapper = buffer[_i];
                _fn(wrapper);
              }
            } else {
              if (0 <= (_ref = locator - first - 1) && _ref < buffer.length) {
                buffer[locator - first - 1].scope[itemName] = newItem;
              }
            }
            return null;
          });
          eventListener.$on('delete.items', function (event, locator) {
            var i, item, temp, wrapper, _fn, _i, _j, _k, _len, _len1, _len2, _ref;
            if (angular.isFunction(locator)) {
              temp = [];
              for (_i = 0, _len = buffer.length; _i < _len; _i++) {
                item = buffer[_i];
                temp.unshift(item);
              }
              _fn = function (wrapper) {
                if (locator(wrapper.scope)) {
                  removeFromBuffer(temp.length - 1 - i, temp.length - i);
                  return next--;
                }
              };
              for (i = _j = 0, _len1 = temp.length; _j < _len1; i = ++_j) {
                wrapper = temp[i];
                _fn(wrapper);
              }
            } else {
              if (0 <= (_ref = locator - first - 1) && _ref < buffer.length) {
                removeFromBuffer(locator - first - 1, locator - first);
                next--;
              }
            }
            for (i = _k = 0, _len2 = buffer.length; _k < _len2; i = ++_k) {
              item = buffer[i];
              item.scope.$index = first + i;
            }
            return adjustBuffer(false);
          });
          return eventListener.$on('insert.item', function (event, locator, item) {
            var i, inserted, temp, wrapper, _fn, _i, _j, _k, _len, _len1, _len2, _ref;
            inserted = [];
            if (angular.isFunction(locator)) {
              temp = [];
              for (_i = 0, _len = buffer.length; _i < _len; _i++) {
                item = buffer[_i];
                temp.unshift(item);
              }
              _fn = function (wrapper) {
                var j, newItems, _k, _len2, _results;
                if (newItems = locator(wrapper.scope)) {
                  insert = function (index, newItem) {
                    insert(index, newItem);
                    return next++;
                  };
                  if (angular.isArray(newItems)) {
                    _results = [];
                    for (j = _k = 0, _len2 = newItems.length; _k < _len2; j = ++_k) {
                      item = newItems[j];
                      _results.push(inserted.push(insert(i + j, item)));
                    }
                    return _results;
                  } else {
                    return inserted.push(insert(i, newItems));
                  }
                }
              };
              for (i = _j = 0, _len1 = temp.length; _j < _len1; i = ++_j) {
                wrapper = temp[i];
                _fn(wrapper);
              }
            } else {
              if (0 <= (_ref = locator - first - 1) && _ref < buffer.length) {
                inserted.push(insert(locator, item));
                next++;
              }
            }
            for (i = _k = 0, _len2 = buffer.length; _k < _len2; i = ++_k) {
              item = buffer[i];
              item.scope.$index = first + i;
            }
            return adjustBuffer(false, inserted);
          });
        };
      }
    };
  }
]);
'use strict';
/**
 * Adds a 'ui-scrollfix' class to the element when the page scrolls past it's position.
 * @param [offset] {int} optional Y-offset to override the detected offset.
 *   Takes 300 (absolute) or -300 or +300 (relative to detected)
 */
angular.module('ui.scrollfix', []).directive('uiScrollfix', [
  '$window',
  function ($window) {
    return {
      require: '^?uiScrollfixTarget',
      link: function (scope, elm, attrs, uiScrollfixTarget) {
        var top = elm[0].offsetTop, $target = uiScrollfixTarget && uiScrollfixTarget.$element || angular.element($window);
        if (!attrs.uiScrollfix) {
          attrs.uiScrollfix = top;
        } else if (typeof attrs.uiScrollfix === 'string') {
          // charAt is generally faster than indexOf: http://jsperf.com/indexof-vs-charat
          if (attrs.uiScrollfix.charAt(0) === '-') {
            attrs.uiScrollfix = top - parseFloat(attrs.uiScrollfix.substr(1));
          } else if (attrs.uiScrollfix.charAt(0) === '+') {
            attrs.uiScrollfix = top + parseFloat(attrs.uiScrollfix.substr(1));
          }
        }
        function onScroll() {
          // if pageYOffset is defined use it, otherwise use other crap for IE
          var offset;
          if (angular.isDefined($window.pageYOffset)) {
            offset = $window.pageYOffset;
          } else {
            var iebody = document.compatMode && document.compatMode !== 'BackCompat' ? document.documentElement : document.body;
            offset = iebody.scrollTop;
          }
          if (!elm.hasClass('ui-scrollfix') && offset > attrs.uiScrollfix) {
            elm.addClass('ui-scrollfix');
          } else if (elm.hasClass('ui-scrollfix') && offset < attrs.uiScrollfix) {
            elm.removeClass('ui-scrollfix');
          }
        }
        $target.on('scroll', onScroll);
        // Unbind scroll event handler when directive is removed
        scope.$on('$destroy', function () {
          $target.off('scroll', onScroll);
        });
      }
    };
  }
]).directive('uiScrollfixTarget', [function () {
    return {
      controller: [
        '$element',
        function ($element) {
          this.$element = $element;
        }
      ]
    };
  }]);
'use strict';
/**
 * uiShow Directive
 *
 * Adds a 'ui-show' class to the element instead of display:block
 * Created to allow tighter control  of CSS without bulkier directives
 *
 * @param expression {boolean} evaluated expression to determine if the class should be added
 */
angular.module('ui.showhide', []).directive('uiShow', [function () {
    return function (scope, elm, attrs) {
      scope.$watch(attrs.uiShow, function (newVal) {
        if (newVal) {
          elm.addClass('ui-show');
        } else {
          elm.removeClass('ui-show');
        }
      });
    };
  }]).directive('uiHide', [function () {
    return function (scope, elm, attrs) {
      scope.$watch(attrs.uiHide, function (newVal) {
        if (newVal) {
          elm.addClass('ui-hide');
        } else {
          elm.removeClass('ui-hide');
        }
      });
    };
  }]).directive('uiToggle', [function () {
    return function (scope, elm, attrs) {
      scope.$watch(attrs.uiToggle, function (newVal) {
        if (newVal) {
          elm.removeClass('ui-hide').addClass('ui-show');
        } else {
          elm.removeClass('ui-show').addClass('ui-hide');
        }
      });
    };
  }]);
'use strict';
/**
 * Filters out all duplicate items from an array by checking the specified key
 * @param [key] {string} the name of the attribute of each object to compare for uniqueness
 if the key is empty, the entire object will be compared
 if the key === false then no filtering will be performed
 * @return {array}
 */
angular.module('ui.unique', []).filter('unique', [
  '$parse',
  function ($parse) {
    return function (items, filterOn) {
      if (filterOn === false) {
        return items;
      }
      if ((filterOn || angular.isUndefined(filterOn)) && angular.isArray(items)) {
        var newItems = [], get = angular.isString(filterOn) ? $parse(filterOn) : function (item) {
            return item;
          };
        var extractValueToCompare = function (item) {
          return angular.isObject(item) ? get(item) : item;
        };
        angular.forEach(items, function (item) {
          var isDuplicate = false;
          for (var i = 0; i < newItems.length; i++) {
            if (angular.equals(extractValueToCompare(newItems[i]), extractValueToCompare(item))) {
              isDuplicate = true;
              break;
            }
          }
          if (!isDuplicate) {
            newItems.push(item);
          }
        });
        items = newItems;
      }
      return items;
    };
  }
]);
'use strict';
/**
 * General-purpose validator for ngModel.
 * angular.js comes with several built-in validation mechanism for input fields (ngRequired, ngPattern etc.) but using
 * an arbitrary validation function requires creation of a custom formatters and / or parsers.
 * The ui-validate directive makes it easy to use any function(s) defined in scope as a validator function(s).
 * A validator function will trigger validation on both model and input changes.
 *
 * @example <input ui-validate=" 'myValidatorFunction($value)' ">
 * @example <input ui-validate="{ foo : '$value > anotherModel', bar : 'validateFoo($value)' }">
 * @example <input ui-validate="{ foo : '$value > anotherModel' }" ui-validate-watch=" 'anotherModel' ">
 * @example <input ui-validate="{ foo : '$value > anotherModel', bar : 'validateFoo($value)' }" ui-validate-watch=" { foo : 'anotherModel' } ">
 *
 * @param ui-validate {string|object literal} If strings is passed it should be a scope's function to be used as a validator.
 * If an object literal is passed a key denotes a validation error key while a value should be a validator function.
 * In both cases validator function should take a value to validate as its argument and should return true/false indicating a validation result.
 */
angular.module('ui.validate', []).directive('uiValidate', function () {
  return {
    restrict: 'A',
    require: 'ngModel',
    link: function (scope, elm, attrs, ctrl) {
      var validateFn, validators = {}, validateExpr = scope.$eval(attrs.uiValidate);
      if (!validateExpr) {
        return;
      }
      if (angular.isString(validateExpr)) {
        validateExpr = { validator: validateExpr };
      }
      angular.forEach(validateExpr, function (exprssn, key) {
        validateFn = function (valueToValidate) {
          var expression = scope.$eval(exprssn, { '$value': valueToValidate });
          if (angular.isObject(expression) && angular.isFunction(expression.then)) {
            // expression is a promise
            expression.then(function () {
              ctrl.$setValidity(key, true);
            }, function () {
              ctrl.$setValidity(key, false);
            });
            return valueToValidate;
          } else if (expression) {
            // expression is true
            ctrl.$setValidity(key, true);
            return valueToValidate;
          } else {
            // expression is false
            ctrl.$setValidity(key, false);
            return valueToValidate;
          }
        };
        validators[key] = validateFn;
        ctrl.$formatters.push(validateFn);
        ctrl.$parsers.push(validateFn);
      });
      function apply_watch(watch) {
        //string - update all validators on expression change
        if (angular.isString(watch)) {
          scope.$watch(watch, function () {
            angular.forEach(validators, function (validatorFn) {
              validatorFn(ctrl.$modelValue);
            });
          });
          return;
        }
        //array - update all validators on change of any expression
        if (angular.isArray(watch)) {
          angular.forEach(watch, function (expression) {
            scope.$watch(expression, function () {
              angular.forEach(validators, function (validatorFn) {
                validatorFn(ctrl.$modelValue);
              });
            });
          });
          return;
        }
        //object - update appropriate validator
        if (angular.isObject(watch)) {
          angular.forEach(watch, function (expression, validatorKey) {
            //value is string - look after one expression
            if (angular.isString(expression)) {
              scope.$watch(expression, function () {
                validators[validatorKey](ctrl.$modelValue);
              });
            }
            //value is array - look after all expressions in array
            if (angular.isArray(expression)) {
              angular.forEach(expression, function (intExpression) {
                scope.$watch(intExpression, function () {
                  validators[validatorKey](ctrl.$modelValue);
                });
              });
            }
          });
        }
      }
      // Support for ui-validate-watch
      if (attrs.uiValidateWatch) {
        apply_watch(scope.$eval(attrs.uiValidateWatch));
      }
    }
  };
});
angular.module('ui.utils', [
  'ui.event',
  'ui.format',
  'ui.highlight',
  'ui.include',
  'ui.indeterminate',
  'ui.inflector',
  'ui.jq',
  'ui.keypress',
  'ui.mask',
  'ui.reset',
  'ui.route',
  'ui.scrollfix',
  'ui.scroll',
  'ui.scroll.jqlite',
  'ui.showhide',
  'ui.unique',
  'ui.validate'
]);
!function (e) {
  if ('object' == typeof exports)
    module.exports = e();
  else if ('function' == typeof define && define.amd)
    define(e);
  else {
    var r;
    'undefined' != typeof window ? r = window : 'undefined' != typeof global ? r = global : 'undefined' != typeof self && (r = self), r.s = e();
  }
}(function () {
  return function e(r, t, n) {
    function i(o, p) {
      if (!t[o]) {
        if (!r[o]) {
          var u = 'function' == typeof require && require;
          if (!p && u)
            return u(o, !0);
          if (a)
            return a(o, !0);
          throw new Error('Cannot find module \'' + o + '\'');
        }
        var c = t[o] = { exports: {} };
        r[o][0].call(c.exports, function (e) {
          var t = r[o][1][e];
          return i(t ? t : e);
        }, c, c.exports, e, r, t, n);
      }
      return t[o].exports;
    }
    for (var a = 'function' == typeof require && require, o = 0; o < n.length; o++)
      i(n[o]);
    return i;
  }({
    1: [
      function (e, r) {
        var t = e('./trim'), n = e('./decapitalize');
        r.exports = function (e, r) {
          return e = t(e).replace(/[-_\s]+(.)?/g, function (e, r) {
            return r ? r.toUpperCase() : '';
          }), r === !0 ? n(e) : e;
        };
      },
      {
        './decapitalize': 9,
        './trim': 60
      }
    ],
    2: [
      function (e, r) {
        var t = e('./helper/makeString');
        r.exports = function (e) {
          return e = t(e), e.charAt(0).toUpperCase() + e.slice(1);
        };
      },
      { './helper/makeString': 19 }
    ],
    3: [
      function (e, r) {
        var t = e('./helper/makeString');
        r.exports = function (e) {
          return t(e).split('');
        };
      },
      { './helper/makeString': 19 }
    ],
    4: [
      function (e, r) {
        r.exports = function (e, r) {
          return null == e ? [] : (e = String(e), r = ~~r, r > 0 ? e.match(new RegExp('.{1,' + r + '}', 'g')) : [e]);
        };
      },
      {}
    ],
    5: [
      function (e, r) {
        var t = e('./capitalize'), n = e('./camelize'), i = e('./helper/makeString');
        r.exports = function (e) {
          return e = i(e), t(n(e.replace(/[\W_]/g, ' ')).replace(/\s/g, ''));
        };
      },
      {
        './camelize': 1,
        './capitalize': 2,
        './helper/makeString': 19
      }
    ],
    6: [
      function (e, r) {
        var t = e('./trim');
        r.exports = function (e) {
          return t(e).replace(/\s+/g, ' ');
        };
      },
      { './trim': 60 }
    ],
    7: [
      function (e, r) {
        var t = e('./helper/makeString');
        r.exports = function (e, r) {
          if (e = t(e), r = t(r), 0 === e.length || 0 === r.length)
            return 0;
          for (var n = 0, i = 0, a = r.length;;) {
            if (i = e.indexOf(r, i), -1 === i)
              break;
            n++, i += a;
          }
          return n;
        };
      },
      { './helper/makeString': 19 }
    ],
    8: [
      function (e, r) {
        var t = e('./trim');
        r.exports = function (e) {
          return t(e).replace(/([A-Z])/g, '-$1').replace(/[-_\s]+/g, '-').toLowerCase();
        };
      },
      { './trim': 60 }
    ],
    9: [
      function (e, r) {
        var t = e('./helper/makeString');
        r.exports = function (e) {
          return e = t(e), e.charAt(0).toLowerCase() + e.slice(1);
        };
      },
      { './helper/makeString': 19 }
    ],
    10: [
      function (e, r) {
        function t(e) {
          for (var r = e.match(/^[\s\\t]*/gm), t = r[0].length, n = 1; n < r.length; n++)
            t = Math.min(r[n].length, t);
          return t;
        }
        var n = e('./helper/makeString');
        r.exports = function (e, r) {
          e = n(e);
          var i, a = t(e);
          return 0 === a ? e : (i = 'string' == typeof r ? new RegExp('^' + r, 'gm') : new RegExp('^[ \\t]{' + a + '}', 'gm'), e.replace(i, ''));
        };
      },
      { './helper/makeString': 19 }
    ],
    11: [
      function (e, r) {
        var t = e('./helper/makeString'), n = e('./helper/toPositive');
        r.exports = function (e, r, i) {
          return e = t(e), r = '' + r, i = 'undefined' == typeof i ? e.length - r.length : Math.min(n(i), e.length) - r.length, i >= 0 && e.indexOf(r, i) === i;
        };
      },
      {
        './helper/makeString': 19,
        './helper/toPositive': 21
      }
    ],
    12: [
      function (e, r) {
        var t = e('./helper/makeString'), n = e('./helper/escapeChars'), i = {};
        for (var a in n)
          i[n[a]] = a;
        i['\''] = '#39', r.exports = function (e) {
          return t(e).replace(/[&<>"']/g, function (e) {
            return '&' + i[e] + ';';
          });
        };
      },
      {
        './helper/escapeChars': 17,
        './helper/makeString': 19
      }
    ],
    13: [
      function (e, r) {
        r.exports = function () {
          var e = {};
          for (var r in this)
            this.hasOwnProperty(r) && !r.match(/^(?:include|contains|reverse|join)$/) && (e[r] = this[r]);
          return e;
        };
      },
      {}
    ],
    14: [
      function (e, r) {
        'use strict';
        function t(e) {
          return this instanceof t ? void (this._wrapped = e) : new t(e);
        }
        function n(e, r) {
          'function' == typeof r && (t.prototype[e] = function () {
            var e = [this._wrapped].concat(Array.prototype.slice.call(arguments)), n = r.apply(null, e);
            return 'string' == typeof n ? new t(n) : n;
          });
        }
        function i(e) {
          n(e, function (r) {
            var t = Array.prototype.slice.call(arguments, 1);
            return String.prototype[e].apply(r, t);
          });
        }
        t.VERSION = '3.0.3', t.isBlank = e('./isBlank'), t.stripTags = e('./stripTags'), t.capitalize = e('./capitalize'), t.decapitalize = e('./decapitalize'), t.chop = e('./chop'), t.trim = e('./trim'), t.clean = e('./clean'), t.count = e('./count'), t.chars = e('./chars'), t.swapCase = e('./swapCase'), t.escapeHTML = e('./escapeHTML'), t.unescapeHTML = e('./unescapeHTML'), t.splice = e('./splice'), t.insert = e('./insert'), t.replaceAll = e('./replaceAll'), t.include = e('./include'), t.join = e('./join'), t.lines = e('./lines'), t.dedent = e('./dedent'), t.reverse = e('./reverse'), t.startsWith = e('./startsWith'), t.endsWith = e('./endsWith'), t.pred = e('./pred'), t.succ = e('./succ'), t.titleize = e('./titleize'), t.camelize = e('./camelize'), t.underscored = e('./underscored'), t.dasherize = e('./dasherize'), t.classify = e('./classify'), t.humanize = e('./humanize'), t.ltrim = e('./ltrim'), t.rtrim = e('./rtrim'), t.truncate = e('./truncate'), t.prune = e('./prune'), t.words = e('./words'), t.pad = e('./pad'), t.lpad = e('./lpad'), t.rpad = e('./rpad'), t.lrpad = e('./lrpad'), t.sprintf = e('./sprintf'), t.vsprintf = e('./vsprintf'), t.toNumber = e('./toNumber'), t.numberFormat = e('./numberFormat'), t.strRight = e('./strRight'), t.strRightBack = e('./strRightBack'), t.strLeft = e('./strLeft'), t.strLeftBack = e('./strLeftBack'), t.toSentence = e('./toSentence'), t.toSentenceSerial = e('./toSentenceSerial'), t.slugify = e('./slugify'), t.surround = e('./surround'), t.quote = e('./quote'), t.unquote = e('./unquote'), t.repeat = e('./repeat'), t.naturalCmp = e('./naturalCmp'), t.levenshtein = e('./levenshtein'), t.toBoolean = e('./toBoolean'), t.exports = e('./exports'), t.escapeRegExp = e('./helper/escapeRegExp'), t.strip = t.trim, t.lstrip = t.ltrim, t.rstrip = t.rtrim, t.center = t.lrpad, t.rjust = t.lpad, t.ljust = t.rpad, t.contains = t.include, t.q = t.quote, t.toBool = t.toBoolean, t.camelcase = t.camelize, t.prototype = {
          value: function () {
            return this._wrapped;
          }
        };
        for (var a in t)
          n(a, t[a]);
        n('tap', function (e, r) {
          return r(e);
        });
        var o = [
            'toUpperCase',
            'toLowerCase',
            'split',
            'replace',
            'slice',
            'substring',
            'substr',
            'concat'
          ];
        for (var a in o)
          i(o[a]);
        r.exports = t;
      },
      {
        './camelize': 1,
        './capitalize': 2,
        './chars': 3,
        './chop': 4,
        './classify': 5,
        './clean': 6,
        './count': 7,
        './dasherize': 8,
        './decapitalize': 9,
        './dedent': 10,
        './endsWith': 11,
        './escapeHTML': 12,
        './exports': 13,
        './helper/escapeRegExp': 18,
        './humanize': 22,
        './include': 23,
        './insert': 24,
        './isBlank': 25,
        './join': 26,
        './levenshtein': 27,
        './lines': 28,
        './lpad': 29,
        './lrpad': 30,
        './ltrim': 31,
        './naturalCmp': 32,
        './numberFormat': 33,
        './pad': 34,
        './pred': 35,
        './prune': 36,
        './quote': 37,
        './repeat': 38,
        './replaceAll': 39,
        './reverse': 40,
        './rpad': 41,
        './rtrim': 42,
        './slugify': 43,
        './splice': 44,
        './sprintf': 45,
        './startsWith': 46,
        './strLeft': 47,
        './strLeftBack': 48,
        './strRight': 49,
        './strRightBack': 50,
        './stripTags': 51,
        './succ': 52,
        './surround': 53,
        './swapCase': 54,
        './titleize': 55,
        './toBoolean': 56,
        './toNumber': 57,
        './toSentence': 58,
        './toSentenceSerial': 59,
        './trim': 60,
        './truncate': 61,
        './underscored': 62,
        './unescapeHTML': 63,
        './unquote': 64,
        './vsprintf': 65,
        './words': 66
      }
    ],
    15: [
      function (e, r) {
        var t = e('./makeString');
        r.exports = function (e, r) {
          return e = t(e), 0 === e.length ? '' : e.slice(0, -1) + String.fromCharCode(e.charCodeAt(e.length - 1) + r);
        };
      },
      { './makeString': 19 }
    ],
    16: [
      function (e, r) {
        var t = e('./escapeRegExp');
        r.exports = function (e) {
          return null == e ? '\\s' : e.source ? e.source : '[' + t(e) + ']';
        };
      },
      { './escapeRegExp': 18 }
    ],
    17: [
      function (e, r) {
        var t = {
            lt: '<',
            gt: '>',
            quot: '"',
            amp: '&',
            apos: '\''
          };
        r.exports = t;
      },
      {}
    ],
    18: [
      function (e, r) {
        var t = e('./makeString');
        r.exports = function (e) {
          return t(e).replace(/([.*+?^=!:${}()|[\]\/\\])/g, '\\$1');
        };
      },
      { './makeString': 19 }
    ],
    19: [
      function (e, r) {
        r.exports = function (e) {
          return null == e ? '' : '' + e;
        };
      },
      {}
    ],
    20: [
      function (e, r) {
        r.exports = function (e, r) {
          if (1 > r)
            return '';
          for (var t = ''; r > 0;)
            1 & r && (t += e), r >>= 1, e += e;
          return t;
        };
      },
      {}
    ],
    21: [
      function (e, r) {
        r.exports = function (e) {
          return 0 > e ? 0 : +e || 0;
        };
      },
      {}
    ],
    22: [
      function (e, r) {
        var t = e('./capitalize'), n = e('./underscored'), i = e('./trim');
        r.exports = function (e) {
          return t(i(n(e).replace(/_id$/, '').replace(/_/g, ' ')));
        };
      },
      {
        './capitalize': 2,
        './trim': 60,
        './underscored': 62
      }
    ],
    23: [
      function (e, r) {
        var t = e('./helper/makeString');
        r.exports = function (e, r) {
          return '' === r ? !0 : -1 !== t(e).indexOf(r);
        };
      },
      { './helper/makeString': 19 }
    ],
    24: [
      function (e, r) {
        var t = e('./splice');
        r.exports = function (e, r, n) {
          return t(e, r, 0, n);
        };
      },
      { './splice': 44 }
    ],
    25: [
      function (e, r) {
        var t = e('./helper/makeString');
        r.exports = function (e) {
          return /^\s*$/.test(t(e));
        };
      },
      { './helper/makeString': 19 }
    ],
    26: [
      function (e, r) {
        var t = e('./helper/makeString'), n = [].slice;
        r.exports = function () {
          var e = n.call(arguments), r = e.shift();
          return e.join(t(r));
        };
      },
      { './helper/makeString': 19 }
    ],
    27: [
      function (e, r) {
        var t = e('./helper/makeString');
        r.exports = function (e, r) {
          e = t(e), r = t(r);
          for (var n, i, a = [], o = 0; o <= r.length; o++)
            for (var p = 0; p <= e.length; p++)
              i = o && p ? e.charAt(p - 1) === r.charAt(o - 1) ? n : Math.min(a[p], a[p - 1], n) + 1 : o + p, n = a[p], a[p] = i;
          return a.pop();
        };
      },
      { './helper/makeString': 19 }
    ],
    28: [
      function (e, r) {
        r.exports = function (e) {
          return null == e ? [] : String(e).split(/\r?\n/);
        };
      },
      {}
    ],
    29: [
      function (e, r) {
        var t = e('./pad');
        r.exports = function (e, r, n) {
          return t(e, r, n);
        };
      },
      { './pad': 34 }
    ],
    30: [
      function (e, r) {
        var t = e('./pad');
        r.exports = function (e, r, n) {
          return t(e, r, n, 'both');
        };
      },
      { './pad': 34 }
    ],
    31: [
      function (e, r) {
        var t = e('./helper/makeString'), n = e('./helper/defaultToWhiteSpace'), i = String.prototype.trimLeft;
        r.exports = function (e, r) {
          return e = t(e), !r && i ? i.call(e) : (r = n(r), e.replace(new RegExp('^' + r + '+'), ''));
        };
      },
      {
        './helper/defaultToWhiteSpace': 16,
        './helper/makeString': 19
      }
    ],
    32: [
      function (e, r) {
        r.exports = function (e, r) {
          if (e == r)
            return 0;
          if (!e)
            return -1;
          if (!r)
            return 1;
          for (var t = /(\.\d+)|(\d+)|(\D+)/g, n = String(e).match(t), i = String(r).match(t), a = Math.min(n.length, i.length), o = 0; a > o; o++) {
            var p = n[o], u = i[o];
            if (p !== u) {
              var c = +p, s = +u;
              return c === c && s === s ? c > s ? 1 : -1 : u > p ? -1 : 1;
            }
          }
          return n.length != i.length ? n.length - i.length : r > e ? -1 : 1;
        };
      },
      {}
    ],
    33: [
      function (e, r) {
        r.exports = function (e, r, t, n) {
          if (isNaN(e) || null == e)
            return '';
          e = e.toFixed(~~r), n = 'string' == typeof n ? n : ',';
          var i = e.split('.'), a = i[0], o = i[1] ? (t || '.') + i[1] : '';
          return a.replace(/(\d)(?=(?:\d{3})+$)/g, '$1' + n) + o;
        };
      },
      {}
    ],
    34: [
      function (e, r) {
        var t = e('./helper/makeString'), n = e('./helper/strRepeat');
        r.exports = function (e, r, i, a) {
          e = t(e), r = ~~r;
          var o = 0;
          switch (i ? i.length > 1 && (i = i.charAt(0)) : i = ' ', a) {
          case 'right':
            return o = r - e.length, e + n(i, o);
          case 'both':
            return o = r - e.length, n(i, Math.ceil(o / 2)) + e + n(i, Math.floor(o / 2));
          default:
            return o = r - e.length, n(i, o) + e;
          }
        };
      },
      {
        './helper/makeString': 19,
        './helper/strRepeat': 20
      }
    ],
    35: [
      function (e, r) {
        var t = e('./helper/adjacent');
        r.exports = function (e) {
          return t(e, -1);
        };
      },
      { './helper/adjacent': 15 }
    ],
    36: [
      function (e, r) {
        var t = e('./helper/makeString'), n = e('./rtrim');
        r.exports = function (e, r, i) {
          if (e = t(e), r = ~~r, i = null != i ? String(i) : '...', e.length <= r)
            return e;
          var a = function (e) {
              return e.toUpperCase() !== e.toLowerCase() ? 'A' : ' ';
            }, o = e.slice(0, r + 1).replace(/.(?=\W*\w*$)/g, a);
          return o = o.slice(o.length - 2).match(/\w\w/) ? o.replace(/\s*\S+$/, '') : n(o.slice(0, o.length - 1)), (o + i).length > e.length ? e : e.slice(0, o.length) + i;
        };
      },
      {
        './helper/makeString': 19,
        './rtrim': 42
      }
    ],
    37: [
      function (e, r) {
        var t = e('./surround');
        r.exports = function (e, r) {
          return t(e, r || '"');
        };
      },
      { './surround': 53 }
    ],
    38: [
      function (e, r) {
        var t = e('./helper/makeString'), n = e('./helper/strRepeat');
        r.exports = function i(e, r, a) {
          if (e = t(e), r = ~~r, null == a)
            return n(e, r);
          for (var i = []; r > 0; i[--r] = e);
          return i.join(a);
        };
      },
      {
        './helper/makeString': 19,
        './helper/strRepeat': 20
      }
    ],
    39: [
      function (e, r) {
        var t = e('./helper/makeString');
        r.exports = function (e, r, n, i) {
          var a = i === !0 ? 'gi' : 'g', o = new RegExp(r, a);
          return t(e).replace(o, n);
        };
      },
      { './helper/makeString': 19 }
    ],
    40: [
      function (e, r) {
        var t = e('./chars');
        r.exports = function (e) {
          return t(e).reverse().join('');
        };
      },
      { './chars': 3 }
    ],
    41: [
      function (e, r) {
        var t = e('./pad');
        r.exports = function (e, r, n) {
          return t(e, r, n, 'right');
        };
      },
      { './pad': 34 }
    ],
    42: [
      function (e, r) {
        var t = e('./helper/makeString'), n = e('./helper/defaultToWhiteSpace'), i = String.prototype.trimRight;
        r.exports = function (e, r) {
          return e = t(e), !r && i ? i.call(e) : (r = n(r), e.replace(new RegExp(r + '+$'), ''));
        };
      },
      {
        './helper/defaultToWhiteSpace': 16,
        './helper/makeString': 19
      }
    ],
    43: [
      function (e, r) {
        var t = e('./helper/makeString'), n = e('./helper/defaultToWhiteSpace'), i = e('./trim'), a = e('./dasherize');
        r.exports = function (e) {
          var r = '\u0105\xe0\xe1\xe4\xe2\xe3\xe5\xe6\u0103\u0107\u010d\u0109\u0119\xe8\xe9\xeb\xea\u011d\u0125\xec\xed\xef\xee\u0135\u0142\u013e\u0144\u0148\xf2\xf3\xf6\u0151\xf4\xf5\xf0\xf8\u015b\u0219\u0161\u015d\u0165\u021b\u016d\xf9\xfa\xfc\u0171\xfb\xf1\xff\xfd\xe7\u017c\u017a\u017e', o = 'aaaaaaaaaccceeeeeghiiiijllnnoooooooossssttuuuuuunyyczzz', p = new RegExp(n(r), 'g');
          return e = t(e).toLowerCase().replace(p, function (e) {
            var t = r.indexOf(e);
            return o.charAt(t) || '-';
          }), i(a(e.replace(/[^\w\s-]/g, '-')), '-');
        };
      },
      {
        './dasherize': 8,
        './helper/defaultToWhiteSpace': 16,
        './helper/makeString': 19,
        './trim': 60
      }
    ],
    44: [
      function (e, r) {
        var t = e('./chars');
        r.exports = function (e, r, n, i) {
          var a = t(e);
          return a.splice(~~r, ~~n, i), a.join('');
        };
      },
      { './chars': 3 }
    ],
    45: [
      function (e, r) {
        var t = e('./helper/strRepeat'), n = Object.prototype.toString, i = function () {
            function e(e) {
              return n.call(e).slice(8, -1).toLowerCase();
            }
            var r = t, a = function () {
                return a.cache.hasOwnProperty(arguments[0]) || (a.cache[arguments[0]] = a.parse(arguments[0])), a.format.call(null, a.cache[arguments[0]], arguments);
              };
            return a.format = function (t, n) {
              var a, o, p, u, c, s, l, f = 1, h = t.length, g = '', m = [];
              for (o = 0; h > o; o++)
                if (g = e(t[o]), 'string' === g)
                  m.push(t[o]);
                else if ('array' === g) {
                  if (u = t[o], u[2])
                    for (a = n[f], p = 0; p < u[2].length; p++) {
                      if (!a.hasOwnProperty(u[2][p]))
                        throw new Error(i('[_.sprintf] property "%s" does not exist', u[2][p]));
                      a = a[u[2][p]];
                    }
                  else
                    a = u[1] ? n[u[1]] : n[f++];
                  if (/[^s]/.test(u[8]) && 'number' != e(a))
                    throw new Error(i('[_.sprintf] expecting number but found %s', e(a)));
                  switch (u[8]) {
                  case 'b':
                    a = a.toString(2);
                    break;
                  case 'c':
                    a = String.fromCharCode(a);
                    break;
                  case 'd':
                    a = parseInt(a, 10);
                    break;
                  case 'e':
                    a = u[7] ? a.toExponential(u[7]) : a.toExponential();
                    break;
                  case 'f':
                    a = u[7] ? parseFloat(a).toFixed(u[7]) : parseFloat(a);
                    break;
                  case 'o':
                    a = a.toString(8);
                    break;
                  case 's':
                    a = (a = String(a)) && u[7] ? a.substring(0, u[7]) : a;
                    break;
                  case 'u':
                    a = Math.abs(a);
                    break;
                  case 'x':
                    a = a.toString(16);
                    break;
                  case 'X':
                    a = a.toString(16).toUpperCase();
                  }
                  a = /[def]/.test(u[8]) && u[3] && a >= 0 ? '+' + a : a, s = u[4] ? '0' == u[4] ? '0' : u[4].charAt(1) : ' ', l = u[6] - String(a).length, c = u[6] ? r(s, l) : '', m.push(u[5] ? a + c : c + a);
                }
              return m.join('');
            }, a.cache = {}, a.parse = function (e) {
              for (var r = e, t = [], n = [], i = 0; r;) {
                if (null !== (t = /^[^\x25]+/.exec(r)))
                  n.push(t[0]);
                else if (null !== (t = /^\x25{2}/.exec(r)))
                  n.push('%');
                else {
                  if (null === (t = /^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosuxX])/.exec(r)))
                    throw new Error('[_.sprintf] huh?');
                  if (t[2]) {
                    i |= 1;
                    var a = [], o = t[2], p = [];
                    if (null === (p = /^([a-z_][a-z_\d]*)/i.exec(o)))
                      throw new Error('[_.sprintf] huh?');
                    for (a.push(p[1]); '' !== (o = o.substring(p[0].length));)
                      if (null !== (p = /^\.([a-z_][a-z_\d]*)/i.exec(o)))
                        a.push(p[1]);
                      else {
                        if (null === (p = /^\[(\d+)\]/.exec(o)))
                          throw new Error('[_.sprintf] huh?');
                        a.push(p[1]);
                      }
                    t[2] = a;
                  } else
                    i |= 2;
                  if (3 === i)
                    throw new Error('[_.sprintf] mixing positional and named placeholders is not (yet) supported');
                  n.push(t);
                }
                r = r.substring(t[0].length);
              }
              return n;
            }, a;
          }();
        r.exports = i;
      },
      { './helper/strRepeat': 20 }
    ],
    46: [
      function (e, r) {
        var t = e('./helper/makeString'), n = e('./helper/toPositive');
        r.exports = function (e, r, i) {
          return e = t(e), r = '' + r, i = null == i ? 0 : Math.min(n(i), e.length), e.lastIndexOf(r, i) === i;
        };
      },
      {
        './helper/makeString': 19,
        './helper/toPositive': 21
      }
    ],
    47: [
      function (e, r) {
        var t = e('./helper/makeString');
        r.exports = function (e, r) {
          e = t(e), r = t(r);
          var n = r ? e.indexOf(r) : -1;
          return ~n ? e.slice(0, n) : e;
        };
      },
      { './helper/makeString': 19 }
    ],
    48: [
      function (e, r) {
        var t = e('./helper/makeString');
        r.exports = function (e, r) {
          e = t(e), r = t(r);
          var n = e.lastIndexOf(r);
          return ~n ? e.slice(0, n) : e;
        };
      },
      { './helper/makeString': 19 }
    ],
    49: [
      function (e, r) {
        var t = e('./helper/makeString');
        r.exports = function (e, r) {
          e = t(e), r = t(r);
          var n = r ? e.indexOf(r) : -1;
          return ~n ? e.slice(n + r.length, e.length) : e;
        };
      },
      { './helper/makeString': 19 }
    ],
    50: [
      function (e, r) {
        var t = e('./helper/makeString');
        r.exports = function (e, r) {
          e = t(e), r = t(r);
          var n = r ? e.lastIndexOf(r) : -1;
          return ~n ? e.slice(n + r.length, e.length) : e;
        };
      },
      { './helper/makeString': 19 }
    ],
    51: [
      function (e, r) {
        var t = e('./helper/makeString');
        r.exports = function (e) {
          return t(e).replace(/<\/?[^>]+>/g, '');
        };
      },
      { './helper/makeString': 19 }
    ],
    52: [
      function (e, r) {
        var t = e('./helper/adjacent');
        r.exports = function (e) {
          return t(e, 1);
        };
      },
      { './helper/adjacent': 15 }
    ],
    53: [
      function (e, r) {
        r.exports = function (e, r) {
          return [
            r,
            e,
            r
          ].join('');
        };
      },
      {}
    ],
    54: [
      function (e, r) {
        var t = e('./helper/makeString');
        r.exports = function (e) {
          return t(e).replace(/\S/g, function (e) {
            return e === e.toUpperCase() ? e.toLowerCase() : e.toUpperCase();
          });
        };
      },
      { './helper/makeString': 19 }
    ],
    55: [
      function (e, r) {
        var t = e('./helper/makeString');
        r.exports = function (e) {
          return t(e).toLowerCase().replace(/(?:^|\s|-)\S/g, function (e) {
            return e.toUpperCase();
          });
        };
      },
      { './helper/makeString': 19 }
    ],
    56: [
      function (e, r) {
        function t(e, r) {
          var t, n, i = e.toLowerCase();
          for (r = [].concat(r), t = 0; t < r.length; t += 1)
            if (n = r[t]) {
              if (n.test && n.test(e))
                return !0;
              if (n.toLowerCase() === i)
                return !0;
            }
        }
        var n = e('./trim');
        r.exports = function (e, r, i) {
          return 'number' == typeof e && (e = '' + e), 'string' != typeof e ? !!e : (e = n(e), t(e, r || [
            'true',
            '1'
          ]) ? !0 : t(e, i || [
            'false',
            '0'
          ]) ? !1 : void 0);
        };
      },
      { './trim': 60 }
    ],
    57: [
      function (e, r) {
        e('./trim');
        r.exports = function (e, r) {
          if (null == e)
            return 0;
          var t = Math.pow(10, isFinite(r) ? r : 0);
          return Math.round(e * t) / t;
        };
      },
      { './trim': 60 }
    ],
    58: [
      function (e, r) {
        var t = e('./rtrim');
        r.exports = function (e, r, n, i) {
          r = r || ', ', n = n || ' and ';
          var a = e.slice(), o = a.pop();
          return e.length > 2 && i && (n = t(r) + n), a.length ? a.join(r) + n + o : o;
        };
      },
      { './rtrim': 42 }
    ],
    59: [
      function (e, r) {
        var t = e('./toSentence');
        r.exports = function (e, r, n) {
          return t(e, r, n, !0);
        };
      },
      { './toSentence': 58 }
    ],
    60: [
      function (e, r) {
        var t = e('./helper/makeString'), n = e('./helper/defaultToWhiteSpace'), i = String.prototype.trim;
        r.exports = function (e, r) {
          return e = t(e), !r && i ? i.call(e) : (r = n(r), e.replace(new RegExp('^' + r + '+|' + r + '+$', 'g'), ''));
        };
      },
      {
        './helper/defaultToWhiteSpace': 16,
        './helper/makeString': 19
      }
    ],
    61: [
      function (e, r) {
        var t = e('./helper/makeString');
        r.exports = function (e, r, n) {
          return e = t(e), n = n || '...', r = ~~r, e.length > r ? e.slice(0, r) + n : e;
        };
      },
      { './helper/makeString': 19 }
    ],
    62: [
      function (e, r) {
        var t = e('./trim');
        r.exports = function (e) {
          return t(e).replace(/([a-z\d])([A-Z]+)/g, '$1_$2').replace(/[-\s]+/g, '_').toLowerCase();
        };
      },
      { './trim': 60 }
    ],
    63: [
      function (e, r) {
        var t = e('./helper/makeString'), n = e('./helper/escapeChars');
        r.exports = function (e) {
          return t(e).replace(/\&([^;]+);/g, function (e, r) {
            var t;
            return r in n ? n[r] : (t = r.match(/^#x([\da-fA-F]+)$/)) ? String.fromCharCode(parseInt(t[1], 16)) : (t = r.match(/^#(\d+)$/)) ? String.fromCharCode(~~t[1]) : e;
          });
        };
      },
      {
        './helper/escapeChars': 17,
        './helper/makeString': 19
      }
    ],
    64: [
      function (e, r) {
        r.exports = function (e, r) {
          return r = r || '"', e[0] === r && e[e.length - 1] === r ? e.slice(1, e.length - 1) : e;
        };
      },
      {}
    ],
    65: [
      function (e, r) {
        var t = e('./sprintf');
        r.exports = function (e, r) {
          return r.unshift(e), t.apply(null, r);
        };
      },
      { './sprintf': 45 }
    ],
    66: [
      function (e, r) {
        var t = e('./isBlank'), n = e('./trim');
        r.exports = function (e, r) {
          return t(e) ? [] : n(e, r).split(r || /\s+/);
        };
      },
      {
        './isBlank': 25,
        './trim': 60
      }
    ]
  }, {}, [14])(14);
});
/*!
 * jqPagination, a jQuery pagination plugin (obviously)
 * Version: 1.4 (26th July 2013)
 *
 * Copyright (C) 2013 Ben Everard
 *
 * http://beneverard.github.com/jqPagination
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
(function ($) {
  'use strict';
  $.jqPagination = function (el, options) {
    // To avoid scope issues, use 'base' instead of 'this'
    // to reference this class from internal events and functions.
    var base = this;
    // Access to jQuery and DOM versions of element
    base.$el = $(el);
    base.el = el;
    // get input jQuery object
    base.$input = base.$el.find('input');
    // Add a reverse reference to the DOM object
    base.$el.data('jqPagination', base);
    base.init = function () {
      base.options = $.extend({}, $.jqPagination.defaultOptions, options);
      // if the user hasn't provided a max page number in the options try and find
      // the data attribute for it, if that cannot be found, use one as a max page number
      if (base.options.max_page === null) {
        if (base.$input.data('max-page') !== undefined) {
          base.options.max_page = base.$input.data('max-page');
        } else {
          base.options.max_page = 1;
        }
      }
      // if the current-page data attribute is specified this takes priority
      // over the options passed in, so long as it's a number
      if (base.$input.data('current-page') !== undefined && base.isNumber(base.$input.data('current-page'))) {
        base.options.current_page = base.$input.data('current-page');
      }
      // remove the readonly attribute as JavaScript must be working by now ;-)
      base.$input.removeAttr('readonly');
      // set the initial input value
      // pass true to prevent paged callback form being fired
      base.updateInput(true);
      //***************
      // BIND EVENTS
      base.$input.on('focus.jqPagination mouseup.jqPagination', function (event) {
        // if event === focus, select all text...
        if (event.type === 'focus') {
          var current_page = parseInt(base.options.current_page, 10);
          $(this).val(current_page).select();
        }
        // if event === mouse up, return false. Fixes Chrome bug
        if (event.type === 'mouseup') {
          return false;
        }
      });
      base.$input.on('blur.jqPagination keydown.jqPagination', function (event) {
        var $self = $(this), current_page = parseInt(base.options.current_page, 10);
        // if the user hits escape revert the input back to the original value
        if (event.keyCode === 27) {
          $self.val(current_page);
          $self.blur();
        }
        // if the user hits enter, trigger blur event but DO NOT set the page value
        if (event.keyCode === 13) {
          $self.blur();
        }
        // only set the page is the event is focusout.. aka blur
        if (event.type === 'blur') {
          base.setPage($self.val());
        }
      });
      base.$el.on('click.jqPagination', 'a', function (event) {
        var $self = $(this);
        // we don't want to do anything if we've clicked a disabled link
        // return false so we stop normal link action btu also drop out of this event
        if ($self.hasClass('disabled')) {
          return false;
        }
        // for mac + windows (read: other), maintain the cmd + ctrl click for new tab
        if (!event.metaKey && !event.ctrlKey) {
          event.preventDefault();
          base.setPage($self.data('action'));
        }
      });
    };
    base.setPage = function (page, prevent_paged) {
      // return current_page value if getting instead of setting
      if (page === undefined) {
        return base.options.current_page;
      }
      var current_page = parseInt(base.options.current_page, 10), max_page = parseInt(base.options.max_page, 10);
      if (isNaN(parseInt(page, 10))) {
        switch (page) {
        case 'first':
          page = 1;
          break;
        case 'prev':
        case 'previous':
          page = current_page - 1;
          break;
        case 'next':
          page = current_page + 1;
          break;
        case 'last':
          page = max_page;
          break;
        }
      }
      page = parseInt(page, 10);
      // reject any invalid page requests
      if (isNaN(page) || page < 1 || page > max_page) {
        // update the input element
        base.setInputValue(current_page);
        return false;
      }
      // update current page options
      base.options.current_page = page;
      base.$input.data('current-page', page);
      // update the input element
      base.updateInput(prevent_paged);
    };
    base.setMaxPage = function (max_page, prevent_paged) {
      // return the max_page value if getting instead of setting
      if (max_page === undefined) {
        return base.options.max_page;
      }
      // ignore if max_page is not a number
      if (!base.isNumber(max_page)) {
        console.error('jqPagination: max_page is not a number');
        return false;
      }
      // ignore if max_page is less than the current_page
      if (max_page < base.options.current_page) {
        console.error('jqPagination: max_page lower than current_page');
        return false;
      }
      // set max_page options
      base.options.max_page = max_page;
      base.$input.data('max-page', max_page);
      // update the input element
      base.updateInput(prevent_paged);
    };
    // ATTN this isn't really the correct name is it?
    base.updateInput = function (prevent_paged) {
      var current_page = parseInt(base.options.current_page, 10);
      // set the input value
      base.setInputValue(current_page);
      // set the link href attributes
      base.setLinks(current_page);
      // we may want to prevent the paged callback from being fired
      if (prevent_paged !== true) {
        // fire the callback function with the current page
        base.options.paged(current_page);
      }
    };
    base.setInputValue = function (page) {
      var page_string = base.options.page_string, max_page = base.options.max_page;
      // this looks horrible :-(
      page_string = page_string.replace('{current_page}', page).replace('{max_page}', max_page);
      base.$input.val(page_string);
    };
    base.isNumber = function (n) {
      return !isNaN(parseFloat(n)) && isFinite(n);
    };
    base.setLinks = function (page) {
      var link_string = base.options.link_string, current_page = parseInt(base.options.current_page, 10), max_page = parseInt(base.options.max_page, 10);
      if (link_string !== '') {
        // set initial page numbers + make sure the page numbers aren't out of range
        var previous = current_page - 1;
        if (previous < 1) {
          previous = 1;
        }
        var next = current_page + 1;
        if (next > max_page) {
          next = max_page;
        }
        // apply each page number to the link string, set it back to the element href attribute
        base.$el.find('a.first').attr('href', link_string.replace('{page_number}', '1'));
        base.$el.find('a.prev, a.previous').attr('href', link_string.replace('{page_number}', previous));
        base.$el.find('a.next').attr('href', link_string.replace('{page_number}', next));
        base.$el.find('a.last').attr('href', link_string.replace('{page_number}', max_page));
      }
      // set disable class on appropriate links
      base.$el.find('a').removeClass('disabled');
      if (current_page === max_page) {
        base.$el.find('.next, .last').addClass('disabled');
      }
      if (current_page === 1) {
        //base.$el.find('.previous, .first').addClass('disabled');
        base.$el.find('.previous').addClass('pull-left');
        base.$el.find('.first').addClass('pull-right');
      }
    };
    base.callMethod = function (method, key, value) {
      switch (method.toLowerCase()) {
      case 'option':
        // if we're getting, immediately return the value
        if (value === undefined && typeof key !== 'object') {
          return base.options[key];
        }
        // set default object to trigger the paged event (legacy opperation)
        var options = { 'trigger': true }, result = false;
        // if the key passed in is an object
        if ($.isPlainObject(key) && !value) {
          $.extend(options, key);
        } else {
          // make the key value pair part of the default object
          options[key] = value;
        }
        var prevent_paged = options.trigger === false;
        // if current_page property is set call setPage
        if (options.current_page !== undefined) {
          result = base.setPage(options.current_page, prevent_paged);
        }
        // if max_page property is set call setMaxPage
        if (options.max_page !== undefined) {
          result = base.setMaxPage(options.max_page, prevent_paged);
        }
        // if we've not got a result fire an error and return false
        if (result === false)
          console.error('jqPagination: cannot get / set option ' + key);
        return result;
        break;
      case 'destroy':
        base.$el.off('.jqPagination').find('*').off('.jqPagination');
        break;
      default:
        // the function name must not exist
        console.error('jqPagination: method "' + method + '" does not exist');
        return false;
      }
    };
    // Run initializer
    base.init();
  };
  $.jqPagination.defaultOptions = {
    current_page: 1,
    link_string: '',
    max_page: null,
    page_string: '{current_page}',
    paged: function () {
    }
  };
  $.fn.jqPagination = function () {
    // get any function parameters
    var self = this, $self = $(self), args = Array.prototype.slice.call(arguments), result = false;
    // if the first argument is a string call the desired function
    // note: we can only do this to a single element, and not a collection of elements
    if (typeof args[0] === 'string') {
      // if we're getting, we can only get value for the first pagination element
      if (args[2] === undefined) {
        result = $self.first().data('jqPagination').callMethod(args[0], args[1]);
      } else {
        // if we're setting, set values for all pagination elements
        $self.each(function () {
          result = $(this).data('jqPagination').callMethod(args[0], args[1], args[2]);
        });
      }
      return result;
    }
    // if we're not dealing with a method, initialise plugin
    self.each(function () {
      new $.jqPagination(this, args[0]);
    });
  };
}(jQuery));
// polyfill, provide a fallback if the console doesn't exist
if (!console) {
  var console = {}, func = function () {
      return false;
    };
  console.log = func;
  console.info = func;
  console.warn = func;
  console.error = func;
}
/*
 Input Mask plugin for jquery
 http://github.com/RobinHerbots/jquery.inputmask
 Copyright (c) 2010 - 2014 Robin Herbots
 Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
 Version: 3.0.55
 Input Mask plugin for jquery
 http://github.com/RobinHerbots/jquery.inputmask
 Copyright (c) 2010 - 2014 Robin Herbots
 Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
 Version: 3.0.55
*/
(function (e) {
  if (void 0 === e.fn.inputmask) {
    var a = function (a) {
        var b = document.createElement('input');
        a = 'on' + a;
        var e = a in b;
        e || (b.setAttribute(a, 'return;'), e = 'function' == typeof b[a]);
        return e;
      }, b = function (a, d, f) {
        return (a = f.aliases[a]) ? (a.alias && b(a.alias, void 0, f), e.extend(!0, f, a), e.extend(!0, f, d), !0) : !1;
      }, d = function (a) {
        function b(e) {
          function f(a, b, e, d) {
            this.matches = [];
            this.isGroup = a || !1;
            this.isOptional = b || !1;
            this.isQuantifier = e || !1;
            this.isAlternator = d || !1;
            this.quantifier = {
              min: 1,
              max: 1
            };
          }
          function d(b, e, f) {
            var c = a.definitions[e], g = 0 == b.matches.length;
            f = void 0 != f ? f : b.matches.length;
            if (c && !q) {
              for (var k = c.prevalidator, h = k ? k.length : 0, t = 1; t < c.cardinality; t++) {
                var m = h >= t ? k[t - 1] : [], I = m.validator, m = m.cardinality;
                b.matches.splice(f++, 0, {
                  fn: I ? 'string' == typeof I ? RegExp(I) : new function () {
                    this.test = I;
                  }() : /./,
                  cardinality: m ? m : 1,
                  optionality: b.isOptional,
                  newBlockMarker: g,
                  casing: c.casing,
                  def: c.definitionSymbol || e,
                  placeholder: c.placeholder
                });
              }
              b.matches.splice(f++, 0, {
                fn: c.validator ? 'string' == typeof c.validator ? RegExp(c.validator) : new function () {
                  this.test = c.validator;
                }() : /./,
                cardinality: c.cardinality,
                optionality: b.isOptional,
                newBlockMarker: g,
                casing: c.casing,
                def: c.definitionSymbol || e,
                placeholder: c.placeholder
              });
            } else
              b.matches.splice(f++, 0, {
                fn: null,
                cardinality: 0,
                optionality: b.isOptional,
                newBlockMarker: g,
                casing: null,
                def: e,
                placeholder: void 0
              }), q = !1;
          }
          for (var c = /(?:[?*+]|\{[0-9\+\*]+(?:,[0-9\+\*]*)?\})\??|[^.?*+^${[]()|\\]+|./g, q = !1, g = new f(), h, m = [], n = []; h = c.exec(e);)
            switch (h = h[0], h.charAt(0)) {
            case a.optionalmarker.end:
            case a.groupmarker.end:
              var p = m.pop();
              0 < m.length ? m[m.length - 1].matches.push(p) : g.matches.push(p);
              break;
            case a.optionalmarker.start:
              m.push(new f(!1, !0));
              break;
            case a.groupmarker.start:
              m.push(new f(!0));
              break;
            case a.quantifiermarker.start:
              p = new f(!1, !1, !0);
              h = h.replace(/[{}]/g, '');
              var r = h.split(',');
              h = isNaN(r[0]) ? r[0] : parseInt(r[0]);
              r = 1 == r.length ? h : isNaN(r[1]) ? r[1] : parseInt(r[1]);
              if ('*' == r || '+' == r)
                h = '*' == r ? 0 : 1;
              p.quantifier = {
                min: h,
                max: r
              };
              if (0 < m.length) {
                r = m[m.length - 1].matches;
                h = r.pop();
                if (!h.isGroup) {
                  var u = new f(!0);
                  u.matches.push(h);
                  h = u;
                }
                r.push(h);
                r.push(p);
              } else
                h = g.matches.pop(), h.isGroup || (u = new f(!0), u.matches.push(h), h = u), g.matches.push(h), g.matches.push(p);
              break;
            case a.escapeChar:
              q = !0;
              break;
            case a.alternatormarker:
              break;
            default:
              0 < m.length ? d(m[m.length - 1], h) : (0 < g.matches.length && (p = g.matches[g.matches.length - 1], p.isGroup && (p.isGroup = !1, d(p, a.groupmarker.start, 0), d(p, a.groupmarker.end))), d(g, h));
            }
          0 < g.matches.length && (p = g.matches[g.matches.length - 1], p.isGroup && (p.isGroup = !1, d(p, a.groupmarker.start, 0), d(p, a.groupmarker.end)), n.push(g));
          return n;
        }
        function f(f, d) {
          if (a.numericInput && !0 !== a.multi) {
            f = f.split('').reverse();
            for (var c = 0; c < f.length; c++)
              f[c] == a.optionalmarker.start ? f[c] = a.optionalmarker.end : f[c] == a.optionalmarker.end ? f[c] = a.optionalmarker.start : f[c] == a.groupmarker.start ? f[c] = a.groupmarker.end : f[c] == a.groupmarker.end && (f[c] = a.groupmarker.start);
            f = f.join('');
          }
          if (void 0 != f && '' != f) {
            if (0 < a.repeat || '*' == a.repeat || '+' == a.repeat)
              f = a.groupmarker.start + f + a.groupmarker.end + a.quantifiermarker.start + ('*' == a.repeat ? 0 : '+' == a.repeat ? 1 : a.repeat) + ',' + a.repeat + a.quantifiermarker.end;
            void 0 == e.inputmask.masksCache[f] && (e.inputmask.masksCache[f] = {
              mask: f,
              maskToken: b(f),
              validPositions: {},
              _buffer: void 0,
              buffer: void 0,
              tests: {},
              metadata: d
            });
            return e.extend(!0, {}, e.inputmask.masksCache[f]);
          }
        }
        var d = [];
        e.isFunction(a.mask) && (a.mask = a.mask.call(this, a));
        e.isArray(a.mask) ? e.each(a.mask, function (a, b) {
          void 0 != b.mask ? d.push(f(b.mask.toString(), b)) : d.push(f(b.toString()));
        }) : (1 == a.mask.length && !1 == a.greedy && 0 != a.repeat && (a.placeholder = ''), d = void 0 != a.mask.mask ? f(a.mask.mask.toString(), a.mask) : f(a.mask.toString()));
        return d;
      }, c = 'function' === typeof ScriptEngineMajorVersion ? ScriptEngineMajorVersion() : 10 <= new Function('/*@cc_on return @_jscript_version; @*/')(), g = navigator.userAgent, h = null !== g.match(/iphone/i), n = null !== g.match(/android.*safari.*/i), z = null !== g.match(/android.*chrome.*/i), u = null !== g.match(/android.*firefox.*/i), J = /Kindle/i.test(g) || /Silk/i.test(g) || /KFTT/i.test(g) || /KFOT/i.test(g) || /KFJWA/i.test(g) || /KFJWI/i.test(g) || /KFSOWI/i.test(g) || /KFTHWA/i.test(g) || /KFTHWI/i.test(g) || /KFAPWA/i.test(g) || /KFAPWI/i.test(g), K = a('paste') ? 'paste' : a('input') ? 'input' : 'propertychange', r = function (a, b, f) {
        function d(a, e, c) {
          e = e || 0;
          var g = [], h, w = 0, k;
          do {
            if (!0 === a && b.validPositions[w]) {
              var t = b.validPositions[w];
              k = t.match;
              h = t.locator.slice();
              g.push(null == k.fn ? k.def : !0 === c ? t.input : k.placeholder || f.placeholder.charAt(w % f.placeholder.length));
            } else
              h = e > w ? N(w, h, w - 1)[0] : G(w, h, w - 1), k = h.match, h = h.locator.slice(), g.push(null == k.fn ? k.def : k.placeholder || f.placeholder.charAt(w % f.placeholder.length));
            w++;
          } while ((void 0 == L || w - 1 < L) && null != k.fn || null == k.fn && '' != k.def || e >= w);
          g.pop();
          return g;
        }
        function g(a) {
          var e = b;
          e.buffer = void 0;
          e.tests = {};
          !0 !== a && (e._buffer = void 0, e.validPositions = {}, e.p = -1);
        }
        function r(a) {
          var e = -1, f = b.validPositions;
          void 0 == a && (a = -1);
          var c = e, d;
          for (d in f) {
            var g = parseInt(d);
            if (-1 == a || null != f[g].match.fn)
              g < a && (c = g), g >= a && (e = g);
          }
          return 1 < a - c || e < a ? c : e;
        }
        function k(a, c, d) {
          if (f.insertMode && void 0 != b.validPositions[a] && void 0 == d) {
            d = e.extend(!0, {}, b.validPositions);
            var g = r(), k;
            for (k = a; k <= g; k++)
              delete b.validPositions[k];
            b.validPositions[a] = c;
            c = !0;
            for (k = a; k <= g; k++) {
              a = d[k];
              if (void 0 != a) {
                var h = null == a.match.fn ? k + 1 : C(k);
                c = ea(h, a.match.def) ? c && !1 !== P(h, a.input, !0, !0) : !1;
              }
              if (!c)
                break;
            }
            if (!c)
              return b.validPositions = e.extend(!0, {}, d), !1;
          } else
            b.validPositions[a] = c;
          return !0;
        }
        function t(a, e) {
          var f, c = a;
          for (f = a; f < e; f++)
            delete b.validPositions[f];
          for (f = e; f <= r();) {
            var d = b.validPositions[f], k = b.validPositions[c];
            void 0 != d && void 0 == k ? (ea(c, d.match.def) && !1 !== P(c, d.input, !0) && (delete b.validPositions[f], f++), c++) : f++;
          }
          for (f = r(); 0 < f && (void 0 == b.validPositions[f] || null == b.validPositions[f].match.fn);)
            delete b.validPositions[f], f--;
          g(!0);
        }
        function G(a, b, e) {
          a = N(a, b, e);
          var c;
          for (b = 0; b < a.length && (c = a[b], !f.greedy && (!c.match || !1 !== c.match.optionality && !1 !== c.match.newBlockMarker || !0 === c.match.optionalQuantifier)); b++);
          return c;
        }
        function x(a) {
          return b.validPositions[a] ? b.validPositions[a].match : N(a)[0].match;
        }
        function ea(a, b) {
          for (var e = !1, f = N(a), c = 0; c < f.length; c++)
            if (f[c].match && f[c].match.def == b) {
              e = !0;
              break;
            }
          return e;
        }
        function N(a, c, d) {
          function g(b, c, d, v) {
            function S(d, v, q) {
              if (h == a && void 0 == d.matches)
                return t.push({
                  match: d,
                  locator: v.reverse()
                }), !0;
              if (void 0 != d.matches)
                if (d.isGroup && !0 !== q) {
                  if (d = S(b.matches[k + 1], v))
                    return !0;
                } else if (d.isOptional) {
                  var m = d;
                  if (d = g(d, c, v, q))
                    d = t[t.length - 1].match, (d = 0 == e.inArray(d, m.matches)) && (l = !0), h = a;
                } else {
                  if (!d.isAlternator)
                    if (d.isQuantifier && !0 !== q)
                      for (m = d, f.greedy = f.greedy && isFinite(m.quantifier.max), q = 0 < c.length && !0 !== q ? c.shift() : 0; q < (isNaN(m.quantifier.max) ? q + 1 : m.quantifier.max) && h <= a; q++) {
                        var r = b.matches[e.inArray(m, b.matches) - 1];
                        if (d = S(r, [q].concat(v), !0))
                          if (d = t[t.length - 1].match, d.optionalQuantifier = q > m.quantifier.min - 1, d = 0 == e.inArray(d, r.matches))
                            if (q > m.quantifier.min - 1) {
                              l = !0;
                              h = a;
                              break;
                            } else
                              return !0;
                          else
                            return !0;
                      }
                    else if (d = g(d, c, v, q))
                      return !0;
                }
              else
                h++;
            }
            for (var k = 0 < c.length ? c.shift() : 0; k < b.matches.length; k++)
              if (!0 !== b.matches[k].isQuantifier) {
                var q = S(b.matches[k], [k].concat(d), v);
                if (q && h == a)
                  return q;
                if (h > a)
                  break;
              }
          }
          var k = b.maskToken, h = c ? d : 0;
          d = c || [0];
          var t = [], l = !1;
          if (void 0 == c) {
            c = a - 1;
            for (var m; void 0 == (m = b.validPositions[c]) && -1 < c;)
              c--;
            if (void 0 != m && -1 < c)
              h = c, d = m.locator.slice();
            else {
              for (c = a - 1; void 0 == (m = b.tests[c]) && -1 < c;)
                c--;
              void 0 != m && -1 < c && (h = c, d = m[0].locator.slice());
            }
          }
          for (c = d.shift(); c < k.length && !(g(k[c], d, [c]) && h == a || h > a); c++);
          (0 == t.length || l) && t.push({
            match: {
              fn: null,
              cardinality: 0,
              optionality: !0,
              casing: null,
              def: ''
            },
            locator: []
          });
          return b.tests[a] = t;
        }
        function D() {
          void 0 == b._buffer && (b._buffer = d(!1, 1));
          return b._buffer;
        }
        function p() {
          void 0 == b.buffer && (b.buffer = d(!0, r(), !0));
          return b.buffer;
        }
        function Z(a, c) {
          var e = p().slice();
          if (!0 === a)
            g(), a = 0, c = e.length;
          else
            for (var d = a; d < c; d++)
              delete b.validPositions[d], delete b.tests[d];
          for (d = a; d < c; d++)
            e[d] != f.skipOptionalPartCharacter && P(d, e[d], !0, !0);
        }
        function la(a, b) {
          switch (b.casing) {
          case 'upper':
            a = a.toUpperCase();
            break;
          case 'lower':
            a = a.toLowerCase();
          }
          return a;
        }
        function P(a, c, d, h) {
          function m(a, c, d, ma) {
            var v = !1;
            e.each(N(a), function (h, S) {
              var l = S.match, w = c ? 1 : 0, m = '';
              p();
              for (var V = l.cardinality; V > w; V--)
                m += void 0 == b.validPositions[a - (V - 1)] ? U(a - (V - 1)) : b.validPositions[a - (V - 1)].input;
              c && (m += c);
              v = null != l.fn ? l.fn.test(m, b, a, d, f) : c != l.def && c != f.skipOptionalPartCharacter || '' == l.def ? !1 : {
                c: l.def,
                pos: a
              };
              if (!1 !== v) {
                w = void 0 != v.c ? v.c : c;
                w = w == f.skipOptionalPartCharacter && null === l.fn ? l.def : w;
                m = a;
                void 0 != v.remove && t(v.remove, v.remove + 1);
                if (v.refreshFromBuffer) {
                  m = v.refreshFromBuffer;
                  d = !0;
                  Z(!0 === m ? m : m.start, m.end);
                  if (void 0 == v.pos && void 0 == v.c)
                    return v.pos = r(), !1;
                  m = void 0 != v.pos ? v.pos : a;
                  if (m != a)
                    return v = e.extend(v, P(m, w, !0)), !1;
                } else if (!0 !== v && void 0 != v.pos && v.pos != a && (m = v.pos, Z(a, m), m != a))
                  return v = e.extend(v, P(m, w, !0)), !1;
                if (!0 != v && void 0 == v.pos && void 0 == v.c)
                  return !1;
                0 < h && g(!0);
                k(m, e.extend({}, S, { input: la(w, l) }), ma) || (v = !1);
                return !1;
              }
            });
            return v;
          }
          d = !0 === d;
          for (var w = p(), l = a - 1; -1 < l && (!b.validPositions[l] || null != b.validPositions[l].fn); l--)
            if ((!M(l) || w[l] != U(l)) && 1 < N(l).length) {
              m(l, w[l], !0);
              break;
            }
          if (a >= Q())
            return !1;
          w = m(a, c, d, h);
          if (!d && !1 === w)
            if ((l = b.validPositions[a]) && null == l.match.fn && (l.match.def == c || c == f.skipOptionalPartCharacter))
              w = { caret: C(a) };
            else if ((f.insertMode || void 0 == b.validPositions[C(a)]) && !M(a))
              for (var l = a + 1, x = C(a); l <= x; l++)
                if (w = m(l, c, d, h), !1 !== w) {
                  a = l;
                  break;
                }
          !0 === w && (w = { pos: a });
          return w;
        }
        function M(a) {
          a = x(a);
          return null != a.fn ? a.fn : !1;
        }
        function Q() {
          var a;
          L = s.prop('maxLength');
          -1 == L && (L = void 0);
          if (!1 == f.greedy) {
            var c;
            c = r();
            a = b.validPositions[c];
            var d = void 0 != a ? a.locator.slice() : void 0;
            for (c += 1; void 0 == a || null != a.match.fn || null == a.match.fn && '' != a.match.def; c++)
              a = G(c, d, c - 1), d = a.locator.slice();
            a = c;
          } else
            a = p().length;
          return void 0 == L || a < L ? a : L;
        }
        function C(a) {
          var b = Q();
          if (a >= b)
            return b;
          for (; ++a < b && !M(a) && (!0 !== f.nojumps || f.nojumpsThreshold > a););
          return a;
        }
        function X(a) {
          if (0 >= a)
            return 0;
          for (; 0 < --a && !M(a););
          return a;
        }
        function F(a, b, c) {
          a._valueSet(b.join(''));
          void 0 != c && y(a, c);
        }
        function U(a, b) {
          b = b || x(a);
          return b.placeholder || (null == b.fn ? b.def : f.placeholder.charAt(a % f.placeholder.length));
        }
        function R(a, c, d, k, h) {
          k = void 0 != k ? k.slice() : ka(a._valueGet()).split('');
          g();
          c && a._valueSet('');
          e.each(k, function (c, f) {
            if (!0 === h) {
              var g = b.p, g = -1 == g ? g : X(g), k = -1 == g ? c : C(g);
              -1 == e.inArray(f, D().slice(g + 1, k)) && $.call(a, void 0, !0, f.charCodeAt(0), !1, d, c);
            } else
              $.call(a, void 0, !0, f.charCodeAt(0), !1, d, c), d = d || 0 < c && c > b.p;
          });
          c && (c = f.onKeyPress.call(this, void 0, p(), 0, f), Y(a, c), F(a, p(), e(a).is(':focus') ? C(r(0)) : void 0));
        }
        function da(a) {
          return e.inputmask.escapeRegex.call(this, a);
        }
        function ka(a) {
          return a.replace(RegExp('(' + da(D().join('')) + ')*$'), '');
        }
        function fa(a) {
          if (a.data('_inputmask') && !a.hasClass('hasDatepicker')) {
            var c = [], d = b.validPositions, g;
            for (g in d)
              d[g].match && null != d[g].match.fn && c.push(d[g].input);
            c = (A ? c.reverse() : c).join('');
            d = (A ? p().reverse() : p()).join('');
            e.isFunction(f.onUnMask) && (c = f.onUnMask.call(a, d, c, f));
            return c;
          }
          return a[0]._valueGet();
        }
        function O(a) {
          !A || 'number' != typeof a || f.greedy && '' == f.placeholder || (a = p().length - a);
          return a;
        }
        function y(a, b, c) {
          a = a.jquery && 0 < a.length ? a[0] : a;
          if ('number' == typeof b) {
            b = O(b);
            c = O(c);
            c = 'number' == typeof c ? c : b;
            var d = e(a).data('_inputmask') || {};
            d.caret = {
              begin: b,
              end: c
            };
            e(a).data('_inputmask', d);
            e(a).is(':visible') && (a.scrollLeft = a.scrollWidth, !1 == f.insertMode && b == c && c++, a.setSelectionRange ? (a.selectionStart = b, a.selectionEnd = c) : a.createTextRange && (a = a.createTextRange(), a.collapse(!0), a.moveEnd('character', c), a.moveStart('character', b), a.select()));
          } else
            return d = e(a).data('_inputmask'), !e(a).is(':visible') && d && void 0 != d.caret ? (b = d.caret.begin, c = d.caret.end) : a.setSelectionRange ? (b = a.selectionStart, c = a.selectionEnd) : document.selection && document.selection.createRange && (a = document.selection.createRange(), b = 0 - a.duplicate().moveStart('character', -100000), c = b + a.text.length), b = O(b), c = O(c), {
              begin: b,
              end: c
            };
        }
        function aa(a) {
          var c = p(), d = c.length, f, g = r(), k = {}, h = void 0 != b.validPositions[g] ? b.validPositions[g].locator.slice() : void 0, l;
          for (f = g + 1; f < c.length; f++)
            l = G(f, h, f - 1), h = l.locator.slice(), k[f] = e.extend(!0, {}, l);
          for (f = d - 1; f > g; f--)
            if (l = k[f].match, (l.optionality || l.optionalQuantifier) && c[f] == U(f, l))
              d--;
            else
              break;
          return a ? {
            l: d,
            def: k[d] ? k[d].match : void 0
          } : d;
        }
        function ba(a) {
          var b = p().slice(), c = aa();
          b.length = c;
          F(a, b);
        }
        function T(a) {
          if (e.isFunction(f.isComplete))
            return f.isComplete.call(s, a, f);
          if ('*' != f.repeat) {
            var b = !1, c = aa(!0), d = X(c.l);
            if (r() == d && (void 0 == c.def || c.def.newBlockMarker || c.def.optionalQuantifier))
              for (b = !0, c = 0; c <= d; c++) {
                var g = M(c);
                if (g && (void 0 == a[c] || a[c] == U(c)) || !g && a[c] != U(c)) {
                  b = !1;
                  break;
                }
              }
            return b;
          }
        }
        function na(a) {
          a = e._data(a).events;
          e.each(a, function (a, b) {
            e.each(b, function (a, b) {
              if ('inputmask' == b.namespace && 'setvalue' != b.type) {
                var c = b.handler;
                b.handler = function (a) {
                  if (this.readOnly || this.disabled)
                    a.preventDefault;
                  else
                    return c.apply(this, arguments);
                };
              }
            });
          });
        }
        function oa(a) {
          function b(a) {
            if (void 0 == e.valHooks[a] || !0 != e.valHooks[a].inputmaskpatch) {
              var c = e.valHooks[a] && e.valHooks[a].get ? e.valHooks[a].get : function (a) {
                  return a.value;
                }, d = e.valHooks[a] && e.valHooks[a].set ? e.valHooks[a].set : function (a, b) {
                  a.value = b;
                  return a;
                };
              e.valHooks[a] = {
                get: function (a) {
                  var b = e(a);
                  if (b.data('_inputmask')) {
                    if (b.data('_inputmask').opts.autoUnmask)
                      return b.inputmask('unmaskedvalue');
                    a = c(a);
                    b = (b = b.data('_inputmask').maskset._buffer) ? b.join('') : '';
                    return a != b ? a : '';
                  }
                  return c(a);
                },
                set: function (a, b) {
                  var c = e(a), f = c.data('_inputmask');
                  f ? (f = d(a, e.isFunction(f.opts.onBeforeMask) ? f.opts.onBeforeMask.call(B, b, f.opts) : b), c.triggerHandler('setvalue.inputmask')) : f = d(a, b);
                  return f;
                },
                inputmaskpatch: !0
              };
            }
          }
          var c;
          Object.getOwnPropertyDescriptor && (c = Object.getOwnPropertyDescriptor(a, 'value'));
          if (c && c.get) {
            if (!a._valueGet) {
              var d = c.get, f = c.set;
              a._valueGet = function () {
                return A ? d.call(this).split('').reverse().join('') : d.call(this);
              };
              a._valueSet = function (a) {
                f.call(this, A ? a.split('').reverse().join('') : a);
              };
              Object.defineProperty(a, 'value', {
                get: function () {
                  var a = e(this), b = e(this).data('_inputmask');
                  return b ? b.opts.autoUnmask ? a.inputmask('unmaskedvalue') : d.call(this) != D().join('') ? d.call(this) : '' : d.call(this);
                },
                set: function (a) {
                  var b = e(this).data('_inputmask');
                  b ? (f.call(this, e.isFunction(b.opts.onBeforeMask) ? b.opts.onBeforeMask.call(B, a, b.opts) : a), e(this).triggerHandler('setvalue.inputmask')) : f.call(this, a);
                }
              });
            }
          } else
            document.__lookupGetter__ && a.__lookupGetter__('value') ? a._valueGet || (d = a.__lookupGetter__('value'), f = a.__lookupSetter__('value'), a._valueGet = function () {
              return A ? d.call(this).split('').reverse().join('') : d.call(this);
            }, a._valueSet = function (a) {
              f.call(this, A ? a.split('').reverse().join('') : a);
            }, a.__defineGetter__('value', function () {
              var a = e(this), b = e(this).data('_inputmask');
              return b ? b.opts.autoUnmask ? a.inputmask('unmaskedvalue') : d.call(this) != D().join('') ? d.call(this) : '' : d.call(this);
            }), a.__defineSetter__('value', function (a) {
              var b = e(this).data('_inputmask');
              b ? (f.call(this, e.isFunction(b.opts.onBeforeMask) ? b.opts.onBeforeMask.call(B, a, b.opts) : a), e(this).triggerHandler('setvalue.inputmask')) : f.call(this, a);
            })) : (a._valueGet || (a._valueGet = function () {
              return A ? this.value.split('').reverse().join('') : this.value;
            }, a._valueSet = function (a) {
              this.value = A ? a.split('').reverse().join('') : a;
            }), b(a.type));
        }
        function ga(a, c, d) {
          if (f.numericInput || A)
            c == f.keyCode.BACKSPACE ? c = f.keyCode.DELETE : c == f.keyCode.DELETE && (c = f.keyCode.BACKSPACE), A && (a = d.end, d.end = d.begin, d.begin = a);
          c == f.keyCode.BACKSPACE && 1 >= d.end - d.begin ? d.begin = X(d.begin) : c == f.keyCode.DELETE && d.begin == d.end && d.end++;
          t(d.begin, d.end);
          c = r(d.begin);
          b.p = c < d.begin ? C(c) : d.begin;
        }
        function Y(a, b, c) {
          if (b && b.refreshFromBuffer) {
            var d = b.refreshFromBuffer;
            Z(!0 === d ? d : d.start, d.end);
            g(!0);
            void 0 != c && (F(a, p()), y(a, b.caret || c.begin, b.caret || c.end));
          }
        }
        function ha(a) {
          ca = !1;
          var c = this, d = e(c), g = a.keyCode, k = y(c);
          g == f.keyCode.BACKSPACE || g == f.keyCode.DELETE || h && 127 == g || a.ctrlKey && 88 == g ? (a.preventDefault(), 88 == g && (H = p().join('')), ga(c, g, k), F(c, p(), b.p), c._valueGet() == D().join('') && d.trigger('cleared'), f.showTooltip && d.prop('title', b.mask)) : g == f.keyCode.END || g == f.keyCode.PAGE_DOWN ? setTimeout(function () {
            var b = C(r());
            f.insertMode || b != Q() || a.shiftKey || b--;
            y(c, a.shiftKey ? k.begin : b, b);
          }, 0) : g == f.keyCode.HOME && !a.shiftKey || g == f.keyCode.PAGE_UP ? y(c, 0, a.shiftKey ? k.begin : 0) : g == f.keyCode.ESCAPE || 90 == g && a.ctrlKey ? (R(c, !0, !1, H.split('')), d.click()) : g != f.keyCode.INSERT || a.shiftKey || a.ctrlKey ? !1 != f.insertMode || a.shiftKey || (g == f.keyCode.RIGHT ? setTimeout(function () {
            var a = y(c);
            y(c, a.begin);
          }, 0) : g == f.keyCode.LEFT && setTimeout(function () {
            var a = y(c);
            y(c, A ? a.begin + 1 : a.begin - 1);
          }, 0)) : (f.insertMode = !f.insertMode, y(c, f.insertMode || k.begin != Q() ? k.begin : k.begin - 1));
          var d = y(c), l = f.onKeyDown.call(this, a, p(), d.begin, f);
          Y(c, l, d);
          ia = -1 != e.inArray(g, f.ignorables);
        }
        function $(a, c, d, h, l, m) {
          if (void 0 == d && ca)
            return !1;
          ca = !0;
          var t = e(this);
          a = a || window.event;
          d = c ? d : a.which || a.charCode || a.keyCode;
          if (!(!0 === c || a.ctrlKey && a.altKey) && (a.ctrlKey || a.metaKey || ia))
            return !0;
          if (d) {
            !0 !== c && 46 == d && !1 == a.shiftKey && ',' == f.radixPoint && (d = 44);
            var x, G;
            d = String.fromCharCode(d);
            c ? (m = l ? m : r() + 1, x = {
              begin: m,
              end: m
            }) : x = y(this);
            if (m = A ? 1 < x.begin - x.end || 1 == x.begin - x.end && f.insertMode : 1 < x.end - x.begin || 1 == x.end - x.begin && f.insertMode)
              b.undoPositions = e.extend(!0, {}, b.validPositions), ga(this, f.keyCode.DELETE, x), f.insertMode || (f.insertMode = !f.insertMode, k(x.begin, l), f.insertMode = !f.insertMode), m = !f.multi;
            b.writeOutBuffer = !0;
            x = A && !m ? x.end : x.begin;
            var n = P(x, d, l);
            !1 !== n && (!0 !== n && (x = void 0 != n.pos ? n.pos : x, d = void 0 != n.c ? n.c : d), g(!0), void 0 != n.caret ? G = n.caret : (l = b.validPositions, G = void 0 != l[x + 1] && 1 < N(x + 1, l[x].locator.slice(), x).length ? x + 1 : C(x)), b.p = G);
            if (!1 !== h) {
              var s = this;
              setTimeout(function () {
                f.onKeyValidation.call(s, n, f);
              }, 0);
              if (b.writeOutBuffer && !1 !== n) {
                var u = p();
                F(this, u, c ? void 0 : f.numericInput ? X(G) : G);
                !0 !== c && setTimeout(function () {
                  !0 === T(u) && t.trigger('complete');
                  W = !0;
                  t.trigger('input');
                }, 0);
              } else
                m && (b.buffer = void 0, b.validPositions = b.undoPositions);
            } else
              m && (b.buffer = void 0, b.validPositions = b.undoPositions);
            f.showTooltip && t.prop('title', b.mask);
            a && !0 != c && (a.preventDefault ? a.preventDefault() : a.returnValue = !1, c = y(this), a = f.onKeyPress.call(this, a, p(), c.begin, f), Y(this, a, c));
            for (var D in b.validPositions);
          }
        }
        function pa(a) {
          var b = e(this), c = a.keyCode, d = p(), k = y(this);
          a = f.onKeyUp.call(this, a, d, k.begin, f);
          Y(this, a, k);
          c == f.keyCode.TAB && f.showMaskOnFocus && (b.hasClass('focus-inputmask') && 0 == this._valueGet().length ? (g(), d = p(), F(this, d), y(this, 0), H = p().join('')) : (F(this, d), y(this, O(0), O(Q()))));
        }
        function ja(a) {
          if (!0 === W && 'input' == a.type)
            return W = !1, !0;
          var b = e(this), c = this._valueGet();
          if ('propertychange' == a.type && this._valueGet().length <= Q())
            return !0;
          'paste' == a.type && (window.clipboardData && window.clipboardData.getData ? c = window.clipboardData.getData('Text') : a.originalEvent && a.originalEvent.clipboardData && a.originalEvent.clipboardData.getData && (c = a.originalEvent.clipboardData.getData('text/plain')));
          a = e.isFunction(f.onBeforePaste) ? f.onBeforePaste.call(this, c, f) : c;
          R(this, !0, !1, a.split(''), !0);
          b.click();
          !0 === T(p()) && b.trigger('complete');
          return !1;
        }
        function qa(a) {
          if (!0 === W && 'input' == a.type)
            return W = !1, !0;
          var b = y(this), c = this._valueGet(), c = c.replace(RegExp('(' + da(D().join('')) + ')*'), '');
          b.begin > c.length && (y(this, c.length), b = y(this));
          1 != p().length - c.length || c.charAt(b.begin) == p()[b.begin] || c.charAt(b.begin + 1) == p()[b.begin] || M(b.begin) || (a.keyCode = f.keyCode.BACKSPACE, ha.call(this, a));
          a.preventDefault();
        }
        function ra(a) {
          s = e(a);
          if (s.is(':input') && 'number' != s.attr('type')) {
            s.data('_inputmask', {
              maskset: b,
              opts: f,
              isRTL: !1
            });
            f.showTooltip && s.prop('title', b.mask);
            oa(a);
            ('rtl' == a.dir || f.rightAlign) && s.css('text-align', 'right');
            if ('rtl' == a.dir || f.numericInput) {
              a.dir = 'ltr';
              s.removeAttr('dir');
              var d = s.data('_inputmask');
              d.isRTL = !0;
              s.data('_inputmask', d);
              A = !0;
            }
            s.unbind('.inputmask');
            s.removeClass('focus-inputmask');
            s.closest('form').bind('submit', function () {
              H != p().join('') && s.change();
              f.autoUnmask && f.removeMaskOnSubmit && s.inputmask('remove');
            }).bind('reset', function () {
              setTimeout(function () {
                s.trigger('setvalue');
              }, 0);
            });
            s.bind('mouseenter.inputmask', function () {
              !e(this).hasClass('focus-inputmask') && f.showMaskOnHover && this._valueGet() != p().join('') && F(this, p());
            }).bind('blur.inputmask', function () {
              var a = e(this);
              if (a.data('_inputmask')) {
                var b = this._valueGet(), c = p();
                a.removeClass('focus-inputmask');
                H != p().join('') && a.change();
                f.clearMaskOnLostFocus && '' != b && (b == D().join('') ? this._valueSet('') : ba(this));
                !1 === T(c) && (a.trigger('incomplete'), f.clearIncomplete && (g(), f.clearMaskOnLostFocus ? this._valueSet('') : (c = D().slice(), F(this, c))));
              }
            }).bind('focus.inputmask', function () {
              var a = e(this), b = this._valueGet();
              f.showMaskOnFocus && !a.hasClass('focus-inputmask') && (!f.showMaskOnHover || f.showMaskOnHover && '' == b) && this._valueGet() != p().join('') && F(this, p(), C(r()));
              a.addClass('focus-inputmask');
              H = p().join('');
            }).bind('mouseleave.inputmask', function () {
              var a = e(this);
              f.clearMaskOnLostFocus && (a.hasClass('focus-inputmask') || this._valueGet() == a.attr('placeholder') || (this._valueGet() == D().join('') || '' == this._valueGet() ? this._valueSet('') : ba(this)));
            }).bind('click.inputmask', function () {
              var a = this;
              e(a).is(':focus') && setTimeout(function () {
                var b = y(a);
                if (b.begin == b.end) {
                  var b = A ? O(b.begin) : b.begin, c = r(b), c = C(c);
                  b < c ? M(b) ? y(a, b) : y(a, C(b)) : y(a, c);
                }
              }, 0);
            }).bind('dblclick.inputmask', function () {
              var a = this;
              setTimeout(function () {
                y(a, 0, C(r()));
              }, 0);
            }).bind(K + '.inputmask dragdrop.inputmask drop.inputmask', ja).bind('setvalue.inputmask', function () {
              R(this, !0);
              H = p().join('');
              this._valueGet() == D().join('') && this._valueSet('');
            }).bind('complete.inputmask', f.oncomplete).bind('incomplete.inputmask', f.onincomplete).bind('cleared.inputmask', f.oncleared);
            s.bind('keydown.inputmask', ha).bind('keypress.inputmask', $).bind('keyup.inputmask', pa);
            if (n || u || z || J)
              'input' == K && s.unbind(K + '.inputmask'), s.bind('input.inputmask', qa);
            c && s.bind('input.inputmask', ja);
            d = e.isFunction(f.onBeforeMask) ? f.onBeforeMask.call(a, a._valueGet(), f) : a._valueGet();
            R(a, !0, !1, d.split(''), !0);
            H = p().join('');
            var k;
            try {
              k = document.activeElement;
            } catch (h) {
            }
            k === a ? (s.addClass('focus-inputmask'), y(a, C(r()))) : (!1 === T(p()) && f.clearIncomplete && g(), f.clearMaskOnLostFocus ? p().join('') == D().join('') ? a._valueSet('') : ba(a) : F(a, p()));
            na(a);
          }
        }
        var A = !1, H, s, ca = !1, W = !1, ia = !1, L;
        if (void 0 != a)
          switch (a.action) {
          case 'isComplete':
            return s = e(a.el), b = s.data('_inputmask').maskset, f = s.data('_inputmask').opts, T(a.buffer);
          case 'unmaskedvalue':
            return s = a.$input, b = s.data('_inputmask').maskset, f = s.data('_inputmask').opts, A = a.$input.data('_inputmask').isRTL, fa(a.$input);
          case 'mask':
            H = p().join('');
            ra(a.el);
            break;
          case 'format':
            s = e({});
            s.data('_inputmask', {
              maskset: b,
              opts: f,
              isRTL: f.numericInput
            });
            f.numericInput && (A = !0);
            var E = a.value.split('');
            R(s, !1, !1, A ? E.reverse() : E, !0);
            return A ? p().reverse().join('') : p().join('');
          case 'isValid':
            s = e({});
            s.data('_inputmask', {
              maskset: b,
              opts: f,
              isRTL: f.numericInput
            });
            f.numericInput && (A = !0);
            E = a.value.split('');
            R(s, !1, !0, A ? E.reverse() : E);
            var E = p(), sa = aa();
            E.length = sa;
            return T(E) && a.value == E.join('');
          case 'getemptymask':
            return s = e(a.el), b = s.data('_inputmask').maskset, f = s.data('_inputmask').opts, D();
          case 'remove':
            var B = a.el;
            s = e(B);
            b = s.data('_inputmask').maskset;
            f = s.data('_inputmask').opts;
            B._valueSet(fa(s));
            s.unbind('.inputmask');
            s.removeClass('focus-inputmask');
            s.removeData('_inputmask');
            Object.getOwnPropertyDescriptor && (E = Object.getOwnPropertyDescriptor(B, 'value'));
            E && E.get ? B._valueGet && Object.defineProperty(B, 'value', {
              get: B._valueGet,
              set: B._valueSet
            }) : document.__lookupGetter__ && B.__lookupGetter__('value') && B._valueGet && (B.__defineGetter__('value', B._valueGet), B.__defineSetter__('value', B._valueSet));
            try {
              delete B._valueGet, delete B._valueSet;
            } catch (ua) {
              B._valueGet = void 0, B._valueSet = void 0;
            }
          }
      };
    e.inputmask = {
      defaults: {
        placeholder: '_',
        optionalmarker: {
          start: '[',
          end: ']'
        },
        quantifiermarker: {
          start: '{',
          end: '}'
        },
        groupmarker: {
          start: '(',
          end: ')'
        },
        alternatormarker: '|',
        escapeChar: '\\',
        mask: null,
        oncomplete: e.noop,
        onincomplete: e.noop,
        oncleared: e.noop,
        repeat: 0,
        greedy: !0,
        autoUnmask: !1,
        removeMaskOnSubmit: !0,
        clearMaskOnLostFocus: !0,
        insertMode: !0,
        clearIncomplete: !1,
        aliases: {},
        alias: null,
        onKeyUp: e.noop,
        onKeyPress: e.noop,
        onKeyDown: e.noop,
        onBeforeMask: void 0,
        onBeforePaste: void 0,
        onUnMask: void 0,
        showMaskOnFocus: !0,
        showMaskOnHover: !0,
        onKeyValidation: e.noop,
        skipOptionalPartCharacter: ' ',
        showTooltip: !1,
        numericInput: !1,
        rightAlign: !1,
        radixPoint: '',
        nojumps: !1,
        nojumpsThreshold: 0,
        definitions: {
          9: {
            validator: '[0-9]',
            cardinality: 1,
            definitionSymbol: '*'
          },
          a: {
            validator: '[A-Za-z\u0410-\u044f\u0401\u0451]',
            cardinality: 1,
            definitionSymbol: '*'
          },
          '*': {
            validator: '[A-Za-z\u0410-\u044f\u0401\u04510-9]',
            cardinality: 1
          }
        },
        keyCode: {
          ALT: 18,
          BACKSPACE: 8,
          CAPS_LOCK: 20,
          COMMA: 188,
          COMMAND: 91,
          COMMAND_LEFT: 91,
          COMMAND_RIGHT: 93,
          CONTROL: 17,
          DELETE: 46,
          DOWN: 40,
          END: 35,
          ENTER: 13,
          ESCAPE: 27,
          HOME: 36,
          INSERT: 45,
          LEFT: 37,
          MENU: 93,
          NUMPAD_ADD: 107,
          NUMPAD_DECIMAL: 110,
          NUMPAD_DIVIDE: 111,
          NUMPAD_ENTER: 108,
          NUMPAD_MULTIPLY: 106,
          NUMPAD_SUBTRACT: 109,
          PAGE_DOWN: 34,
          PAGE_UP: 33,
          PERIOD: 190,
          RIGHT: 39,
          SHIFT: 16,
          SPACE: 32,
          TAB: 9,
          UP: 38,
          WINDOWS: 91
        },
        ignorables: [
          8,
          9,
          13,
          19,
          27,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          45,
          46,
          93,
          112,
          113,
          114,
          115,
          116,
          117,
          118,
          119,
          120,
          121,
          122,
          123
        ],
        isComplete: void 0
      },
      masksCache: {},
      escapeRegex: function (a) {
        return a.replace(RegExp('(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\)', 'gim'), '\\$1');
      },
      format: function (a, c) {
        var f = e.extend(!0, {}, e.inputmask.defaults, c);
        b(f.alias, c, f);
        return r({
          action: 'format',
          value: a
        }, d(f), f);
      },
      isValid: function (a, c) {
        var f = e.extend(!0, {}, e.inputmask.defaults, c);
        b(f.alias, c, f);
        return r({
          action: 'isValid',
          value: a
        }, d(f), f);
      }
    };
    e.fn.inputmask = function (a, c, f, g, h) {
      function n(a, b) {
        var c = e(a), d;
        for (d in b) {
          var f = c.data('inputmask-' + d.toLowerCase());
          void 0 != f && (b[d] = f);
        }
        return b;
      }
      f = f || r;
      g = g || '_inputmask';
      var k = e.extend(!0, {}, e.inputmask.defaults, c), t;
      if ('string' === typeof a)
        switch (a) {
        case 'mask':
          return b(k.alias, c, k), t = d(k), 0 == t.length ? this : this.each(function () {
            f({
              action: 'mask',
              el: this
            }, e.extend(!0, {}, e.isArray(t) && f === r ? t[0] : t), n(this, k));
          });
        case 'unmaskedvalue':
          return a = e(this), a.data(g) ? f({
            action: 'unmaskedvalue',
            $input: a
          }) : a.val();
        case 'remove':
          return this.each(function () {
            e(this).data(g) && f({
              action: 'remove',
              el: this
            });
          });
        case 'getemptymask':
          return this.data(g) ? f({
            action: 'getemptymask',
            el: this
          }) : '';
        case 'hasMaskedValue':
          return this.data(g) ? !this.data(g).opts.autoUnmask : !1;
        case 'isComplete':
          return this.data(g) ? f({
            action: 'isComplete',
            buffer: this[0]._valueGet().split(''),
            el: this
          }) : !0;
        case 'getmetadata':
          if (this.data(g))
            return t = this.data(g).maskset, t.metadata;
          break;
        case '_detectScope':
          return b(k.alias, c, k), void 0 == h || b(h, c, k) || -1 != e.inArray(h, 'mask unmaskedvalue remove getemptymask hasMaskedValue isComplete getmetadata _detectScope'.split(' ')) || (k.mask = h), e.isFunction(k.mask) && (k.mask = k.mask.call(this, k)), e.isArray(k.mask);
        default:
          return b(k.alias, c, k), b(a, c, k) || (k.mask = a), t = d(k), void 0 == t ? this : this.each(function () {
            f({
              action: 'mask',
              el: this
            }, e.extend(!0, {}, e.isArray(t) && f === r ? t[0] : t), n(this, k));
          });
        }
      else {
        if ('object' == typeof a)
          return k = e.extend(!0, {}, e.inputmask.defaults, a), b(k.alias, a, k), t = d(k), void 0 == t ? this : this.each(function () {
            f({
              action: 'mask',
              el: this
            }, e.extend(!0, {}, e.isArray(t) && f === r ? t[0] : t), n(this, k));
          });
        if (void 0 == a)
          return this.each(function () {
            var a = e(this).attr('data-inputmask');
            if (a && '' != a)
              try {
                var a = a.replace(RegExp('\'', 'g'), '"'), d = e.parseJSON('{' + a + '}');
                e.extend(!0, d, c);
                k = e.extend(!0, {}, e.inputmask.defaults, d);
                b(k.alias, d, k);
                k.alias = void 0;
                e(this).inputmask('mask', k, f);
              } catch (g) {
              }
          });
      }
    };
  }
}(jQuery));
(function (e) {
  if (void 0 != e.fn.inputmask) {
    var a = function (a, d, c) {
      function g(a) {
        var c = document.createElement('input');
        a = 'on' + a;
        var b = a in c;
        b || (c.setAttribute(a, 'return;'), b = 'function' == typeof c[a]);
        return b;
      }
      function h(a) {
        if (void 0 == e.valHooks[a] || !0 != e.valHooks[a].inputmaskmultipatch) {
          var c = e.valHooks[a] && e.valHooks[a].get ? e.valHooks[a].get : function (a) {
              return a.value;
            }, b = e.valHooks[a] && e.valHooks[a].set ? e.valHooks[a].set : function (a, c) {
              a.value = c;
              return a;
            };
          e.valHooks[a] = {
            get: function (a) {
              var b = e(a);
              return b.data('_inputmask-multi') ? (a = b.data('_inputmask-multi'), c(a.elmasks[a.activeMasksetIndex])) : c(a);
            },
            set: function (a, c) {
              var d = e(a), f = b(a, c);
              d.data('_inputmask-multi') && d.triggerHandler('setvalue');
              return f;
            },
            inputmaskmultipatch: !0
          };
        }
      }
      function n(a, b, d) {
        a = a.jquery && 0 < a.length ? a[0] : a;
        if ('number' == typeof b) {
          b = z(b);
          d = z(d);
          d = 'number' == typeof d ? d : b;
          if (a != l) {
            var f = e(a).data('_inputmask') || {};
            f.caret = {
              begin: b,
              end: d
            };
            e(a).data('_inputmask', f);
          }
          e(a).is(':visible') && (a.scrollLeft = a.scrollWidth, !1 == c.insertMode && b == d && d++, a.setSelectionRange ? (a.selectionStart = b, a.selectionEnd = d) : a.createTextRange && (a = a.createTextRange(), a.collapse(!0), a.moveEnd('character', d), a.moveStart('character', b), a.select()));
        } else
          return f = e(a).data('_inputmask'), !e(a).is(':visible') && f && void 0 != f.caret ? (b = f.caret.begin, d = f.caret.end) : a.setSelectionRange ? (b = a.selectionStart, d = a.selectionEnd) : document.selection && document.selection.createRange && (a = document.selection.createRange(), b = 0 - a.duplicate().moveStart('character', -100000), d = b + a.text.length), b = z(b), d = z(d), {
            begin: b,
            end: d
          };
      }
      function z(a) {
        !r || 'number' != typeof a || c.greedy && '' == c.placeholder || (a = l.value.length - a);
        return a;
      }
      function u(a, b) {
        if ('multiMaskScope' != a) {
          if (e.isFunction(c.determineActiveMasksetIndex))
            m = c.determineActiveMasksetIndex.call(q, a, b);
          else {
            var d = -1, f = -1, g = -1;
            e.each(b, function (a, b) {
              var c = e(b).data('_inputmask').maskset, h = -1, l = 0, k = n(b).begin, q;
              for (q in c.validPositions)
                c = parseInt(q), c > h && (h = c), l++;
              if (l > d || l == d && f > k && g > h || l == d && f == k && g < h)
                d = l, f = k, m = a, g = h;
            });
          }
          var h = q.data('_inputmask-multi') || {
              activeMasksetIndex: 0,
              elmasks: b
            };
          h.activeMasksetIndex = m;
          q.data('_inputmask-multi', h);
        }
        -1 == e.inArray(a, ['focus']) && l.value != b[m]._valueGet() && (h = '' == e(b[m]).val() ? b[m]._valueGet() : e(b[m]).val(), l.value = h);
        -1 == e.inArray(a, [
          'blur',
          'focus'
        ]) && e(b[m]).hasClass('focus-inputmask') && (h = n(b[m]), n(l, h.begin, h.end));
      }
      function J(a) {
        l = a;
        q = e(l);
        r = 'rtl' == l.dir || c.numericInput;
        m = 0;
        f = e.map(d, function (a, b) {
          var d = '<input type="text" ';
          q.attr('value') && (d += 'value="' + q.attr('value') + '" ');
          q.attr('dir') && (d += 'dir="' + q.attr('dir') + '" ');
          d = e(d + '/>')[0];
          e(d).inputmask(e.extend({}, c, { mask: a.mask }));
          return d;
        });
        q.data('_inputmask-multi', {
          activeMasksetIndex: 0,
          elmasks: f
        });
        ('rtl' == l.dir || c.rightAlign) && q.css('text-align', 'right');
        l.dir = 'ltr';
        q.removeAttr('dir');
        '' != q.attr('value') && u('init', f);
        q.bind('mouseenter blur focus mouseleave click dblclick keydown keypress keypress', function (a) {
          var b = n(l), d, g = !0;
          if ('keydown' == a.type) {
            d = a.keyCode;
            if (d == c.keyCode.DOWN && m < f.length - 1)
              return m++, u('multiMaskScope', f), !1;
            if (d == c.keyCode.UP && 0 < m)
              return m--, u('multiMaskScope', f), !1;
            if (a.ctrlKey || a.shiftKey || a.altKey)
              return !0;
          } else if ('keypress' == a.type && (a.ctrlKey || a.shiftKey || a.altKey))
            return !0;
          e.each(f, function (f, h) {
            if ('keydown' == a.type) {
              d = a.keyCode;
              if (d == c.keyCode.BACKSPACE && h._valueGet().length < b.begin)
                return;
              if (d == c.keyCode.TAB)
                g = !1;
              else {
                if (d == c.keyCode.RIGHT) {
                  n(h, b.begin + 1, b.end + 1);
                  g = !1;
                  return;
                }
                if (d == c.keyCode.LEFT) {
                  n(h, b.begin - 1, b.end - 1);
                  g = !1;
                  return;
                }
              }
            }
            if (-1 != e.inArray(a.type, ['click']) && (n(h, z(b.begin), z(b.end)), b.begin != b.end)) {
              g = !1;
              return;
            }
            -1 != e.inArray(a.type, ['keydown']) && b.begin != b.end && n(h, b.begin, b.end);
            e(h).triggerHandler(a);
          });
          g && setTimeout(function () {
            u(a.type, f);
          }, 0);
        });
        q.bind(K + ' dragdrop drop setvalue', function (a) {
          n(l);
          setTimeout(function () {
            e.each(f, function (b, c) {
              c._valueSet(l.value);
              e(c).triggerHandler(a);
            });
            setTimeout(function () {
              u(a.type, f);
            }, 0);
          }, 0);
        });
        h(l.type);
      }
      var K = g('paste') ? 'paste' : g('input') ? 'input' : 'propertychange', r, l, q, f, m;
      c.multi = !0;
      if (void 0 != a)
        switch (a.action) {
        case 'isComplete':
          return q = e(a.el), a = q.data('_inputmask-multi'), a = a.elmasks[a.activeMasksetIndex], e(a).inputmask('isComplete');
        case 'unmaskedvalue':
          return q = a.$input, a = q.data('_inputmask-multi'), a = a.elmasks[a.activeMasksetIndex], e(a).inputmask('unmaskedvalue');
        case 'mask':
          J(a.el);
          break;
        case 'format':
          return q = e({}), q.data('_inputmask', {
            maskset: maskset,
            opts: c,
            isRTL: c.numericInput
          }), c.numericInput && (r = !0), a = a.value.split(''), checkVal(q, !1, !1, r ? a.reverse() : a, !0), r ? getBuffer().reverse().join('') : getBuffer().join('');
        case 'isValid':
          return q = e({}), q.data('_inputmask', {
            maskset: maskset,
            opts: c,
            isRTL: c.numericInput
          }), c.numericInput && (r = !0), a = a.value.split(''), checkVal(q, !1, !0, r ? a.reverse() : a), isComplete(getBuffer());
        case 'getemptymask':
          return q = e(a.el), maskset = q.data('_inputmask').maskset, c = q.data('_inputmask').opts, getBufferTemplate();
        case 'remove':
          l = a.el;
          q = e(l);
          maskset = q.data('_inputmask').maskset;
          c = q.data('_inputmask').opts;
          l._valueSet(unmaskedvalue(q));
          q.unbind('.inputmask');
          q.removeClass('focus-inputmask');
          q.removeData('_inputmask');
          var I;
          Object.getOwnPropertyDescriptor && (I = Object.getOwnPropertyDescriptor(l, 'value'));
          I && I.get ? l._valueGet && Object.defineProperty(l, 'value', {
            get: l._valueGet,
            set: l._valueSet
          }) : document.__lookupGetter__ && l.__lookupGetter__('value') && l._valueGet && (l.__defineGetter__('value', l._valueGet), l.__defineSetter__('value', l._valueSet));
          try {
            delete l._valueGet, delete l._valueSet;
          } catch (ta) {
            l._valueGet = void 0, l._valueSet = void 0;
          }
        }
    };
    e.extend(e.inputmask.defaults, {
      multi: !1,
      determineActiveMasksetIndex: void 0
    });
    e.inputmask._fn = e.fn.inputmask;
    e.fn.inputmask = function (b, d) {
      if ('string' === typeof b)
        return e.inputmask._fn('_detectScope', d, void 0, void 0, b) ? e.inputmask._fn.call(this, b, d, a, '_inputmask-multi') : e.inputmask._fn.call(this, b, d);
      if ('object' == typeof b)
        return e.inputmask._fn('_detectScope', b) ? e.inputmask._fn.call(this, b, d, a, '_inputmask-multi') : e.inputmask._fn.call(this, b, d);
      if (void 0 == b)
        return e.inputmask._fn.call(this, b, d);
    };
  }
}(jQuery));
(function (e) {
  e.extend(e.inputmask.defaults.definitions, {
    A: {
      validator: '[A-Za-z]',
      cardinality: 1,
      casing: 'upper'
    },
    '#': {
      validator: '[A-Za-z\u0410-\u044f\u0401\u04510-9]',
      cardinality: 1,
      casing: 'upper'
    }
  });
  e.extend(e.inputmask.defaults.aliases, {
    url: {
      mask: 'ir',
      placeholder: '',
      separator: '',
      defaultPrefix: 'http://',
      regex: {
        urlpre1: /[fh]/,
        urlpre2: /(ft|ht)/,
        urlpre3: /(ftp|htt)/,
        urlpre4: /(ftp:|http|ftps)/,
        urlpre5: /(ftp:\/|ftps:|http:|https)/,
        urlpre6: /(ftp:\/\/|ftps:\/|http:\/|https:)/,
        urlpre7: /(ftp:\/\/|ftps:\/\/|http:\/\/|https:\/)/,
        urlpre8: /(ftp:\/\/|ftps:\/\/|http:\/\/|https:\/\/)/
      },
      definitions: {
        i: {
          validator: function (a, b, d, c, g) {
            return !0;
          },
          cardinality: 8,
          prevalidator: function () {
            for (var a = [], b = 0; 8 > b; b++)
              a[b] = function () {
                var a = b;
                return {
                  validator: function (b, g, e, n, z) {
                    if (z.regex['urlpre' + (a + 1)]) {
                      var u = b;
                      0 < a + 1 - b.length && (u = g.buffer.join('').substring(0, a + 1 - b.length) + '' + u);
                      b = z.regex['urlpre' + (a + 1)].test(u);
                      if (!n && !b) {
                        e -= a;
                        for (n = 0; n < z.defaultPrefix.length; n++)
                          g.buffer[e] = z.defaultPrefix[n], e++;
                        for (n = 0; n < u.length - 1; n++)
                          g.buffer[e] = u[n], e++;
                        return { pos: e };
                      }
                      return b;
                    }
                    return !1;
                  },
                  cardinality: a
                };
              }();
            return a;
          }()
        },
        r: {
          validator: '.',
          cardinality: 50
        }
      },
      insertMode: !1,
      autoUnmask: !1
    },
    ip: {
      mask: 'i[i[i]].i[i[i]].i[i[i]].i[i[i]]',
      definitions: {
        i: {
          validator: function (a, b, d, c, g) {
            -1 < d - 1 && '.' != b.buffer[d - 1] ? (a = b.buffer[d - 1] + a, a = -1 < d - 2 && '.' != b.buffer[d - 2] ? b.buffer[d - 2] + a : '0' + a) : a = '00' + a;
            return /25[0-5]|2[0-4][0-9]|[01][0-9][0-9]/.test(a);
          },
          cardinality: 1
        }
      }
    },
    email: {
      mask: '*{1,20}[.*{1,20}][.*{1,20}][.*{1,20}]@*{1,20}.*{2,6}[.*{1,2}]',
      greedy: !1,
      onBeforePaste: function (a, b) {
        a = a.toLowerCase();
        return a.replace('mailto:', '');
      },
      definitions: {
        '*': {
          validator: '[A-Za-z\u0410-\u044f\u0401\u04510-9]',
          cardinality: 1,
          casing: 'lower'
        }
      }
    }
  });
}(jQuery));
(function (e) {
  e.extend(e.inputmask.defaults.definitions, {
    h: {
      validator: '[01][0-9]|2[0-3]',
      cardinality: 2,
      prevalidator: [{
          validator: '[0-2]',
          cardinality: 1
        }]
    },
    s: {
      validator: '[0-5][0-9]',
      cardinality: 2,
      prevalidator: [{
          validator: '[0-5]',
          cardinality: 1
        }]
    },
    d: {
      validator: '0[1-9]|[12][0-9]|3[01]',
      cardinality: 2,
      prevalidator: [{
          validator: '[0-3]',
          cardinality: 1
        }]
    },
    m: {
      validator: '0[1-9]|1[012]',
      cardinality: 2,
      prevalidator: [{
          validator: '[01]',
          cardinality: 1
        }]
    },
    y: {
      validator: '(19|20)\\d{2}',
      cardinality: 4,
      prevalidator: [
        {
          validator: '[12]',
          cardinality: 1
        },
        {
          validator: '(19|20)',
          cardinality: 2
        },
        {
          validator: '(19|20)\\d',
          cardinality: 3
        }
      ]
    }
  });
  e.extend(e.inputmask.defaults.aliases, {
    'dd/mm/yyyy': {
      mask: '1/2/y',
      placeholder: 'dd/mm/yyyy',
      regex: {
        val1pre: /[0-3]/,
        val1: /0[1-9]|[12][0-9]|3[01]/,
        val2pre: function (a) {
          a = e.inputmask.escapeRegex.call(this, a);
          return RegExp('((0[1-9]|[12][0-9]|3[01])' + a + '[01])');
        },
        val2: function (a) {
          a = e.inputmask.escapeRegex.call(this, a);
          return RegExp('((0[1-9]|[12][0-9])' + a + '(0[1-9]|1[012]))|(30' + a + '(0[13-9]|1[012]))|(31' + a + '(0[13578]|1[02]))');
        }
      },
      leapday: '29/02/',
      separator: '/',
      yearrange: {
        minyear: 1900,
        maxyear: 2099
      },
      isInYearRange: function (a, b, d) {
        if (isNaN(a))
          return !1;
        var c = parseInt(a.concat(b.toString().slice(a.length)));
        a = parseInt(a.concat(d.toString().slice(a.length)));
        return (isNaN(c) ? !1 : b <= c && c <= d) || (isNaN(a) ? !1 : b <= a && a <= d);
      },
      determinebaseyear: function (a, b, d) {
        var c = new Date().getFullYear();
        if (a > c)
          return a;
        if (b < c) {
          for (var c = b.toString().slice(0, 2), g = b.toString().slice(2, 4); b < c + d;)
            c--;
          b = c + g;
          return a > b ? a : b;
        }
        return c;
      },
      onKeyUp: function (a, b, d, c) {
        b = e(this);
        a.ctrlKey && a.keyCode == c.keyCode.RIGHT && (a = new Date(), b.val(a.getDate().toString() + (a.getMonth() + 1).toString() + a.getFullYear().toString()));
      },
      definitions: {
        1: {
          validator: function (a, b, d, c, g) {
            var e = g.regex.val1.test(a);
            return c || e || a.charAt(1) != g.separator && -1 == '-./'.indexOf(a.charAt(1)) || !(e = g.regex.val1.test('0' + a.charAt(0))) ? e : (b.buffer[d - 1] = '0', {
              refreshFromBuffer: {
                start: d - 1,
                end: d
              },
              pos: d,
              c: a.charAt(0)
            });
          },
          cardinality: 2,
          prevalidator: [{
              validator: function (a, b, d, c, e) {
                isNaN(b.buffer[d + 1]) || (a += b.buffer[d + 1]);
                var h = 1 == a.length ? e.regex.val1pre.test(a) : e.regex.val1.test(a);
                return c || h || !(h = e.regex.val1.test('0' + a)) ? h : (b.buffer[d] = '0', d++, { pos: d });
              },
              cardinality: 1
            }]
        },
        2: {
          validator: function (a, b, d, c, e) {
            var h = e.mask.indexOf('2') == e.mask.length - 1 ? b.buffer.join('').substr(5, 3) : b.buffer.join('').substr(0, 3);
            -1 != h.indexOf(e.placeholder[0]) && (h = '01' + e.separator);
            var n = e.regex.val2(e.separator).test(h + a);
            if (!(c || n || a.charAt(1) != e.separator && -1 == '-./'.indexOf(a.charAt(1))) && (n = e.regex.val2(e.separator).test(h + '0' + a.charAt(0))))
              return b.buffer[d - 1] = '0', {
                refreshFromBuffer: {
                  start: d - 1,
                  end: d
                },
                pos: d,
                c: a.charAt(0)
              };
            if (e.mask.indexOf('2') == e.mask.length - 1 && n) {
              if (b.buffer.join('').substr(4, 4) + a != e.leapday)
                return !0;
              a = parseInt(b.buffer.join('').substr(0, 4), 10);
              return 0 === a % 4 ? 0 === a % 100 ? 0 === a % 400 ? !0 : !1 : !0 : !1;
            }
            return n;
          },
          cardinality: 2,
          prevalidator: [{
              validator: function (a, b, d, c, e) {
                isNaN(b.buffer[d + 1]) || (a += b.buffer[d + 1]);
                var h = e.mask.indexOf('2') == e.mask.length - 1 ? b.buffer.join('').substr(5, 3) : b.buffer.join('').substr(0, 3);
                -1 != h.indexOf(e.placeholder[0]) && (h = '01' + e.separator);
                var n = 1 == a.length ? e.regex.val2pre(e.separator).test(h + a) : e.regex.val2(e.separator).test(h + a);
                return c || n || !(n = e.regex.val2(e.separator).test(h + '0' + a)) ? n : (b.buffer[d] = '0', d++, { pos: d });
              },
              cardinality: 1
            }]
        },
        y: {
          validator: function (a, b, d, c, e) {
            if (e.isInYearRange(a, e.yearrange.minyear, e.yearrange.maxyear)) {
              if (b.buffer.join('').substr(0, 6) != e.leapday)
                return !0;
              a = parseInt(a, 10);
              return 0 === a % 4 ? 0 === a % 100 ? 0 === a % 400 ? !0 : !1 : !0 : !1;
            }
            return !1;
          },
          cardinality: 4,
          prevalidator: [
            {
              validator: function (a, b, d, c, e) {
                var h = e.isInYearRange(a, e.yearrange.minyear, e.yearrange.maxyear);
                if (!c && !h) {
                  c = e.determinebaseyear(e.yearrange.minyear, e.yearrange.maxyear, a + '0').toString().slice(0, 1);
                  if (h = e.isInYearRange(c + a, e.yearrange.minyear, e.yearrange.maxyear))
                    return b.buffer[d++] = c[0], { pos: d };
                  c = e.determinebaseyear(e.yearrange.minyear, e.yearrange.maxyear, a + '0').toString().slice(0, 2);
                  if (h = e.isInYearRange(c + a, e.yearrange.minyear, e.yearrange.maxyear))
                    return b.buffer[d++] = c[0], b.buffer[d++] = c[1], { pos: d };
                }
                return h;
              },
              cardinality: 1
            },
            {
              validator: function (a, b, d, c, e) {
                var h = e.isInYearRange(a, e.yearrange.minyear, e.yearrange.maxyear);
                if (!c && !h) {
                  c = e.determinebaseyear(e.yearrange.minyear, e.yearrange.maxyear, a).toString().slice(0, 2);
                  if (h = e.isInYearRange(a[0] + c[1] + a[1], e.yearrange.minyear, e.yearrange.maxyear))
                    return b.buffer[d++] = c[1], { pos: d };
                  c = e.determinebaseyear(e.yearrange.minyear, e.yearrange.maxyear, a).toString().slice(0, 2);
                  e.isInYearRange(c + a, e.yearrange.minyear, e.yearrange.maxyear) ? b.buffer.join('').substr(0, 6) != e.leapday ? h = !0 : (e = parseInt(a, 10), h = 0 === e % 4 ? 0 === e % 100 ? 0 === e % 400 ? !0 : !1 : !0 : !1) : h = !1;
                  if (h)
                    return b.buffer[d - 1] = c[0], b.buffer[d++] = c[1], b.buffer[d++] = a[0], {
                      refreshFromBuffer: {
                        start: d - 3,
                        end: d
                      },
                      pos: d
                    };
                }
                return h;
              },
              cardinality: 2
            },
            {
              validator: function (a, b, d, c, e) {
                return e.isInYearRange(a, e.yearrange.minyear, e.yearrange.maxyear);
              },
              cardinality: 3
            }
          ]
        }
      },
      insertMode: !1,
      autoUnmask: !1
    },
    'mm/dd/yyyy': {
      placeholder: 'mm/dd/yyyy',
      alias: 'dd/mm/yyyy',
      regex: {
        val2pre: function (a) {
          a = e.inputmask.escapeRegex.call(this, a);
          return RegExp('((0[13-9]|1[012])' + a + '[0-3])|(02' + a + '[0-2])');
        },
        val2: function (a) {
          a = e.inputmask.escapeRegex.call(this, a);
          return RegExp('((0[1-9]|1[012])' + a + '(0[1-9]|[12][0-9]))|((0[13-9]|1[012])' + a + '30)|((0[13578]|1[02])' + a + '31)');
        },
        val1pre: /[01]/,
        val1: /0[1-9]|1[012]/
      },
      leapday: '02/29/',
      onKeyUp: function (a, b, d, c) {
        b = e(this);
        a.ctrlKey && a.keyCode == c.keyCode.RIGHT && (a = new Date(), b.val((a.getMonth() + 1).toString() + a.getDate().toString() + a.getFullYear().toString()));
      }
    },
    'yyyy/mm/dd': {
      mask: 'y/1/2',
      placeholder: 'yyyy/mm/dd',
      alias: 'mm/dd/yyyy',
      leapday: '/02/29',
      onKeyUp: function (a, b, d, c) {
        b = e(this);
        a.ctrlKey && a.keyCode == c.keyCode.RIGHT && (a = new Date(), b.val(a.getFullYear().toString() + (a.getMonth() + 1).toString() + a.getDate().toString()));
      }
    },
    'dd.mm.yyyy': {
      mask: '1.2.y',
      placeholder: 'dd.mm.yyyy',
      leapday: '29.02.',
      separator: '.',
      alias: 'dd/mm/yyyy'
    },
    'dd-mm-yyyy': {
      mask: '1-2-y',
      placeholder: 'dd-mm-yyyy',
      leapday: '29-02-',
      separator: '-',
      alias: 'dd/mm/yyyy'
    },
    'mm.dd.yyyy': {
      mask: '1.2.y',
      placeholder: 'mm.dd.yyyy',
      leapday: '02.29.',
      separator: '.',
      alias: 'mm/dd/yyyy'
    },
    'mm-dd-yyyy': {
      mask: '1-2-y',
      placeholder: 'mm-dd-yyyy',
      leapday: '02-29-',
      separator: '-',
      alias: 'mm/dd/yyyy'
    },
    'yyyy.mm.dd': {
      mask: 'y.1.2',
      placeholder: 'yyyy.mm.dd',
      leapday: '.02.29',
      separator: '.',
      alias: 'yyyy/mm/dd'
    },
    'yyyy-mm-dd': {
      mask: 'y-1-2',
      placeholder: 'yyyy-mm-dd',
      leapday: '-02-29',
      separator: '-',
      alias: 'yyyy/mm/dd'
    },
    datetime: {
      mask: '1/2/y h:s',
      placeholder: 'dd/mm/yyyy hh:mm',
      alias: 'dd/mm/yyyy',
      regex: {
        hrspre: /[012]/,
        hrs24: /2[0-4]|1[3-9]/,
        hrs: /[01][0-9]|2[0-4]/,
        ampm: /^[a|p|A|P][m|M]/,
        mspre: /[0-5]/,
        ms: /[0-5][0-9]/
      },
      timeseparator: ':',
      hourFormat: '24',
      definitions: {
        h: {
          validator: function (a, b, d, c, e) {
            if ('24' == e.hourFormat && 24 == parseInt(a, 10))
              return b.buffer[d - 1] = '0', b.buffer[d] = '0', {
                refreshFromBuffer: {
                  start: d - 1,
                  end: d
                },
                c: '0'
              };
            var h = e.regex.hrs.test(a);
            return c || h || a.charAt(1) != e.timeseparator && -1 == '-.:'.indexOf(a.charAt(1)) || !(h = e.regex.hrs.test('0' + a.charAt(0))) ? h && '24' !== e.hourFormat && e.regex.hrs24.test(a) ? (a = parseInt(a, 10), b.buffer[d + 5] = 24 == a ? 'a' : 'p', b.buffer[d + 6] = 'm', a -= 12, 10 > a ? (b.buffer[d] = a.toString(), b.buffer[d - 1] = '0') : (b.buffer[d] = a.toString().charAt(1), b.buffer[d - 1] = a.toString().charAt(0)), {
              refreshFromBuffer: {
                start: d - 1,
                end: d + 6
              },
              c: b.buffer[d]
            }) : h : (b.buffer[d - 1] = '0', b.buffer[d] = a.charAt(0), d++, {
              refreshFromBuffer: {
                start: d - 2,
                end: d
              },
              pos: d,
              c: e.timeseparator
            });
          },
          cardinality: 2,
          prevalidator: [{
              validator: function (a, b, d, c, e) {
                var h = e.regex.hrspre.test(a);
                return c || h || !(h = e.regex.hrs.test('0' + a)) ? h : (b.buffer[d] = '0', d++, { pos: d });
              },
              cardinality: 1
            }]
        },
        s: {
          validator: '[0-5][0-9]',
          cardinality: 2,
          prevalidator: [{
              validator: function (a, b, d, c, e) {
                var h = e.regex.mspre.test(a);
                return c || h || !(h = e.regex.ms.test('0' + a)) ? h : (b.buffer[d] = '0', d++, { pos: d });
              },
              cardinality: 1
            }]
        },
        t: {
          validator: function (a, b, d, c, e) {
            return e.regex.ampm.test(a + 'm');
          },
          casing: 'lower',
          cardinality: 1
        }
      },
      insertMode: !1,
      autoUnmask: !1
    },
    datetime12: {
      mask: '1/2/y h:s t\\m',
      placeholder: 'dd/mm/yyyy hh:mm xm',
      alias: 'datetime',
      hourFormat: '12'
    },
    'hh:mm t': {
      mask: 'h:s t\\m',
      placeholder: 'hh:mm xm',
      alias: 'datetime',
      hourFormat: '12'
    },
    'h:s t': {
      mask: 'h:s t\\m',
      placeholder: 'hh:mm xm',
      alias: 'datetime',
      hourFormat: '12'
    },
    'hh:mm:ss': {
      mask: 'h:s:s',
      placeholder: 'hh:mm:ss',
      alias: 'datetime',
      autoUnmask: !1
    },
    'hh:mm': {
      mask: 'h:s',
      placeholder: 'hh:mm',
      alias: 'datetime',
      autoUnmask: !1
    },
    date: { alias: 'dd/mm/yyyy' },
    'mm/yyyy': {
      mask: '1/y',
      placeholder: 'mm/yyyy',
      leapday: 'donotuse',
      separator: '/',
      alias: 'mm/dd/yyyy'
    }
  });
}(jQuery));
(function (e) {
  e.extend(e.inputmask.defaults.aliases, {
    numeric: {
      mask: function (a) {
        0 !== a.repeat && isNaN(a.integerDigits) && (a.integerDigits = a.repeat);
        a.repeat = 0;
        a.autoGroup = a.autoGroup && '' != a.groupSeparator;
        if (a.autoGroup && isFinite(a.integerDigits)) {
          var b = Math.floor(a.integerDigits / a.groupSize);
          a.integerDigits += 0 == a.integerDigits % a.groupSize ? b - 1 : b;
        }
        a.definitions[':'].placeholder = a.radixPoint;
        b = a.prefix;
        b = b + '[+]' + ('~{1,' + a.integerDigits + '}');
        void 0 != a.digits && (isNaN(a.digits) || 0 < parseInt(a.digits)) && (b = a.digitsOptional ? b + ('[:~{' + a.digits + '}]') : b + (':~{' + a.digits + '}'));
        return b += a.suffix;
      },
      placeholder: '',
      greedy: !1,
      digits: '*',
      digitsOptional: !0,
      groupSeparator: '',
      radixPoint: '.',
      groupSize: 3,
      autoGroup: !1,
      allowPlus: !0,
      allowMinus: !0,
      integerDigits: '+',
      prefix: '',
      suffix: '',
      rightAlign: !0,
      postFormat: function (a, b, d, c) {
        var g = !1, h = a[b];
        if ('' == c.groupSeparator || -1 != e.inArray(c.radixPoint, a) && b >= e.inArray(c.radixPoint, a) || /[-+]/.test(h))
          return { pos: b };
        var n = a.slice();
        h == c.groupSeparator && (n.splice(b--, 1), h = n[b]);
        d ? n[b] = '?' : n.splice(b, 0, '?');
        b = n.join('');
        if (c.autoGroup || d && -1 != b.indexOf(c.groupSeparator)) {
          n = e.inputmask.escapeRegex.call(this, c.groupSeparator);
          g = 0 == b.indexOf(c.groupSeparator);
          b = b.replace(RegExp(n, 'g'), '');
          n = b.split(c.radixPoint);
          b = n[0];
          if (b != c.prefix + '?0' && b.length > c.groupSize + c.prefix.length)
            for (var g = !0, z = RegExp('([-+]?[\\d?]+)([\\d?]{' + c.groupSize + '})'); z.test(b);)
              b = b.replace(z, '$1' + c.groupSeparator + '$2'), b = b.replace(c.groupSeparator + c.groupSeparator, c.groupSeparator);
          1 < n.length && (b += c.radixPoint + n[1]);
        }
        a.length = b.length;
        c = 0;
        for (n = b.length; c < n; c++)
          a[c] = b.charAt(c);
        c = e.inArray('?', a);
        d ? a[c] = h : a.splice(c, 1);
        return {
          pos: c,
          refreshFromBuffer: g
        };
      },
      onKeyDown: function (a, b, d, c) {
        if (c.autoGroup && (a.keyCode == c.keyCode.DELETE || a.keyCode == c.keyCode.BACKSPACE))
          return a = c.postFormat(b, d - 1, !0, c), a.caret = a.pos + 1, a;
      },
      onKeyPress: function (a, b, d, c) {
        if (c.autoGroup)
          return a = c.postFormat(b, d - 1, !0, c), a.caret = a.pos + 1, a;
      },
      regex: {
        integerPart: function (a) {
          return /[-+]?\d+/;
        }
      },
      negationhandler: function (a, b, d, c, e) {
        return !c && e.allowMinus && '-' === a && (a = b.join('').match(e.regex.integerPart(e)), 0 < a.length) ? '+' == b[a.index] ? {
          pos: a.index,
          c: '-',
          remove: a.index,
          caret: d
        } : '-' == b[a.index] ? {
          remove: a.index,
          caret: d - 1
        } : {
          pos: a.index,
          c: '-',
          caret: d + 1
        } : !1;
      },
      definitions: {
        '~': {
          validator: function (a, b, d, c, g) {
            var h = g.negationhandler(a, b.buffer, d, c, g);
            if (!h && (h = c ? RegExp('[0-9' + e.inputmask.escapeRegex.call(this, g.groupSeparator) + ']').test(a) : /[0-9]/.test(a), !0 === h && (h = { pos: d }), !1 != h && !c)) {
              c = b.buffer.join('').match(g.regex.integerPart(g));
              var n = e.inArray(g.radixPoint, b.buffer);
              if (c)
                if (0 == c['0'][0].indexOf('0') && d >= g.prefix.length)
                  -1 == n || d <= n && void 0 == b.validPositions[n] ? (b.buffer.splice(c.index, 1), d = d > c.index ? d - 1 : c.index, e.extend(h, {
                    pos: d,
                    remove: c.index
                  })) : d > c.index && d <= n && (b.buffer.splice(c.index, 1), d = d > c.index ? d - 1 : c.index, e.extend(h, {
                    pos: d,
                    remove: c.index
                  }));
                else if ('0' == a && d <= c.index)
                  return !1;
              if (!1 === g.digitsOptional && d > n)
                return {
                  pos: d,
                  remove: d
                };
            }
            return h;
          },
          cardinality: 1,
          prevalidator: null
        },
        '+': {
          validator: function (a, b, d, c, e) {
            b = '[';
            !0 === e.allowMinus && (b += '-');
            !0 === e.allowPlus && (b += '+');
            return RegExp(b + ']').test(a);
          },
          cardinality: 1,
          prevalidator: null
        },
        ':': {
          validator: function (a, b, d, c, g) {
            c = g.negationhandler(a, b.buffer, d, c, g);
            c || (c = '[' + e.inputmask.escapeRegex.call(this, g.radixPoint) + ']', (c = RegExp(c).test(a)) && b.validPositions[d] && b.validPositions[d].match.placeholder == g.radixPoint && (c = {
              pos: d,
              remove: d
            }));
            return c;
          },
          cardinality: 1,
          prevalidator: null,
          placeholder: ''
        }
      },
      insertMode: !0,
      autoUnmask: !1,
      onUnMask: function (a, b, d) {
        a = a.replace(d.prefix, '');
        a = a.replace(d.suffix, '');
        return a = a.replace(RegExp(e.inputmask.escapeRegex.call(this, d.groupSeparator), 'g'), '');
      },
      isComplete: function (a, b) {
        var d = a.join(''), c = a.slice();
        b.postFormat(c, 0, !0, b);
        if (c.join('') != d)
          return !1;
        d = d.replace(b.prefix, '');
        d = d.replace(b.suffix, '');
        d = d.replace(RegExp(e.inputmask.escapeRegex.call(this, b.groupSeparator), 'g'), '');
        d = d.replace(e.inputmask.escapeRegex.call(this, b.radixPoint), '.');
        return isFinite(d);
      },
      onBeforeMask: function (a, b) {
        if (isFinite(a))
          return a.toString().replace('.', b.radixPoint);
        var d = a.match(/,/g), c = a.match(/\./g);
        c && d ? c.length > d.length ? (a = a.replace(/\./g, ''), a = a.replace(',', b.radixPoint)) : d.length > c.length && (a = a.replace(/,/g, ''), a = a.replace('.', b.radixPoint)) : a = a.replace(RegExp(e.inputmask.escapeRegex.call(this, b.groupSeparator), 'g'), '');
        return a;
      }
    },
    decimal: { alias: 'numeric' },
    integer: {
      alias: 'numeric',
      digits: '0'
    }
  });
}(jQuery));
(function (e) {
  e.extend(e.inputmask.defaults.aliases, {
    Regex: {
      mask: 'r',
      greedy: !1,
      repeat: '*',
      regex: null,
      regexTokens: null,
      tokenizer: /\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,
      quantifierFilter: /[0-9]+[^,]/,
      isComplete: function (a, b) {
        return RegExp(b.regex).test(a.join(''));
      },
      definitions: {
        r: {
          validator: function (a, b, d, c, g) {
            function h(a, b) {
              this.matches = [];
              this.isGroup = a || !1;
              this.isQuantifier = b || !1;
              this.quantifier = {
                min: 1,
                max: 1
              };
              this.repeaterPart = void 0;
            }
            function n() {
              var a = new h(), b, c = [];
              for (g.regexTokens = []; b = g.tokenizer.exec(g.regex);)
                switch (b = b[0], b.charAt(0)) {
                case '(':
                  c.push(new h(!0));
                  break;
                case ')':
                  var d = c.pop();
                  0 < c.length ? c[c.length - 1].matches.push(d) : a.matches.push(d);
                  break;
                case '{':
                case '+':
                case '*':
                  var e = new h(!1, !0);
                  b = b.replace(/[{}]/g, '');
                  d = b.split(',');
                  b = isNaN(d[0]) ? d[0] : parseInt(d[0]);
                  d = 1 == d.length ? b : isNaN(d[1]) ? d[1] : parseInt(d[1]);
                  e.quantifier = {
                    min: b,
                    max: d
                  };
                  if (0 < c.length) {
                    var n = c[c.length - 1].matches;
                    b = n.pop();
                    b.isGroup || (d = new h(!0), d.matches.push(b), b = d);
                    n.push(b);
                    n.push(e);
                  } else
                    b = a.matches.pop(), b.isGroup || (d = new h(!0), d.matches.push(b), b = d), a.matches.push(b), a.matches.push(e);
                  break;
                default:
                  0 < c.length ? c[c.length - 1].matches.push(b) : a.matches.push(b);
                }
              0 < a.matches.length && g.regexTokens.push(a);
            }
            function z(a, b) {
              var c = !1;
              b && (u += '(', J++);
              for (var d = 0; d < a.matches.length; d++) {
                var g = a.matches[d];
                if (!0 == g.isGroup)
                  c = z(g, !0);
                else if (!0 == g.isQuantifier) {
                  var h = e.inArray(g, a.matches), h = a.matches[h - 1], n = u;
                  if (isNaN(g.quantifier.max)) {
                    for (; g.repeaterPart && g.repeaterPart != u && g.repeaterPart.length > u.length && !(c = z(h, !0)););
                    (c = c || z(h, !0)) && (g.repeaterPart = u);
                    u = n + g.quantifier.max;
                  } else {
                    for (var k = 0, t = g.quantifier.max - 1; k < t && !(c = z(h, !0)); k++);
                    u = n + '{' + g.quantifier.min + ',' + g.quantifier.max + '}';
                  }
                } else if (void 0 != g.matches)
                  for (h = 0; h < g.length && !(c = z(g[h], b)); h++);
                else {
                  if ('[' == g[0]) {
                    c = u;
                    c += g;
                    for (k = 0; k < J; k++)
                      c += ')';
                    c = RegExp('^(' + c + ')$');
                    c = c.test(K);
                  } else
                    for (h = 0, n = g.length; h < n; h++)
                      if ('\\' != g[h]) {
                        c = u;
                        c += g.substr(0, h + 1);
                        c = c.replace(/\|$/, '');
                        for (k = 0; k < J; k++)
                          c += ')';
                        c = RegExp('^(' + c + ')$');
                        if (c = c.test(K))
                          break;
                      }
                  u += g;
                }
                if (c)
                  break;
              }
              b && (u += ')', J--);
              return c;
            }
            null == g.regexTokens && n();
            c = b.buffer.slice();
            var u = '';
            b = !1;
            var J = 0;
            c.splice(d, 0, a);
            var K = c.join('');
            for (a = 0; a < g.regexTokens.length && !(h = g.regexTokens[a], b = z(h, h.isGroup)); a++);
            return b;
          },
          cardinality: 1
        }
      }
    }
  });
}(jQuery));
(function (e) {
  e.extend(e.inputmask.defaults.aliases, {
    phone: {
      url: 'phone-codes/phone-codes.json',
      mask: function (a) {
        a.definitions = {
          p: {
            validator: function () {
              return !1;
            },
            cardinality: 1
          },
          '#': {
            validator: '[0-9]',
            cardinality: 1
          }
        };
        var b = [];
        e.ajax({
          url: a.url,
          async: !1,
          dataType: 'json',
          success: function (a) {
            b = a;
          }
        });
        b.splice(0, 0, '+p(ppp)ppp-pppp');
        return b;
      },
      nojumps: !0,
      nojumpsThreshold: 1
    },
    phonebe: {
      url: 'phone-codes/phone-be.json',
      mask: function (a) {
        a.definitions = {
          p: {
            validator: function () {
              return !1;
            },
            cardinality: 1
          },
          '#': {
            validator: '[0-9]',
            cardinality: 1
          }
        };
        var b = [];
        e.ajax({
          url: a.url,
          async: !1,
          dataType: 'json',
          success: function (a) {
            b = a;
          }
        });
        b.splice(0, 0, '+32(ppp)ppp-pppp');
        return b;
      },
      nojumps: !0,
      nojumpsThreshold: 4
    }
  });
}(jQuery));
/**
 * @author zhixin wen <wenzhixin2010@gmail.com>
 * @version 1.1.0
 *
 * http://wenzhixin.net.cn/p/multiple-select/
 */
(function ($) {
  'use strict';
  function MultipleSelect($el, options) {
    var that = this, name = $el.attr('name') || options.name || '';
    $el.parent().hide();
    var elWidth = $el.css('width');
    $el.parent().show();
    if (elWidth == '0px') {
      elWidth = $el.outerWidth() + 20;
    }
    this.$el = $el.hide();
    this.options = options;
    this.$parent = $('<div' + $.map([
      'class',
      'title'
    ], function (att) {
      var attValue = that.$el.attr(att) || '';
      attValue = (att === 'class' ? 'ms-parent' + (attValue ? ' ' : '') : '') + attValue;
      return attValue ? ' ' + att + '="' + attValue + '"' : '';
    }).join('') + ' />');
    this.$choice = $('<button type="button" class="ms-choice"><span class="placeholder">' + options.placeholder + '</span><div></div></button>');
    this.$drop = $('<div class="ms-drop ' + options.position + '"></div>');
    this.$el.after(this.$parent);
    this.$parent.append(this.$choice);
    this.$parent.append(this.$drop);
    if (this.$el.prop('disabled')) {
      this.$choice.addClass('disabled');
    }
    this.$parent.css('width', options.width || elWidth);
    if (!this.options.keepOpen) {
      $('body').click(function (e) {
        if ($(e.target)[0] === that.$choice[0] || $(e.target).parents('.ms-choice')[0] === that.$choice[0]) {
          return;
        }
        if (($(e.target)[0] === that.$drop[0] || $(e.target).parents('.ms-drop')[0] !== that.$drop[0]) && that.options.isOpen) {
          that.close();
        }
      });
    }
    this.selectAllName = 'name="selectAll' + name + '"';
    this.selectGroupName = 'name="selectGroup' + name + '"';
    this.selectItemName = 'name="selectItem' + name + '"';
  }
  MultipleSelect.prototype = {
    constructor: MultipleSelect,
    init: function () {
      var that = this, html = [];
      if (this.options.filter) {
        html.push('<div class="ms-search">', '<input type="text" autocomplete="off" autocorrect="off" autocapitilize="off" spellcheck="false">', '</div>');
      }
      html.push('<ul>');
      if (this.options.selectAll && !this.options.single) {
        html.push('<li class="ms-select-all">', '<label>', '<input type="checkbox" ' + this.selectAllName + ' /> ', this.options.selectAllDelimiter[0] + this.options.selectAllText + this.options.selectAllDelimiter[1], '</label>', '</li>');
      }
      $.each(this.$el.children(), function (i, elm) {
        html.push(that.optionToHtml(i, elm));
      });
      html.push('<li class="ms-no-results">' + this.options.noMatchesFound + '</li>');
      html.push('</ul>');
      this.$drop.html(html.join(''));
      this.$drop.find('ul').css('max-height', this.options.maxHeight + 'px');
      this.$drop.find('.multiple').css('width', this.options.multipleWidth + 'px');
      this.$searchInput = this.$drop.find('.ms-search input');
      this.$selectAll = this.$drop.find('input[' + this.selectAllName + ']');
      this.$selectGroups = this.$drop.find('input[' + this.selectGroupName + ']');
      this.$selectItems = this.$drop.find('input[' + this.selectItemName + ']:enabled');
      this.$disableItems = this.$drop.find('input[' + this.selectItemName + ']:disabled');
      this.$noResults = this.$drop.find('.ms-no-results');
      this.events();
      this.updateSelectAll(true);
      this.update(true);
      if (this.options.isOpen) {
        this.open();
      }
    },
    optionToHtml: function (i, elm, group, groupDisabled) {
      var that = this, $elm = $(elm), html = [], multiple = this.options.multiple, optAttributesToCopy = [
          'class',
          'title'
        ], clss = $.map(optAttributesToCopy, function (att, i) {
          var isMultiple = att === 'class' && multiple;
          var attValue = $elm.attr(att) || '';
          return isMultiple || attValue ? ' ' + att + '="' + (isMultiple ? 'multiple' + (attValue ? ' ' : '') : '') + attValue + '"' : '';
        }).join(''), disabled, type = this.options.single ? 'radio' : 'checkbox';
      if ($elm.is('option')) {
        var value = $elm.val(), text = that.options.textTemplate($elm), selected = that.$el.attr('multiple') != undefined ? $elm.prop('selected') : $elm.attr('selected') == 'selected', style = this.options.styler(value) ? ' style="' + this.options.styler(value) + '"' : '';
        disabled = groupDisabled || $elm.prop('disabled');
        if (this.options.blockSeparator > '' && this.options.blockSeparator == $elm.val()) {
          html.push('<li' + clss + style + '>', '<label class="' + this.options.blockSeparator + (disabled ? 'disabled' : '') + '">', text, '</label>', '</li>');
        } else {
          html.push('<li' + clss + style + '>', '<label' + (disabled ? ' class="disabled"' : '') + '>', '<input type="' + type + '" ' + this.selectItemName + ' value="' + value + '"' + (selected ? ' checked="checked"' : '') + (disabled ? ' disabled="disabled"' : '') + (group ? ' data-group="' + group + '"' : '') + '/> ', text, '</label>', '</li>');
        }
      } else if (!group && $elm.is('optgroup')) {
        var _group = 'group_' + i, label = $elm.attr('label');
        disabled = $elm.prop('disabled');
        html.push('<li class="group">', '<label class="optgroup' + (disabled ? ' disabled' : '') + '" data-group="' + _group + '">', this.options.hideOptgroupCheckboxes ? '' : '<input type="checkbox" ' + this.selectGroupName + (disabled ? ' disabled="disabled"' : '') + ' /> ', label, '</label>', '</li>');
        $.each($elm.children(), function (i, elm) {
          html.push(that.optionToHtml(i, elm, _group, disabled));
        });
      }
      return html.join('');
    },
    events: function () {
      var that = this;
      function toggleOpen(e) {
        e.preventDefault();
        that[that.options.isOpen ? 'close' : 'open']();
      }
      var label = this.$el.parent().closest('label')[0] || $('label[for=' + this.$el.attr('id') + ']')[0];
      if (label) {
        $(label).off('click').on('click', function (e) {
          if (e.target.nodeName.toLowerCase() !== 'label' || e.target !== this) {
            return;
          }
          toggleOpen(e);
          if (!that.options.filter || !that.options.isOpen) {
            that.focus();
          }
          e.stopPropagation();  // Causes lost focus otherwise
        });
      }
      this.$choice.off('click').on('click', toggleOpen).off('focus').on('focus', this.options.onFocus).off('blur').on('blur', this.options.onBlur);
      this.$parent.off('keydown').on('keydown', function (e) {
        switch (e.which) {
        case 27:
          // esc key
          that.close();
          that.$choice.focus();
          break;
        }
      });
      this.$searchInput.off('keydown').on('keydown', function (e) {
        if (e.keyCode === 9 && e.shiftKey) {
          // Ensure shift-tab causes lost focus from filter as with clicking away
          that.close();
        }
      }).off('keyup').on('keyup', function (e) {
        if (that.options.filterAcceptOnEnter && (e.which === 13 || e.which == 32) && that.$searchInput.val()) {
          that.$selectAll.click();
          that.close();
          that.focus();
          return;
        }
        that.filter();
      });
      this.$selectAll.off('click').on('click', function () {
        var checked = $(this).prop('checked'), $items = that.$selectItems.filter(':visible');
        if ($items.length === that.$selectItems.length) {
          that[checked ? 'checkAll' : 'uncheckAll']();
        } else {
          // when the filter option is true
          that.$selectGroups.prop('checked', checked);
          $items.prop('checked', checked);
          that.options[checked ? 'onCheckAll' : 'onUncheckAll']();
          that.update();
        }
      });
      this.$selectGroups.off('click').on('click', function () {
        var group = $(this).parent().attr('data-group'), $items = that.$selectItems.filter(':visible'), $children = $items.filter('[data-group="' + group + '"]'), checked = $children.length !== $children.filter(':checked').length;
        $children.prop('checked', checked);
        that.updateSelectAll();
        that.update();
        that.options.onOptgroupClick({
          label: $(this).parent().text(),
          checked: checked,
          children: $children.get()
        });
      });
      this.$selectItems.off('click').on('click', function () {
        that.updateSelectAll();
        that.update();
        that.updateOptGroupSelect();
        that.options.onClick({
          label: $(this).parent().text(),
          value: $(this).val(),
          checked: $(this).prop('checked')
        });
        if (that.options.single && that.options.isOpen && !that.options.keepOpen) {
          that.close();
        }
      });
    },
    open: function () {
      if (this.$choice.hasClass('disabled')) {
        return;
      }
      this.options.isOpen = true;
      this.$choice.find('>div').addClass('open');
      this.$drop.show();
      // fix filter bug: no results show
      this.$selectAll.parent().show();
      this.$noResults.hide();
      // Fix #77: 'All selected' when no options
      if (this.$el.children().length === 0) {
        this.$selectAll.parent().hide();
        this.$noResults.show();
      }
      if (this.options.container) {
        var offset = this.$drop.offset();
        this.$drop.appendTo($(this.options.container));
        this.$drop.offset({
          top: offset.top,
          left: offset.left
        });
      }
      if (this.options.filter) {
        this.$searchInput.val('');
        this.$searchInput.focus();
        this.filter();
      }
      this.options.onOpen();
    },
    close: function () {
      this.options.isOpen = false;
      this.$choice.find('>div').removeClass('open');
      this.$drop.hide();
      if (this.options.container) {
        this.$parent.append(this.$drop);
        this.$drop.css({
          'top': 'auto',
          'left': 'auto'
        });
      }
      this.options.onClose();
    },
    update: function (isInit) {
      var selects = this.getSelects(), $span = this.$choice.find('>span');
      if (selects.length === 0) {
        $span.addClass('placeholder').html(this.options.placeholder);
      } else if (this.options.countSelected && selects.length < this.options.minimumCountSelected) {
        $span.removeClass('placeholder').html((this.options.displayValues ? selects : this.getSelects('text')).join(this.options.delimiter));
      } else if (this.options.allSelected && selects.length === this.$selectItems.length + this.$disableItems.length) {
        $span.removeClass('placeholder').html(this.options.allSelected);
      } else if ((this.options.countSelected || this.options.etcaetera) && selects.length > this.options.minimumCountSelected) {
        if (this.options.etcaetera) {
          $span.removeClass('placeholder').html((this.options.displayValues ? selects : this.getSelects('text').slice(0, this.options.minimumCountSelected)).join(this.options.delimiter) + '...');
        } else {
          $span.html(this.options.placeholder + this.options.countSelected.replace('#', selects.length).replace('%', this.$selectItems.length + this.$disableItems.length));
        }
      } else {
        $span.removeClass('placeholder').html((this.options.displayValues ? selects : this.getSelects('text')).join(this.options.delimiter));
      }
      // set selects to select
      this.$el.val(this.getSelects());
      // add selected class to selected li
      this.$drop.find('li').removeClass('selected');
      this.$drop.find('input[' + this.selectItemName + ']:checked').each(function () {
        $(this).parents('li').first().addClass('selected');
      });
      // trigger <select> change event
      if (!isInit) {
        this.$el.trigger('change');
      }
    },
    updateSelectAll: function (Init) {
      var $items = this.$selectItems;
      if (!Init) {
        $items = $items.filter(':visible');
      }
      this.$selectAll.prop('checked', $items.length && $items.length === $items.filter(':checked').length);
      if (this.$selectAll.prop('checked')) {
        this.options.onCheckAll();
      }
    },
    updateOptGroupSelect: function () {
      var $items = this.$selectItems.filter(':visible');
      $.each(this.$selectGroups, function (i, val) {
        var group = $(val).parent().attr('data-group'), $children = $items.filter('[data-group="' + group + '"]');
        $(val).prop('checked', $children.length && $children.length === $children.filter(':checked').length);
      });
    },
    getSelects: function (type) {
      var that = this, texts = [], values = [];
      this.$drop.find('input[' + this.selectItemName + ']:checked').each(function () {
        texts.push($(this).parents('li').first().text());
        values.push($(this).val());
      });
      if (type === 'text' && this.$selectGroups.length) {
        texts = [];
        this.$selectGroups.each(function () {
          var html = [], text = $.trim($(this).parent().text()), group = $(this).parent().data('group'), $children = that.$drop.find('[' + that.selectItemName + '][data-group="' + group + '"]'), $selected = $children.filter(':checked');
          if ($selected.length === 0) {
            return;
          }
          html.push('[');
          html.push(text);
          if ($children.length > $selected.length) {
            var list = [];
            $selected.each(function () {
              list.push($(this).parent().text());
            });
            html.push(': ' + list.join(', '));
          }
          html.push(']');
          texts.push(html.join(''));
        });
      }
      return type === 'text' ? texts : values;
    },
    setSelects: function (values) {
      var that = this;
      this.$selectItems.prop('checked', false);
      $.each(values, function (i, value) {
        that.$selectItems.filter('[value="' + value + '"]').prop('checked', true);
      });
      this.$selectAll.prop('checked', this.$selectItems.length === this.$selectItems.filter(':checked').length);
      this.update();
    },
    enable: function () {
      this.$choice.removeClass('disabled');
    },
    disable: function () {
      this.$choice.addClass('disabled');
    },
    checkAll: function () {
      this.$selectItems.prop('checked', true);
      this.$selectGroups.prop('checked', true);
      this.$selectAll.prop('checked', true);
      this.update();
      this.options.onCheckAll();
    },
    uncheckAll: function () {
      this.$selectItems.prop('checked', false);
      this.$selectGroups.prop('checked', false);
      this.$selectAll.prop('checked', false);
      this.update();
      this.options.onUncheckAll();
    },
    focus: function () {
      this.$choice.focus();
      this.options.onFocus();
    },
    blur: function () {
      this.$choice.blur();
      this.options.onBlur();
    },
    refresh: function () {
      this.init();
    },
    filter: function () {
      var that = this, text = $.trim(this.$searchInput.val()).toLowerCase();
      if (text.length === 0) {
        this.$selectItems.parent().show();
        this.$disableItems.parent().show();
        this.$selectGroups.parent().show();
      } else {
        this.$selectItems.each(function () {
          var $parent = $(this).parent();
          $parent[$parent.text().toLowerCase().indexOf(text) < 0 ? 'hide' : 'show']();
        });
        this.$disableItems.parent().hide();
        this.$selectGroups.each(function () {
          var $parent = $(this).parent();
          var group = $parent.attr('data-group'), $items = that.$selectItems.filter(':visible');
          $parent[$items.filter('[data-group="' + group + '"]').length === 0 ? 'hide' : 'show']();
        });
        //Check if no matches found
        if (this.$selectItems.filter(':visible').length) {
          this.$selectAll.parent().show();
          this.$noResults.hide();
        } else {
          this.$selectAll.parent().hide();
          this.$noResults.show();
        }
      }
      this.updateOptGroupSelect();
      this.updateSelectAll();
    }
  };
  $.fn.multipleSelect = function () {
    var option = arguments[0], args = arguments, value, allowedMethods = [
        'getSelects',
        'setSelects',
        'enable',
        'disable',
        'checkAll',
        'uncheckAll',
        'focus',
        'blur',
        'refresh'
      ];
    this.each(function () {
      var $this = $(this), data = $this.data('multipleSelect'), options = $.extend({}, $.fn.multipleSelect.defaults, $this.data(), typeof option === 'object' && option);
      if (!data) {
        data = new MultipleSelect($this, options);
        $this.data('multipleSelect', data);
      }
      if (typeof option === 'string') {
        if ($.inArray(option, allowedMethods) < 0) {
          throw 'Unknown method: ' + option;
        }
        value = data[option](args[1]);
      } else {
        data.init();
        if (args[1]) {
          value = data[args[1]].apply(data, [].slice.call(args, 2));
        }
      }
    });
    return value ? value : this;
  };
  $.fn.multipleSelect.defaults = {
    name: '',
    isOpen: false,
    placeholder: '',
    selectAll: true,
    selectAllText: 'Select all',
    selectAllDelimiter: [
      '[',
      ']'
    ],
    allSelected: 'All selected',
    minimumCountSelected: 0,
    countSelected: '&nbsp;&nbsp;(#)',
    noMatchesFound: 'No matches found',
    multiple: false,
    multipleWidth: 80,
    single: false,
    filter: false,
    width: undefined,
    maxHeight: 250,
    container: null,
    position: 'bottom',
    keepOpen: false,
    blockSeparator: '',
    displayValues: false,
    delimiter: ', ',
    styler: function () {
      return false;
    },
    textTemplate: function ($elm) {
      return $elm.text();
    },
    onOpen: function () {
      return false;
    },
    onClose: function () {
      return false;
    },
    onCheckAll: function () {
      return false;
    },
    onUncheckAll: function () {
      return false;
    },
    onFocus: function () {
      return false;
    },
    onBlur: function () {
      return false;
    },
    onOptgroupClick: function () {
      return false;
    },
    onClick: function () {
      return false;
    }
  };
}(jQuery));
/*
 _ _      _       _
 ___| (_) ___| | __  (_)___
 / __| | |/ __| |/ /  | / __|
 \__ \ | | (__|   < _ | \__ \
 |___/_|_|\___|_|\_(_)/ |___/
 |__/

 Version: 1.5.0
 Author: Ken Wheeler
 Website: http://kenwheeler.github.io
 Docs: http://kenwheeler.github.io/slick
 Repo: http://github.com/kenwheeler/slick
 Issues: http://github.com/kenwheeler/slick/issues

 */
/* global window, document, define, jQuery, setInterval, clearInterval */
(function (factory) {
  'use strict';
  if (typeof define === 'function' && define.amd) {
    define(['jquery'], factory);
  } else if (typeof exports !== 'undefined') {
    module.exports = factory(require('jquery'));
  } else {
    factory(jQuery);
  }
}(function ($) {
  'use strict';
  var Slick = window.Slick || {};
  Slick = function () {
    var instanceUid = 0;
    function Slick(element, settings) {
      var _ = this, dataSettings, responsiveSettings, breakpoint;
      _.defaults = {
        accessibility: true,
        adaptiveHeight: false,
        appendArrows: $(element),
        appendDots: $(element),
        arrows: true,
        asNavFor: null,
        prevArrow: '<button type="button" data-role="none" class="carousel-control left" aria-label="previous"></button>',
        nextArrow: '<button type="button" data-role="none" class="carousel-control right" aria-label="next"></button>',
        autoplay: false,
        autoplaySpeed: 3000,
        centerMode: false,
        centerPadding: '50px',
        cssEase: 'ease',
        customPaging: function (slider, i) {
          return '<button type="button" data-role="none">' + (i + 1) + '</button>';
        },
        dots: true,
        dotsClass: 'slick-dots',
        draggable: true,
        easing: 'linear',
        edgeFriction: 0.35,
        fade: false,
        focusOnSelect: false,
        infinite: true,
        initialSlide: 0,
        lazyLoad: 'ondemand',
        mobileFirst: false,
        pauseOnHover: true,
        pauseOnDotsHover: false,
        respondTo: 'window',
        responsive: null,
        rows: 1,
        rtl: false,
        slide: '',
        slidesPerRow: 1,
        slidesToShow: 1,
        slidesToScroll: 1,
        speed: 500,
        swipe: true,
        swipeToSlide: false,
        touchMove: true,
        touchThreshold: 5,
        useCSS: true,
        variableWidth: false,
        vertical: false,
        verticalSwiping: false,
        waitForAnimate: true
      };
      _.initials = {
        animating: false,
        dragging: false,
        autoPlayTimer: null,
        currentDirection: 0,
        currentLeft: null,
        currentSlide: 0,
        direction: 1,
        $dots: null,
        listWidth: null,
        listHeight: null,
        loadIndex: 0,
        $nextArrow: null,
        $prevArrow: null,
        slideCount: null,
        slideWidth: null,
        $slideTrack: null,
        $slides: null,
        sliding: false,
        slideOffset: 0,
        swipeLeft: null,
        $list: null,
        touchObject: {},
        transformsEnabled: false
      };
      $.extend(_, _.initials);
      _.activeBreakpoint = null;
      _.animType = null;
      _.animProp = null;
      _.breakpoints = [];
      _.breakpointSettings = [];
      _.cssTransitions = false;
      _.hidden = 'hidden';
      _.paused = false;
      _.positionProp = null;
      _.respondTo = null;
      _.rowCount = 1;
      _.shouldClick = true;
      _.$slider = $(element);
      _.$slidesCache = null;
      _.transformType = null;
      _.transitionType = null;
      _.visibilityChange = 'visibilitychange';
      _.windowWidth = 0;
      _.windowTimer = null;
      dataSettings = $(element).data('slick') || {};
      _.options = $.extend({}, _.defaults, dataSettings, settings);
      _.currentSlide = _.options.initialSlide;
      _.originalSettings = _.options;
      responsiveSettings = _.options.responsive || null;
      if (responsiveSettings && responsiveSettings.length > -1) {
        _.respondTo = _.options.respondTo || 'window';
        for (breakpoint in responsiveSettings) {
          if (responsiveSettings.hasOwnProperty(breakpoint)) {
            _.breakpoints.push(responsiveSettings[breakpoint].breakpoint);
            _.breakpointSettings[responsiveSettings[breakpoint].breakpoint] = responsiveSettings[breakpoint].settings;
          }
        }
        _.breakpoints.sort(function (a, b) {
          if (_.options.mobileFirst === true) {
            return a - b;
          } else {
            return b - a;
          }
        });
      }
      if (typeof document.mozHidden !== 'undefined') {
        _.hidden = 'mozHidden';
        _.visibilityChange = 'mozvisibilitychange';
      } else if (typeof document.msHidden !== 'undefined') {
        _.hidden = 'msHidden';
        _.visibilityChange = 'msvisibilitychange';
      } else if (typeof document.webkitHidden !== 'undefined') {
        _.hidden = 'webkitHidden';
        _.visibilityChange = 'webkitvisibilitychange';
      }
      _.autoPlay = $.proxy(_.autoPlay, _);
      _.autoPlayClear = $.proxy(_.autoPlayClear, _);
      _.changeSlide = $.proxy(_.changeSlide, _);
      _.clickHandler = $.proxy(_.clickHandler, _);
      _.selectHandler = $.proxy(_.selectHandler, _);
      _.setPosition = $.proxy(_.setPosition, _);
      _.swipeHandler = $.proxy(_.swipeHandler, _);
      _.dragHandler = $.proxy(_.dragHandler, _);
      _.keyHandler = $.proxy(_.keyHandler, _);
      _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);
      _.instanceUid = instanceUid++;
      // A simple way to check for HTML strings
      // Strict HTML recognition (must start with <)
      // Extracted from jQuery v1.11 source
      _.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/;
      _.init();
      _.checkResponsive(true);
    }
    return Slick;
  }();
  Slick.prototype.addSlide = Slick.prototype.slickAdd = function (markup, index, addBefore) {
    var _ = this;
    if (typeof index === 'boolean') {
      addBefore = index;
      index = null;
    } else if (index < 0 || index >= _.slideCount) {
      return false;
    }
    _.unload();
    if (typeof index === 'number') {
      if (index === 0 && _.$slides.length === 0) {
        $(markup).appendTo(_.$slideTrack);
      } else if (addBefore) {
        $(markup).insertBefore(_.$slides.eq(index));
      } else {
        $(markup).insertAfter(_.$slides.eq(index));
      }
    } else {
      if (addBefore === true) {
        $(markup).prependTo(_.$slideTrack);
      } else {
        $(markup).appendTo(_.$slideTrack);
      }
    }
    _.$slides = _.$slideTrack.children(this.options.slide);
    _.$slideTrack.children(this.options.slide).detach();
    _.$slideTrack.append(_.$slides);
    _.$slides.each(function (index, element) {
      $(element).attr('data-slick-index', index);
    });
    _.$slidesCache = _.$slides;
    _.reinit();
  };
  Slick.prototype.animateHeight = function () {
    var _ = this;
    if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {
      var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);
      _.$list.animate({ height: targetHeight }, _.options.speed);
    }
  };
  Slick.prototype.animateSlide = function (targetLeft, callback) {
    var animProps = {}, _ = this;
    _.animateHeight();
    if (_.options.rtl === true && _.options.vertical === false) {
      targetLeft = -targetLeft;
    }
    if (_.transformsEnabled === false) {
      if (_.options.vertical === false) {
        _.$slideTrack.animate({ left: targetLeft }, _.options.speed, _.options.easing, callback);
      } else {
        _.$slideTrack.animate({ top: targetLeft }, _.options.speed, _.options.easing, callback);
      }
    } else {
      if (_.cssTransitions === false) {
        if (_.options.rtl === true) {
          _.currentLeft = -_.currentLeft;
        }
        $({ animStart: _.currentLeft }).animate({ animStart: targetLeft }, {
          duration: _.options.speed,
          easing: _.options.easing,
          step: function (now) {
            now = Math.ceil(now);
            if (_.options.vertical === false) {
              animProps[_.animType] = 'translate(' + now + 'px, 0px)';
              _.$slideTrack.css(animProps);
            } else {
              animProps[_.animType] = 'translate(0px,' + now + 'px)';
              _.$slideTrack.css(animProps);
            }
          },
          complete: function () {
            if (callback) {
              callback.call();
            }
          }
        });
      } else {
        _.applyTransition();
        targetLeft = Math.ceil(targetLeft);
        if (_.options.vertical === false) {
          animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';
        } else {
          animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';
        }
        _.$slideTrack.css(animProps);
        if (callback) {
          setTimeout(function () {
            _.disableTransition();
            callback.call();
          }, _.options.speed);
        }
      }
    }
  };
  Slick.prototype.asNavFor = function (index) {
    var _ = this, asNavFor = _.options.asNavFor !== null ? $(_.options.asNavFor).slick('getSlick') : null;
    if (asNavFor !== null)
      asNavFor.slideHandler(index, true);
  };
  Slick.prototype.applyTransition = function (slide) {
    var _ = this, transition = {};
    if (_.options.fade === false) {
      transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;
    } else {
      transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;
    }
    if (_.options.fade === false) {
      _.$slideTrack.css(transition);
    } else {
      _.$slides.eq(slide).css(transition);
    }
  };
  Slick.prototype.autoPlay = function () {
    var _ = this;
    if (_.autoPlayTimer) {
      clearInterval(_.autoPlayTimer);
    }
    if (_.slideCount > _.options.slidesToShow && _.paused !== true) {
      _.autoPlayTimer = setInterval(_.autoPlayIterator, _.options.autoplaySpeed);
    }
  };
  Slick.prototype.autoPlayClear = function () {
    var _ = this;
    if (_.autoPlayTimer) {
      clearInterval(_.autoPlayTimer);
    }
  };
  Slick.prototype.autoPlayIterator = function () {
    var _ = this;
    if (_.options.infinite === false) {
      if (_.direction === 1) {
        if (_.currentSlide + 1 === _.slideCount - 1) {
          _.direction = 0;
        }
        _.slideHandler(_.currentSlide + _.options.slidesToScroll);
      } else {
        if (_.currentSlide - 1 === 0) {
          _.direction = 1;
        }
        _.slideHandler(_.currentSlide - _.options.slidesToScroll);
      }
    } else {
      _.slideHandler(_.currentSlide + _.options.slidesToScroll);
    }
  };
  Slick.prototype.buildArrows = function () {
    var _ = this;
    if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
      _.$prevArrow = $(_.options.prevArrow);
      _.$nextArrow = $(_.options.nextArrow);
      if (_.htmlExpr.test(_.options.prevArrow)) {
        _.$prevArrow.appendTo(_.options.appendArrows);
      }
      if (_.htmlExpr.test(_.options.nextArrow)) {
        _.$nextArrow.appendTo(_.options.appendArrows);
      }
      if (_.options.infinite !== true) {
        _.$prevArrow.addClass('slick-disabled');
      }
    }
  };
  Slick.prototype.buildDots = function () {
    var _ = this, i, dotString;
    if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {
      dotString = '<ul class="' + _.options.dotsClass + '">';
      for (i = 0; i <= _.getDotCount(); i += 1) {
        dotString += '<li>' + _.options.customPaging.call(this, _, i) + '</li>';
      }
      dotString += '</ul>';
      _.$dots = $(dotString).appendTo(_.options.appendDots);
      _.$dots.find('li').first().addClass('slick-active').attr('aria-hidden', 'false');
    }
  };
  Slick.prototype.buildOut = function () {
    var _ = this;
    _.$slides = _.$slider.children(':not(.slick-cloned)').addClass('slick-slide');
    _.slideCount = _.$slides.length;
    _.$slides.each(function (index, element) {
      $(element).attr('data-slick-index', index);
    });
    _.$slidesCache = _.$slides;
    _.$slider.addClass('slick-slider');
    _.$slideTrack = _.slideCount === 0 ? $('<div class="slick-track"/>').appendTo(_.$slider) : _.$slides.wrapAll('<div class="slick-track"/>').parent();
    _.$list = _.$slideTrack.wrap('<div aria-live="polite" class="slick-list"/>').parent();
    _.$slideTrack.css('opacity', 0);
    if (_.options.centerMode === true || _.options.swipeToSlide === true) {
      _.options.slidesToScroll = 1;
    }
    $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');
    _.setupInfinite();
    _.buildArrows();
    _.buildDots();
    _.updateDots();
    if (_.options.accessibility === true) {
      _.$list.prop('tabIndex', 0);
    }
    _.setSlideClasses(typeof this.currentSlide === 'number' ? this.currentSlide : 0);
    if (_.options.draggable === true) {
      _.$list.addClass('draggable');
    }
  };
  Slick.prototype.buildRows = function () {
    var _ = this, a, b, c, newSlides, numOfSlides, originalSlides, slidesPerSection;
    newSlides = document.createDocumentFragment();
    originalSlides = _.$slider.children();
    if (_.options.rows > 1) {
      slidesPerSection = _.options.slidesPerRow * _.options.rows;
      numOfSlides = Math.ceil(originalSlides.length / slidesPerSection);
      for (a = 0; a < numOfSlides; a++) {
        var slide = document.createElement('div');
        for (b = 0; b < _.options.rows; b++) {
          var row = document.createElement('div');
          for (c = 0; c < _.options.slidesPerRow; c++) {
            var target = a * slidesPerSection + (b * _.options.slidesPerRow + c);
            if (originalSlides.get(target)) {
              row.appendChild(originalSlides.get(target));
            }
          }
          slide.appendChild(row);
        }
        newSlides.appendChild(slide);
      }
      ;
      _.$slider.html(newSlides);
      _.$slider.children().children().children().width(100 / _.options.slidesPerRow + '%').css({ 'display': 'inline-block' });
    }
    ;
  };
  Slick.prototype.checkResponsive = function (initial) {
    var _ = this, breakpoint, targetBreakpoint, respondToWidth;
    var sliderWidth = _.$slider.width();
    var windowWidth = window.innerWidth || $(window).width();
    if (_.respondTo === 'window') {
      respondToWidth = windowWidth;
    } else if (_.respondTo === 'slider') {
      respondToWidth = sliderWidth;
    } else if (_.respondTo === 'min') {
      respondToWidth = Math.min(windowWidth, sliderWidth);
    }
    if (_.originalSettings.responsive && _.originalSettings.responsive.length > -1 && _.originalSettings.responsive !== null) {
      targetBreakpoint = null;
      for (breakpoint in _.breakpoints) {
        if (_.breakpoints.hasOwnProperty(breakpoint)) {
          if (_.originalSettings.mobileFirst === false) {
            if (respondToWidth < _.breakpoints[breakpoint]) {
              targetBreakpoint = _.breakpoints[breakpoint];
            }
          } else {
            if (respondToWidth > _.breakpoints[breakpoint]) {
              targetBreakpoint = _.breakpoints[breakpoint];
            }
          }
        }
      }
      if (targetBreakpoint !== null) {
        if (_.activeBreakpoint !== null) {
          if (targetBreakpoint !== _.activeBreakpoint) {
            _.activeBreakpoint = targetBreakpoint;
            if (_.breakpointSettings[targetBreakpoint] === 'unslick') {
              _.unslick();
            } else {
              _.options = $.extend({}, _.originalSettings, _.breakpointSettings[targetBreakpoint]);
              if (initial === true)
                _.currentSlide = _.options.initialSlide;
              _.refresh();
            }
          }
        } else {
          _.activeBreakpoint = targetBreakpoint;
          if (_.breakpointSettings[targetBreakpoint] === 'unslick') {
            _.unslick();
          } else {
            _.options = $.extend({}, _.originalSettings, _.breakpointSettings[targetBreakpoint]);
            if (initial === true)
              _.currentSlide = _.options.initialSlide;
            _.refresh();
          }
        }
      } else {
        if (_.activeBreakpoint !== null) {
          _.activeBreakpoint = null;
          _.options = _.originalSettings;
          if (initial === true)
            _.currentSlide = _.options.initialSlide;
          _.refresh();
        }
      }
    }
  };
  Slick.prototype.changeSlide = function (event, dontAnimate) {
    var _ = this, $target = $(event.target), indexOffset, slideOffset, unevenOffset;
    // If target is a link, prevent default action.
    $target.is('a') && event.preventDefault();
    unevenOffset = _.slideCount % _.options.slidesToScroll !== 0;
    indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;
    switch (event.data.message) {
    case 'previous':
      slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;
      if (_.slideCount > _.options.slidesToShow) {
        _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);
      }
      break;
    case 'next':
      slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;
      if (_.slideCount > _.options.slidesToShow) {
        _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);
      }
      break;
    case 'index':
      var index = event.data.index === 0 ? 0 : event.data.index || $(event.target).parent().index() * _.options.slidesToScroll;
      _.slideHandler(_.checkNavigable(index), false, dontAnimate);
      break;
    default:
      return;
    }
  };
  Slick.prototype.checkNavigable = function (index) {
    var _ = this, navigables, prevNavigable;
    navigables = _.getNavigableIndexes();
    prevNavigable = 0;
    if (index > navigables[navigables.length - 1]) {
      index = navigables[navigables.length - 1];
    } else {
      for (var n in navigables) {
        if (index < navigables[n]) {
          index = prevNavigable;
          break;
        }
        prevNavigable = navigables[n];
      }
    }
    return index;
  };
  Slick.prototype.cleanUpEvents = function () {
    var _ = this;
    if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {
      $('li', _.$dots).off('click.slick', _.changeSlide);
    }
    if (_.options.dots === true && _.options.pauseOnDotsHover === true && _.options.autoplay === true) {
      $('li', _.$dots).off('mouseenter.slick', _.setPaused.bind(_, true)).off('mouseleave.slick', _.setPaused.bind(_, false));
    }
    if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
      _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);
      _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);
    }
    _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);
    _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);
    _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);
    _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);
    _.$list.off('click.slick', _.clickHandler);
    if (_.options.autoplay === true) {
      $(document).off(_.visibilityChange, _.visibility);
    }
    _.$list.off('mouseenter.slick', _.setPaused.bind(_, true));
    _.$list.off('mouseleave.slick', _.setPaused.bind(_, false));
    if (_.options.accessibility === true) {
      _.$list.off('keydown.slick', _.keyHandler);
    }
    if (_.options.focusOnSelect === true) {
      $(_.$slideTrack).children().off('click.slick', _.selectHandler);
    }
    $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);
    $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);
    $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);
    $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);
    $(document).off('ready.slick.slick-' + _.instanceUid, _.setPosition);
  };
  Slick.prototype.cleanUpRows = function () {
    var _ = this, originalSlides;
    if (_.options.rows > 1) {
      originalSlides = _.$slides.children().children();
      originalSlides.removeAttr('style');
      _.$slider.html(originalSlides);
    }
  };
  Slick.prototype.clickHandler = function (event) {
    var _ = this;
    if (_.shouldClick === false) {
      event.stopImmediatePropagation();
      event.stopPropagation();
      event.preventDefault();
    }
  };
  Slick.prototype.destroy = function () {
    var _ = this;
    _.autoPlayClear();
    _.touchObject = {};
    _.cleanUpEvents();
    $('.slick-cloned', _.$slider).remove();
    if (_.$dots) {
      _.$dots.remove();
    }
    if (_.$prevArrow && typeof _.options.prevArrow !== 'object') {
      _.$prevArrow.remove();
    }
    if (_.$nextArrow && typeof _.options.nextArrow !== 'object') {
      _.$nextArrow.remove();
    }
    if (_.$slides) {
      _.$slides.removeClass('slick-slide slick-active slick-center slick-visible').attr('aria-hidden', 'true').removeAttr('data-slick-index').css({
        position: '',
        left: '',
        top: '',
        zIndex: '',
        opacity: '',
        width: ''
      });
      _.$slider.html(_.$slides);
    }
    _.cleanUpRows();
    _.$slider.removeClass('slick-slider');
    _.$slider.removeClass('slick-initialized');
  };
  Slick.prototype.disableTransition = function (slide) {
    var _ = this, transition = {};
    transition[_.transitionType] = '';
    if (_.options.fade === false) {
      _.$slideTrack.css(transition);
    } else {
      _.$slides.eq(slide).css(transition);
    }
  };
  Slick.prototype.fadeSlide = function (slideIndex, callback) {
    var _ = this;
    if (_.cssTransitions === false) {
      _.$slides.eq(slideIndex).css({ zIndex: 1000 });
      _.$slides.eq(slideIndex).animate({ opacity: 1 }, _.options.speed, _.options.easing, callback);
    } else {
      _.applyTransition(slideIndex);
      _.$slides.eq(slideIndex).css({
        opacity: 1,
        zIndex: 1000
      });
      if (callback) {
        setTimeout(function () {
          _.disableTransition(slideIndex);
          callback.call();
        }, _.options.speed);
      }
    }
  };
  Slick.prototype.filterSlides = Slick.prototype.slickFilter = function (filter) {
    var _ = this;
    if (filter !== null) {
      _.unload();
      _.$slideTrack.children(this.options.slide).detach();
      _.$slidesCache.filter(filter).appendTo(_.$slideTrack);
      _.reinit();
    }
  };
  Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function () {
    var _ = this;
    return _.currentSlide;
  };
  Slick.prototype.getDotCount = function () {
    var _ = this;
    var breakPoint = 0;
    var counter = 0;
    var pagerQty = 0;
    if (_.options.infinite === true) {
      pagerQty = Math.ceil(_.slideCount / _.options.slidesToScroll);
    } else if (_.options.centerMode === true) {
      pagerQty = _.slideCount;
    } else {
      while (breakPoint < _.slideCount) {
        ++pagerQty;
        breakPoint = counter + _.options.slidesToShow;
        counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
      }
    }
    return pagerQty - 1;
  };
  Slick.prototype.getLeft = function (slideIndex) {
    var _ = this, targetLeft, verticalHeight, verticalOffset = 0, targetSlide;
    _.slideOffset = 0;
    verticalHeight = _.$slides.first().outerHeight();
    if (_.options.infinite === true) {
      if (_.slideCount > _.options.slidesToShow) {
        _.slideOffset = _.slideWidth * _.options.slidesToShow * -1;
        verticalOffset = verticalHeight * _.options.slidesToShow * -1;
      }
      if (_.slideCount % _.options.slidesToScroll !== 0) {
        if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {
          if (slideIndex > _.slideCount) {
            _.slideOffset = (_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth * -1;
            verticalOffset = (_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight * -1;
          } else {
            _.slideOffset = _.slideCount % _.options.slidesToScroll * _.slideWidth * -1;
            verticalOffset = _.slideCount % _.options.slidesToScroll * verticalHeight * -1;
          }
        }
      }
    } else {
      if (slideIndex + _.options.slidesToShow > _.slideCount) {
        _.slideOffset = (slideIndex + _.options.slidesToShow - _.slideCount) * _.slideWidth;
        verticalOffset = (slideIndex + _.options.slidesToShow - _.slideCount) * verticalHeight;
      }
    }
    if (_.slideCount <= _.options.slidesToShow) {
      _.slideOffset = 0;
      verticalOffset = 0;
    }
    if (_.options.centerMode === true && _.options.infinite === true) {
      _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;
    } else if (_.options.centerMode === true) {
      _.slideOffset = 0;
      _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);
    }
    if (_.options.vertical === false) {
      targetLeft = slideIndex * _.slideWidth * -1 + _.slideOffset;
    } else {
      targetLeft = slideIndex * verticalHeight * -1 + verticalOffset;
    }
    if (_.options.variableWidth === true) {
      if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {
        targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);
      } else {
        targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);
      }
      targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;
      if (_.options.centerMode === true) {
        if (_.options.infinite === false) {
          targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);
        } else {
          targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);
        }
        targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;
        targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;
      }
    }
    return targetLeft;
  };
  Slick.prototype.getOption = Slick.prototype.slickGetOption = function (option) {
    var _ = this;
    return _.options[option];
  };
  Slick.prototype.getNavigableIndexes = function () {
    var _ = this, breakPoint = 0, counter = 0, indexes = [], max;
    if (_.options.infinite === false) {
      max = _.slideCount - _.options.slidesToShow + 1;
      if (_.options.centerMode === true)
        max = _.slideCount;
    } else {
      breakPoint = _.options.slidesToScroll * -1;
      counter = _.options.slidesToScroll * -1;
      max = _.slideCount * 2;
    }
    while (breakPoint < max) {
      indexes.push(breakPoint);
      breakPoint = counter + _.options.slidesToScroll;
      counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
    }
    return indexes;
  };
  Slick.prototype.getSlick = function () {
    return this;
  };
  Slick.prototype.getSlideCount = function () {
    var _ = this, slidesTraversed, swipedSlide, centerOffset;
    centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;
    if (_.options.swipeToSlide === true) {
      _.$slideTrack.find('.slick-slide').each(function (index, slide) {
        if (slide.offsetLeft - centerOffset + $(slide).outerWidth() / 2 > _.swipeLeft * -1) {
          swipedSlide = slide;
          return false;
        }
      });
      slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;
      return slidesTraversed;
    } else {
      return _.options.slidesToScroll;
    }
  };
  Slick.prototype.goTo = Slick.prototype.slickGoTo = function (slide, dontAnimate) {
    var _ = this;
    _.changeSlide({
      data: {
        message: 'index',
        index: parseInt(slide)
      }
    }, dontAnimate);
  };
  Slick.prototype.init = function () {
    var _ = this;
    if (!$(_.$slider).hasClass('slick-initialized')) {
      $(_.$slider).addClass('slick-initialized');
      _.buildRows();
      _.buildOut();
      _.setProps();
      _.startLoad();
      _.loadSlider();
      _.initializeEvents();
      _.updateArrows();
      _.updateDots();
    }
    _.$slider.trigger('init', [_]);
  };
  Slick.prototype.initArrowEvents = function () {
    var _ = this;
    if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
      _.$prevArrow.on('click.slick', { message: 'previous' }, _.changeSlide);
      _.$nextArrow.on('click.slick', { message: 'next' }, _.changeSlide);
    }
  };
  Slick.prototype.initDotEvents = function () {
    var _ = this;
    if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {
      $('li', _.$dots).on('click.slick', { message: 'index' }, _.changeSlide);
    }
    if (_.options.dots === true && _.options.pauseOnDotsHover === true && _.options.autoplay === true) {
      $('li', _.$dots).on('mouseenter.slick', _.setPaused.bind(_, true)).on('mouseleave.slick', _.setPaused.bind(_, false));
    }
  };
  Slick.prototype.initializeEvents = function () {
    var _ = this;
    _.initArrowEvents();
    _.initDotEvents();
    _.$list.on('touchstart.slick mousedown.slick', { action: 'start' }, _.swipeHandler);
    _.$list.on('touchmove.slick mousemove.slick', { action: 'move' }, _.swipeHandler);
    _.$list.on('touchend.slick mouseup.slick', { action: 'end' }, _.swipeHandler);
    _.$list.on('touchcancel.slick mouseleave.slick', { action: 'end' }, _.swipeHandler);
    _.$list.on('click.slick', _.clickHandler);
    if (_.options.autoplay === true) {
      $(document).on(_.visibilityChange, _.visibility.bind(_));
    }
    _.$list.on('mouseenter.slick', _.setPaused.bind(_, true));
    _.$list.on('mouseleave.slick', _.setPaused.bind(_, false));
    if (_.options.accessibility === true) {
      _.$list.on('keydown.slick', _.keyHandler);
    }
    if (_.options.focusOnSelect === true) {
      $(_.$slideTrack).children().on('click.slick', _.selectHandler);
    }
    $(window).on('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange.bind(_));
    $(window).on('resize.slick.slick-' + _.instanceUid, _.resize.bind(_));
    $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);
    $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);
    $(document).on('ready.slick.slick-' + _.instanceUid, _.setPosition);
  };
  Slick.prototype.initUI = function () {
    var _ = this;
    if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
      _.$prevArrow.show();
      _.$nextArrow.show();
    }
    if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {
      _.$dots.show();
    }
    if (_.options.autoplay === true) {
      _.autoPlay();
    }
  };
  Slick.prototype.keyHandler = function (event) {
    var _ = this;
    if (event.keyCode === 37 && _.options.accessibility === true) {
      _.changeSlide({ data: { message: 'previous' } });
    } else if (event.keyCode === 39 && _.options.accessibility === true) {
      _.changeSlide({ data: { message: 'next' } });
    }
  };
  Slick.prototype.lazyLoad = function () {
    var _ = this, loadRange, cloneRange, rangeStart, rangeEnd;
    function loadImages(imagesScope) {
      $('img[data-lazy]', imagesScope).each(function () {
        var image = $(this), imageSource = $(this).attr('data-lazy'), imageToLoad = document.createElement('img');
        imageToLoad.onload = function () {
          image.animate({ opacity: 1 }, 200);
        };
        imageToLoad.src = imageSource;
        image.css({ opacity: 0 }).attr('src', imageSource).removeAttr('data-lazy').removeClass('slick-loading');
      });
    }
    if (_.options.centerMode === true) {
      if (_.options.infinite === true) {
        rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);
        rangeEnd = rangeStart + _.options.slidesToShow + 2;
      } else {
        rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));
        rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;
      }
    } else {
      rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;
      rangeEnd = rangeStart + _.options.slidesToShow;
      if (_.options.fade === true) {
        if (rangeStart > 0)
          rangeStart--;
        if (rangeEnd <= _.slideCount)
          rangeEnd++;
      }
    }
    loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);
    loadImages(loadRange);
    if (_.slideCount <= _.options.slidesToShow) {
      cloneRange = _.$slider.find('.slick-slide');
      loadImages(cloneRange);
    } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {
      cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);
      loadImages(cloneRange);
    } else if (_.currentSlide === 0) {
      cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);
      loadImages(cloneRange);
    }
  };
  Slick.prototype.loadSlider = function () {
    var _ = this;
    _.setPosition();
    _.$slideTrack.css({ opacity: 1 });
    _.$slider.removeClass('slick-loading');
    _.initUI();
    if (_.options.lazyLoad === 'progressive') {
      _.progressiveLazyLoad();
    }
  };
  Slick.prototype.next = Slick.prototype.slickNext = function () {
    var _ = this;
    _.changeSlide({ data: { message: 'next' } });
  };
  Slick.prototype.orientationChange = function () {
    var _ = this;
    _.checkResponsive();
    _.setPosition();
  };
  Slick.prototype.pause = Slick.prototype.slickPause = function () {
    var _ = this;
    _.autoPlayClear();
    _.paused = true;
  };
  Slick.prototype.play = Slick.prototype.slickPlay = function () {
    var _ = this;
    _.paused = false;
    _.autoPlay();
  };
  Slick.prototype.postSlide = function (index) {
    var _ = this;
    _.$slider.trigger('afterChange', [
      _,
      index
    ]);
    _.animating = false;
    _.setPosition();
    _.swipeLeft = null;
    if (_.options.autoplay === true && _.paused === false) {
      _.autoPlay();
    }
  };
  Slick.prototype.prev = Slick.prototype.slickPrev = function () {
    var _ = this;
    _.changeSlide({ data: { message: 'previous' } });
  };
  Slick.prototype.preventDefault = function (e) {
    e.preventDefault();
  };
  Slick.prototype.progressiveLazyLoad = function () {
    var _ = this, imgCount, targetImage;
    imgCount = $('img[data-lazy]', _.$slider).length;
    if (imgCount > 0) {
      targetImage = $('img[data-lazy]', _.$slider).first();
      targetImage.attr('src', targetImage.attr('data-lazy')).removeClass('slick-loading').load(function () {
        targetImage.removeAttr('data-lazy');
        _.progressiveLazyLoad();
        if (_.options.adaptiveHeight === true) {
          _.setPosition();
        }
      }).error(function () {
        targetImage.removeAttr('data-lazy');
        _.progressiveLazyLoad();
      });
    }
  };
  Slick.prototype.refresh = function () {
    var _ = this, currentSlide = _.currentSlide;
    _.destroy();
    $.extend(_, _.initials);
    _.init();
    _.changeSlide({
      data: {
        message: 'index',
        index: currentSlide
      }
    }, false);
  };
  Slick.prototype.reinit = function () {
    var _ = this;
    _.$slides = _.$slideTrack.children(_.options.slide).addClass('slick-slide');
    _.slideCount = _.$slides.length;
    if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {
      _.currentSlide = _.currentSlide - _.options.slidesToScroll;
    }
    if (_.slideCount <= _.options.slidesToShow) {
      _.currentSlide = 0;
    }
    _.setProps();
    _.setupInfinite();
    _.buildArrows();
    _.updateArrows();
    _.initArrowEvents();
    _.buildDots();
    _.updateDots();
    _.initDotEvents();
    if (_.options.focusOnSelect === true) {
      $(_.$slideTrack).children().on('click.slick', _.selectHandler);
    }
    _.setSlideClasses(0);
    _.setPosition();
    _.$slider.trigger('reInit', [_]);
  };
  Slick.prototype.resize = function () {
    var _ = this;
    if ($(window).width() !== _.windowWidth) {
      clearTimeout(_.windowDelay);
      _.windowDelay = window.setTimeout(function () {
        _.windowWidth = $(window).width();
        _.checkResponsive();
        _.setPosition();
      }, 50);
    }
  };
  Slick.prototype.removeSlide = Slick.prototype.slickRemove = function (index, removeBefore, removeAll) {
    var _ = this;
    if (typeof index === 'boolean') {
      removeBefore = index;
      index = removeBefore === true ? 0 : _.slideCount - 1;
    } else {
      index = removeBefore === true ? --index : index;
    }
    if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {
      return false;
    }
    _.unload();
    if (removeAll === true) {
      _.$slideTrack.children().remove();
    } else {
      _.$slideTrack.children(this.options.slide).eq(index).remove();
    }
    _.$slides = _.$slideTrack.children(this.options.slide);
    _.$slideTrack.children(this.options.slide).detach();
    _.$slideTrack.append(_.$slides);
    _.$slidesCache = _.$slides;
    _.reinit();
  };
  Slick.prototype.setCSS = function (position) {
    var _ = this, positionProps = {}, x, y;
    if (_.options.rtl === true) {
      position = -position;
    }
    x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';
    y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';
    positionProps[_.positionProp] = position;
    if (_.transformsEnabled === false) {
      _.$slideTrack.css(positionProps);
    } else {
      positionProps = {};
      if (_.cssTransitions === false) {
        positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';
        _.$slideTrack.css(positionProps);
      } else {
        positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';
        _.$slideTrack.css(positionProps);
      }
    }
  };
  Slick.prototype.setDimensions = function () {
    var _ = this;
    if (_.options.vertical === false) {
      if (_.options.centerMode === true) {
        _.$list.css({ padding: '0px ' + _.options.centerPadding });
      }
    } else {
      _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);
      if (_.options.centerMode === true) {
        _.$list.css({ padding: _.options.centerPadding + ' 0px' });
      }
    }
    _.listWidth = _.$list.width();
    _.listHeight = _.$list.height();
    if (_.options.vertical === false && _.options.variableWidth === false) {
      _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);
      _.$slideTrack.width(Math.ceil(_.slideWidth * _.$slideTrack.children('.slick-slide').length));
    } else if (_.options.variableWidth === true) {
      _.$slideTrack.width(5000 * _.slideCount);
    } else {
      _.slideWidth = Math.ceil(_.listWidth);
      _.$slideTrack.height(Math.ceil(_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length));
    }
    var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();
    if (_.options.variableWidth === false)
      _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);
  };
  Slick.prototype.setFade = function () {
    var _ = this, targetLeft;
    _.$slides.each(function (index, element) {
      targetLeft = _.slideWidth * index * -1;
      if (_.options.rtl === true) {
        $(element).css({
          position: 'relative',
          right: targetLeft,
          top: 0,
          zIndex: 800,
          opacity: 0
        });
      } else {
        $(element).css({
          position: 'relative',
          left: targetLeft,
          top: 0,
          zIndex: 800,
          opacity: 0
        });
      }
    });
    _.$slides.eq(_.currentSlide).css({
      zIndex: 900,
      opacity: 1
    });
  };
  Slick.prototype.setHeight = function () {
    var _ = this;
    if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {
      var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);
      _.$list.css('height', targetHeight);
    }
  };
  Slick.prototype.setOption = Slick.prototype.slickSetOption = function (option, value, refresh) {
    var _ = this;
    _.options[option] = value;
    if (refresh === true) {
      _.unload();
      _.reinit();
    }
  };
  Slick.prototype.setPosition = function () {
    var _ = this;
    _.setDimensions();
    _.setHeight();
    if (_.options.fade === false) {
      _.setCSS(_.getLeft(_.currentSlide));
    } else {
      _.setFade();
    }
    _.$slider.trigger('setPosition', [_]);
  };
  Slick.prototype.setProps = function () {
    var _ = this, bodyStyle = document.body.style;
    _.positionProp = _.options.vertical === true ? 'top' : 'left';
    if (_.positionProp === 'top') {
      _.$slider.addClass('slick-vertical');
    } else {
      _.$slider.removeClass('slick-vertical');
    }
    if (bodyStyle.WebkitTransition !== undefined || bodyStyle.MozTransition !== undefined || bodyStyle.msTransition !== undefined) {
      if (_.options.useCSS === true) {
        _.cssTransitions = true;
      }
    }
    if (bodyStyle.OTransform !== undefined) {
      _.animType = 'OTransform';
      _.transformType = '-o-transform';
      _.transitionType = 'OTransition';
      if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined)
        _.animType = false;
    }
    if (bodyStyle.MozTransform !== undefined) {
      _.animType = 'MozTransform';
      _.transformType = '-moz-transform';
      _.transitionType = 'MozTransition';
      if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined)
        _.animType = false;
    }
    if (bodyStyle.webkitTransform !== undefined) {
      _.animType = 'webkitTransform';
      _.transformType = '-webkit-transform';
      _.transitionType = 'webkitTransition';
      if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined)
        _.animType = false;
    }
    if (bodyStyle.msTransform !== undefined) {
      _.animType = 'msTransform';
      _.transformType = '-ms-transform';
      _.transitionType = 'msTransition';
      if (bodyStyle.msTransform === undefined)
        _.animType = false;
    }
    if (bodyStyle.transform !== undefined && _.animType !== false) {
      _.animType = 'transform';
      _.transformType = 'transform';
      _.transitionType = 'transition';
    }
    _.transformsEnabled = _.animType !== null && _.animType !== false;
  };
  Slick.prototype.setSlideClasses = function (index) {
    var _ = this, centerOffset, allSlides, indexOffset, remainder;
    _.$slider.find('.slick-slide').removeClass('slick-active').attr('aria-hidden', 'true').removeClass('slick-center');
    allSlides = _.$slider.find('.slick-slide');
    if (_.options.centerMode === true) {
      centerOffset = Math.floor(_.options.slidesToShow / 2);
      if (_.options.infinite === true) {
        if (index >= centerOffset && index <= _.slideCount - 1 - centerOffset) {
          _.$slides.slice(index - centerOffset, index + centerOffset + 1).addClass('slick-active').attr('aria-hidden', 'false');
        } else {
          indexOffset = _.options.slidesToShow + index;
          allSlides.slice(indexOffset - centerOffset + 1, indexOffset + centerOffset + 2).addClass('slick-active').attr('aria-hidden', 'false');
        }
        if (index === 0) {
          allSlides.eq(allSlides.length - 1 - _.options.slidesToShow).addClass('slick-center');
        } else if (index === _.slideCount - 1) {
          allSlides.eq(_.options.slidesToShow).addClass('slick-center');
        }
      }
      _.$slides.eq(index).addClass('slick-center');
    } else {
      if (index >= 0 && index <= _.slideCount - _.options.slidesToShow) {
        _.$slides.slice(index, index + _.options.slidesToShow).addClass('slick-active').attr('aria-hidden', 'false');
      } else if (allSlides.length <= _.options.slidesToShow) {
        allSlides.addClass('slick-active').attr('aria-hidden', 'false');
      } else {
        remainder = _.slideCount % _.options.slidesToShow;
        indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;
        if (_.options.slidesToShow == _.options.slidesToScroll && _.slideCount - index < _.options.slidesToShow) {
          allSlides.slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder).addClass('slick-active').attr('aria-hidden', 'false');
        } else {
          allSlides.slice(indexOffset, indexOffset + _.options.slidesToShow).addClass('slick-active').attr('aria-hidden', 'false');
        }
      }
    }
    if (_.options.lazyLoad === 'ondemand') {
      _.lazyLoad();
    }
  };
  Slick.prototype.setupInfinite = function () {
    var _ = this, i, slideIndex, infiniteCount;
    if (_.options.fade === true) {
      _.options.centerMode = false;
    }
    if (_.options.infinite === true && _.options.fade === false) {
      slideIndex = null;
      if (_.slideCount > _.options.slidesToShow) {
        if (_.options.centerMode === true) {
          infiniteCount = _.options.slidesToShow + 1;
        } else {
          infiniteCount = _.options.slidesToShow;
        }
        for (i = _.slideCount; i > _.slideCount - infiniteCount; i -= 1) {
          slideIndex = i - 1;
          $(_.$slides[slideIndex]).clone(true).attr('id', '').attr('data-slick-index', slideIndex - _.slideCount).prependTo(_.$slideTrack).addClass('slick-cloned');
        }
        for (i = 0; i < infiniteCount; i += 1) {
          slideIndex = i;
          $(_.$slides[slideIndex]).clone(true).attr('id', '').attr('data-slick-index', slideIndex + _.slideCount).appendTo(_.$slideTrack).addClass('slick-cloned');
        }
        _.$slideTrack.find('.slick-cloned').find('[id]').each(function () {
          $(this).attr('id', '');
        });
      }
    }
  };
  Slick.prototype.setPaused = function (paused) {
    var _ = this;
    if (_.options.autoplay === true && _.options.pauseOnHover === true) {
      _.paused = paused;
      _.autoPlayClear();
    }
  };
  Slick.prototype.selectHandler = function (event) {
    var _ = this;
    var targetElement = $(event.target).is('.slick-slide') ? $(event.target) : $(event.target).parents('.slick-slide');
    var index = parseInt(targetElement.attr('data-slick-index'));
    if (!index)
      index = 0;
    if (_.slideCount <= _.options.slidesToShow) {
      _.$slider.find('.slick-slide').removeClass('slick-active').attr('aria-hidden', 'true');
      _.$slides.eq(index).addClass('slick-active').attr('aria-hidden', 'false');
      if (_.options.centerMode === true) {
        _.$slider.find('.slick-slide').removeClass('slick-center');
        _.$slides.eq(index).addClass('slick-center');
      }
      _.asNavFor(index);
      return;
    }
    _.slideHandler(index);
  };
  Slick.prototype.slideHandler = function (index, sync, dontAnimate) {
    var targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null, _ = this;
    sync = sync || false;
    if (_.animating === true && _.options.waitForAnimate === true) {
      return;
    }
    if (_.options.fade === true && _.currentSlide === index) {
      return;
    }
    if (_.slideCount <= _.options.slidesToShow) {
      return;
    }
    if (sync === false) {
      _.asNavFor(index);
    }
    targetSlide = index;
    targetLeft = _.getLeft(targetSlide);
    slideLeft = _.getLeft(_.currentSlide);
    _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;
    if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {
      if (_.options.fade === false) {
        targetSlide = _.currentSlide;
        if (dontAnimate !== true) {
          _.animateSlide(slideLeft, function () {
            _.postSlide(targetSlide);
          });
        } else {
          _.postSlide(targetSlide);
        }
      }
      return;
    } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > _.slideCount - _.options.slidesToScroll)) {
      if (_.options.fade === false) {
        targetSlide = _.currentSlide;
        if (dontAnimate !== true) {
          _.animateSlide(slideLeft, function () {
            _.postSlide(targetSlide);
          });
        } else {
          _.postSlide(targetSlide);
        }
      }
      return;
    }
    if (_.options.autoplay === true) {
      clearInterval(_.autoPlayTimer);
    }
    if (targetSlide < 0) {
      if (_.slideCount % _.options.slidesToScroll !== 0) {
        animSlide = _.slideCount - _.slideCount % _.options.slidesToScroll;
      } else {
        animSlide = _.slideCount + targetSlide;
      }
    } else if (targetSlide >= _.slideCount) {
      if (_.slideCount % _.options.slidesToScroll !== 0) {
        animSlide = 0;
      } else {
        animSlide = targetSlide - _.slideCount;
      }
    } else {
      animSlide = targetSlide;
    }
    _.animating = true;
    _.$slider.trigger('beforeChange', [
      _,
      _.currentSlide,
      animSlide
    ]);
    oldSlide = _.currentSlide;
    _.currentSlide = animSlide;
    _.setSlideClasses(_.currentSlide);
    _.updateDots();
    _.updateArrows();
    if (_.options.fade === true) {
      if (dontAnimate !== true) {
        _.fadeSlide(animSlide, function () {
          _.postSlide(animSlide);
        });
      } else {
        _.postSlide(animSlide);
      }
      _.animateHeight();
      return;
    }
    if (dontAnimate !== true) {
      _.animateSlide(targetLeft, function () {
        _.postSlide(animSlide);
      });
    } else {
      _.postSlide(animSlide);
    }
  };
  Slick.prototype.startLoad = function () {
    var _ = this;
    if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
      _.$prevArrow.hide();
      _.$nextArrow.hide();
    }
    if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {
      _.$dots.hide();
    }
    _.$slider.addClass('slick-loading');
  };
  Slick.prototype.swipeDirection = function () {
    var xDist, yDist, r, swipeAngle, _ = this;
    xDist = _.touchObject.startX - _.touchObject.curX;
    yDist = _.touchObject.startY - _.touchObject.curY;
    r = Math.atan2(yDist, xDist);
    swipeAngle = Math.round(r * 180 / Math.PI);
    if (swipeAngle < 0) {
      swipeAngle = 360 - Math.abs(swipeAngle);
    }
    if (swipeAngle <= 45 && swipeAngle >= 0) {
      return _.options.rtl === false ? 'left' : 'right';
    }
    if (swipeAngle <= 360 && swipeAngle >= 315) {
      return _.options.rtl === false ? 'left' : 'right';
    }
    if (swipeAngle >= 135 && swipeAngle <= 225) {
      return _.options.rtl === false ? 'right' : 'left';
    }
    if (_.options.verticalSwiping === true) {
      if (swipeAngle >= 35 && swipeAngle <= 135) {
        return 'left';
      } else {
        return 'right';
      }
    }
    return 'vertical';
  };
  Slick.prototype.swipeEnd = function (event) {
    var _ = this, slideCount;
    _.dragging = false;
    _.shouldClick = _.touchObject.swipeLength > 10 ? false : true;
    if (_.touchObject.curX === undefined) {
      return false;
    }
    if (_.touchObject.edgeHit === true) {
      _.$slider.trigger('edge', [
        _,
        _.swipeDirection()
      ]);
    }
    if (_.touchObject.swipeLength >= _.touchObject.minSwipe) {
      switch (_.swipeDirection()) {
      case 'left':
        slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide + _.getSlideCount()) : _.currentSlide + _.getSlideCount();
        _.slideHandler(slideCount);
        _.currentDirection = 0;
        _.touchObject = {};
        _.$slider.trigger('swipe', [
          _,
          'left'
        ]);
        break;
      case 'right':
        slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide - _.getSlideCount()) : _.currentSlide - _.getSlideCount();
        _.slideHandler(slideCount);
        _.currentDirection = 1;
        _.touchObject = {};
        _.$slider.trigger('swipe', [
          _,
          'right'
        ]);
        break;
      }
    } else {
      if (_.touchObject.startX !== _.touchObject.curX) {
        _.slideHandler(_.currentSlide);
        _.touchObject = {};
      }
    }
  };
  Slick.prototype.swipeHandler = function (event) {
    var _ = this;
    if (_.options.swipe === false || 'ontouchend' in document && _.options.swipe === false) {
      return;
    } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {
      return;
    }
    _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ? event.originalEvent.touches.length : 1;
    _.touchObject.minSwipe = _.listWidth / _.options.touchThreshold;
    if (_.options.verticalSwiping === true) {
      _.touchObject.minSwipe = _.listHeight / _.options.touchThreshold;
    }
    switch (event.data.action) {
    case 'start':
      _.swipeStart(event);
      break;
    case 'move':
      _.swipeMove(event);
      break;
    case 'end':
      _.swipeEnd(event);
      break;
    }
  };
  Slick.prototype.swipeMove = function (event) {
    var _ = this, edgeWasHit = false, curLeft, swipeDirection, swipeLength, positionOffset, touches;
    touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;
    if (!_.dragging || touches && touches.length !== 1) {
      return false;
    }
    curLeft = _.getLeft(_.currentSlide);
    _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;
    _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;
    _.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));
    if (_.options.verticalSwiping === true) {
      _.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));
    }
    swipeDirection = _.swipeDirection();
    if (swipeDirection === 'vertical') {
      return;
    }
    if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {
      event.preventDefault();
    }
    positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);
    if (_.options.verticalSwiping === true) {
      positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;
    }
    swipeLength = _.touchObject.swipeLength;
    _.touchObject.edgeHit = false;
    if (_.options.infinite === false) {
      if (_.currentSlide === 0 && swipeDirection === 'right' || _.currentSlide >= _.getDotCount() && swipeDirection === 'left') {
        swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;
        _.touchObject.edgeHit = true;
      }
    }
    if (_.options.vertical === false) {
      _.swipeLeft = curLeft + swipeLength * positionOffset;
    } else {
      _.swipeLeft = curLeft + swipeLength * (_.$list.height() / _.listWidth) * positionOffset;
    }
    if (_.options.verticalSwiping === true) {
      _.swipeLeft = curLeft + swipeLength * positionOffset;
    }
    if (_.options.fade === true || _.options.touchMove === false) {
      return false;
    }
    if (_.animating === true) {
      _.swipeLeft = null;
      return false;
    }
    _.setCSS(_.swipeLeft);
  };
  Slick.prototype.swipeStart = function (event) {
    var _ = this, touches;
    if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {
      _.touchObject = {};
      return false;
    }
    if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {
      touches = event.originalEvent.touches[0];
    }
    _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;
    _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;
    _.dragging = true;
  };
  Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function () {
    var _ = this;
    if (_.$slidesCache !== null) {
      _.unload();
      _.$slideTrack.children(this.options.slide).detach();
      _.$slidesCache.appendTo(_.$slideTrack);
      _.reinit();
    }
  };
  Slick.prototype.unload = function () {
    var _ = this;
    $('.slick-cloned', _.$slider).remove();
    if (_.$dots) {
      _.$dots.remove();
    }
    if (_.$prevArrow && typeof _.options.prevArrow !== 'object') {
      _.$prevArrow.remove();
    }
    if (_.$nextArrow && typeof _.options.nextArrow !== 'object') {
      _.$nextArrow.remove();
    }
    _.$slides.removeClass('slick-slide slick-active slick-visible').attr('aria-hidden', 'true').css('width', '');
  };
  Slick.prototype.unslick = function () {
    var _ = this;
    _.destroy();
  };
  Slick.prototype.updateArrows = function () {
    var _ = this, centerOffset;
    centerOffset = Math.floor(_.options.slidesToShow / 2);
    if (_.options.arrows === true && _.options.infinite !== true && _.slideCount > _.options.slidesToShow) {
      _.$prevArrow.removeClass('slick-disabled');
      _.$nextArrow.removeClass('slick-disabled');
      if (_.currentSlide === 0) {
        _.$prevArrow.addClass('slick-disabled');
        _.$nextArrow.removeClass('slick-disabled');
      } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {
        _.$nextArrow.addClass('slick-disabled');
        _.$prevArrow.removeClass('slick-disabled');
      } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {
        _.$nextArrow.addClass('slick-disabled');
        _.$prevArrow.removeClass('slick-disabled');
      }
    }
  };
  Slick.prototype.updateDots = function () {
    var _ = this;
    if (_.$dots !== null) {
      _.$dots.find('li').removeClass('slick-active').attr('aria-hidden', 'true');
      _.$dots.find('li').eq(Math.floor(_.currentSlide / _.options.slidesToScroll)).addClass('slick-active').attr('aria-hidden', 'false');
    }
  };
  Slick.prototype.visibility = function () {
    var _ = this;
    if (document[_.hidden]) {
      _.paused = true;
      _.autoPlayClear();
    } else {
      _.paused = false;
      _.autoPlay();
    }
  };
  $.fn.slick = function () {
    var _ = this, opt = arguments[0], args = Array.prototype.slice.call(arguments, 1), l = _.length, i = 0, ret;
    for (i; i < l; i++) {
      if (typeof opt == 'object' || typeof opt == 'undefined')
        _[i].slick = new Slick(_[i], opt);
      else
        ret = _[i].slick[opt].apply(_[i].slick, args);
      if (typeof ret != 'undefined')
        return ret;
    }
    return _;
  };
}));
angular.module('dellUiComponents', []);
angular.module('dellUiComponents').config(function () {
});
angular.module('dellUiComponents').directive('toggle', function () {
  return {
    restrict: 'A',
    link: function ($scope, element, attributes, controller) {
      switch (attributes.toggle) {
      case 'popover':
        var destroy = function () {
          $('[data-toggle="popover"]').popover('destroy');
        };
        if (attributes.trigger === 'hover') {
          $(element).mouseover(function (event) {
            event.preventDefault();
            destroy();
            $(this).popover('show');
          });
        } else {
          $(element).popover({ trigger: 'manual' });
          $(element).click(function (event) {
            event.preventDefault();
            destroy();
            $(this).popover('show');
            $('[data-dismiss="popover"]').bind('click', function (event) {
              event.preventDefault();
              destroy();
            });
          });
        }
        break;
      case 'tooltip':
        $(element).tooltip();
        break;
      case 'offcanvas':
        $(element).on('click', function (event) {
          event.preventDefault();
          $(element).parents('.row-offcanvas').find('.tab-content').removeClass('active');
        });
        break;
      case 'tab':
        $(element).on('click', function (event) {
          event.preventDefault();
          $(this).tab('show');
          console.log($(this).parents('.row-offcanvas').html());
          $(this).parents('.row-offcanvas').find('.tab-content').addClass('active');
        });
        break;
      case 'collapse':
        $(element).on('click', function (event) {
          event.preventDefault();
        });
        break;
      }
    }
  };
});
angular.module('demo').filter('_.str', function () {
  // Examples: 
  // Simple {{ string_variable | _.str:'capitalize' }}
  // multiple {{ string_variable | _.str:'capitalize,titleize' }}
  // To use filter with parameters such as _.str.prune("whatever string",10) : {{ string_variable | _.str:'prune':10 }}
  return function (str, fn, params) {
    str = str || '';
    params = params || [];
    //params.unshift(str);
    fn = fn.replace(/ /g, '').split(',');
    //strip white spaces
    if (fn.length) {
      _.each(fn, function (func) {
        str = _.str[func](str, params);
      });
      return str;
    } else {
      return str;
    }
  };
});
angular.module('dellUiComponents').directive('tabs', function () {
  return {
    restrict: 'A',
    link: function ($scope, element, attrs, $state, $timeout, fn) {
    }
  };
});
//asumes that angular-ui-bootstrap is loaded
angular.module('ui.bootstrap.carousel', ['ui.bootstrap.transition']).controller('CarouselController', [
  '$scope',
  '$timeout',
  '$transition',
  '$q',
  function ($scope, $timeout, $transition, $q) {
  }
]).directive('carousel', function () {
  return {};
}).directive('slide', function () {
  return {};
});
angular.module('dellUiComponents').directive('carousel', [
  '$timeout',
  function ($timeout) {
    // Runs during compile
    return {
      restrict: 'C',
      link: function ($scope, $element, iAttrs, controller) {
        $element.carousel();
      }
    };
  }
]).directive('carouselFilmstrip', [
  '$timeout',
  function ($timeout) {
    // Runs during compile
    // requires bower_components/slick-1.5.0/slick/slick.js which is bundled in dell-ui-components.js
    return {
      restrict: 'C',
      link: function ($scope, $element, iAttrs, controller) {
        $($element).find('.carousel-inner').slick({
          dots: true,
          infinite: false,
          speed: 300,
          slidesToShow: 4,
          slidesToScroll: 1,
          responsive: [
            {
              breakpoint: 1024,
              settings: {
                slidesToShow: 4,
                slidesToScroll: 1,
                infinite: true,
                dots: true
              }
            },
            {
              breakpoint: 600,
              settings: {
                slidesToShow: 2,
                slidesToScroll: 1
              }
            },
            {
              breakpoint: 480,
              settings: {
                slidesToShow: 1,
                slidesToScroll: 1
              }
            }
          ]
        });
      }
    };
  }
]).directive('slide', [
  '$timeout',
  function ($timeout) {
    return {
      restrict: 'A',
      link: function ($scope, $element, $attr, controller) {
        $element.on('click', function (event) {
          event.preventDefault();
        });
        $element.carousel($attr.slide);
      }
    };
  }
]);
/**
 * Created by Clint_Batte on 3/24/2015.
 */
angular.module('dellUiComponents').directive('msCheckbox', function () {
  return {
    restrict: 'C',
    link: function () {
      $('.ms-checkbox').multipleSelect({ placeholder: 'Select title' });
    }
  };
}).directive('listTree', function () {
  return {
    restrict: 'C',
    link: function ($scope, $element, $attr) {
      $element.find('.checkbox input').on('click', function () {
        if ($(this).is(':checked')) {
          $(this).parent().addClass('open');
        } else {
          $(this).parent().removeClass('open');
        }
      });
    }
  };
}).directive('emailAddress', function () {
  return {
    restrict: 'C',
    link: function ($scope, element, attributes, controller) {
      $('form input[name="email"]').blur(function () {
        var email = $(this).val();
        var re = /[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}/gim;
        if (re.test(email)) {
          $(element).addClass('hide');
        } else {
        }
      });
    }
  };
}).directive('showPassword', function () {
  return {
    restrict: 'C',
    link: function ($scope, $element, $attrs, controller) {
      $scope.togglePassword = function () {
        $scope.showPassword = !$scope.showPassword;
        if ($scope.showPassword) {
          $($element).find('input[type=password]').attr('type', 'text');
        } else {
          $($element).find('input[type=text]').attr('type', 'password');
        }
      };
    }
  };
}).directive('phoneNumber', function () {
  // Runs during compile
  return {
    restrict: 'C',
    link: function ($scope, element, attributes, controller) {
      //requires https://raw.githubusercontent.com/RobinHerbots/jquery.inputmask/3.x/dist/jquery.inputmask.bundle.min.js
      //TODO use $locale to create mask
      if ($(element).is('input')) {
        $(element).attr('data-inputmask', '\'mask\': \'(999)-999-9999\'');
        $(element).inputmask();
      }
    }
  };
}).directive('phoneExtension', function () {
  return {
    restrict: 'C',
    link: function ($scope, element, attributes, controller) {
      if ($(element).is('input')) {
        $(element).attr('data-inputmask', '\'mask\': \'ext: (9999)\'');
        $(element).inputmask();
      }
    }
  };
}).directive('spinbox', function () {
  return {
    restrict: 'C',
    link: function ($scope, element, attributes, controller) {
      // Inject html code
      $('.spinbox').each(function (index) {
        var el = $(this);
        if (el.data('orient') === 'vertical') {
          $(el).addClass('dpui-numberPicker spinbox-vert').html('<button class=\'spinbox-increase\'>' + el.data('spinincrease') + '</button><input type=\'text\' class=\'spinbox-input spinbox-input-vert\' style=\'border-top: 0px solid #cfcfcf; border-bottom: 0px solid #cfcfcf;\' value=\'' + el.data('spindefault') + '\' name=\'' + el.data('spinname') + '\'/><button class=\'spinbox-decrease\'>' + el.data('spindecrease') + '</button>');
        } else {
          $(el).addClass('dpui-numberPicker').html('<button class=\'spinbox-decrease\'>' + el.data('spindecrease') + '</button><input type=\'text\' class=\'spinbox-input\' style=\'border-left: 0px solid #cfcfcf; border-right: 0px solid #cfcfcf;\' value=\'' + el.data('spindefault') + '\' name=\'' + el.data('spinname') + '\'/><button class=\'spinbox-increase\'>' + el.data('spinincrease') + '</button>');
        }
      });
      // Increase Button code
      $('.spinbox-increase').click(function () {
        var em = $(this);
        if (em.parent().data('orient') === 'vertical' && parseInt($(this).siblings('input').val()) < em.parent().data('spinmax')) {
          $(em).next().val(parseInt($(em).next().val()) + em.parent().data('spinstep'));
        } else if (parseInt($(this).siblings('input').val()) < em.parent().data('spinmax')) {
          $(em).prev().val(parseInt($(em).prev().val()) + em.parent().data('spinstep'));
        }
      });
      // Decrease Button code
      $('.spinbox-decrease').click(function () {
        var el = $(this);
        if (el.parent().data('orient') === 'vertical' && parseInt($(this).siblings('input').val()) > el.parent().data('spinmin')) {
          $(el).prev().val(parseInt($(el).prev().val()) - el.parent().data('spinstep'));
        } else if (parseInt($(this).siblings('input').val()) > el.parent().data('spinmin')) {
          $(el).next().val(parseInt($(el).next().val()) - el.parent().data('spinstep'));
        }
      });
      //Checks to see if the manual input is outside the range of the min-max and changes it to bring it back in range.
      $('.spinbox-input').blur(function () {
        var em = $(this);
        if (parseInt($(this).val()) > em.parent().data('spinmax')) {
          $(this).val(em.parent().data('spinmax'));
        } else if (parseInt($(this).val()) < em.parent().data('spinmin')) {
          $(this).val(em.parent().data('spinmin'));
        }
      });
      // Limits keyboard input to alphanumeric
      $(document).ready(function () {
        $('.spinbox-input').keypress(function (key) {
          if (key.charCode < 48 || key.charCode > 57) {
            return false;
          }
        });
      });
    }
  };
}).directive('selectState', function () {
  // Runs during compile
  var template = '<option value="">{{ emptyName }}</option>' + '<option ng-repeat="state in states" value="{{state.code}}">' + '   {{state[label]}}' + '</option>';
  return {
    scope: true,
    controller: [
      '$scope',
      '$element',
      '$attrs',
      '$transclude',
      function ($scope, $element, $attrs, $transclude) {
        $scope.selectedState = '';
        $scope.format = $attrs.format;
        $scope.states = [
          {
            'code': 'AL',
            'label': 'Alabama',
            'long_label': 'AL - Alabama'
          },
          {
            'code': 'AK',
            'label': 'Alaska',
            'long_label': 'AK - Alaska'
          },
          {
            'code': 'AZ',
            'label': 'Arizona',
            'long_label': 'AZ - Arizona'
          },
          {
            'code': 'AR',
            'label': 'Arkansas',
            'long_label': 'AR - Arkansas'
          },
          {
            'code': 'CA',
            'label': 'California',
            'long_label': 'CA - California'
          },
          {
            'code': 'CO',
            'label': 'Colorado',
            'long_label': 'CO - Colorado'
          },
          {
            'code': 'CT',
            'label': 'Connecticut',
            'long_label': 'CT - Connecticut'
          },
          {
            'code': 'DE',
            'label': 'Delaware',
            'long_label': 'DE - Delaware'
          },
          {
            'code': 'DC',
            'label': 'District of Columbia',
            'long_label': 'DC - District of Columbia'
          },
          {
            'code': 'FL',
            'label': 'Florida',
            'long_label': 'FL - Florida'
          },
          {
            'code': 'GA',
            'label': 'Georgia',
            'long_label': 'GA - Georgia'
          },
          {
            'code': 'HI',
            'label': 'Hawaii',
            'long_label': 'HI - Hawaii'
          },
          {
            'code': 'ID',
            'label': 'Idaho',
            'long_label': 'ID - Idaho'
          },
          {
            'code': 'IL',
            'label': 'Illinois',
            'long_label': 'IL - Illinois'
          },
          {
            'code': 'IN',
            'label': 'Indiana',
            'long_label': 'IN - Indiana'
          },
          {
            'code': 'IA',
            'label': 'Iowa',
            'long_label': 'IA - Iowa'
          },
          {
            'code': 'KS',
            'label': 'Kansas',
            'long_label': 'KS - Kansas'
          },
          {
            'code': 'KY',
            'label': 'Kentucky',
            'long_label': 'KY - Kentucky'
          },
          {
            'code': 'LA',
            'label': 'Louisiana',
            'long_label': 'LA - Louisiana'
          },
          {
            'code': 'ME',
            'label': 'Maine',
            'long_label': 'ME - Maine'
          },
          {
            'code': 'MD',
            'label': 'Maryland',
            'long_label': 'MD - Maryland'
          },
          {
            'code': 'MA',
            'label': 'Massachusetts',
            'long_label': 'MA - Massachusetts'
          },
          {
            'code': 'MI',
            'label': 'Michigan',
            'long_label': 'MI - Michigan'
          },
          {
            'code': 'MN',
            'label': 'Minnesota',
            'long_label': 'MN - Minnesota'
          },
          {
            'code': 'MS',
            'label': 'Mississippi',
            'long_label': 'MS - Mississippi'
          },
          {
            'code': 'MO',
            'label': 'Missouri',
            'long_label': 'MO - Missouri'
          },
          {
            'code': 'MT',
            'label': 'Montana',
            'long_label': 'MT - Montana'
          },
          {
            'code': 'NE',
            'label': 'Nebraska',
            'long_label': 'NE - Nebraska'
          },
          {
            'code': 'NV',
            'label': 'Nevada',
            'long_label': 'NV - Nevada'
          },
          {
            'code': 'NH',
            'label': 'New Hampshire',
            'long_label': 'NH - New Hampshire'
          },
          {
            'code': 'NJ',
            'label': 'New Jersey',
            'long_label': 'NJ - New Jersey'
          },
          {
            'code': 'NM',
            'label': 'New Mexico',
            'long_label': 'NM - New Mexico'
          },
          {
            'code': 'NY',
            'label': 'New York',
            'long_label': 'NY - New York'
          },
          {
            'code': 'NC',
            'label': 'North Carolina',
            'long_label': 'NC - North Carolina'
          },
          {
            'code': 'ND',
            'label': 'North Dakota',
            'long_label': 'ND - North Dakota'
          },
          {
            'code': 'OH',
            'label': 'Ohio',
            'long_label': 'OH - Ohio'
          },
          {
            'code': 'OK',
            'label': 'Oklahoma',
            'long_label': 'OK - Oklahoma'
          },
          {
            'code': 'OR',
            'label': 'Oregon',
            'long_label': 'OR - Oregon'
          },
          {
            'code': 'PA',
            'label': 'Pennsylvania',
            'long_label': 'PA - Pennsylvania'
          },
          {
            'code': 'RI',
            'label': 'Rhode Island',
            'long_label': 'RI - Rhode Island'
          },
          {
            'code': 'SC',
            'label': 'South Carolina',
            'long_label': 'SC - South Carolina'
          },
          {
            'code': 'SD',
            'label': 'South Dakota',
            'long_label': 'SD - South Dakota'
          },
          {
            'code': 'TN',
            'label': 'Tennessee',
            'long_label': 'TN - Tennessee'
          },
          {
            'code': 'TX',
            'label': 'Texas',
            'long_label': 'TX - Texas'
          },
          {
            'code': 'UT',
            'label': 'Utah',
            'long_label': 'UT - Utah'
          },
          {
            'code': 'VA',
            'label': 'Virginia',
            'long_label': 'VA - Virginia'
          },
          {
            'code': 'WA',
            'label': 'Washington',
            'long_label': 'WA - Washington'
          },
          {
            'code': 'WV',
            'label': 'West Virginia',
            'long_label': 'WV - West Virginia'
          },
          {
            'code': 'WI',
            'label': 'Wisconsin',
            'long_label': 'WI - Wisconsin'
          },
          {
            'code': 'WY',
            'label': 'Wyoming',
            'long_label': 'WY - Wyoming'
          },
          {
            'code': 'AA',
            'label': 'Armed Forces-Americas',
            'long_label': 'AA - Armed Forces-Americas'
          },
          {
            'code': 'AE',
            'label': 'Armed Forces-Europe',
            'long_label': 'AE - Armed Forces-Europe'
          },
          {
            'code': 'AP',
            'label': 'Armed Forces-Pacific',
            'long_label': 'AP - Armed Forces-Pacific'
          }
        ];
        switch ($attrs.format) {
        case 'short':
          $scope.label = 'code';
          break;
        case 'both':
          $scope.label = 'long_label';
          break;
        default:
          $scope.label = 'label';
        }
      }
    ],
    restrict: 'AC',
    template: template,
    link: function ($scope, $element, $attributes, controller) {
      $scope.emptyName = $attributes.emptyName || '*State';
    }
  };
});
angular.module('dellUiComponents').directive('alertCollapsible', function () {
  return {
    restrict: 'C',
    link: function ($scope, $element, $attrs) {
      //toggle x
      $element.find('.close').on('click', function () {
        $(event.currentTarget).parent().addClass('collapsed');
      });
      $element.find('> .show-collapsed').on('click', function () {
        $(event.currentTarget).parent().removeClass('collapsed');
      });
    }
  };
});
/* globals s */
angular.module('demo', [
  'ui.utils',
  'ui.router',
  'ngAnimate',
  'dellUiComponents',
  'ui.grid'
]);
angular.module('demo').config([
  '$stateProvider',
  '$urlRouterProvider',
  function ($stateProvider, $urlRouterProvider) {
    $stateProvider.state('demo', {
      url: '/:typeId/:componentId',
      templateUrl: 'demo-assets/partials/home/home.html'
    });
    /* Add New States Above */
    $urlRouterProvider.otherwise('/demo/');
  }
]);
angular.module('demo').run([
  '$rootScope',
  function ($rootScope) {
    $rootScope.safeApply = function (fn) {
      var phase = $rootScope.$$phase;
      if (phase === '$apply' || phase === '$digest') {
        if (fn && typeof fn === 'function') {
          fn();
        }
      } else {
        this.$apply(fn);
      }
    };
    _.str = s;
  }
]);
angular.module('demo').controller('HomeCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$state',
  '$timeout',
  function ($scope, $rootScope, $http, $state, $timeout) {
    $rootScope.activeComponent = '';
    $rootScope.pageType = 'demo';
    var init;
    $http.get('components-list.json').success(function (data) {
      $rootScope.components = [];
      _.each(data, function (component) {
        var componentObj = {
            label: _.str.titleize(component),
            id: _.str.dasherize(component)
          };
        $rootScope.components.push(componentObj);
        if ($state.params.componentId) {
          $rootScope.activeComponent = componentObj;
        }
      });
      init = function (componentId) {
        if (componentId) {
          $rootScope.componentDemoUrl = 'components/' + componentId + '/demo-' + componentId + '.html';
          $rootScope.componentPlayUrl = 'components/' + componentId + '/demo-play-' + componentId + '.html';
          $rootScope.activeComponent = _.find($rootScope.components, function (c) {
            return c.id === componentId;
          });
        }
        $timeout(function () {
          $rootScope.pageType = $state.params.typeId;
        });
      };
      init($state.params.componentId);
    });
    $rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {
      init(toParams.componentId);
    });
  }
]);
angular.module('demo').controller('ComponentsDemoCtrl', [
  '$scope',
  '$rootScope',
  '$state',
  function ($scope, $rootScope, $state) {
  }
]);
angular.module('demo').controller('PlayCtrl', [
  '$scope',
  '$rootScope',
  '$state',
  function ($scope, $rootScope, $state) {
    var init = function (componentId) {
      if (componentId) {
        $scope.componentPlayUrl = 'components/' + componentId + '/demo-play-' + componentId + '.html';
      }
    };
    init($state.params.componentId);
    $rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {
      init(toParams.componentId);
    });
  }
]);
angular.module('demo').controller('AllComponentsCtrl', [
  '$scope',
  function ($scope) {
  }
]);
angular.module('demo').controller('alertsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('alertsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('announcementsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('announcementsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
    //this is for functionality related to play demo code
    var titleText, bodyHTML, iconHTML, ctaLinks, announcementId;
    $scope.sampleAnnouncementConfig = { type: 'blue' };
    $scope.$watch('sampleAnnouncementConfig.body', function (newValue, oldValue) {
      //console.log(newValue);
      if (newValue) {
        $scope.sampleAnnouncementConfig.body = newValue.replace(/(?:\r\n|\r|\n)/g, ' <br/>');
      }
      refreshSample();
    });
    $scope.$watch('sampleAnnouncementConfig.type', function (newValue, oldValue) {
      refreshSample();
    });
    $scope.$watch('sampleAnnouncementConfig.title', function (newValue, oldValue) {
      refreshSample();
    });
    $scope.$watch('sampleAnnouncementConfig.id', function (newValue, oldValue) {
      $scope.sampleAnnouncementConfig.id = _.str.dasherize(newValue);
      refreshSample();
    });
    $scope.$watch('sampleAnnouncementConfig.icon', function (newValue, oldValue) {
      refreshSample();
    });
    $scope.$watch('sampleAnnouncementConfig.cta_0.url', function (newValue, oldValue) {
      refreshSample();
    });
    $scope.$watch('sampleAnnouncementConfig.cta_1.url', function (newValue, oldValue) {
      refreshSample();
    });
    $scope.$watch('sampleAnnouncementConfig.cta_0.label', function (newValue, oldValue) {
      refreshSample();
    });
    $scope.$watch('sampleAnnouncementConfig.cta_1.label', function (newValue, oldValue) {
      refreshSample();
    });
    function refreshSample() {
      $scope.textkeysToAdd = '';
      $scope.resourcesToAdd = '';
      if ($scope.sampleAnnouncementConfig.title) {
        titleText = '\n    <h4>' + $scope.sampleAnnouncementConfig.title + '</h4>';
      } else {
        titleText = '';
      }
      if ($scope.sampleAnnouncementConfig.body) {
        if ($scope.sampleAnnouncementConfig.body.match(/<.*>|\n/)) {
          //TODO convert markdown
          bodyHTML = '\n    ' + $scope.sampleAnnouncementConfig.body;
          $scope.textkeysToAdd = '"text_announcement_' + _.str.underscored($scope.sampleAnnouncementConfig.id) + '_markdown":"' + $scope.sampleAnnouncementConfig.body + '"';
        } else {
          bodyHTML = '\n    <p>' + $scope.sampleAnnouncementConfig.body + '</p>';
          $scope.textkeysToAdd = '"text_announcement_' + _.str.underscored($scope.sampleAnnouncementConfig.id) + '":"' + $scope.sampleAnnouncementConfig.body + '"';
        }
      } else {
        bodyHTML = '\n    <p>Deserunt sint qui cillum cillum eu et ut culpa dolor. Amet sunt culpa nisi exercitation laborum dolore aliquip eu ullamco dolore duis exercitation minim laboris.</p>';
      }
      if ($scope.sampleAnnouncementConfig.title) {
        if ($scope.sampleAnnouncementConfig.body) {
          $scope.textkeysToAdd += ',\n';
        }
        $scope.textkeysToAdd += '"title_announcement_' + _.str.underscored($scope.sampleAnnouncementConfig.id) + '":"' + $scope.sampleAnnouncementConfig.title + '"';
      }
      if ($scope.sampleAnnouncementConfig.id) {
        announcementId = ' id="' + $scope.sampleAnnouncementConfig.id + '"';
      } else {
        announcementId = '';
      }
      //TODO need to create these icons within the theme
      if ($scope.sampleAnnouncementConfig.icon) {
        iconHTML = '\n    <img class="icon-large-' + $scope.sampleAnnouncementConfig.icon + '" src="app/dell-ui-site/img/' + $scope.sampleAnnouncementConfig.icon + '.png"/>';
      } else {
        iconHTML = '';
      }
      if ($scope.sampleAnnouncementConfig.cta_0 || $scope.sampleAnnouncementConfig.cta_1) {
        ctaLinks = '';
        if ($scope.sampleAnnouncementConfig.cta_0) {
          ctaLinks += '\n    <p><a href="' + $scope.sampleAnnouncementConfig.cta_0.url + '">' + $scope.sampleAnnouncementConfig.cta_0.label + '</a></p>';
          $scope.resourcesToAdd += '"url_announcement_' + _.str.underscored($scope.sampleAnnouncementConfig.id) + '_cta_0":"' + $scope.sampleAnnouncementConfig.cta_0.url + '"';
          if ($scope.textkeysToAdd) {
            $scope.textkeysToAdd += ',\n';
          }
          $scope.textkeysToAdd += '"text_announcement_' + _.str.underscored($scope.sampleAnnouncementConfig.id) + '_cta_0":"' + $scope.sampleAnnouncementConfig.cta_0.label + '"';
        }
        if ($scope.sampleAnnouncementConfig.cta_1) {
          ctaLinks += '\n    <p><a href="' + $scope.sampleAnnouncementConfig.cta_1.url + '">' + $scope.sampleAnnouncementConfig.cta_1.label + '</a></p>';
          if ($scope.resourcesToAdd) {
            $scope.resourcesToAdd += ',\n';
          }
          $scope.resourcesToAdd += '"url_announcement_' + _.str.underscored($scope.sampleAnnouncementConfig.id) + '_cta_1":"' + $scope.sampleAnnouncementConfig.cta_1.url + '"';
          if ($scope.sampleAnnouncementConfig.cta_0 && $scope.textkeysToAdd) {
            $scope.textkeysToAdd += ',\n';
          }
          $scope.textkeysToAdd += '"text_announcement_' + _.str.underscored($scope.sampleAnnouncementConfig.id) + '_cta_1":"' + $scope.sampleAnnouncementConfig.cta_1.label + '"';
        }
      } else {
        ctaLinks = '';
      }
      $scope.playHtmlCode = '<blockquote class="blockquote-' + $scope.sampleAnnouncementConfig.type + '"' + announcementId + '>' + iconHTML + titleText + bodyHTML + ctaLinks + '\n</blockquote>';
      $scope.renderingHTML = $sce.trustAsHtml($scope.playHtmlCode);
      console.log('$scope.renderingHTML', $scope.renderingHTML);
      $scope.sampleSherpaConfig = _.clone($scope.sampleAnnouncementConfig);
      delete $scope.sampleSherpaConfig.body;
      delete $scope.sampleSherpaConfig.title;
      $rootScope.safeApply();
    }
    refreshSample();
  }
]);
angular.module('demo').controller('breadcrumbsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('breadcrumbsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('standardButtonsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('standardButtonsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('blockButtonsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('blockButtonsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('dropdownButtonsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('dropdownButtonsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('miniButtonsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('miniButtonsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('carouselCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('carouselPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('collapsibleItemsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('collapsibleItemsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('colorsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('colorsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('containersCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('containersPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('dividersCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('dividersPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('footerCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('footerPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('formsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('formsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('iconsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('iconsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('listsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('listsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('labelsAndBadgesCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('labelsAndBadgesPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('modalsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('modalsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('offsetsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('offsetsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('pagersCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('pagersPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('paginationCtrl', [
  '$scope',
  '$rootScope',
  '$timeout',
  function ($scope, $rootScope, $timeout) {
    //this is for functionality related to demo code
    $('.pagination').jqPagination({
      paged: function (page) {
      }
    });
    $(document).ready(function () {
      $('.news-pagination li').slice(5).hide();
      $('#loadmore').jqPagination({
        max_page: Math.ceil($('.news-pagination li').length / 5),
        paged: function (page) {
          $('.news-pagination li').hide();
          $('.news-pagination li').slice((page - 1) * 5, page * 5).fadeIn('slow');
        }
      });
    });
  }
]);
angular.module('demo').controller('paginationPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('popoversCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('popoversPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('responsiveUtilitiesCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('responsiveUtilitiesPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('progressBarsCtrl', [
  '$scope',
  '$timeout',
  '$rootScope',
  function ($scope, $timeout, $rootScope) {
    //this is for functionality related to demo code
    $scope.fakeAnimationValue = 0;
    $scope.fakeAnimation = function () {
      $scope.fakeAnimationId = $timeout(function () {
        if ($scope.fakeAnimationValue < 100) {
          $scope.fakeAnimationValue = $scope.fakeAnimationValue + 1;
          $scope.fakeAnimationSteps = Math.round($scope.fakeAnimationValue / 20);
          console.log($scope.fakeAnimationValue, $scope.fakeAnimationSteps);
          $scope.stripeAnimate = 'active';
          $scope.fakeAnimation();
        }
      }, _.random(100, 500));
    };
    $scope.pauseFakeAnimation = function () {
      $timeout.cancel($scope.fakeAnimationId);
      $scope.fakeAnimationId = undefined;
      $scope.stripeAnimate = '';
    };
    $scope.resetFakeAnimation = function () {
      $scope.fakeAnimationValue = 0;
      $scope.fakeAnimation();
      $scope.stripeAnimate = 'active';
    };
  }
]);
angular.module('demo').controller('progressBarsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('tablesCtrl', [
  '$scope',
  '$rootScope',
  'uiGridConstants',
  function ($scope, $rootScope, uiGridConstants) {
    //this is for functionality related to demo code
    $scope.sortableTable = {
      enableSorting: true,
      onRegisterApi: function (gridApi) {
        $scope.grid2Api = gridApi;
      },
      columnDefs: [
        {
          field: 'name',
          sort: {
            direction: uiGridConstants.DESC,
            priority: 1
          }
        },
        {
          field: 'gender',
          sort: {
            direction: uiGridConstants.ASC,
            priority: 0
          },
          suppressRemoveSort: true,
          sortingAlgorithm: function (a, b) {
            var nulls = $scope.grid2Api.core.sortHandleNulls(a, b);
            if (nulls !== null) {
              return nulls;
            } else {
              if (a === b) {
                return 0;
              }
              if (a === 'male') {
                return 1;
              }
              if (b === 'male') {
                return -1;
              }
              if (a === 'female') {
                return 1;
              }
              if (b === 'female') {
                return -1;
              }
              return 0;
            }
          }
        },
        {
          field: 'company',
          enableSorting: false
        }
      ],
      data: [
        {
          'name': 'Ethel Price',
          'gender': 'female',
          'company': 'Enersol'
        },
        {
          'name': 'Claudine Neal',
          'gender': 'female',
          'company': 'Sealoud'
        },
        {
          'name': 'Beryl Rice',
          'gender': 'female',
          'company': 'Velity'
        },
        {
          'name': 'Wilder Gonzales',
          'gender': 'male',
          'company': 'Geekko'
        },
        {
          'name': 'Georgina Schultz',
          'gender': 'female',
          'company': 'Suretech'
        },
        {
          'name': 'Carroll Buchanan',
          'gender': 'male',
          'company': 'Ecosys'
        },
        {
          'name': 'Valarie Atkinson',
          'gender': 'female',
          'company': 'Hopeli'
        },
        {
          'name': 'Schroeder Mathews',
          'gender': 'male',
          'company': 'Polarium'
        },
        {
          'name': 'Lynda Mendoza',
          'gender': 'female',
          'company': 'Dogspa'
        },
        {
          'name': 'Sarah Massey',
          'gender': 'female',
          'company': 'Bisba'
        },
        {
          'name': 'Robles Boyle',
          'gender': 'male',
          'company': 'Comtract'
        },
        {
          'name': 'Evans Hickman',
          'gender': 'male',
          'company': 'Parleynet'
        },
        {
          'name': 'Dawson Barber',
          'gender': 'male',
          'company': 'Dymi'
        },
        {
          'name': 'Bruce Strong',
          'gender': 'male',
          'company': 'Xyqag'
        },
        {
          'name': 'Nellie Whitfield',
          'gender': 'female',
          'company': 'Exospace'
        },
        {
          'name': 'Jackson Macias',
          'gender': 'male',
          'company': 'Aquamate'
        },
        {
          'name': 'Pena Pena',
          'gender': 'male',
          'company': 'Quarx'
        },
        {
          'name': 'Lelia Gates',
          'gender': 'female',
          'company': 'Proxsoft'
        },
        {
          'name': 'Letitia Vasquez',
          'gender': 'female',
          'company': 'Slumberia'
        },
        {
          'name': 'Trevino Moreno',
          'gender': 'male',
          'company': 'Conjurica'
        },
        {
          'name': 'Barr Page',
          'gender': 'male',
          'company': 'Apex'
        },
        {
          'name': 'Kirkland Merrill',
          'gender': 'male',
          'company': 'Utara'
        },
        {
          'name': 'Blanche Conley',
          'gender': 'female',
          'company': 'Imkan'
        },
        {
          'name': 'Atkins Dunlap',
          'gender': 'male',
          'company': 'Comveyor'
        },
        {
          'name': 'Everett Foreman',
          'gender': 'male',
          'company': 'Maineland'
        },
        {
          'name': 'Gould Randolph',
          'gender': 'male',
          'company': 'Intergeek'
        },
        {
          'name': 'Kelli Leon',
          'gender': 'female',
          'company': 'Verbus'
        },
        {
          'name': 'Freda Mason',
          'gender': 'female',
          'company': 'Accidency'
        },
        {
          'name': 'Tucker Maxwell',
          'gender': 'male',
          'company': 'Lumbrex'
        },
        {
          'name': 'Yvonne Parsons',
          'gender': 'female',
          'company': 'Zolar'
        },
        {
          'name': 'Woods Key',
          'gender': 'male',
          'company': 'Bedder'
        },
        {
          'name': 'Stephens Reilly',
          'gender': 'male',
          'company': 'Acusage'
        },
        {
          'name': 'Mcfarland Sparks',
          'gender': 'male',
          'company': 'Comvey'
        },
        {
          'name': 'Jocelyn Sawyer',
          'gender': 'female',
          'company': 'Fortean'
        },
        {
          'name': 'Renee Barr',
          'gender': 'female',
          'company': 'Kiggle'
        },
        {
          'name': 'Gaines Beck',
          'gender': 'male',
          'company': 'Sequitur'
        },
        {
          'name': 'Luisa Farrell',
          'gender': 'female',
          'company': 'Cinesanct'
        },
        {
          'name': 'Robyn Strickland',
          'gender': 'female',
          'company': 'Obones'
        },
        {
          'name': 'Roseann Jarvis',
          'gender': 'female',
          'company': 'Aquazure'
        },
        {
          'name': 'Johnston Park',
          'gender': 'male',
          'company': 'Netur'
        },
        {
          'name': 'Wong Craft',
          'gender': 'male',
          'company': 'Opticall'
        },
        {
          'name': 'Merritt Cole',
          'gender': 'male',
          'company': 'Techtrix'
        },
        {
          'name': 'Dale Byrd',
          'gender': 'female',
          'company': 'Kneedles'
        },
        {
          'name': 'Sara Delgado',
          'gender': 'female',
          'company': 'Netagy'
        },
        {
          'name': 'Alisha Myers',
          'gender': 'female',
          'company': 'Intradisk'
        },
        {
          'name': 'Felecia Smith',
          'gender': 'female',
          'company': 'Futurity'
        },
        {
          'name': 'Neal Harvey',
          'gender': 'male',
          'company': 'Pyramax'
        },
        {
          'name': 'Nola Miles',
          'gender': 'female',
          'company': 'Sonique'
        },
        {
          'name': 'Herring Pierce',
          'gender': 'male',
          'company': 'Geeketron'
        },
        {
          'name': 'Shelley Rodriquez',
          'gender': 'female',
          'company': 'Bostonic'
        },
        {
          'name': 'Cora Chase',
          'gender': 'female',
          'company': 'Isonus'
        },
        {
          'name': 'Mckay Santos',
          'gender': 'male',
          'company': 'Amtas'
        },
        {
          'name': 'Hilda Crane',
          'gender': 'female',
          'company': 'Jumpstack'
        },
        {
          'name': 'Jeanne Lindsay',
          'gender': 'female',
          'company': 'Genesynk'
        },
        {
          'name': 'Frye Sharpe',
          'gender': 'male',
          'company': 'Eplode'
        },
        {
          'name': 'Velma Fry',
          'gender': 'female',
          'company': 'Ronelon'
        },
        {
          'name': 'Reyna Espinoza',
          'gender': 'female',
          'company': 'Prismatic'
        },
        {
          'name': 'Spencer Sloan',
          'gender': 'male',
          'company': 'Comverges'
        },
        {
          'name': 'Graham Marsh',
          'gender': 'male',
          'company': 'Medifax'
        },
        {
          'name': 'Hale Boone',
          'gender': 'male',
          'company': 'Digial'
        },
        {
          'name': 'Wiley Hubbard',
          'gender': 'male',
          'company': 'Zensus'
        },
        {
          'name': 'Blackburn Drake',
          'gender': 'male',
          'company': 'Frenex'
        },
        {
          'name': 'Franco Hunter',
          'gender': 'male',
          'company': 'Rockabye'
        },
        {
          'name': 'Barnett Case',
          'gender': 'male',
          'company': 'Norali'
        },
        {
          'name': 'Alexander Foley',
          'gender': 'male',
          'company': 'Geekosis'
        },
        {
          'name': 'Lynette Stein',
          'gender': 'female',
          'company': 'Macronaut'
        },
        {
          'name': 'Anthony Joyner',
          'gender': 'male',
          'company': 'Senmei'
        },
        {
          'name': 'Garrett Brennan',
          'gender': 'male',
          'company': 'Bluegrain'
        },
        {
          'name': 'Betsy Horton',
          'gender': 'female',
          'company': 'Zilla'
        },
        {
          'name': 'Patton Small',
          'gender': 'male',
          'company': 'Genmex'
        },
        {
          'name': 'Lakisha Huber',
          'gender': 'female',
          'company': 'Insource'
        },
        {
          'name': 'Lindsay Avery',
          'gender': 'female',
          'company': 'Unq'
        },
        {
          'name': 'Ayers Hood',
          'gender': 'male',
          'company': 'Accuprint'
        },
        {
          'name': 'Torres Durham',
          'gender': 'male',
          'company': 'Uplinx'
        },
        {
          'name': 'Vincent Hernandez',
          'gender': 'male',
          'company': 'Talendula'
        },
        {
          'name': 'Baird Ryan',
          'gender': 'male',
          'company': 'Aquasseur'
        },
        {
          'name': 'Georgia Mercer',
          'gender': 'female',
          'company': 'Skyplex'
        },
        {
          'name': 'Francesca Elliott',
          'gender': 'female',
          'company': 'Nspire'
        },
        {
          'name': 'Lyons Peters',
          'gender': 'male',
          'company': 'Quinex'
        },
        {
          'name': 'Kristi Brewer',
          'gender': 'female',
          'company': 'Oronoko'
        },
        {
          'name': 'Tonya Bray',
          'gender': 'female',
          'company': 'Insuron'
        },
        {
          'name': 'Valenzuela Huff',
          'gender': 'male',
          'company': 'Applideck'
        },
        {
          'name': 'Tiffany Anderson',
          'gender': 'female',
          'company': 'Zanymax'
        },
        {
          'name': 'Jerri King',
          'gender': 'female',
          'company': 'Eventex'
        },
        {
          'name': 'Rocha Meadows',
          'gender': 'male',
          'company': 'Goko'
        },
        {
          'name': 'Marcy Green',
          'gender': 'female',
          'company': 'Pharmex'
        },
        {
          'name': 'Kirk Cross',
          'gender': 'male',
          'company': 'Portico'
        },
        {
          'name': 'Hattie Mullen',
          'gender': 'female',
          'company': 'Zilencio'
        },
        {
          'name': 'Deann Bridges',
          'gender': 'female',
          'company': 'Equitox'
        },
        {
          'name': 'Chaney Roach',
          'gender': 'male',
          'company': 'Qualitern'
        },
        {
          'name': 'Consuelo Dickson',
          'gender': 'female',
          'company': 'Poshome'
        },
        {
          'name': 'Billie Rowe',
          'gender': 'female',
          'company': 'Cemention'
        },
        {
          'name': 'Bean Donovan',
          'gender': 'male',
          'company': 'Mantro'
        },
        {
          'name': 'Lancaster Patel',
          'gender': 'male',
          'company': 'Krog'
        },
        {
          'name': 'Rosa Dyer',
          'gender': 'female',
          'company': 'Netility'
        },
        {
          'name': 'Christine Compton',
          'gender': 'female',
          'company': 'Bleeko'
        },
        {
          'name': 'Milagros Finch',
          'gender': 'female',
          'company': 'Handshake'
        },
        {
          'name': 'Ericka Alvarado',
          'gender': 'female',
          'company': 'Lyrichord'
        },
        {
          'name': 'Sylvia Sosa',
          'gender': 'female',
          'company': 'Circum'
        },
        {
          'name': 'Humphrey Curtis',
          'gender': 'male',
          'company': 'Corepan'
        }
      ]
    };
    $scope.filteredTable = {
      enableFiltering: true,
      columnDefs: [
        { field: 'name' },
        {
          field: 'gender',
          filter: { term: 'male' }
        },
        {
          field: 'company',
          enableFiltering: false,
          filter: {
            noTerm: true,
            condition: function (searchTerm, cellValue) {
              return cellValue.match(/a/);
            }
          }
        },
        {
          field: 'email',
          filter: {
            condition: uiGridConstants.filter.ENDS_WITH,
            placeholder: 'ends with'
          }
        },
        {
          field: 'phone',
          filter: {
            condition: function (searchTerm, cellValue) {
              var strippedValue = (cellValue + '').replace(/[^\d]/g, '');
              return strippedValue.indexOf(searchTerm) >= 0;
            }
          }
        },
        {
          field: 'age',
          filters: [
            {
              condition: uiGridConstants.filter.GREATER_THAN,
              placeholder: 'greater than'
            },
            {
              condition: uiGridConstants.filter.LESS_THAN,
              placeholder: 'less than'
            }
          ]
        }
      ],
      data: [
        {
          'id': 0,
          'guid': 'de3db502-0a33-4e47-a0bb-35b6235503ca',
          'isActive': false,
          'balance': '$3,489.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Sandoval Mclean',
          'gender': 'male',
          'company': 'Zolavo',
          'email': 'sandovalmclean@zolavo.com',
          'phone': '+1 (902) 569-2412',
          'address': {
            'street': 317,
            'city': 'Blairstown',
            'state': 'Maine',
            'zip': 390
          },
          'about': 'Fugiat velit laboris sit est. Amet eu consectetur reprehenderit proident irure non. Adipisicing mollit veniam enim veniam officia anim proident excepteur deserunt consectetur aliquip et irure. Elit aliquip laborum qui elit consectetur sit proident adipisicing.\r\n',
          'registered': '1991-02-21T23:02:31+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Rosanne Barrett'
            },
            {
              'id': 1,
              'name': 'Nita Chase'
            },
            {
              'id': 2,
              'name': 'Briggs Stark'
            }
          ]
        },
        {
          'id': 1,
          'guid': '9f507483-5ecc-4af4-800f-349306820585',
          'isActive': false,
          'balance': '$2,407.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Nieves Mack',
          'gender': 'male',
          'company': 'Oulu',
          'email': 'nievesmack@oulu.com',
          'phone': '+1 (812) 535-2614',
          'address': {
            'street': 155,
            'city': 'Cherokee',
            'state': 'Kentucky',
            'zip': 4723
          },
          'about': 'Culpa anim anim nulla deserunt dolor exercitation eu in anim velit. Consectetur esse cillum ea esse ullamco magna do voluptate sit ut cupidatat ullamco. Et consequat eu excepteur do Lorem aute est quis proident irure.\r\n',
          'registered': '1989-07-26T15:52:15+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Brewer Maxwell'
            },
            {
              'id': 1,
              'name': 'Ayala Franks'
            },
            {
              'id': 2,
              'name': 'Hale Nichols'
            }
          ]
        },
        {
          'id': 2,
          'guid': '58c66190-15be-4e75-9b09-183599403241',
          'isActive': false,
          'balance': '$3,409.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Terry Clay',
          'gender': 'female',
          'company': 'Freakin',
          'email': 'terryclay@freakin.com',
          'phone': '+1 (965) 462-3681',
          'address': {
            'street': 124,
            'city': 'Wright',
            'state': 'Pennsylvania',
            'zip': 8002
          },
          'about': 'Exercitation exercitation adipisicing eu cupidatat reprehenderit laborum incididunt reprehenderit Lorem anim. Velit aliquip dolore qui excepteur dolor non occaecat aute et. Consectetur anim veniam irure ea id aliqua amet. Nostrud tempor ullamco velit labore consequat aute nostrud nostrud veniam cupidatat amet nostrud quis. Qui exercitation eiusmod esse eu officia officia Lorem Lorem ullamco voluptate excepteur fugiat nulla et. Ea ipsum ut do culpa labore non duis commodo sit. Id sint dolor ipsum consectetur nostrud nulla consectetur esse deserunt.\r\n',
          'registered': '2000-12-02T22:19:28+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Etta Hawkins'
            },
            {
              'id': 1,
              'name': 'Zamora Barlow'
            },
            {
              'id': 2,
              'name': 'Lynette Vinson'
            }
          ]
        },
        {
          'id': 3,
          'guid': '0a1b0539-73ec-473a-846a-71a58e04551c',
          'isActive': false,
          'balance': '$3,567.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Bishop Carr',
          'gender': 'male',
          'company': 'Digirang',
          'email': 'bishopcarr@digirang.com',
          'phone': '+1 (860) 463-2942',
          'address': {
            'street': 824,
            'city': 'Homeworth',
            'state': 'Oklahoma',
            'zip': 5215
          },
          'about': 'Nulla ullamco sint exercitation minim ea sunt. Excepteur minim tempor velit in. Proident id reprehenderit nisi officia in anim elit laboris aute sint amet voluptate. Deserunt et nostrud magna eu esse ea adipisicing non quis sint fugiat consectetur enim sint. Magna elit mollit eiusmod non voluptate sunt.\r\n',
          'registered': '2012-10-15T19:03:24+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Young Gentry'
            },
            {
              'id': 1,
              'name': 'Dean Lopez'
            },
            {
              'id': 2,
              'name': 'Mccray Bradford'
            }
          ]
        },
        {
          'id': 4,
          'guid': 'f82261a1-71d0-4d96-aeb6-03e300112f18',
          'isActive': true,
          'balance': '$1,931.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Hatfield Hudson',
          'gender': 'male',
          'company': 'Quonata',
          'email': 'hatfieldhudson@quonata.com',
          'phone': '+1 (981) 476-2966',
          'address': {
            'street': 853,
            'city': 'Bynum',
            'state': 'Rhode Island',
            'zip': 3382
          },
          'about': 'In fugiat elit ipsum qui occaecat elit enim eu labore. Esse incididunt adipisicing nostrud veniam proident duis ex aute sit id. Exercitation occaecat nisi incididunt ut esse nostrud pariatur. Consectetur culpa minim deserunt minim proident consectetur incididunt enim duis adipisicing pariatur proident.\r\n',
          'registered': '2000-09-05T10:41:58+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Munoz Sharp'
            },
            {
              'id': 1,
              'name': 'Louella Vaughn'
            },
            {
              'id': 2,
              'name': 'Cleveland Parker'
            }
          ]
        },
        {
          'id': 5,
          'guid': '3eeb5290-1357-4c8b-8ca3-ea9f01521928',
          'isActive': false,
          'balance': '$2,215.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Madge Wilkerson',
          'gender': 'female',
          'company': 'Mixers',
          'email': 'madgewilkerson@mixers.com',
          'phone': '+1 (947) 551-2199',
          'address': {
            'street': 374,
            'city': 'Springdale',
            'state': 'Minnesota',
            'zip': 7453
          },
          'about': 'Officia laboris laborum dolore ad minim ad mollit et excepteur adipisicing do non nostrud officia. Anim in exercitation dolor cupidatat deserunt. Commodo excepteur aliqua consequat do. Aliquip incididunt quis sunt cillum reprehenderit consequat.\r\n',
          'registered': '2005-12-16T01:13:09+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Tabatha Mclaughlin'
            },
            {
              'id': 1,
              'name': 'Letitia Evans'
            },
            {
              'id': 2,
              'name': 'Greta Sykes'
            }
          ]
        },
        {
          'id': 6,
          'guid': '29bc47e3-5275-49be-b9cf-95853f1c5801',
          'isActive': true,
          'balance': '$3,623.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Harrell Gaines',
          'gender': 'male',
          'company': 'Namebox',
          'email': 'harrellgaines@namebox.com',
          'phone': '+1 (902) 410-2375',
          'address': {
            'street': 639,
            'city': 'Jackpot',
            'state': 'Virginia',
            'zip': 4822
          },
          'about': 'Magna non sit laboris amet Lorem occaecat tempor aute cillum ut dolore dolor pariatur. Amet consequat id consequat id esse aliquip. Irure anim ex veniam aliquip magna aute velit qui duis minim.\r\n',
          'registered': '1998-08-08T13:08:45+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Beatriz Lancaster'
            },
            {
              'id': 1,
              'name': 'Cora Lawrence'
            },
            {
              'id': 2,
              'name': 'Elva Pate'
            }
          ]
        },
        {
          'id': 7,
          'guid': '7e7aba67-7562-4bea-9a16-86108f41b4b4',
          'isActive': true,
          'balance': '$2,731.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Christensen Wall',
          'gender': 'male',
          'company': 'Elentrix',
          'email': 'christensenwall@elentrix.com',
          'phone': '+1 (985) 594-3954',
          'address': {
            'street': 510,
            'city': 'Vandiver',
            'state': 'Colorado',
            'zip': 5384
          },
          'about': 'Est quis nostrud elit sint commodo consectetur ea ullamco tempor voluptate veniam reprehenderit. Elit Lorem aliqua dolore commodo officia labore. Cupidatat proident qui ullamco in cillum.\r\n',
          'registered': '1992-06-19T22:03:28+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Olsen Rosario'
            },
            {
              'id': 1,
              'name': 'Janelle Mcintosh'
            },
            {
              'id': 2,
              'name': 'Dorothy Gallegos'
            }
          ]
        },
        {
          'id': 8,
          'guid': '8345f097-17d7-4a8d-8f16-dffbb92dab55',
          'isActive': false,
          'balance': '$1,971.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Solomon Flowers',
          'gender': 'male',
          'company': 'Bizmatic',
          'email': 'solomonflowers@bizmatic.com',
          'phone': '+1 (815) 587-2364',
          'address': {
            'street': 834,
            'city': 'Edmund',
            'state': 'Wisconsin',
            'zip': 6804
          },
          'about': 'Deserunt cillum consectetur do irure aliqua non. Velit sunt incididunt consectetur pariatur Lorem. Exercitation eiusmod esse fugiat occaecat cillum in. Reprehenderit Lorem proident anim amet incididunt laborum. Enim ex eiusmod cillum occaecat cillum dolor non sunt nostrud enim occaecat duis sit. Commodo commodo culpa amet dolore Lorem ipsum nulla adipisicing quis. In Lorem ad ipsum non voluptate exercitation consectetur excepteur ipsum.\r\n',
          'registered': '2006-03-04T18:49:18+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mercedes Reed'
            },
            {
              'id': 1,
              'name': 'Anastasia Todd'
            },
            {
              'id': 2,
              'name': 'Alfreda Snyder'
            }
          ]
        },
        {
          'id': 9,
          'guid': 'aed7f3f9-e5e0-4d1e-88a7-94976095b01f',
          'isActive': true,
          'balance': '$1,291.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Flossie Davidson',
          'gender': 'female',
          'company': 'Marketoid',
          'email': 'flossiedavidson@marketoid.com',
          'phone': '+1 (831) 464-3405',
          'address': {
            'street': 969,
            'city': 'Linwood',
            'state': 'Connecticut',
            'zip': 9693
          },
          'about': 'Aute laboris amet officia anim. Tempor cillum laborum dolor fugiat sint minim ullamco nisi aliquip Lorem mollit eiusmod do. Excepteur culpa aute aute incididunt et tempor nulla officia nostrud.\r\n',
          'registered': '1991-12-27T21:30:00+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Doreen Pittman'
            },
            {
              'id': 1,
              'name': 'Baker Salinas'
            },
            {
              'id': 2,
              'name': 'Mcdowell Bryan'
            }
          ]
        },
        {
          'id': 10,
          'guid': 'aca740c5-e492-4254-a38e-da9a6e293a1e',
          'isActive': true,
          'balance': '$3,393.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Rodriquez Kent',
          'gender': 'male',
          'company': 'Telpod',
          'email': 'rodriquezkent@telpod.com',
          'phone': '+1 (918) 489-2703',
          'address': {
            'street': 186,
            'city': 'Succasunna',
            'state': 'North Carolina',
            'zip': 1844
          },
          'about': 'Magna do aliquip laboris laborum duis aute magna laborum dolore occaecat. Sit culpa tempor qui eiusmod tempor occaecat. Amet pariatur laboris do exercitation quis ipsum do.\r\n',
          'registered': '1996-12-30T13:14:49+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Perkins Kaufman'
            },
            {
              'id': 1,
              'name': 'Serena Solis'
            },
            {
              'id': 2,
              'name': 'Alyssa Mercer'
            }
          ]
        },
        {
          'id': 11,
          'guid': '09008245-6877-4181-badd-43a6a5099ae4',
          'isActive': true,
          'balance': '$3,880.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Lawson Meyer',
          'gender': 'male',
          'company': 'Fuelworks',
          'email': 'lawsonmeyer@fuelworks.com',
          'phone': '+1 (812) 451-2916',
          'address': {
            'street': 206,
            'city': 'Bladensburg',
            'state': 'Georgia',
            'zip': 2294
          },
          'about': 'Incididunt minim nulla excepteur voluptate labore ipsum reprehenderit occaecat qui duis minim aute amet. Do commodo magna incididunt anim in ipsum exercitation. Ipsum nostrud ipsum veniam aliquip irure nulla tempor quis. Voluptate magna in eu tempor sunt in sunt enim nisi duis pariatur anim consequat est.\r\n',
          'registered': '2007-03-15T12:15:01+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Howe Delgado'
            },
            {
              'id': 1,
              'name': 'Goldie Santana'
            },
            {
              'id': 2,
              'name': 'Fuentes Schneider'
            }
          ]
        },
        {
          'id': 12,
          'guid': '5014486c-fdf9-45f0-9f29-f3762180ce4d',
          'isActive': false,
          'balance': '$3,703.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Cheryl Mueller',
          'gender': 'female',
          'company': 'Hotcakes',
          'email': 'cherylmueller@hotcakes.com',
          'phone': '+1 (943) 425-3326',
          'address': {
            'street': 823,
            'city': 'Nipinnawasee',
            'state': 'Arkansas',
            'zip': 2742
          },
          'about': 'Irure ea dolor labore adipisicing. Duis pariatur aute enim aute veniam voluptate sint labore ipsum laborum. Cillum amet in occaecat labore ea. Aliqua ad eu elit duis qui cupidatat Lorem enim voluptate ipsum nostrud consectetur Lorem cillum.\r\n',
          'registered': '1995-10-20T09:33:29+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Durham Hewitt'
            },
            {
              'id': 1,
              'name': 'Kristie Hanson'
            },
            {
              'id': 2,
              'name': 'Susan Weiss'
            }
          ]
        },
        {
          'id': 13,
          'guid': '65903217-3e10-4aa3-ad58-8293c33bb573',
          'isActive': true,
          'balance': '$3,467.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Marci Gill',
          'gender': 'female',
          'company': 'Pawnagra',
          'email': 'marcigill@pawnagra.com',
          'phone': '+1 (971) 515-3892',
          'address': {
            'street': 337,
            'city': 'Osmond',
            'state': 'Delaware',
            'zip': 2131
          },
          'about': 'Consectetur dolore do cupidatat proident consectetur cillum elit commodo sit. Officia Lorem id laboris enim exercitation veniam est. Sunt laborum eu cupidatat nisi quis deserunt esse consectetur elit mollit esse. Elit eiusmod magna aliquip enim nostrud.\r\n',
          'registered': '2005-08-10T17:06:51+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Becky Gilliam'
            },
            {
              'id': 1,
              'name': 'Maynard Lyons'
            },
            {
              'id': 2,
              'name': 'Delaney Goodwin'
            }
          ]
        },
        {
          'id': 14,
          'guid': '20b311d2-6eb8-4863-b006-f0472b69b69c',
          'isActive': false,
          'balance': '$1,451.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Kelly Roy',
          'gender': 'female',
          'company': 'Aquazure',
          'email': 'kellyroy@aquazure.com',
          'phone': '+1 (893) 541-3485',
          'address': {
            'street': 676,
            'city': 'Marbury',
            'state': 'Alabama',
            'zip': 9686
          },
          'about': 'Amet anim dolor ipsum sunt. Deserunt occaecat esse Lorem ad non consequat id dolore fugiat proident nulla mollit deserunt nulla. Eu exercitation amet laboris qui Lorem velit Lorem magna exercitation elit in nulla magna. Eu officia eu sint do consectetur mollit et fugiat sint tempor Lorem deserunt. Duis incididunt cillum incididunt adipisicing velit enim ad laborum ut ullamco quis irure nulla. Ex dolor exercitation nisi reprehenderit dolor. Laboris eiusmod ullamco aliqua adipisicing occaecat.\r\n',
          'registered': '1992-05-29T18:15:10+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Garner Combs'
            },
            {
              'id': 1,
              'name': 'Cervantes Rasmussen'
            },
            {
              'id': 2,
              'name': 'Solis Fuller'
            }
          ]
        },
        {
          'id': 15,
          'guid': '78d84243-9477-4ee1-8383-6926c9738e04',
          'isActive': true,
          'balance': '$2,835.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Sparks Berger',
          'gender': 'male',
          'company': 'Squish',
          'email': 'sparksberger@squish.com',
          'phone': '+1 (813) 469-3191',
          'address': {
            'street': 163,
            'city': 'Wedgewood',
            'state': 'South Dakota',
            'zip': 3203
          },
          'about': 'Et dolore duis fugiat sunt excepteur. Ipsum eiusmod occaecat irure consequat aute. Incididunt exercitation nostrud occaecat dolor eu aliqua aliquip fugiat occaecat sit minim do commodo enim. Mollit et sit exercitation occaecat esse reprehenderit culpa.\r\n',
          'registered': '2011-07-26T15:48:47+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Peterson Workman'
            },
            {
              'id': 1,
              'name': 'Lynch Ross'
            },
            {
              'id': 2,
              'name': 'Dyer Whitfield'
            }
          ]
        },
        {
          'id': 16,
          'guid': '36d0a6d5-9c20-4565-a562-cb5f78f0f4b4',
          'isActive': true,
          'balance': '$3,108.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Annie Orr',
          'gender': 'female',
          'company': 'Lunchpod',
          'email': 'annieorr@lunchpod.com',
          'phone': '+1 (805) 533-2734',
          'address': {
            'street': 997,
            'city': 'Trinway',
            'state': 'Louisiana',
            'zip': 6555
          },
          'about': 'Nostrud pariatur laboris sint eiusmod consectetur enim minim elit commodo laboris sunt tempor. Magna laborum consequat voluptate consectetur eiusmod. Irure duis ea ipsum voluptate laboris Lorem ad consectetur aliquip reprehenderit enim.\r\n',
          'registered': '2012-03-09T22:44:11+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Gray Bush'
            },
            {
              'id': 1,
              'name': 'Agnes Washington'
            },
            {
              'id': 2,
              'name': 'Zimmerman Alexander'
            }
          ]
        },
        {
          'id': 17,
          'guid': '881ad6a4-3057-43d9-a0f4-d06f9110c843',
          'isActive': true,
          'balance': '$1,481.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Carissa Bender',
          'gender': 'female',
          'company': 'Pearlessa',
          'email': 'carissabender@pearlessa.com',
          'phone': '+1 (828) 447-2266',
          'address': {
            'street': 212,
            'city': 'Datil',
            'state': 'New Hampshire',
            'zip': 3936
          },
          'about': 'Anim sint ad pariatur proident occaecat sunt. Ipsum sit sit magna enim Lorem commodo consectetur nisi mollit aliquip ipsum qui laborum incididunt. Adipisicing duis cupidatat commodo fugiat ex deserunt ad non. Cillum voluptate laborum cupidatat dolor do aliquip veniam dolor est labore id quis enim anim.\r\n',
          'registered': '2006-09-13T10:39:16+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Willie Graves'
            },
            {
              'id': 1,
              'name': 'Hansen Irwin'
            },
            {
              'id': 2,
              'name': 'Thornton Oconnor'
            }
          ]
        },
        {
          'id': 18,
          'guid': '8996dab7-a8b7-41fc-be45-324404d58d0c',
          'isActive': false,
          'balance': '$1,324.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Michelle Huffman',
          'gender': 'female',
          'company': 'Aquasseur',
          'email': 'michellehuffman@aquasseur.com',
          'phone': '+1 (809) 470-2888',
          'address': {
            'street': 491,
            'city': 'Winfred',
            'state': 'Florida',
            'zip': 1292
          },
          'about': 'Amet et minim occaecat consequat cillum laboris laboris cillum consectetur commodo aliquip. Mollit laboris nulla est reprehenderit. Velit laboris occaecat nisi irure mollit et enim id duis sint incididunt.\r\n',
          'registered': '2004-09-21T16:54:39+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Wise Calderon'
            },
            {
              'id': 1,
              'name': 'Jennie Whitehead'
            },
            {
              'id': 2,
              'name': 'Weeks Guthrie'
            }
          ]
        },
        {
          'id': 19,
          'guid': '55f535af-d174-4063-ba76-7023d945f7a3',
          'isActive': false,
          'balance': '$1,019.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Caroline Kirkland',
          'gender': 'female',
          'company': 'Boilicon',
          'email': 'carolinekirkland@boilicon.com',
          'phone': '+1 (941) 521-3591',
          'address': {
            'street': 285,
            'city': 'Mansfield',
            'state': 'Nevada',
            'zip': 9715
          },
          'about': 'Ea commodo Lorem pariatur qui velit est ipsum qui non eiusmod esse. Irure velit ipsum tempor qui irure nostrud amet ad consequat eu consectetur in exercitation. Cupidatat exercitation duis sint occaecat et. Incididunt elit Lorem consequat eiusmod pariatur dolor. Officia non occaecat excepteur irure officia labore exercitation ea dolore ea id aute sit fugiat.\r\n',
          'registered': '1991-06-20T23:43:39+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Wheeler Bond'
            },
            {
              'id': 1,
              'name': 'Tiffany Baker'
            },
            {
              'id': 2,
              'name': 'Jenna Odom'
            }
          ]
        },
        {
          'id': 20,
          'guid': '8cfc70b1-30f1-4ddc-a70b-01bb399f62c5',
          'isActive': false,
          'balance': '$3,591.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Mcclain Pope',
          'gender': 'male',
          'company': 'Zork',
          'email': 'mcclainpope@zork.com',
          'phone': '+1 (832) 490-3175',
          'address': {
            'street': 727,
            'city': 'Motley',
            'state': 'Montana',
            'zip': 7714
          },
          'about': 'Non quis do enim occaecat nostrud veniam aute sunt cupidatat dolor proident consequat nulla. Exercitation et quis nostrud consequat magna sit commodo. Ut cupidatat ea tempor aliqua sint Lorem. Ea consequat pariatur veniam fugiat quis et ullamco commodo anim eiusmod ex occaecat cupidatat. Mollit officia cupidatat ad ut aliquip irure esse incididunt et commodo.\r\n',
          'registered': '1991-08-13T16:09:19+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Chandra Merrill'
            },
            {
              'id': 1,
              'name': 'Ella Burton'
            },
            {
              'id': 2,
              'name': 'Lewis Burt'
            }
          ]
        },
        {
          'id': 21,
          'guid': '7626cead-abce-4a91-a4a8-ef429d4e5fe2',
          'isActive': true,
          'balance': '$1,389.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Gladys Rivas',
          'gender': 'female',
          'company': 'Repetwire',
          'email': 'gladysrivas@repetwire.com',
          'phone': '+1 (959) 453-2419',
          'address': {
            'street': 933,
            'city': 'Vallonia',
            'state': 'West Virginia',
            'zip': 5349
          },
          'about': 'Non sit est excepteur magna dolore consectetur ut tempor. Voluptate occaecat id est duis tempor et irure enim. Id nisi dolore sunt incididunt eiusmod proident irure. Labore consectetur veniam adipisicing anim labore qui ullamco ad exercitation incididunt dolore. Aute anim ea reprehenderit anim reprehenderit labore culpa. Adipisicing magna velit reprehenderit magna reprehenderit. Aute excepteur excepteur ipsum cupidatat consectetur nisi exercitation reprehenderit mollit sit amet nulla mollit sit.\r\n',
          'registered': '1996-02-02T19:45:02+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Deidre Francis'
            },
            {
              'id': 1,
              'name': 'Dixon Morrow'
            },
            {
              'id': 2,
              'name': 'Talley Vasquez'
            }
          ]
        },
        {
          'id': 22,
          'guid': 'f389226a-e1d7-4f4e-9cc9-469e72500dbe',
          'isActive': true,
          'balance': '$3,230.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Pickett Britt',
          'gender': 'male',
          'company': 'Filodyne',
          'email': 'pickettbritt@filodyne.com',
          'phone': '+1 (935) 509-2267',
          'address': {
            'street': 806,
            'city': 'Longbranch',
            'state': 'Oregon',
            'zip': 4795
          },
          'about': 'Minim fugiat sit sit adipisicing mollit deserunt anim consectetur consequat ullamco anim veniam nostrud. Anim anim exercitation qui commodo. Amet sunt non ad in ipsum fugiat ipsum dolor aute aute culpa minim. Pariatur laborum nulla sunt consectetur commodo enim consequat excepteur ad est veniam. Quis duis adipisicing eu aute ad laboris laborum occaecat tempor voluptate.\r\n',
          'registered': '2010-04-04T02:24:05+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Garrett House'
            },
            {
              'id': 1,
              'name': 'Vaughn Haynes'
            },
            {
              'id': 2,
              'name': 'Esmeralda England'
            }
          ]
        },
        {
          'id': 23,
          'guid': 'ffde4469-85e9-4f87-a956-b91ccd4a33af',
          'isActive': true,
          'balance': '$3,646.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Ann Carrillo',
          'gender': 'female',
          'company': 'Nimon',
          'email': 'anncarrillo@nimon.com',
          'phone': '+1 (852) 577-3425',
          'address': {
            'street': 382,
            'city': 'Mappsville',
            'state': 'Arizona',
            'zip': 3617
          },
          'about': 'Reprehenderit nostrud commodo laborum commodo voluptate cupidatat veniam minim sit Lorem. Cupidatat laborum labore nulla adipisicing aliqua consectetur ut irure veniam. Mollit deserunt ad proident sunt officia aliqua nisi. Consequat aliqua et reprehenderit qui labore ullamco magna enim sit exercitation cillum culpa duis.\r\n',
          'registered': '1997-10-19T02:13:37+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Owen Black'
            },
            {
              'id': 1,
              'name': 'Amber Fischer'
            },
            {
              'id': 2,
              'name': 'Amie Eaton'
            }
          ]
        },
        {
          'id': 24,
          'guid': '6692f76c-8a2e-47df-b24d-a545dffbd626',
          'isActive': true,
          'balance': '$3,461.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Glover Shaffer',
          'gender': 'male',
          'company': 'Aeora',
          'email': 'glovershaffer@aeora.com',
          'phone': '+1 (861) 600-2289',
          'address': {
            'street': 702,
            'city': 'Harrodsburg',
            'state': 'Vermont',
            'zip': 3324
          },
          'about': 'Qui aute quis exercitation aute dolore ea sit veniam excepteur sint aute commodo. Est minim ea reprehenderit sit cupidatat. Nisi esse adipisicing esse elit consequat laborum. Sint Lorem ullamco nisi ipsum magna laborum magna ad adipisicing excepteur excepteur elit. Laboris veniam veniam ullamco laboris.\r\n',
          'registered': '2006-11-04T07:28:54+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Kelli Head'
            },
            {
              'id': 1,
              'name': 'Jeannine Romero'
            },
            {
              'id': 2,
              'name': 'Pate Rollins'
            }
          ]
        },
        {
          'id': 25,
          'guid': '1eafb0d1-e190-4aa8-a1f9-061eccedae62',
          'isActive': true,
          'balance': '$1,019.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Avery Adams',
          'gender': 'male',
          'company': 'Bolax',
          'email': 'averyadams@bolax.com',
          'phone': '+1 (833) 568-3176',
          'address': {
            'street': 186,
            'city': 'Siglerville',
            'state': 'Iowa',
            'zip': 3639
          },
          'about': 'Cillum irure non excepteur tempor nisi magna ea cupidatat. Anim laboris labore anim aliqua aute incididunt ea deserunt dolor fugiat. Laborum duis esse elit adipisicing pariatur Lorem consequat. Do excepteur mollit cupidatat mollit proident reprehenderit ipsum est ad.\r\n',
          'registered': '2012-07-14T23:27:18+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Eaton Potter'
            },
            {
              'id': 1,
              'name': 'Blair Dominguez'
            },
            {
              'id': 2,
              'name': 'Heidi Savage'
            }
          ]
        },
        {
          'id': 26,
          'guid': 'bfbdf4ca-034e-4022-9745-f8fd5cc57386',
          'isActive': false,
          'balance': '$1,911.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Whitley Maddox',
          'gender': 'male',
          'company': 'Quailcom',
          'email': 'whitleymaddox@quailcom.com',
          'phone': '+1 (802) 570-2659',
          'address': {
            'street': 225,
            'city': 'Fidelis',
            'state': 'New York',
            'zip': 4962
          },
          'about': 'Cillum consequat reprehenderit exercitation aliquip sunt. Tempor excepteur cupidatat incididunt ut nisi reprehenderit. Est deserunt nulla ullamco sit aliqua nulla eiusmod eiusmod elit. Ea esse et nisi magna voluptate amet id esse enim mollit. Velit adipisicing duis dolor exercitation consectetur commodo mollit sunt do sunt commodo. Irure id amet minim mollit laboris.\r\n',
          'registered': '2010-03-03T16:09:59+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Jeannie Pollard'
            },
            {
              'id': 1,
              'name': 'Gretchen Griffin'
            },
            {
              'id': 2,
              'name': 'Leticia Bradley'
            }
          ]
        },
        {
          'id': 27,
          'guid': 'c14fe44e-020a-42cf-8589-8a3ce0245316',
          'isActive': false,
          'balance': '$3,291.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Harris Cain',
          'gender': 'male',
          'company': 'Dancity',
          'email': 'harriscain@dancity.com',
          'phone': '+1 (894) 491-2850',
          'address': {
            'street': 272,
            'city': 'Colton',
            'state': 'Michigan',
            'zip': 2740
          },
          'about': 'Magna veniam id minim qui ea est commodo dolor nulla laboris. Irure mollit ad incididunt consequat enim ex veniam consequat dolor cupidatat. Cillum amet consectetur consectetur non irure. Ea ullamco do est qui do. Anim ut aliquip ad ea elit deserunt ea sunt velit.\r\n',
          'registered': '1998-03-04T16:55:11+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Pitts Daugherty'
            },
            {
              'id': 1,
              'name': 'Angie Bright'
            },
            {
              'id': 2,
              'name': 'Twila Holt'
            }
          ]
        },
        {
          'id': 28,
          'guid': '6b954b89-7932-433b-8b7f-88cf2a18316e',
          'isActive': true,
          'balance': '$2,313.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Ramos Garner',
          'gender': 'male',
          'company': 'Kyaguru',
          'email': 'ramosgarner@kyaguru.com',
          'phone': '+1 (955) 474-2021',
          'address': {
            'street': 725,
            'city': 'Cressey',
            'state': 'Mississippi',
            'zip': 1260
          },
          'about': 'Nostrud elit id sit laborum cillum. Amet aliquip mollit ea veniam. Ex tempor mollit ex aliquip in. Ea ullamco commodo eu sint amet nisi reprehenderit id aliquip. Eiusmod ipsum duis mollit magna aliquip qui aliquip. Cillum et laboris fugiat mollit ipsum ad esse proident proident. Nisi fugiat ipsum incididunt do eiusmod tempor velit fugiat ullamco sint quis occaecat tempor.\r\n',
          'registered': '1994-05-09T21:35:57+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Eva Hines'
            },
            {
              'id': 1,
              'name': 'Nancy Quinn'
            },
            {
              'id': 2,
              'name': 'Craig Stewart'
            }
          ]
        },
        {
          'id': 29,
          'guid': 'd214a8fd-6bc6-4f40-a260-b7843c885d9a',
          'isActive': true,
          'balance': '$3,455.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Hanson Cooke',
          'gender': 'male',
          'company': 'Baluba',
          'email': 'hansoncooke@baluba.com',
          'phone': '+1 (911) 401-2909',
          'address': {
            'street': 334,
            'city': 'Machias',
            'state': 'Utah',
            'zip': 4910
          },
          'about': 'Aute anim duis officia do sit irure ea do ex ea veniam ut aute. Ut ex officia culpa cupidatat ea aliqua nulla reprehenderit reprehenderit nisi. Est eu duis cillum cillum. Nisi qui Lorem anim sunt ea. Cillum nostrud est sint minim consequat id ea deserunt. Exercitation consequat pariatur in tempor sint aliquip qui sit nostrud.\r\n',
          'registered': '1998-12-12T03:11:02+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Rosales Villarreal'
            },
            {
              'id': 1,
              'name': 'Clayton Dawson'
            },
            {
              'id': 2,
              'name': 'Lottie Solomon'
            }
          ]
        },
        {
          'id': 30,
          'guid': '5c0c5c68-ea8e-4e28-907c-bdf4bc984730',
          'isActive': true,
          'balance': '$1,735.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Flora Perry',
          'gender': 'female',
          'company': 'Jimbies',
          'email': 'floraperry@jimbies.com',
          'phone': '+1 (865) 537-2581',
          'address': {
            'street': 665,
            'city': 'Kieler',
            'state': 'Texas',
            'zip': 8491
          },
          'about': 'Cillum esse culpa laboris ut elit veniam irure elit culpa ipsum fugiat aute. Officia dolore adipisicing deserunt laboris mollit do sunt id. Amet commodo ad quis dolore.\r\n',
          'registered': '1991-01-25T16:15:43+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Schmidt Osborne'
            },
            {
              'id': 1,
              'name': 'Camille Mckinney'
            },
            {
              'id': 2,
              'name': 'Stacie Murray'
            }
          ]
        },
        {
          'id': 31,
          'guid': 'c63d9a6e-d77e-44aa-8344-094f890d37e6',
          'isActive': false,
          'balance': '$1,443.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Laura Luna',
          'gender': 'female',
          'company': 'Eclipsent',
          'email': 'lauraluna@eclipsent.com',
          'phone': '+1 (940) 595-2216',
          'address': {
            'street': 803,
            'city': 'Whitehaven',
            'state': 'North Dakota',
            'zip': 630
          },
          'about': 'Sit ut et elit fugiat non aute. Est magna eiusmod id minim voluptate qui sunt. Commodo quis adipisicing dolore in ullamco officia aute sit voluptate esse nostrud nostrud dolore reprehenderit.\r\n',
          'registered': '1996-10-16T13:48:59+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Griffin Craig'
            },
            {
              'id': 1,
              'name': 'Odom Cross'
            },
            {
              'id': 2,
              'name': 'Linda Hendricks'
            }
          ]
        },
        {
          'id': 32,
          'guid': '140792fb-87f9-416a-ba2d-14b783a31c3c',
          'isActive': false,
          'balance': '$3,734.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Singleton Lowery',
          'gender': 'male',
          'company': 'Isologica',
          'email': 'singletonlowery@isologica.com',
          'phone': '+1 (994) 418-2085',
          'address': {
            'street': 805,
            'city': 'Haena',
            'state': 'South Carolina',
            'zip': 5655
          },
          'about': 'Reprehenderit sit do tempor fugiat sunt proident tempor anim magna velit fugiat quis. Et veniam labore aliqua eu nisi nulla aute in consequat exercitation consequat nisi. Ad elit tempor laboris et laboris do voluptate enim pariatur veniam.\r\n',
          'registered': '2009-04-28T14:27:38+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Terrie Welch'
            },
            {
              'id': 1,
              'name': 'Bradley Sims'
            },
            {
              'id': 2,
              'name': 'Phillips Mcfadden'
            }
          ]
        },
        {
          'id': 33,
          'guid': '33fa1014-43d4-4b11-8031-399fc48893a7',
          'isActive': true,
          'balance': '$1,146.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Tillman Carson',
          'gender': 'male',
          'company': 'Comcubine',
          'email': 'tillmancarson@comcubine.com',
          'phone': '+1 (827) 522-2239',
          'address': {
            'street': 193,
            'city': 'Spelter',
            'state': 'Nebraska',
            'zip': 1858
          },
          'about': 'Aliquip labore pariatur pariatur sint eiusmod dolor et enim eu officia minim sit adipisicing. Anim pariatur sunt magna aute voluptate fugiat labore est amet magna pariatur sit. Ipsum consectetur sit officia fugiat labore cupidatat.\r\n',
          'registered': '2005-08-16T04:37:46+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Paige Sellers'
            },
            {
              'id': 1,
              'name': 'Leigh Charles'
            },
            {
              'id': 2,
              'name': 'Cabrera Ayala'
            }
          ]
        },
        {
          'id': 34,
          'guid': 'b9d1897a-cb27-4f25-b6e2-eea13d7de088',
          'isActive': false,
          'balance': '$2,423.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Francis Deleon',
          'gender': 'female',
          'company': 'Ebidco',
          'email': 'francisdeleon@ebidco.com',
          'phone': '+1 (846) 453-2087',
          'address': {
            'street': 388,
            'city': 'Cartwright',
            'state': 'New Jersey',
            'zip': 4016
          },
          'about': 'Nulla dolor et ut fugiat labore. Ea aliquip in ex ex laborum. Dolore minim nulla sit cupidatat incididunt esse nulla culpa aliqua et reprehenderit. Eiusmod ex quis aliqua eiusmod. Aute nisi excepteur culpa reprehenderit.\r\n',
          'registered': '2013-05-28T20:34:57+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Carlson Figueroa'
            },
            {
              'id': 1,
              'name': 'Webb Larsen'
            },
            {
              'id': 2,
              'name': 'Dorothea Wooten'
            }
          ]
        },
        {
          'id': 35,
          'guid': '4e7a5262-b1d5-479d-a6df-32a457024800',
          'isActive': false,
          'balance': '$2,854.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Alston Lloyd',
          'gender': 'male',
          'company': 'Menbrain',
          'email': 'alstonlloyd@menbrain.com',
          'phone': '+1 (886) 518-3247',
          'address': {
            'street': 345,
            'city': 'Stonybrook',
            'state': 'Indiana',
            'zip': 9728
          },
          'about': 'Ut in nostrud qui consequat minim ea tempor do id. Elit aliqua excepteur ut elit aliqua commodo et in mollit dolor mollit deserunt sit dolore. Mollit deserunt veniam voluptate pariatur laborum nostrud aute ullamco mollit occaecat aute sunt.\r\n',
          'registered': '1999-10-28T05:02:16+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mollie Lee'
            },
            {
              'id': 1,
              'name': 'Wilcox Kinney'
            },
            {
              'id': 2,
              'name': 'Louisa Smith'
            }
          ]
        },
        {
          'id': 36,
          'guid': '50fd8949-8a9a-4840-aaa5-f57c421d683a',
          'isActive': true,
          'balance': '$2,079.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Susana Dejesus',
          'gender': 'female',
          'company': 'Nixelt',
          'email': 'susanadejesus@nixelt.com',
          'phone': '+1 (938) 550-3084',
          'address': {
            'street': 687,
            'city': 'Byrnedale',
            'state': 'Wyoming',
            'zip': 6054
          },
          'about': 'Et nulla do do adipisicing eiusmod ut mollit sunt est excepteur. Magna duis nulla minim tempor velit officia. Anim tempor amet labore veniam. Cillum reprehenderit ut dolore ut cupidatat amet Lorem irure eiusmod eiusmod et sunt minim. Veniam veniam nulla ea in et mollit ullamco deserunt anim voluptate. Consequat sit occaecat irure Lorem laborum qui magna consequat pariatur proident.\r\n',
          'registered': '2001-07-28T08:40:28+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Lily Sheppard'
            },
            {
              'id': 1,
              'name': 'Antonia Clemons'
            },
            {
              'id': 2,
              'name': 'Kristine Albert'
            }
          ]
        },
        {
          'id': 37,
          'guid': '0eecbe31-ae4d-41d2-95c8-9a7239748018',
          'isActive': true,
          'balance': '$3,576.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Melanie Butler',
          'gender': 'female',
          'company': 'Satiance',
          'email': 'melaniebutler@satiance.com',
          'phone': '+1 (896) 486-3851',
          'address': {
            'street': 866,
            'city': 'Irwin',
            'state': 'Kansas',
            'zip': 9758
          },
          'about': 'Laborum et non adipisicing enim. Non labore dolor adipisicing irure qui pariatur. Sunt ad consequat consequat magna enim in elit in. Duis reprehenderit irure nulla est velit est adipisicing voluptate quis qui velit labore ad. Minim esse aliquip quis Lorem amet commodo aute amet sunt sunt commodo Lorem ullamco. Ad Lorem ullamco elit est exercitation magna et.\r\n',
          'registered': '1990-09-16T09:14:54+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Tracie Harvey'
            },
            {
              'id': 1,
              'name': 'Kemp Odonnell'
            },
            {
              'id': 2,
              'name': 'Deleon Spears'
            }
          ]
        },
        {
          'id': 38,
          'guid': '0beb9d8a-7801-4557-a917-73639484cf22',
          'isActive': false,
          'balance': '$1,718.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Kathy Knowles',
          'gender': 'female',
          'company': 'Bunga',
          'email': 'kathyknowles@bunga.com',
          'phone': '+1 (833) 547-2147',
          'address': {
            'street': 866,
            'city': 'Avalon',
            'state': 'Massachusetts',
            'zip': 640
          },
          'about': 'Esse fugiat voluptate exercitation sunt. Deserunt do incididunt nostrud est est Lorem deserunt adipisicing officia. Elit labore commodo est nostrud culpa amet amet exercitation irure veniam Lorem.\r\n',
          'registered': '1996-12-03T23:03:14+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Elsie Mcdaniel'
            },
            {
              'id': 1,
              'name': 'Luella Dale'
            },
            {
              'id': 2,
              'name': 'Riley Landry'
            }
          ]
        },
        {
          'id': 39,
          'guid': '04e916cb-ff19-40ea-acc2-6832e19879b9',
          'isActive': false,
          'balance': '$2,298.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Haley Case',
          'gender': 'female',
          'company': 'Eventix',
          'email': 'haleycase@eventix.com',
          'phone': '+1 (814) 466-3133',
          'address': {
            'street': 932,
            'city': 'Brandywine',
            'state': 'Ohio',
            'zip': 757
          },
          'about': 'Laboris sunt nostrud velit mollit ea labore excepteur anim duis. Elit consequat eu ea ipsum. Cillum duis cupidatat amet reprehenderit. Commodo commodo ullamco incididunt aliquip reprehenderit id labore ut mollit aliqua dolore cupidatat minim qui.\r\n',
          'registered': '2010-03-15T19:45:04+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'French Forbes'
            },
            {
              'id': 1,
              'name': 'Conner Conner'
            },
            {
              'id': 2,
              'name': 'Sheila Bentley'
            }
          ]
        },
        {
          'id': 40,
          'guid': 'da2d737e-fa3f-47b3-b08b-a387e14af16e',
          'isActive': true,
          'balance': '$1,219.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Knapp Singleton',
          'gender': 'male',
          'company': 'Kaggle',
          'email': 'knappsingleton@kaggle.com',
          'phone': '+1 (977) 417-3304',
          'address': {
            'street': 496,
            'city': 'Dunnavant',
            'state': 'New Mexico',
            'zip': 2885
          },
          'about': 'Do occaecat minim esse culpa adipisicing proident et est nulla ipsum anim dolor voluptate et. Sunt culpa ea pariatur laborum sunt sint nulla consectetur qui. Anim dolor mollit adipisicing pariatur voluptate est reprehenderit minim. Laborum laborum excepteur ullamco tempor incididunt quis id consequat aute est. Id culpa officia eu proident Lorem.\r\n',
          'registered': '1997-11-09T09:45:31+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Romero Cook'
            },
            {
              'id': 1,
              'name': 'Brock Dillon'
            },
            {
              'id': 2,
              'name': 'Warner Cantrell'
            }
          ]
        },
        {
          'id': 41,
          'guid': '5eafd295-20f5-4d35-b755-ce800b00f0c0',
          'isActive': false,
          'balance': '$2,247.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Lindsay Reilly',
          'gender': 'male',
          'company': 'Nurplex',
          'email': 'lindsayreilly@nurplex.com',
          'phone': '+1 (831) 568-3942',
          'address': {
            'street': 963,
            'city': 'Wattsville',
            'state': 'Hawaii',
            'zip': 8190
          },
          'about': 'Aliqua tempor enim est elit. Aliquip voluptate enim incididunt culpa est do. Magna cillum quis dolore cupidatat laborum.\r\n',
          'registered': '2003-08-26T21:42:50+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Franks Levy'
            },
            {
              'id': 1,
              'name': 'Elvira Holland'
            },
            {
              'id': 2,
              'name': 'Elisabeth Rowland'
            }
          ]
        },
        {
          'id': 42,
          'guid': 'b0ccd025-f823-4f5d-abc5-3b68f2e0e2c8',
          'isActive': true,
          'balance': '$1,788.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Snyder Snider',
          'gender': 'male',
          'company': 'Maximind',
          'email': 'snydersnider@maximind.com',
          'phone': '+1 (944) 470-2621',
          'address': {
            'street': 547,
            'city': 'Hondah',
            'state': 'Tennessee',
            'zip': 6902
          },
          'about': 'Culpa sit veniam Lorem mollit laboris ad aliqua labore esse officia incididunt aliqua. Et esse tempor magna in ad incididunt tempor minim id et occaecat est occaecat nostrud. Nostrud cillum non veniam dolore reprehenderit aute est nisi occaecat officia.\r\n',
          'registered': '2005-01-26T19:48:35+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Susanne Sherman'
            },
            {
              'id': 1,
              'name': 'Wall Leonard'
            },
            {
              'id': 2,
              'name': 'Fitzpatrick Shannon'
            }
          ]
        },
        {
          'id': 43,
          'guid': 'b191ff8e-bcf5-483c-bf53-be40bfdb05f0',
          'isActive': false,
          'balance': '$3,842.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Flores Rowe',
          'gender': 'male',
          'company': 'Digigen',
          'email': 'floresrowe@digigen.com',
          'phone': '+1 (817) 456-3028',
          'address': {
            'street': 655,
            'city': 'Lisco',
            'state': 'Washington',
            'zip': 8154
          },
          'about': 'Duis sit cillum irure elit veniam. Do ut esse ipsum occaecat Lorem qui eu ea ut deserunt aute elit. Sint labore qui dolor sunt ex occaecat ea proident laborum minim enim veniam.\r\n',
          'registered': '2002-02-07T13:40:17+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Skinner Finch'
            },
            {
              'id': 1,
              'name': 'Janell Dalton'
            },
            {
              'id': 2,
              'name': 'Mandy Estrada'
            }
          ]
        },
        {
          'id': 44,
          'guid': '07a65893-6f53-46a9-8e62-4250003de0d9',
          'isActive': true,
          'balance': '$2,138.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Haynes Woodward',
          'gender': 'male',
          'company': 'Flumbo',
          'email': 'hayneswoodward@flumbo.com',
          'phone': '+1 (805) 573-3161',
          'address': {
            'street': 926,
            'city': 'Manitou',
            'state': 'Idaho',
            'zip': 6356
          },
          'about': 'Enim fugiat cupidatat duis incididunt. Culpa esse nisi culpa consectetur eu laborum amet officia sit id voluptate voluptate. Ullamco enim commodo labore elit velit in. Incididunt veniam velit nostrud ut nulla mollit elit tempor sit. Laborum qui officia officia et deserunt laboris in esse ad nisi nisi. Nostrud dolore mollit excepteur nulla ut velit voluptate amet consectetur quis.\r\n',
          'registered': '1988-01-06T17:05:05+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Margery Caldwell'
            },
            {
              'id': 1,
              'name': 'Cathryn Marsh'
            },
            {
              'id': 2,
              'name': 'Francine Wolfe'
            }
          ]
        },
        {
          'id': 45,
          'guid': '2bd10e2d-669b-48d6-8c8e-c7ae73b3a5f6',
          'isActive': false,
          'balance': '$3,979.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Morgan Sanford',
          'gender': 'female',
          'company': 'Darwinium',
          'email': 'morgansanford@darwinium.com',
          'phone': '+1 (894) 444-2551',
          'address': {
            'street': 517,
            'city': 'Eden',
            'state': 'Illinois',
            'zip': 9068
          },
          'about': 'Id commodo sit ullamco ad. Duis fugiat occaecat cupidatat tempor mollit et. Est voluptate mollit nisi sit consequat sit amet. Voluptate aliquip fugiat esse mollit aute esse est ea consequat minim voluptate veniam.\r\n',
          'registered': '1998-12-13T11:20:50+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Reba Pace'
            },
            {
              'id': 1,
              'name': 'Tate Hendrix'
            },
            {
              'id': 2,
              'name': 'Terry Lott'
            }
          ]
        },
        {
          'id': 46,
          'guid': 'a7372f53-7b30-470b-a84f-3c1476b3e3a6',
          'isActive': false,
          'balance': '$1,721.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Gregory Reese',
          'gender': 'male',
          'company': 'Anacho',
          'email': 'gregoryreese@anacho.com',
          'phone': '+1 (939) 559-2659',
          'address': {
            'street': 609,
            'city': 'Elbert',
            'state': 'Missouri',
            'zip': 3362
          },
          'about': 'Pariatur sunt pariatur ea dolor id ut pariatur consequat. Cupidatat velit reprehenderit ut proident exercitation. Elit labore proident occaecat exercitation. Ad nisi in aute labore quis do.\r\n',
          'registered': '2008-08-25T12:10:41+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Wilma Bowman'
            },
            {
              'id': 1,
              'name': 'Bowers Chen'
            },
            {
              'id': 2,
              'name': 'Ortega Hodge'
            }
          ]
        },
        {
          'id': 47,
          'guid': '364e7dd7-fee4-4b85-b6ff-3bc7e3c9b99f',
          'isActive': false,
          'balance': '$2,463.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Gail Hammond',
          'gender': 'female',
          'company': 'Elemantra',
          'email': 'gailhammond@elemantra.com',
          'phone': '+1 (844) 439-2713',
          'address': {
            'street': 928,
            'city': 'Allendale',
            'state': 'Alaska',
            'zip': 3114
          },
          'about': 'Qui incididunt deserunt consequat veniam ex incididunt qui tempor non deserunt sint exercitation do minim. Cupidatat est exercitation aute non anim ut ullamco nisi dolore cillum eiusmod. Nulla id ad magna mollit qui sit non velit irure exercitation ipsum. Laborum fugiat reprehenderit sunt ex.\r\n',
          'registered': '1990-10-29T13:42:29+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Callie Palmer'
            },
            {
              'id': 1,
              'name': 'Amanda Lowe'
            },
            {
              'id': 2,
              'name': 'Alisha Hardy'
            }
          ]
        },
        {
          'id': 48,
          'guid': '4446cfa2-da6e-42dc-a91a-67a63e186378',
          'isActive': false,
          'balance': '$2,667.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Marquita Witt',
          'gender': 'female',
          'company': 'Xumonk',
          'email': 'marquitawitt@xumonk.com',
          'phone': '+1 (914) 591-2928',
          'address': {
            'street': 482,
            'city': 'Islandia',
            'state': 'California',
            'zip': 1402
          },
          'about': 'Esse ea culpa aliquip consectetur deserunt velit dolore sunt ullamco commodo fugiat cupidatat deserunt. Ad elit cillum ipsum enim eiusmod ex consequat do elit excepteur. Nisi aliqua et aliqua magna. Culpa est labore sunt consectetur incididunt ut incididunt fugiat magna. Esse anim non qui cupidatat dolor adipisicing proident et proident. Sint eu officia ad excepteur elit in eu ipsum irure. Irure non aliqua consectetur ea officia non ipsum quis elit non ea Lorem.\r\n',
          'registered': '2004-12-14T11:57:29+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Sanford Rocha'
            },
            {
              'id': 1,
              'name': 'Tara Berg'
            },
            {
              'id': 2,
              'name': 'Gamble Mayo'
            }
          ]
        },
        {
          'id': 49,
          'guid': 'd289ae6d-f97f-427b-9b38-6e75912aeeea',
          'isActive': false,
          'balance': '$2,000.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Rosemarie Norton',
          'gender': 'female',
          'company': 'Translink',
          'email': 'rosemarienorton@translink.com',
          'phone': '+1 (989) 575-3632',
          'address': {
            'street': 518,
            'city': 'Eagletown',
            'state': 'Wisconsin',
            'zip': 522
          },
          'about': 'Nisi aliquip cillum culpa dolor laborum et. Mollit sint in et veniam consequat aliqua tempor proident anim est cupidatat. Excepteur cupidatat dolore esse duis. Quis officia irure nulla proident. Est commodo labore id anim exercitation officia culpa.\r\n',
          'registered': '1998-10-13T16:52:13+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Lucia Colon'
            },
            {
              'id': 1,
              'name': 'Tia Richmond'
            },
            {
              'id': 2,
              'name': 'Freida Maddox'
            }
          ]
        },
        {
          'id': 50,
          'guid': '904049e1-c5ed-45c2-bd6c-cc461f3d8b16',
          'isActive': false,
          'balance': '$2,645.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Guerrero Lopez',
          'gender': 'male',
          'company': 'Techmania',
          'email': 'guerrerolopez@techmania.com',
          'phone': '+1 (894) 408-2426',
          'address': {
            'street': 974,
            'city': 'Vincent',
            'state': 'West Virginia',
            'zip': 9020
          },
          'about': 'Ut consectetur tempor laborum incididunt sunt commodo laboris dolor culpa id eiusmod culpa eu qui. Aliquip qui culpa Lorem irure enim dolore aliquip. Excepteur qui velit exercitation nisi exercitation excepteur dolor magna. Do ea irure nostrud est id ex velit Lorem irure nisi nostrud Lorem proident.\r\n',
          'registered': '2009-12-02T13:56:28+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Miranda Guerra'
            },
            {
              'id': 1,
              'name': 'Yesenia Sellers'
            },
            {
              'id': 2,
              'name': 'Deloris Barr'
            }
          ]
        },
        {
          'id': 51,
          'guid': '8c25311e-995d-4615-84fb-5c4d159dd523',
          'isActive': false,
          'balance': '$2,150.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Morse Mendoza',
          'gender': 'male',
          'company': 'Eyewax',
          'email': 'morsemendoza@eyewax.com',
          'phone': '+1 (881) 412-2829',
          'address': {
            'street': 158,
            'city': 'Mansfield',
            'state': 'Montana',
            'zip': 1153
          },
          'about': 'Velit Lorem aliquip est cillum commodo exercitation laboris non sit laboris nulla deserunt minim consectetur. Cillum culpa id quis sunt voluptate est laborum. Excepteur do fugiat amet officia officia magna excepteur ullamco ipsum veniam duis cillum. Sit culpa reprehenderit commodo qui et velit eiusmod mollit pariatur aliqua nostrud veniam Lorem occaecat.\r\n',
          'registered': '2008-08-29T09:54:48+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Hawkins Hood'
            },
            {
              'id': 1,
              'name': 'Jacobson Hinton'
            },
            {
              'id': 2,
              'name': 'Rae Byers'
            }
          ]
        },
        {
          'id': 52,
          'guid': 'ff4d3523-d595-4efc-8032-de493dd14d83',
          'isActive': false,
          'balance': '$1,553.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Bernadette Dorsey',
          'gender': 'female',
          'company': 'Zentia',
          'email': 'bernadettedorsey@zentia.com',
          'phone': '+1 (926) 599-2987',
          'address': {
            'street': 330,
            'city': 'Waikele',
            'state': 'Alabama',
            'zip': 8485
          },
          'about': 'Nulla velit occaecat non ad ullamco nostrud pariatur laborum Lorem commodo id ea. Commodo nostrud irure consequat Lorem ullamco laborum exercitation laborum. Cupidatat nisi eu elit esse commodo veniam sunt sunt magna consectetur sunt aute. Sint aute sit sint magna culpa officia. Est ad officia ad nisi nostrud consectetur sint. Et reprehenderit nostrud Lorem fugiat tempor consequat cupidatat mollit laboris.\r\n',
          'registered': '1999-04-09T01:39:51+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Debra Jackson'
            },
            {
              'id': 1,
              'name': 'Abigail Norris'
            },
            {
              'id': 2,
              'name': 'Riddle Murray'
            }
          ]
        },
        {
          'id': 53,
          'guid': '3643fe10-3aa9-41d5-8d12-4914421804d0',
          'isActive': true,
          'balance': '$2,459.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Valencia Poole',
          'gender': 'male',
          'company': 'Geekola',
          'email': 'valenciapoole@geekola.com',
          'phone': '+1 (824) 562-2593',
          'address': {
            'street': 964,
            'city': 'Skyland',
            'state': 'Florida',
            'zip': 8561
          },
          'about': 'Et dolore aliqua laboris non commodo nostrud velit sunt anim laborum ut laboris. In ex est in consectetur et et esse qui magna labore ad. Magna Lorem sunt nostrud reprehenderit eu ad qui occaecat mollit do. Ex nostrud et qui nulla consequat. Deserunt do adipisicing eiusmod commodo nisi laboris eiusmod. Dolor dolore dolor exercitation anim commodo quis excepteur.\r\n',
          'registered': '2011-06-14T11:37:53+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Herring Martin'
            },
            {
              'id': 1,
              'name': 'Horton Paul'
            },
            {
              'id': 2,
              'name': 'Foreman Cook'
            }
          ]
        },
        {
          'id': 54,
          'guid': '30edc68c-6eb7-47e2-837f-9335156cd08f',
          'isActive': false,
          'balance': '$2,628.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Santiago Thornton',
          'gender': 'male',
          'company': 'Aeora',
          'email': 'santiagothornton@aeora.com',
          'phone': '+1 (928) 405-3248',
          'address': {
            'street': 148,
            'city': 'Canterwood',
            'state': 'Texas',
            'zip': 7679
          },
          'about': 'Veniam est voluptate irure ut tempor duis duis labore. Cupidatat velit reprehenderit ex sint nulla proident esse dolor. Irure ad enim dolor do cillum do Lorem duis irure voluptate magna aliqua consequat voluptate. Nisi aute mollit ut officia id Lorem cupidatat quis dolore veniam ipsum.\r\n',
          'registered': '1999-07-01T01:39:53+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Tucker Oneil'
            },
            {
              'id': 1,
              'name': 'Kate Long'
            },
            {
              'id': 2,
              'name': 'Roxie Norton'
            }
          ]
        },
        {
          'id': 55,
          'guid': 'ed37360b-5356-4639-ab47-fbc0abc1860e',
          'isActive': true,
          'balance': '$1,957.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Ursula Velez',
          'gender': 'female',
          'company': 'Veraq',
          'email': 'ursulavelez@veraq.com',
          'phone': '+1 (887) 450-3179',
          'address': {
            'street': 726,
            'city': 'Galesville',
            'state': 'Pennsylvania',
            'zip': 3629
          },
          'about': 'Nisi exercitation in nisi nostrud officia ex ut laboris veniam minim dolor. Minim cillum nostrud aliquip ullamco et do dolor. Reprehenderit aute adipisicing officia sunt irure ex veniam sunt sunt. Excepteur amet aute ut quis culpa consectetur incididunt. Enim occaecat nulla duis consequat sint excepteur tempor adipisicing ipsum sint eu minim ut veniam. Elit enim ipsum proident exercitation aliquip.\r\n',
          'registered': '2011-11-13T09:25:32+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Holcomb Small'
            },
            {
              'id': 1,
              'name': 'Veronica Leblanc'
            },
            {
              'id': 2,
              'name': 'Elvia Snider'
            }
          ]
        },
        {
          'id': 56,
          'guid': '212510c8-d8ea-4ff1-9a99-e61c4aa5f8f3',
          'isActive': false,
          'balance': '$1,544.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Kelley Carlson',
          'gender': 'female',
          'company': 'Norsup',
          'email': 'kelleycarlson@norsup.com',
          'phone': '+1 (908) 437-3943',
          'address': {
            'street': 496,
            'city': 'Tonopah',
            'state': 'New Hampshire',
            'zip': 1935
          },
          'about': 'Eiusmod et sunt labore laboris cupidatat sint incididunt elit. Tempor reprehenderit aliquip exercitation commodo nostrud sint non Lorem exercitation sit tempor eu nulla reprehenderit. Ipsum commodo excepteur excepteur proident proident non consequat tempor cillum sit ea voluptate.\r\n',
          'registered': '2002-02-18T00:58:12+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Karen Hicks'
            },
            {
              'id': 1,
              'name': 'Sosa Robinson'
            },
            {
              'id': 2,
              'name': 'Fuentes Martinez'
            }
          ]
        },
        {
          'id': 57,
          'guid': 'd2ab2e12-548c-482d-a0e7-3e970377f12c',
          'isActive': false,
          'balance': '$1,783.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Twila Davenport',
          'gender': 'female',
          'company': 'Teraprene',
          'email': 'twiladavenport@teraprene.com',
          'phone': '+1 (997) 523-2336',
          'address': {
            'street': 477,
            'city': 'Trinway',
            'state': 'Nebraska',
            'zip': 4183
          },
          'about': 'Duis nostrud aliqua excepteur Lorem nisi eiusmod occaecat eu elit quis consequat consequat excepteur. Sint labore pariatur non voluptate. Anim culpa deserunt ex excepteur magna. Aute veniam velit laboris tempor dolor exercitation. Nisi aute dolor id minim occaecat laborum nostrud minim. Cillum mollit eiusmod consequat duis fugiat Lorem nisi Lorem ea Lorem cillum.\r\n',
          'registered': '2003-05-14T13:20:27+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Gabriela Myers'
            },
            {
              'id': 1,
              'name': 'Lyons Weiss'
            },
            {
              'id': 2,
              'name': 'Marietta Dodson'
            }
          ]
        },
        {
          'id': 58,
          'guid': '307bb1cf-351f-4442-b7f5-33225ec9b61c',
          'isActive': false,
          'balance': '$3,636.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Eunice Mcgowan',
          'gender': 'female',
          'company': 'Podunk',
          'email': 'eunicemcgowan@podunk.com',
          'phone': '+1 (961) 557-3704',
          'address': {
            'street': 387,
            'city': 'Clarksburg',
            'state': 'Hawaii',
            'zip': 7041
          },
          'about': 'Sint ullamco sunt mollit reprehenderit proident dolor id non occaecat commodo. Anim eiusmod eu laborum adipisicing qui esse tempor tempor duis do. Aliquip occaecat fugiat dolore deserunt fugiat. Consectetur mollit duis quis proident consectetur adipisicing incididunt veniam.\r\n',
          'registered': '2003-02-24T14:09:55+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Gay Burke'
            },
            {
              'id': 1,
              'name': 'Vargas Sykes'
            },
            {
              'id': 2,
              'name': 'Teresa Haney'
            }
          ]
        },
        {
          'id': 59,
          'guid': 'fee4256d-29d3-4e66-8236-51ef7ad9107f',
          'isActive': true,
          'balance': '$2,112.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Martinez Ferrell',
          'gender': 'male',
          'company': 'Cipromox',
          'email': 'martinezferrell@cipromox.com',
          'phone': '+1 (957) 434-2527',
          'address': {
            'street': 529,
            'city': 'Escondida',
            'state': 'Idaho',
            'zip': 1793
          },
          'about': 'Amet ad quis nisi proident veniam magna non. Pariatur occaecat mollit dolore do ea ad labore magna et eu nulla dolor mollit deserunt. Voluptate irure fugiat exercitation et non laborum exercitation. Esse ea qui elit qui aute minim sint anim qui. Quis aute velit ad ex amet amet voluptate sit veniam tempor esse tempor culpa laboris. Ullamco sunt ipsum voluptate ex esse velit exercitation aliquip. Velit deserunt id officia nisi duis anim est eiusmod do veniam elit ipsum Lorem.\r\n',
          'registered': '1994-07-13T20:52:59+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Inez Horn'
            },
            {
              'id': 1,
              'name': 'Williamson Gutierrez'
            },
            {
              'id': 2,
              'name': 'Porter Santiago'
            }
          ]
        },
        {
          'id': 60,
          'guid': 'e8faa7b5-1bb0-4d85-bfab-d409e279de15',
          'isActive': false,
          'balance': '$2,873.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Georgina Stanton',
          'gender': 'female',
          'company': 'Tropolis',
          'email': 'georginastanton@tropolis.com',
          'phone': '+1 (847) 434-2483',
          'address': {
            'street': 993,
            'city': 'Riceville',
            'state': 'Colorado',
            'zip': 9064
          },
          'about': 'Nulla tempor exercitation ipsum aute elit et magna nisi. Duis enim reprehenderit non est. Reprehenderit cupidatat fugiat adipisicing Lorem deserunt nostrud. Incididunt enim labore adipisicing anim et. Sit exercitation dolore do mollit irure ullamco laboris ea nisi enim mollit pariatur. Adipisicing sint velit sit fugiat commodo cillum non sint adipisicing amet. Laborum culpa tempor culpa et elit nostrud.\r\n',
          'registered': '2012-06-14T01:47:56+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Maude Schultz'
            },
            {
              'id': 1,
              'name': 'Laurel Nelson'
            },
            {
              'id': 2,
              'name': 'Mariana Bridges'
            }
          ]
        },
        {
          'id': 61,
          'guid': 'e0f8047b-9d4f-40f4-82dd-fa12e4961dfb',
          'isActive': false,
          'balance': '$3,723.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Lenore Sargent',
          'gender': 'female',
          'company': 'Aquacine',
          'email': 'lenoresargent@aquacine.com',
          'phone': '+1 (903) 593-3818',
          'address': {
            'street': 463,
            'city': 'Berwind',
            'state': 'Illinois',
            'zip': 4098
          },
          'about': 'Esse mollit ad elit mollit mollit. Dolore do Lorem occaecat ex. Deserunt id aliquip et anim incididunt laborum magna. Ipsum elit ad elit excepteur. Exercitation amet commodo consectetur esse mollit id commodo pariatur id. Ullamco tempor velit adipisicing amet ad magna sit.\r\n',
          'registered': '1988-11-12T16:15:17+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Pat Gilmore'
            },
            {
              'id': 1,
              'name': 'Maggie Atkinson'
            },
            {
              'id': 2,
              'name': 'Miles Lawrence'
            }
          ]
        },
        {
          'id': 62,
          'guid': 'cc501132-8ad1-4dba-91bf-19f3d9f7ff17',
          'isActive': true,
          'balance': '$1,543.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Jan Guzman',
          'gender': 'female',
          'company': 'Zytrac',
          'email': 'janguzman@zytrac.com',
          'phone': '+1 (809) 585-2088',
          'address': {
            'street': 381,
            'city': 'Martell',
            'state': 'North Carolina',
            'zip': 4000
          },
          'about': 'Lorem aliqua veniam nostrud consequat sint ad Lorem occaecat do non. Irure anim cupidatat eu veniam consequat consectetur qui enim duis aute esse adipisicing qui. Adipisicing quis exercitation ad Lorem occaecat est laborum ea ea quis cillum elit eu. Cillum aliquip duis mollit occaecat anim duis magna nisi.\r\n',
          'registered': '1993-12-07T04:26:20+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Edith Good'
            },
            {
              'id': 1,
              'name': 'Ellison Ortega'
            },
            {
              'id': 2,
              'name': 'Hines Green'
            }
          ]
        },
        {
          'id': 63,
          'guid': '38e1c58b-64b2-4ba9-8151-ac541a50010f',
          'isActive': false,
          'balance': '$3,430.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Larsen Ortiz',
          'gender': 'male',
          'company': 'Furnitech',
          'email': 'larsenortiz@furnitech.com',
          'phone': '+1 (868) 421-2159',
          'address': {
            'street': 648,
            'city': 'Beechmont',
            'state': 'Virginia',
            'zip': 7812
          },
          'about': 'Sunt duis incididunt fugiat sint. Sit cillum culpa cupidatat commodo sint adipisicing aliqua esse. Lorem nulla veniam enim adipisicing amet quis sit fugiat consequat amet aliquip.\r\n',
          'registered': '2008-12-01T03:19:23+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Jacqueline Lowe'
            },
            {
              'id': 1,
              'name': 'Lelia Vaughn'
            },
            {
              'id': 2,
              'name': 'Bernard Becker'
            }
          ]
        },
        {
          'id': 64,
          'guid': '0d194893-f02b-4746-b42c-2221c60c0b87',
          'isActive': false,
          'balance': '$2,589.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Traci Hobbs',
          'gender': 'female',
          'company': 'Prosely',
          'email': 'tracihobbs@prosely.com',
          'phone': '+1 (857) 551-3765',
          'address': {
            'street': 212,
            'city': 'Avoca',
            'state': 'Alaska',
            'zip': 8153
          },
          'about': 'Ad veniam nostrud occaecat enim reprehenderit commodo deserunt ipsum aliqua exercitation nostrud. Commodo esse proident cillum officia irure sunt. Labore labore exercitation amet cillum sunt est. Consequat velit amet nostrud sit sunt non quis incididunt ad nostrud. Amet pariatur voluptate minim non minim in nostrud labore fugiat nulla fugiat. Velit est quis reprehenderit sunt laboris consectetur.\r\n',
          'registered': '1997-02-05T11:20:29+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Colon Greer'
            },
            {
              'id': 1,
              'name': 'Andrea Brady'
            },
            {
              'id': 2,
              'name': 'Kelli Miller'
            }
          ]
        },
        {
          'id': 65,
          'guid': 'cecacc96-a4f7-406f-96cf-c92e95d58310',
          'isActive': true,
          'balance': '$1,983.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Phyllis Kidd',
          'gender': 'female',
          'company': 'Turnabout',
          'email': 'phylliskidd@turnabout.com',
          'phone': '+1 (962) 497-2199',
          'address': {
            'street': 280,
            'city': 'Yogaville',
            'state': 'Oregon',
            'zip': 2261
          },
          'about': 'Ex exercitation sit cupidatat commodo ea sit. Non minim occaecat laboris qui enim eiusmod officia. Labore sint reprehenderit ea mollit dolor cupidatat ut sunt tempor anim enim.\r\n',
          'registered': '2003-12-13T07:21:22+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Vickie Cannon'
            },
            {
              'id': 1,
              'name': 'Norris Lamb'
            },
            {
              'id': 2,
              'name': 'Kerr Kinney'
            }
          ]
        },
        {
          'id': 66,
          'guid': '59777b45-c242-40c7-a5b6-6002fd50a207',
          'isActive': true,
          'balance': '$2,137.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Kellie Collins',
          'gender': 'female',
          'company': 'Kangle',
          'email': 'kelliecollins@kangle.com',
          'phone': '+1 (886) 594-2104',
          'address': {
            'street': 466,
            'city': 'Saranap',
            'state': 'Missouri',
            'zip': 9385
          },
          'about': 'Dolore amet ea et qui laborum ut quis aliquip nostrud exercitation eu veniam. Nisi ut velit incididunt adipisicing quis eu ex commodo. Irure minim dolor in velit proident ullamco. Est sint do anim magna elit nostrud ut eu. Eu aliqua nulla Lorem elit. Dolor ipsum velit magna dolor laboris dolore sit excepteur in do occaecat consequat.\r\n',
          'registered': '1993-10-24T20:41:38+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mcpherson Bowers'
            },
            {
              'id': 1,
              'name': 'Sears Meadows'
            },
            {
              'id': 2,
              'name': 'Short Barrett'
            }
          ]
        },
        {
          'id': 67,
          'guid': 'e2804e7e-5497-4a4a-8b52-cece17662c70',
          'isActive': true,
          'balance': '$3,457.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Lynne Lane',
          'gender': 'female',
          'company': 'Zogak',
          'email': 'lynnelane@zogak.com',
          'phone': '+1 (927) 486-2424',
          'address': {
            'street': 622,
            'city': 'Sussex',
            'state': 'Iowa',
            'zip': 7849
          },
          'about': 'Elit qui adipisicing commodo non in irure magna excepteur esse Lorem magna mollit consequat. Ut qui voluptate consequat do commodo aute cupidatat occaecat excepteur officia. Exercitation anim aliquip veniam deserunt nostrud do laborum. Sint excepteur non ut eiusmod.\r\n',
          'registered': '2000-07-27T03:34:05+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Jacquelyn Buck'
            },
            {
              'id': 1,
              'name': 'Sullivan Douglas'
            },
            {
              'id': 2,
              'name': 'Helen Beck'
            }
          ]
        },
        {
          'id': 68,
          'guid': '00d33efb-6dca-4d4a-baed-d8d83da7c518',
          'isActive': false,
          'balance': '$1,944.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Daisy Hamilton',
          'gender': 'female',
          'company': 'Pulze',
          'email': 'daisyhamilton@pulze.com',
          'phone': '+1 (943) 496-2065',
          'address': {
            'street': 188,
            'city': 'Lupton',
            'state': 'New Jersey',
            'zip': 333
          },
          'about': 'Ipsum ullamco ad ea eiusmod. Elit excepteur ut voluptate do cupidatat eu. Nisi excepteur ut nostrud sunt anim labore reprehenderit eu. Proident culpa ad incididunt reprehenderit consequat velit ea consectetur nisi labore excepteur. Consequat proident est ut sunt incididunt consectetur aliquip ullamco.\r\n',
          'registered': '1992-06-16T14:46:47+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Regina Dickson'
            },
            {
              'id': 1,
              'name': 'Villarreal Franks'
            },
            {
              'id': 2,
              'name': 'Beth Harvey'
            }
          ]
        },
        {
          'id': 69,
          'guid': '6f06db74-67bc-4370-8850-fd292fc126ef',
          'isActive': false,
          'balance': '$2,239.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Lambert Berger',
          'gender': 'male',
          'company': 'Zillatide',
          'email': 'lambertberger@zillatide.com',
          'phone': '+1 (880) 445-3824',
          'address': {
            'street': 783,
            'city': 'Brooktrails',
            'state': 'Massachusetts',
            'zip': 7045
          },
          'about': 'Proident ea mollit ea fugiat ea excepteur fugiat nisi velit dolor amet duis aliquip. Adipisicing anim fugiat velit velit do fugiat laboris ad veniam tempor officia eiusmod laborum ullamco. Reprehenderit elit sunt eiusmod duis cillum id labore. Cupidatat cupidatat laborum eu quis cupidatat ad pariatur tempor enim commodo aliqua mollit velit nulla. Fugiat voluptate duis labore aute reprehenderit culpa enim excepteur.\r\n',
          'registered': '2003-11-10T18:31:46+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Lakisha Stein'
            },
            {
              'id': 1,
              'name': 'Erica Daugherty'
            },
            {
              'id': 2,
              'name': 'Elisabeth Bowen'
            }
          ]
        },
        {
          'id': 70,
          'guid': '5c466742-5911-4527-b189-170091cb1974',
          'isActive': false,
          'balance': '$3,284.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Mabel Clayton',
          'gender': 'female',
          'company': 'Concility',
          'email': 'mabelclayton@concility.com',
          'phone': '+1 (984) 546-3693',
          'address': {
            'street': 312,
            'city': 'Smeltertown',
            'state': 'New Mexico',
            'zip': 6871
          },
          'about': 'Ut enim duis amet commodo cillum ipsum ut quis nostrud culpa cupidatat. Proident mollit irure aute adipisicing id sit ullamco culpa exercitation duis duis fugiat. Ipsum ea qui sunt mollit ad reprehenderit duis mollit nisi pariatur. Dolore velit non do sunt laboris eu commodo officia incididunt nostrud adipisicing cillum dolor duis. Velit reprehenderit tempor adipisicing magna aute dolor cupidatat sit eu sit ullamco labore. Quis laborum voluptate aute ad do.\r\n',
          'registered': '2009-02-02T02:55:29+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Blackburn Horton'
            },
            {
              'id': 1,
              'name': 'Jimenez Shannon'
            },
            {
              'id': 2,
              'name': 'Jacklyn Scott'
            }
          ]
        },
        {
          'id': 71,
          'guid': '7a944ae5-a567-47d4-98db-cd7dbdd3e284',
          'isActive': true,
          'balance': '$2,297.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Gardner Morin',
          'gender': 'male',
          'company': 'Letpro',
          'email': 'gardnermorin@letpro.com',
          'phone': '+1 (892) 527-2742',
          'address': {
            'street': 865,
            'city': 'Nile',
            'state': 'Louisiana',
            'zip': 5199
          },
          'about': 'Ea consectetur irure cillum dolore excepteur non ipsum proident ut est cillum magna. Voluptate laborum reprehenderit enim eiusmod nostrud laborum et culpa duis tempor sit enim ad. Irure amet laborum sit ullamco amet ad ex est sit. Dolore non velit aliqua ex ea enim ad proident mollit in id est. Elit aliqua sint ad ullamco veniam et esse esse. Cupidatat aute labore Lorem dolor laborum sunt est. Culpa minim elit laborum labore amet sunt excepteur adipisicing eiusmod amet in voluptate excepteur.\r\n',
          'registered': '2013-08-03T14:37:59+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Crosby Hurst'
            },
            {
              'id': 1,
              'name': 'Vanessa Strickland'
            },
            {
              'id': 2,
              'name': 'Vivian Estes'
            }
          ]
        },
        {
          'id': 72,
          'guid': '363541c9-7e6f-42b1-9f85-86febec215a7',
          'isActive': false,
          'balance': '$2,521.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Ortega Farley',
          'gender': 'male',
          'company': 'Myopium',
          'email': 'ortegafarley@myopium.com',
          'phone': '+1 (801) 475-2264',
          'address': {
            'street': 182,
            'city': 'Blue',
            'state': 'Connecticut',
            'zip': 4654
          },
          'about': 'Sit elit est ea labore nulla eu consequat eu exercitation in. Non nisi aliquip do cupidatat veniam labore aliqua fugiat sunt est deserunt elit culpa. Enim sunt irure anim sunt occaecat. Reprehenderit sit nostrud tempor fugiat cillum anim aliquip irure officia culpa ut nulla amet sit. Magna dolor nulla nisi in nisi. Excepteur ullamco amet minim veniam quis.\r\n',
          'registered': '1993-04-19T07:35:44+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Jenkins Sharp'
            },
            {
              'id': 1,
              'name': 'Stein Lott'
            },
            {
              'id': 2,
              'name': 'Katelyn Chavez'
            }
          ]
        },
        {
          'id': 73,
          'guid': '6dc52132-1fd8-47e2-8886-f876de3ae78b',
          'isActive': true,
          'balance': '$3,114.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Byers Rosa',
          'gender': 'male',
          'company': 'Rameon',
          'email': 'byersrosa@rameon.com',
          'phone': '+1 (868) 445-3783',
          'address': {
            'street': 699,
            'city': 'Montura',
            'state': 'Oklahoma',
            'zip': 5324
          },
          'about': 'Ullamco exercitation et minim incididunt exercitation incididunt cupidatat laboris labore consequat incididunt. Cupidatat do labore non ut enim elit dolor. Laborum amet nostrud nulla enim qui mollit in voluptate deserunt duis. Ad commodo enim minim elit officia aute veniam labore ea irure. Mollit nulla sit tempor et commodo non. Incididunt voluptate enim laboris amet aliqua aliquip officia irure quis esse dolore nisi excepteur.\r\n',
          'registered': '2007-02-08T21:57:14+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Kirkland Thomas'
            },
            {
              'id': 1,
              'name': 'Rhoda Freeman'
            },
            {
              'id': 2,
              'name': 'Felicia Huff'
            }
          ]
        },
        {
          'id': 74,
          'guid': '14089110-abb1-4e08-8bf2-a7297e2ada3f',
          'isActive': false,
          'balance': '$1,684.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Jodi Shepherd',
          'gender': 'female',
          'company': 'Turnling',
          'email': 'jodishepherd@turnling.com',
          'phone': '+1 (853) 488-2483',
          'address': {
            'street': 764,
            'city': 'Layhill',
            'state': 'Ohio',
            'zip': 2075
          },
          'about': 'Nulla consectetur adipisicing enim qui proident ullamco minim cupidatat ex adipisicing magna. Fugiat nisi quis sint incididunt laborum veniam ea tempor excepteur ipsum qui adipisicing Lorem. Sunt tempor sunt Lorem Lorem reprehenderit ea excepteur quis. Deserunt do consequat culpa quis eu Lorem occaecat. Commodo occaecat consectetur ex non deserunt reprehenderit proident. Enim nisi veniam fugiat dolor incididunt ex. Aliqua reprehenderit aliqua adipisicing elit nisi cupidatat veniam anim eu laborum irure.\r\n',
          'registered': '2001-09-30T10:41:28+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Goff Mercado'
            },
            {
              'id': 1,
              'name': 'Wooten Hoover'
            },
            {
              'id': 2,
              'name': 'Carey Pugh'
            }
          ]
        },
        {
          'id': 75,
          'guid': '00ed18dd-3919-42ff-89ff-f2a1439061da',
          'isActive': false,
          'balance': '$3,305.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Carissa Tyson',
          'gender': 'female',
          'company': 'Telpod',
          'email': 'carissatyson@telpod.com',
          'phone': '+1 (838) 503-2367',
          'address': {
            'street': 793,
            'city': 'Fredericktown',
            'state': 'Maryland',
            'zip': 9120
          },
          'about': 'Reprehenderit quis ipsum anim laborum velit mollit fugiat cillum magna sit amet tempor. Ut consequat nostrud aliqua id qui. Ad laboris sint magna sint cillum voluptate tempor quis tempor et esse ullamco. Enim ad anim mollit esse proident ullamco eu consectetur duis occaecat et velit voluptate magna.\r\n',
          'registered': '1990-03-20T04:23:22+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Hammond Ferguson'
            },
            {
              'id': 1,
              'name': 'Jeannette William'
            },
            {
              'id': 2,
              'name': 'Marla Kelly'
            }
          ]
        },
        {
          'id': 76,
          'guid': 'ed4d6213-5de5-4a29-817b-818f5fde7eec',
          'isActive': false,
          'balance': '$1,157.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Chris Mueller',
          'gender': 'female',
          'company': 'Polarium',
          'email': 'chrismueller@polarium.com',
          'phone': '+1 (809) 508-3542',
          'address': {
            'street': 854,
            'city': 'Tilden',
            'state': 'Vermont',
            'zip': 3251
          },
          'about': 'Consectetur tempor veniam nostrud officia aliqua. Ad qui esse est nulla nostrud. Consectetur cupidatat ipsum fugiat cupidatat dolor et velit est do quis laborum. Duis minim tempor est aute. Pariatur ut amet consectetur elit ad consequat irure ex deserunt sit irure cillum magna quis.\r\n',
          'registered': '1995-01-17T10:36:19+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Steele Rasmussen'
            },
            {
              'id': 1,
              'name': 'Bridges Carson'
            },
            {
              'id': 2,
              'name': 'Georgia Cobb'
            }
          ]
        },
        {
          'id': 77,
          'guid': '5fc117e0-f8ef-4f64-abfd-47cd1c68c579',
          'isActive': false,
          'balance': '$2,502.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Nadia Mcmillan',
          'gender': 'female',
          'company': 'Corporana',
          'email': 'nadiamcmillan@corporana.com',
          'phone': '+1 (937) 436-2847',
          'address': {
            'street': 827,
            'city': 'Bluetown',
            'state': 'Delaware',
            'zip': 5012
          },
          'about': 'Esse aute sint amet anim incididunt exercitation cupidatat cillum nisi qui. Nostrud sunt ipsum aliquip ullamco sint tempor irure pariatur quis. Enim duis incididunt ut aute mollit duis occaecat tempor aliqua est aute eiusmod.\r\n',
          'registered': '2010-04-11T01:50:36+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Cooley Michael'
            },
            {
              'id': 1,
              'name': 'Trisha Mcintosh'
            },
            {
              'id': 2,
              'name': 'Cora Ford'
            }
          ]
        },
        {
          'id': 78,
          'guid': 'fc2b4549-7103-46f8-aceb-e90d30713e50',
          'isActive': true,
          'balance': '$1,207.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Laurie Stevenson',
          'gender': 'female',
          'company': 'Prowaste',
          'email': 'lauriestevenson@prowaste.com',
          'phone': '+1 (984) 462-2558',
          'address': {
            'street': 758,
            'city': 'Chautauqua',
            'state': 'Rhode Island',
            'zip': 730
          },
          'about': 'Sit ea do id deserunt et dolore dolore mollit esse. Nulla occaecat proident ea ad labore incididunt officia occaecat eiusmod anim. Consectetur aliqua sint anim labore do.\r\n',
          'registered': '2008-03-08T01:45:41+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Herminia Parker'
            },
            {
              'id': 1,
              'name': 'Eddie Mason'
            },
            {
              'id': 2,
              'name': 'Velma Maynard'
            }
          ]
        },
        {
          'id': 79,
          'guid': '324ba997-d30b-44a6-a938-f161fddef781',
          'isActive': true,
          'balance': '$3,408.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Sandoval Camacho',
          'gender': 'male',
          'company': 'Minga',
          'email': 'sandovalcamacho@minga.com',
          'phone': '+1 (887) 572-2967',
          'address': {
            'street': 881,
            'city': 'Snyderville',
            'state': 'Kentucky',
            'zip': 746
          },
          'about': 'Labore ipsum quis aute et cupidatat dolore occaecat irure. Non eu proident fugiat tempor sunt minim mollit est fugiat. Labore duis ipsum est dolor labore adipisicing velit ex officia ut cupidatat dolor duis ipsum. Commodo veniam ipsum ea occaecat cupidatat ad sunt proident labore velit reprehenderit et.\r\n',
          'registered': '2000-01-13T17:35:10+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Cynthia Cox'
            },
            {
              'id': 1,
              'name': 'Doyle Page'
            },
            {
              'id': 2,
              'name': 'Sondra Mosley'
            }
          ]
        },
        {
          'id': 80,
          'guid': 'aa687b50-2ff7-4943-96ef-0138bf3fda1e',
          'isActive': false,
          'balance': '$2,668.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Frederick Gallagher',
          'gender': 'male',
          'company': 'Lexicondo',
          'email': 'frederickgallagher@lexicondo.com',
          'phone': '+1 (887) 593-3128',
          'address': {
            'street': 607,
            'city': 'Stevens',
            'state': 'Georgia',
            'zip': 1987
          },
          'about': 'Amet enim quis reprehenderit occaecat id exercitation non nulla. Commodo qui laborum laborum ea est magna veniam culpa culpa non ullamco id sint est. Ea eiusmod dolore sint consequat eiusmod aute deserunt. Minim pariatur laboris laborum anim nulla cupidatat tempor incididunt nulla enim. Fugiat sint exercitation aliqua aute quis irure id irure ut consectetur. Officia minim elit dolore et consectetur velit ea enim fugiat tempor ullamco aliquip enim.\r\n',
          'registered': '2002-01-03T18:50:39+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Black Callahan'
            },
            {
              'id': 1,
              'name': 'Robin Rowland'
            },
            {
              'id': 2,
              'name': 'Moss Irwin'
            }
          ]
        },
        {
          'id': 81,
          'guid': 'e35867cb-720d-495e-8298-e8cdf256df71',
          'isActive': true,
          'balance': '$2,979.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Walls Randall',
          'gender': 'male',
          'company': 'Zentry',
          'email': 'wallsrandall@zentry.com',
          'phone': '+1 (936) 468-3531',
          'address': {
            'street': 588,
            'city': 'Frystown',
            'state': 'Michigan',
            'zip': 5894
          },
          'about': 'Fugiat commodo adipisicing est anim quis duis culpa aute id mollit duis irure reprehenderit do. Proident nostrud duis ea consequat duis proident incididunt culpa reprehenderit ut do. Reprehenderit non proident amet consequat laborum magna reprehenderit dolore cupidatat. Ea nostrud nisi dolore deserunt officia.\r\n',
          'registered': '2000-11-04T13:24:06+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Bonnie Holden'
            },
            {
              'id': 1,
              'name': 'Valentine Farmer'
            },
            {
              'id': 2,
              'name': 'Grant Hutchinson'
            }
          ]
        },
        {
          'id': 82,
          'guid': '7edf3100-cc69-44ba-ab3b-878a9bb4bfd5',
          'isActive': false,
          'balance': '$1,652.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Floyd Calderon',
          'gender': 'male',
          'company': 'Zosis',
          'email': 'floydcalderon@zosis.com',
          'phone': '+1 (995) 447-2915',
          'address': {
            'street': 621,
            'city': 'Germanton',
            'state': 'Wyoming',
            'zip': 3826
          },
          'about': 'Qui qui minim enim tempor eu amet excepteur cillum ullamco cillum ipsum. Ut occaecat est proident fugiat nostrud do ad in pariatur ut adipisicing. Est ad proident reprehenderit duis do do incididunt occaecat cupidatat. Pariatur nulla deserunt exercitation aliqua voluptate tempor est. Sunt id officia adipisicing Lorem esse. Ipsum nostrud consequat excepteur amet velit laboris nostrud irure officia. Dolore id in officia elit eiusmod dolore commodo veniam nostrud sint culpa est.\r\n',
          'registered': '2001-09-25T17:33:26+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Savannah Witt'
            },
            {
              'id': 1,
              'name': 'Ana Mccray'
            },
            {
              'id': 2,
              'name': 'Eva Pena'
            }
          ]
        },
        {
          'id': 83,
          'guid': 'a517ae3a-a7eb-4355-9271-bd31fe395554',
          'isActive': true,
          'balance': '$2,499.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Stephens Yates',
          'gender': 'male',
          'company': 'Zidant',
          'email': 'stephensyates@zidant.com',
          'phone': '+1 (958) 572-2803',
          'address': {
            'street': 107,
            'city': 'Smock',
            'state': 'South Carolina',
            'zip': 776
          },
          'about': 'Anim id proident culpa incididunt magna officia. Pariatur cupidatat reprehenderit esse eiusmod Lorem minim fugiat. Labore veniam velit nisi anim ipsum consectetur do cillum. Ea anim duis proident et pariatur tempor laborum aliquip do laboris. Proident est est deserunt veniam exercitation. Nulla dolor dolore duis reprehenderit nostrud deserunt ipsum duis adipisicing.\r\n',
          'registered': '1997-04-29T14:28:22+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Noble Torres'
            },
            {
              'id': 1,
              'name': 'Susana Gordon'
            },
            {
              'id': 2,
              'name': 'Nichols Chase'
            }
          ]
        },
        {
          'id': 84,
          'guid': '4c7dc20c-7936-41f1-83fe-0eb00226edde',
          'isActive': true,
          'balance': '$1,821.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Leigh Durham',
          'gender': 'female',
          'company': 'Nspire',
          'email': 'leighdurham@nspire.com',
          'phone': '+1 (828) 476-2193',
          'address': {
            'street': 782,
            'city': 'Rosedale',
            'state': 'Arkansas',
            'zip': 4419
          },
          'about': 'Ut dolor proident pariatur veniam do reprehenderit anim incididunt culpa officia exercitation incididunt duis ullamco. Ut adipisicing eiusmod nulla qui do occaecat qui sit. Pariatur dolor ullamco ad est laboris proident sunt est. Mollit eu consequat est aute cillum nulla amet exercitation in aliquip commodo. In est proident eiusmod aliquip nisi sint eiusmod nulla esse nisi adipisicing. Cupidatat aute qui occaecat proident officia sunt id ad esse aliqua proident dolore mollit dolore. Tempor velit irure enim officia ad velit excepteur ea consectetur esse culpa ut.\r\n',
          'registered': '1989-08-01T22:33:24+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Stephenson Henderson'
            },
            {
              'id': 1,
              'name': 'Dora Glenn'
            },
            {
              'id': 2,
              'name': 'Molly Gonzales'
            }
          ]
        },
        {
          'id': 85,
          'guid': 'a2dd93ad-bab6-43ec-8dc3-80a16f1c61a4',
          'isActive': true,
          'balance': '$2,753.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Odonnell Frank',
          'gender': 'male',
          'company': 'Stucco',
          'email': 'odonnellfrank@stucco.com',
          'phone': '+1 (870) 436-3125',
          'address': {
            'street': 495,
            'city': 'Leeper',
            'state': 'New York',
            'zip': 2904
          },
          'about': 'Ipsum occaecat nulla minim adipisicing pariatur minim occaecat minim sunt deserunt et proident. Nisi ullamco eiusmod sint proident et quis excepteur voluptate ad. Occaecat veniam amet aliquip ea et voluptate magna. Dolor duis occaecat id elit nisi mollit commodo in ea adipisicing minim qui commodo. Laborum ex consectetur Lorem deserunt.\r\n',
          'registered': '1994-09-22T21:00:56+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Young Kennedy'
            },
            {
              'id': 1,
              'name': 'Burt Chen'
            },
            {
              'id': 2,
              'name': 'Garrison Merrill'
            }
          ]
        },
        {
          'id': 86,
          'guid': '5d92fc3d-3a2d-4804-b79f-feb595d6bc6f',
          'isActive': true,
          'balance': '$2,626.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Ingram Blackburn',
          'gender': 'male',
          'company': 'Lovepad',
          'email': 'ingramblackburn@lovepad.com',
          'phone': '+1 (842) 463-2719',
          'address': {
            'street': 602,
            'city': 'Dola',
            'state': 'Washington',
            'zip': 2790
          },
          'about': 'Eu pariatur voluptate cillum ipsum ex id irure ea esse. Irure voluptate reprehenderit irure ut. Velit velit eu id nisi occaecat mollit reprehenderit nisi incididunt elit non nulla. Laboris deserunt voluptate occaecat voluptate veniam irure occaecat voluptate ut aliquip veniam aliqua.\r\n',
          'registered': '2007-01-19T20:13:26+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Willie Alexander'
            },
            {
              'id': 1,
              'name': 'Patty Keller'
            },
            {
              'id': 2,
              'name': 'Hardy Mcclure'
            }
          ]
        },
        {
          'id': 87,
          'guid': '2c506777-8a1e-4b6f-ad94-d297dc62ef30',
          'isActive': false,
          'balance': '$2,173.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Ford Daniel',
          'gender': 'male',
          'company': 'Isoplex',
          'email': 'forddaniel@isoplex.com',
          'phone': '+1 (963) 427-2643',
          'address': {
            'street': 899,
            'city': 'Stagecoach',
            'state': 'South Dakota',
            'zip': 5865
          },
          'about': 'Cupidatat deserunt labore occaecat eiusmod quis magna anim magna laborum nisi Lorem fugiat commodo. Dolore nisi aliqua ut excepteur commodo esse aliquip incididunt id nisi incididunt. Commodo in dolore labore officia irure sit duis cillum. Esse sunt occaecat culpa adipisicing reprehenderit qui. Exercitation nisi sit exercitation nisi esse. Aliquip anim sunt eu pariatur nulla.\r\n',
          'registered': '1992-07-10T05:46:44+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Castro Hendrix'
            },
            {
              'id': 1,
              'name': 'Addie Kane'
            },
            {
              'id': 2,
              'name': 'Renee Mcdaniel'
            }
          ]
        },
        {
          'id': 88,
          'guid': 'd1980b63-7ca0-4175-b126-7625a5821666',
          'isActive': true,
          'balance': '$2,818.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Hampton Johnston',
          'gender': 'male',
          'company': 'Inear',
          'email': 'hamptonjohnston@inear.com',
          'phone': '+1 (904) 596-3756',
          'address': {
            'street': 352,
            'city': 'Winchester',
            'state': 'Tennessee',
            'zip': 7609
          },
          'about': 'Cupidatat exercitation aute proident et quis ullamco sint elit. Ex aliqua amet qui commodo exercitation deserunt fugiat aliqua dolore labore sint minim excepteur. Commodo laboris adipisicing nisi aute reprehenderit occaecat velit dolor eiusmod occaecat deserunt officia aute.\r\n',
          'registered': '2002-11-01T15:48:32+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Roseann Wilder'
            },
            {
              'id': 1,
              'name': 'Cook Salazar'
            },
            {
              'id': 2,
              'name': 'Joanne Swanson'
            }
          ]
        },
        {
          'id': 89,
          'guid': '023c6162-38b1-44a9-91c9-e8d42e7e5949',
          'isActive': true,
          'balance': '$1,805.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Margie Henry',
          'gender': 'female',
          'company': 'Orbixtar',
          'email': 'margiehenry@orbixtar.com',
          'phone': '+1 (865) 516-3581',
          'address': {
            'street': 772,
            'city': 'Goochland',
            'state': 'California',
            'zip': 7988
          },
          'about': 'Duis ullamco aliquip aute ad adipisicing ad ipsum proident adipisicing excepteur veniam ad ut commodo. Sunt proident sit excepteur ullamco enim occaecat. Nisi anim pariatur dolore sunt sunt excepteur anim proident mollit velit aute sunt qui. Fugiat id amet veniam aute minim esse. Reprehenderit ea consequat culpa consequat fugiat velit incididunt quis deserunt. Incididunt Lorem ea ex nostrud.\r\n',
          'registered': '2000-11-10T04:26:13+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Simmons Shields'
            },
            {
              'id': 1,
              'name': 'Esmeralda Stokes'
            },
            {
              'id': 2,
              'name': 'Justine Hill'
            }
          ]
        },
        {
          'id': 90,
          'guid': '0130ba50-aa6f-4e88-be5e-50cdedef7942',
          'isActive': false,
          'balance': '$2,346.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Knight Peck',
          'gender': 'male',
          'company': 'Immunics',
          'email': 'knightpeck@immunics.com',
          'phone': '+1 (950) 428-2460',
          'address': {
            'street': 645,
            'city': 'Allentown',
            'state': 'Minnesota',
            'zip': 3577
          },
          'about': 'Sit id anim qui consectetur minim sint. Consequat pariatur sint occaecat adipisicing aute cillum irure enim culpa reprehenderit. Laborum minim magna et reprehenderit anim adipisicing sint do esse qui. Exercitation veniam non incididunt excepteur deserunt voluptate Lorem nostrud esse eu officia amet ad amet. Labore ullamco id veniam exercitation. Laboris labore ex excepteur nostrud do incididunt.\r\n',
          'registered': '1994-06-14T19:00:32+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Cabrera Hampton'
            },
            {
              'id': 1,
              'name': 'Caldwell Langley'
            },
            {
              'id': 2,
              'name': 'Tami Kaufman'
            }
          ]
        },
        {
          'id': 91,
          'guid': 'b013ecd9-3905-4420-b360-0f80a671e8c4',
          'isActive': false,
          'balance': '$1,609.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Chelsea Brewer',
          'gender': 'female',
          'company': 'Kozgene',
          'email': 'chelseabrewer@kozgene.com',
          'phone': '+1 (891) 573-3046',
          'address': {
            'street': 483,
            'city': 'Chical',
            'state': 'North Dakota',
            'zip': 3427
          },
          'about': 'Qui ut cillum exercitation incididunt. Veniam enim fugiat ullamco esse duis esse esse laborum ipsum est. Reprehenderit sunt reprehenderit ad enim culpa. Dolor magna quis cillum irure adipisicing magna duis adipisicing enim dolore qui. Consequat qui eu dolore quis mollit irure ex dolore tempor anim aliquip fugiat dolor officia. Sint sint deserunt id laboris ullamco mollit in.\r\n',
          'registered': '1997-07-30T20:41:34+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Hyde Whitehead'
            },
            {
              'id': 1,
              'name': 'Mcknight Oconnor'
            },
            {
              'id': 2,
              'name': 'Loretta Preston'
            }
          ]
        },
        {
          'id': 92,
          'guid': 'e324759a-a5e6-421e-93a8-2dfe99baef2b',
          'isActive': true,
          'balance': '$1,455.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Roth Clay',
          'gender': 'male',
          'company': 'Kog',
          'email': 'rothclay@kog.com',
          'phone': '+1 (854) 488-2889',
          'address': {
            'street': 299,
            'city': 'Nicholson',
            'state': 'Indiana',
            'zip': 5171
          },
          'about': 'Occaecat magna proident adipisicing pariatur consectetur excepteur exercitation laborum eu nostrud officia. Sunt veniam duis excepteur Lorem velit et Lorem. Duis do enim eu voluptate.\r\n',
          'registered': '1999-10-18T06:58:05+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Ruthie Avila'
            },
            {
              'id': 1,
              'name': 'Tran Patton'
            },
            {
              'id': 2,
              'name': 'Marie Boyd'
            }
          ]
        },
        {
          'id': 93,
          'guid': '45ddf246-a762-45c8-9e93-e599f4e1afee',
          'isActive': true,
          'balance': '$2,396.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Valenzuela Ruiz',
          'gender': 'male',
          'company': 'Isotronic',
          'email': 'valenzuelaruiz@isotronic.com',
          'phone': '+1 (834) 422-2961',
          'address': {
            'street': 782,
            'city': 'Marshall',
            'state': 'Maine',
            'zip': 7843
          },
          'about': 'Exercitation reprehenderit voluptate veniam reprehenderit sit dolor aute. Laboris cupidatat cupidatat magna sit velit ipsum cupidatat ipsum laboris est labore nulla incididunt proident. Proident quis laboris officia voluptate qui non officia ullamco minim nostrud commodo. Duis labore aliquip minim voluptate cillum ullamco ipsum eiusmod.\r\n',
          'registered': '1995-02-14T05:26:22+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Ferrell Cochran'
            },
            {
              'id': 1,
              'name': 'Campbell Lowery'
            },
            {
              'id': 2,
              'name': 'Barrett Payne'
            }
          ]
        },
        {
          'id': 94,
          'guid': '6bc1f3e6-b0ec-4eaf-b72b-9cfb170353fe',
          'isActive': true,
          'balance': '$3,925.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Caroline Snow',
          'gender': 'female',
          'company': 'Zomboid',
          'email': 'carolinesnow@zomboid.com',
          'phone': '+1 (839) 579-2471',
          'address': {
            'street': 338,
            'city': 'Savannah',
            'state': 'Kansas',
            'zip': 1315
          },
          'about': 'Ullamco veniam aliqua sit esse aliquip ad adipisicing Lorem veniam laborum Lorem ad reprehenderit. Anim adipisicing cupidatat occaecat adipisicing eu ex ea occaecat nulla esse in officia. Anim esse quis mollit est quis et ex. Commodo commodo id ea voluptate magna non laborum proident laboris laboris velit magna enim. Anim do aliqua exercitation adipisicing. Ut ex cillum aute eiusmod sit ipsum occaecat occaecat. Cillum aute in laboris culpa ex qui ex Lorem.\r\n',
          'registered': '2003-03-12T19:05:58+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Hoffman Morrison'
            },
            {
              'id': 1,
              'name': 'Erin Olsen'
            },
            {
              'id': 2,
              'name': 'Schroeder Barron'
            }
          ]
        },
        {
          'id': 95,
          'guid': 'd865be27-e6df-426f-a2d6-45a4b06f584f',
          'isActive': false,
          'balance': '$1,377.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Roberson Bush',
          'gender': 'male',
          'company': 'Exosis',
          'email': 'robersonbush@exosis.com',
          'phone': '+1 (933) 443-2362',
          'address': {
            'street': 104,
            'city': 'Rose',
            'state': 'Utah',
            'zip': 6981
          },
          'about': 'Excepteur sunt anim nulla labore. Ipsum ullamco excepteur ullamco velit exercitation excepteur tempor. Proident irure consectetur incididunt aliquip do voluptate non minim. Nisi qui duis fugiat cupidatat. Ut exercitation eiusmod incididunt officia amet consequat culpa nostrud duis quis elit tempor.\r\n',
          'registered': '2004-11-19T19:05:46+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Brandie Gillespie'
            },
            {
              'id': 1,
              'name': 'Melissa Cleveland'
            },
            {
              'id': 2,
              'name': 'Clemons Molina'
            }
          ]
        },
        {
          'id': 96,
          'guid': 'cb63f887-e7c2-4f68-ab8a-b079b1eed783',
          'isActive': true,
          'balance': '$3,104.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Good Mcmahon',
          'gender': 'male',
          'company': 'Sybixtex',
          'email': 'goodmcmahon@sybixtex.com',
          'phone': '+1 (846) 499-3909',
          'address': {
            'street': 963,
            'city': 'Felt',
            'state': 'Mississippi',
            'zip': 9683
          },
          'about': 'Id ipsum enim labore culpa anim. Consectetur anim sunt eiusmod est aliquip nostrud veniam. Irure tempor eiusmod consectetur anim deserunt ut exercitation nulla fugiat consequat deserunt. Esse consequat sint est ex nisi ullamco elit excepteur est est consequat voluptate commodo Lorem. Culpa duis nostrud fugiat cillum nisi labore mollit nisi ipsum culpa. Dolore consequat elit non elit nulla culpa incididunt exercitation voluptate cupidatat sunt voluptate culpa excepteur.\r\n',
          'registered': '2008-11-23T17:57:31+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Tanisha Turner'
            },
            {
              'id': 1,
              'name': 'Arnold Mcgee'
            },
            {
              'id': 2,
              'name': 'Billie Morse'
            }
          ]
        },
        {
          'id': 97,
          'guid': '7d23d526-b6d8-49ff-ae80-0eb13de3ffb6',
          'isActive': false,
          'balance': '$1,557.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Betsy Jarvis',
          'gender': 'female',
          'company': 'Slumberia',
          'email': 'betsyjarvis@slumberia.com',
          'phone': '+1 (976) 470-2848',
          'address': {
            'street': 846,
            'city': 'Coral',
            'state': 'Nevada',
            'zip': 4102
          },
          'about': 'Velit anim et minim proident do exercitation et non do dolore in duis excepteur adipisicing. Veniam adipisicing minim tempor aliquip nisi esse nostrud reprehenderit magna non excepteur dolor quis velit. Officia dolor nisi amet Lorem officia adipisicing exercitation. Dolor culpa dolore est non ut incididunt Lorem esse ipsum proident nulla. Culpa aliquip esse ipsum qui qui labore.\r\n',
          'registered': '2007-12-10T08:25:04+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Carlson Cameron'
            },
            {
              'id': 1,
              'name': 'Jaime Dennis'
            },
            {
              'id': 2,
              'name': 'Coleen Oneal'
            }
          ]
        },
        {
          'id': 98,
          'guid': 'd0a75598-4a3d-4616-8601-f067b8b7bb49',
          'isActive': false,
          'balance': '$1,215.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Alba Welch',
          'gender': 'female',
          'company': 'Intrawear',
          'email': 'albawelch@intrawear.com',
          'phone': '+1 (879) 434-2225',
          'address': {
            'street': 919,
            'city': 'Wiscon',
            'state': 'Delaware',
            'zip': 2659
          },
          'about': 'Lorem nisi proident qui consequat amet dolore ullamco consectetur voluptate consectetur. Officia dolor nisi excepteur mollit adipisicing do consequat duis aliquip enim aliquip occaecat culpa cillum. Pariatur consectetur est nisi id do culpa id culpa ea quis culpa. Ad ullamco et elit nostrud irure labore.\r\n',
          'registered': '2006-07-19T06:26:33+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Claudette Gilbert'
            },
            {
              'id': 1,
              'name': 'Peggy Swanson'
            },
            {
              'id': 2,
              'name': 'Claudia Moreno'
            }
          ]
        },
        {
          'id': 99,
          'guid': '2cfcb937-773c-4fbd-b988-7b00d92522d8',
          'isActive': false,
          'balance': '$1,714.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Moon Woods',
          'gender': 'male',
          'company': 'Tersanki',
          'email': 'moonwoods@tersanki.com',
          'phone': '+1 (811) 444-2648',
          'address': {
            'street': 295,
            'city': 'Chamizal',
            'state': 'New Hampshire',
            'zip': 7697
          },
          'about': 'Reprehenderit laborum excepteur laborum aliqua non velit exercitation deserunt aliquip nisi ea fugiat incididunt ipsum. Excepteur exercitation irure nulla Lorem. Ut ad ex officia fugiat eu cillum Lorem consequat.\r\n',
          'registered': '2008-01-03T09:00:55+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Isabelle Blackburn'
            },
            {
              'id': 1,
              'name': 'Delores Lester'
            },
            {
              'id': 2,
              'name': 'Hess Dominguez'
            }
          ]
        },
        {
          'id': 100,
          'guid': '5af07698-a6dd-449d-9143-d4fd42d35c09',
          'isActive': true,
          'balance': '$3,774.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Bender Jefferson',
          'gender': 'male',
          'company': 'Applideck',
          'email': 'benderjefferson@applideck.com',
          'phone': '+1 (991) 523-2602',
          'address': {
            'street': 664,
            'city': 'Orin',
            'state': 'Wyoming',
            'zip': 9632
          },
          'about': 'Magna mollit enim ex sint ex nulla aute nisi deserunt ipsum anim exercitation reprehenderit. Aliquip amet labore do commodo Lorem aliqua ea ad nisi officia cupidatat. Fugiat minim occaecat esse cillum mollit eu sit irure in consectetur deserunt in esse tempor. Elit velit tempor officia ex qui irure commodo. Est pariatur pariatur veniam minim veniam exercitation tempor enim excepteur mollit id amet eiusmod deserunt. Enim quis veniam aute reprehenderit aliqua.\r\n',
          'registered': '1996-03-24T15:48:11+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Koch Burris'
            },
            {
              'id': 1,
              'name': 'Lelia Maddox'
            },
            {
              'id': 2,
              'name': 'Beard Higgins'
            }
          ]
        },
        {
          'id': 101,
          'guid': '3b1b8e98-64e2-4bd8-b690-26a54b44bb2f',
          'isActive': false,
          'balance': '$3,163.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Catherine Ryan',
          'gender': 'female',
          'company': 'Quilch',
          'email': 'catherineryan@quilch.com',
          'phone': '+1 (811) 462-3486',
          'address': {
            'street': 524,
            'city': 'Joppa',
            'state': 'Texas',
            'zip': 4484
          },
          'about': 'Ad occaecat excepteur velit tempor proident veniam id velit. Mollit consectetur adipisicing veniam ut dolore fugiat tempor nisi elit. Dolore est occaecat anim eiusmod id fugiat. Mollit Lorem sit excepteur aute aliqua tempor eiusmod elit ad id voluptate adipisicing. Fugiat laboris est enim ullamco pariatur tempor exercitation ullamco.\r\n',
          'registered': '2009-09-19T00:48:13+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Hudson Sparks'
            },
            {
              'id': 1,
              'name': 'Clare Sampson'
            },
            {
              'id': 2,
              'name': 'Kellie Barber'
            }
          ]
        },
        {
          'id': 102,
          'guid': '634ed11f-7181-44ed-96b5-c7fab1afdcad',
          'isActive': false,
          'balance': '$1,490.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Richardson Blake',
          'gender': 'male',
          'company': 'Otherside',
          'email': 'richardsonblake@otherside.com',
          'phone': '+1 (838) 409-2825',
          'address': {
            'street': 687,
            'city': 'Stewart',
            'state': 'Washington',
            'zip': 9997
          },
          'about': 'Irure proident quis nostrud nulla quis duis exercitation ullamco. Fugiat elit nulla nisi mollit et laboris minim veniam aute ipsum. Nisi eiusmod nulla deserunt esse aliqua.\r\n',
          'registered': '1988-06-19T11:10:04+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Pate Larson'
            },
            {
              'id': 1,
              'name': 'Martha Russell'
            },
            {
              'id': 2,
              'name': 'Serrano Evans'
            }
          ]
        },
        {
          'id': 103,
          'guid': 'a9621347-4ebc-4ec2-813a-bfa1125223a6',
          'isActive': false,
          'balance': '$2,081.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Decker Nieves',
          'gender': 'male',
          'company': 'Solgan',
          'email': 'deckernieves@solgan.com',
          'phone': '+1 (998) 571-2537',
          'address': {
            'street': 547,
            'city': 'Nadine',
            'state': 'Mississippi',
            'zip': 3310
          },
          'about': 'Officia dolore eiusmod ea nostrud. Proident mollit eiusmod adipisicing nisi. Mollit esse amet cupidatat incididunt dolor laboris cillum est ex. Cupidatat nostrud sint tempor do sit adipisicing consequat consequat culpa exercitation aliquip id non. Esse anim in id labore dolor nostrud magna magna aute tempor excepteur.\r\n',
          'registered': '2009-06-22T22:37:53+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Zamora Silva'
            },
            {
              'id': 1,
              'name': 'Bradley Britt'
            },
            {
              'id': 2,
              'name': 'Stark Best'
            }
          ]
        },
        {
          'id': 104,
          'guid': 'bef95243-9993-4afb-8350-a050f5bac952',
          'isActive': true,
          'balance': '$3,522.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Harris Glenn',
          'gender': 'male',
          'company': 'Cuizine',
          'email': 'harrisglenn@cuizine.com',
          'phone': '+1 (976) 461-2189',
          'address': {
            'street': 956,
            'city': 'Riverton',
            'state': 'New Mexico',
            'zip': 7611
          },
          'about': 'Dolor duis ipsum consequat consequat ea cupidatat magna velit irure duis. Aliqua officia exercitation et exercitation do anim reprehenderit laboris ex minim elit. Proident nostrud exercitation velit sunt do culpa ipsum. Minim ad consequat exercitation amet aute proident culpa eu ipsum.\r\n',
          'registered': '1989-03-29T18:25:05+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Duffy Willis'
            },
            {
              'id': 1,
              'name': 'Kristie Mckay'
            },
            {
              'id': 2,
              'name': 'Mcmahon James'
            }
          ]
        },
        {
          'id': 105,
          'guid': 'defcf523-468d-4c62-91d6-737ff05402b6',
          'isActive': true,
          'balance': '$1,633.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Mcmillan Pace',
          'gender': 'male',
          'company': 'Enersave',
          'email': 'mcmillanpace@enersave.com',
          'phone': '+1 (847) 505-2306',
          'address': {
            'street': 420,
            'city': 'Marne',
            'state': 'Oregon',
            'zip': 9414
          },
          'about': 'Id irure voluptate in ex deserunt esse ullamco culpa culpa excepteur nulla incididunt in. Ut quis exercitation sit proident eu magna nulla officia consectetur ad sint dolore. Nisi elit enim consectetur labore.\r\n',
          'registered': '2009-12-28T19:47:37+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Moss Newman'
            },
            {
              'id': 1,
              'name': 'Williams Nolan'
            },
            {
              'id': 2,
              'name': 'Minerva Lyons'
            }
          ]
        },
        {
          'id': 106,
          'guid': '383611ef-d06f-4e54-89a0-433a27cc9f32',
          'isActive': false,
          'balance': '$2,748.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Neva Berg',
          'gender': 'female',
          'company': 'Talkalot',
          'email': 'nevaberg@talkalot.com',
          'phone': '+1 (871) 485-2567',
          'address': {
            'street': 307,
            'city': 'Austinburg',
            'state': 'Tennessee',
            'zip': 4215
          },
          'about': 'Laborum ea est nulla excepteur occaecat eiusmod sunt commodo in qui. Cupidatat aliqua velit aliquip ipsum aute. Duis minim deserunt culpa proident id velit. Reprehenderit laboris dolor aliqua sint ullamco irure incididunt.\r\n',
          'registered': '2002-02-19T13:34:53+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Cline Armstrong'
            },
            {
              'id': 1,
              'name': 'Lyons Oneal'
            },
            {
              'id': 2,
              'name': 'Dale Sanders'
            }
          ]
        },
        {
          'id': 107,
          'guid': 'b02dbcb6-71ad-4ade-a538-6462a7fe0435',
          'isActive': true,
          'balance': '$2,306.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Jensen Moody',
          'gender': 'male',
          'company': 'Xsports',
          'email': 'jensenmoody@xsports.com',
          'phone': '+1 (895) 568-2376',
          'address': {
            'street': 321,
            'city': 'Conway',
            'state': 'Florida',
            'zip': 6644
          },
          'about': 'Nostrud eu ipsum ut ullamco aliqua do consequat aliqua aute exercitation enim commodo. Occaecat eiusmod do esse qui incididunt deserunt quis aute enim eu sit tempor. Irure consequat nisi excepteur esse anim laborum labore id ipsum sunt magna. Voluptate commodo esse nulla fugiat. Cupidatat est pariatur aute irure culpa minim enim labore. Id consectetur ipsum ipsum ad tempor voluptate culpa amet cillum aute aliquip.\r\n',
          'registered': '2006-12-19T23:01:33+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Cheri Hahn'
            },
            {
              'id': 1,
              'name': 'Wooten Jensen'
            },
            {
              'id': 2,
              'name': 'Jordan Crawford'
            }
          ]
        },
        {
          'id': 108,
          'guid': '61867975-7317-46eb-a245-f584e547fdc1',
          'isActive': true,
          'balance': '$3,318.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Robles Sexton',
          'gender': 'male',
          'company': 'Kindaloo',
          'email': 'roblessexton@kindaloo.com',
          'phone': '+1 (930) 553-2016',
          'address': {
            'street': 196,
            'city': 'Jennings',
            'state': 'Minnesota',
            'zip': 3523
          },
          'about': 'Quis voluptate elit in in. Ut occaecat Lorem duis incididunt do duis tempor veniam ut. Ad esse laborum quis qui non sunt sint nulla exercitation aute sint. Aute ullamco elit sunt in culpa irure enim voluptate labore et nisi ex.\r\n',
          'registered': '2003-02-09T06:59:24+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Parks Waters'
            },
            {
              'id': 1,
              'name': 'Charlotte Simpson'
            },
            {
              'id': 2,
              'name': 'Michelle Ruiz'
            }
          ]
        },
        {
          'id': 109,
          'guid': '275fa40e-1b71-4613-9e96-9238681bb4ec',
          'isActive': false,
          'balance': '$2,131.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'York Talley',
          'gender': 'male',
          'company': 'Terrago',
          'email': 'yorktalley@terrago.com',
          'phone': '+1 (994) 507-3967',
          'address': {
            'street': 238,
            'city': 'Sanford',
            'state': 'Georgia',
            'zip': 5683
          },
          'about': 'Sit reprehenderit do culpa irure. In ad eu pariatur ullamco consequat aliqua ea adipisicing culpa ipsum sunt id. Eu exercitation esse sunt aliquip culpa fugiat incididunt ipsum do aliquip dolor proident sint id. Anim proident laborum eu consequat esse.\r\n',
          'registered': '1994-11-04T01:32:25+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Barlow Klein'
            },
            {
              'id': 1,
              'name': 'Fern Coleman'
            },
            {
              'id': 2,
              'name': 'Casandra Reeves'
            }
          ]
        },
        {
          'id': 110,
          'guid': '5d5557a3-b172-4aee-8bbf-451ae2fad5c5',
          'isActive': true,
          'balance': '$3,969.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Gamble Hudson',
          'gender': 'male',
          'company': 'Gushkool',
          'email': 'gamblehudson@gushkool.com',
          'phone': '+1 (919) 424-3914',
          'address': {
            'street': 691,
            'city': 'Lacomb',
            'state': 'New Jersey',
            'zip': 9812
          },
          'about': 'Cupidatat fugiat exercitation eu enim sit aute enim culpa est excepteur tempor deserunt laborum voluptate. Ut consequat non magna consectetur incididunt mollit proident anim eu commodo ex incididunt. Voluptate adipisicing fugiat sint laborum.\r\n',
          'registered': '1992-09-01T20:43:50+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Katy Hale'
            },
            {
              'id': 1,
              'name': 'Craig Allen'
            },
            {
              'id': 2,
              'name': 'Caitlin Faulkner'
            }
          ]
        },
        {
          'id': 111,
          'guid': '5a299384-d247-4a41-a473-c3d60f4758ae',
          'isActive': false,
          'balance': '$2,626.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Lisa Mays',
          'gender': 'female',
          'company': 'Callflex',
          'email': 'lisamays@callflex.com',
          'phone': '+1 (978) 564-2786',
          'address': {
            'street': 344,
            'city': 'Enlow',
            'state': 'Colorado',
            'zip': 490
          },
          'about': 'Reprehenderit anim sint dolor minim fugiat. Elit duis magna consequat proident ut voluptate incididunt mollit reprehenderit consequat dolore amet velit. Officia ea velit adipisicing sit ea duis tempor sit nisi amet esse voluptate dolore dolor.\r\n',
          'registered': '2002-05-13T14:04:36+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Boyd Walters'
            },
            {
              'id': 1,
              'name': 'Massey Vasquez'
            },
            {
              'id': 2,
              'name': 'Lila Price'
            }
          ]
        },
        {
          'id': 112,
          'guid': '32116a78-51f3-44ae-9e79-3032596c1a94',
          'isActive': true,
          'balance': '$2,458.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Keller Warren',
          'gender': 'male',
          'company': 'Amtas',
          'email': 'kellerwarren@amtas.com',
          'phone': '+1 (871) 592-3511',
          'address': {
            'street': 240,
            'city': 'Biddle',
            'state': 'Rhode Island',
            'zip': 9067
          },
          'about': 'Anim minim esse nostrud sunt exercitation aliquip qui nisi adipisicing laborum excepteur velit minim. Quis laboris pariatur veniam ad aliqua fugiat eu eiusmod commodo minim mollit. Ipsum ex reprehenderit eu ex elit adipisicing ipsum culpa laborum do duis amet reprehenderit incididunt. Fugiat minim adipisicing voluptate fugiat consequat laboris adipisicing eu elit consectetur magna proident.\r\n',
          'registered': '1999-12-08T09:12:52+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Deidre Wise'
            },
            {
              'id': 1,
              'name': 'Mooney Wooten'
            },
            {
              'id': 2,
              'name': 'Jacqueline Cervantes'
            }
          ]
        },
        {
          'id': 113,
          'guid': 'dac741bd-d86e-46a0-b6ad-0fcaa59221ec',
          'isActive': true,
          'balance': '$3,970.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Margie Kelly',
          'gender': 'female',
          'company': 'Digirang',
          'email': 'margiekelly@digirang.com',
          'phone': '+1 (980) 450-2085',
          'address': {
            'street': 908,
            'city': 'Rivereno',
            'state': 'Virginia',
            'zip': 338
          },
          'about': 'Proident adipisicing ex dolor culpa ea amet. Nostrud aute exercitation culpa aliqua veniam magna quis sunt elit velit. Officia occaecat pariatur eiusmod esse Lorem ut adipisicing magna nulla.\r\n',
          'registered': '1998-01-07T00:37:52+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Flowers Rodgers'
            },
            {
              'id': 1,
              'name': 'Sutton Mcintyre'
            },
            {
              'id': 2,
              'name': 'Rosario Charles'
            }
          ]
        },
        {
          'id': 114,
          'guid': '12b61b13-bfd1-40aa-97d9-5d8bcc1d9be7',
          'isActive': true,
          'balance': '$2,444.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Frost Maldonado',
          'gender': 'male',
          'company': 'Xplor',
          'email': 'frostmaldonado@xplor.com',
          'phone': '+1 (951) 468-2805',
          'address': {
            'street': 211,
            'city': 'Richmond',
            'state': 'Michigan',
            'zip': 1464
          },
          'about': 'Excepteur voluptate pariatur reprehenderit laborum excepteur ipsum. Deserunt dolore non velit Lorem dolore aute pariatur tempor. Enim fugiat occaecat proident cupidatat laborum consectetur dolor proident exercitation aute exercitation anim amet sit. Ex dolor reprehenderit labore in.\r\n',
          'registered': '1988-10-16T10:56:48+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Le Trujillo'
            },
            {
              'id': 1,
              'name': 'Victoria Ray'
            },
            {
              'id': 2,
              'name': 'Harriett Stephens'
            }
          ]
        },
        {
          'id': 115,
          'guid': 'a90ff0fd-d857-4795-966c-095099570dc9',
          'isActive': false,
          'balance': '$2,667.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Shelton Collier',
          'gender': 'male',
          'company': 'Accusage',
          'email': 'sheltoncollier@accusage.com',
          'phone': '+1 (863) 416-3835',
          'address': {
            'street': 166,
            'city': 'Shepardsville',
            'state': 'Maryland',
            'zip': 2772
          },
          'about': 'Fugiat incididunt excepteur consequat cupidatat esse quis non consectetur id quis aute laborum duis. Nisi enim anim velit dolore ea aliqua sit excepteur laborum dolor dolor. Consectetur officia amet consectetur deserunt sunt deserunt.\r\n',
          'registered': '2003-01-01T05:04:19+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Price Wells'
            },
            {
              'id': 1,
              'name': 'Sabrina Haney'
            },
            {
              'id': 2,
              'name': 'Pearl Pena'
            }
          ]
        },
        {
          'id': 116,
          'guid': '4cbc5b93-4af0-4002-84bd-6f1c214efceb',
          'isActive': false,
          'balance': '$2,570.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Robin Wynn',
          'gender': 'female',
          'company': 'Zytrax',
          'email': 'robinwynn@zytrax.com',
          'phone': '+1 (983) 499-3723',
          'address': {
            'street': 392,
            'city': 'Montura',
            'state': 'Alabama',
            'zip': 3920
          },
          'about': 'Aliqua deserunt reprehenderit excepteur aliqua amet voluptate. Aliquip est labore reprehenderit irure voluptate nulla. Nostrud Lorem esse deserunt nostrud reprehenderit labore quis voluptate fugiat sint non nostrud et. Laborum aliqua nisi sit id Lorem duis anim consequat eiusmod esse mollit exercitation irure. Consequat deserunt ex mollit amet duis commodo cupidatat ullamco incididunt sunt adipisicing est amet consequat.\r\n',
          'registered': '1993-11-04T14:29:14+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mullins Sweeney'
            },
            {
              'id': 1,
              'name': 'Guadalupe Sweet'
            },
            {
              'id': 2,
              'name': 'Krystal Barr'
            }
          ]
        },
        {
          'id': 117,
          'guid': 'aca11976-9866-474f-a1e6-df61cf47d58f',
          'isActive': true,
          'balance': '$1,145.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Parrish Douglas',
          'gender': 'male',
          'company': 'Gynk',
          'email': 'parrishdouglas@gynk.com',
          'phone': '+1 (809) 589-3992',
          'address': {
            'street': 118,
            'city': 'Marbury',
            'state': 'Connecticut',
            'zip': 3878
          },
          'about': 'Ipsum sit dolor esse anim fugiat cupidatat. Mollit amet culpa ut adipisicing esse exercitation non culpa enim reprehenderit ad minim. Consectetur consectetur aliqua magna id deserunt magna. Pariatur ullamco velit ipsum ut Lorem. Sunt officia mollit occaecat occaecat incididunt laborum. Magna ut et duis nulla minim.\r\n',
          'registered': '1988-01-10T14:51:50+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Joyce Barlow'
            },
            {
              'id': 1,
              'name': 'Rodgers Melton'
            },
            {
              'id': 2,
              'name': 'Velazquez Yang'
            }
          ]
        },
        {
          'id': 118,
          'guid': '1c76ccd1-8f3b-4ce1-a1d9-c2d3db1079dd',
          'isActive': true,
          'balance': '$2,683.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Summers Cooley',
          'gender': 'male',
          'company': 'Insuresys',
          'email': 'summerscooley@insuresys.com',
          'phone': '+1 (919) 535-2065',
          'address': {
            'street': 676,
            'city': 'Woodlake',
            'state': 'West Virginia',
            'zip': 7249
          },
          'about': 'Ipsum qui anim cupidatat irure ipsum adipisicing quis velit fugiat. Sunt culpa laboris do elit cupidatat duis enim mollit non Lorem. Duis minim ad aliqua aliquip do et ut id laboris sit tempor ipsum. Velit amet occaecat culpa elit dolore non officia excepteur incididunt laborum. Magna cupidatat exercitation cupidatat sint anim tempor ipsum.\r\n',
          'registered': '2011-12-25T23:47:25+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Sybil Mack'
            },
            {
              'id': 1,
              'name': 'Richards Norton'
            },
            {
              'id': 2,
              'name': 'Willie Norris'
            }
          ]
        },
        {
          'id': 119,
          'guid': '788c6e0c-55f7-4f7a-9d93-80fa0f166436',
          'isActive': true,
          'balance': '$3,067.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Alyssa Glass',
          'gender': 'female',
          'company': 'Oceanica',
          'email': 'alyssaglass@oceanica.com',
          'phone': '+1 (948) 460-2458',
          'address': {
            'street': 265,
            'city': 'Wilsonia',
            'state': 'California',
            'zip': 4784
          },
          'about': 'Quis adipisicing incididunt laborum non reprehenderit cupidatat Lorem eiusmod veniam consequat Lorem. Incididunt deserunt irure officia consequat ut ex in mollit fugiat eu. Aliquip proident commodo ut est enim pariatur exercitation enim. Ex qui id pariatur cillum aliqua non officia aute nisi aliqua cupidatat eu minim ad. Aliqua proident irure labore voluptate dolore ad sunt laboris commodo quis.\r\n',
          'registered': '2008-12-05T02:30:30+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Olive Castaneda'
            },
            {
              'id': 1,
              'name': 'Lorena Mckee'
            },
            {
              'id': 2,
              'name': 'Roslyn Merritt'
            }
          ]
        },
        {
          'id': 120,
          'guid': '094798a4-3e39-43d0-a11a-6c8c152686dc',
          'isActive': true,
          'balance': '$2,717.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Sheree Fisher',
          'gender': 'female',
          'company': 'Valreda',
          'email': 'shereefisher@valreda.com',
          'phone': '+1 (853) 565-3536',
          'address': {
            'street': 281,
            'city': 'Oasis',
            'state': 'Massachusetts',
            'zip': 5913
          },
          'about': 'Aute cillum aliquip irure officia duis excepteur anim. Exercitation officia est excepteur et consectetur mollit. Eu exercitation qui magna adipisicing fugiat exercitation anim occaecat magna adipisicing ad. Occaecat officia anim tempor ipsum ipsum et eiusmod cillum reprehenderit veniam.\r\n',
          'registered': '2013-07-25T16:42:40+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Yolanda Cline'
            },
            {
              'id': 1,
              'name': 'Christi Roberts'
            },
            {
              'id': 2,
              'name': 'Linda Day'
            }
          ]
        },
        {
          'id': 121,
          'guid': '4c20ab78-43cb-450d-939c-6c00f4c31b2d',
          'isActive': true,
          'balance': '$2,285.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Karyn Holden',
          'gender': 'female',
          'company': 'Zolavo',
          'email': 'karynholden@zolavo.com',
          'phone': '+1 (805) 542-3355',
          'address': {
            'street': 946,
            'city': 'Calvary',
            'state': 'Alaska',
            'zip': 6142
          },
          'about': 'Non consequat aliqua magna nisi laboris. Est qui eiusmod dolor labore labore. Ad officia irure velit officia ipsum Lorem ut dolore excepteur cupidatat ex enim velit. Reprehenderit velit eiusmod laboris fugiat do. Ex sint Lorem sunt laborum adipisicing consectetur consequat velit. Eu veniam nisi amet non magna culpa nisi.\r\n',
          'registered': '1996-09-14T02:48:38+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Strickland Flores'
            },
            {
              'id': 1,
              'name': 'Katie Wiggins'
            },
            {
              'id': 2,
              'name': 'Payne Beach'
            }
          ]
        },
        {
          'id': 122,
          'guid': '4fb735d4-aee7-4e9b-a6a0-e0b33a27139f',
          'isActive': false,
          'balance': '$3,642.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Lucas Gray',
          'gender': 'male',
          'company': 'Centuria',
          'email': 'lucasgray@centuria.com',
          'phone': '+1 (897) 538-3001',
          'address': {
            'street': 835,
            'city': 'Lorraine',
            'state': 'Oklahoma',
            'zip': 4843
          },
          'about': 'Amet occaecat et anim nostrud sint ut nulla sunt ipsum commodo sit. Id sint qui dolor est deserunt in eu consequat elit sunt labore nisi. Lorem aliqua adipisicing Lorem ipsum ipsum ullamco voluptate exercitation sunt aliquip nulla quis sunt aute. Fugiat mollit ipsum tempor ipsum duis. Exercitation incididunt deserunt cupidatat laboris minim in fugiat aliqua exercitation excepteur do eu aute. Officia Lorem esse nisi Lorem do deserunt cupidatat occaecat sint consectetur incididunt.\r\n',
          'registered': '1994-10-15T02:53:53+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Meadows Puckett'
            },
            {
              'id': 1,
              'name': 'Nora Bradley'
            },
            {
              'id': 2,
              'name': 'Riggs Hull'
            }
          ]
        },
        {
          'id': 123,
          'guid': '4442acd6-e8dc-4156-866c-826c56c26c16',
          'isActive': false,
          'balance': '$2,205.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Letitia Alexander',
          'gender': 'female',
          'company': 'Gogol',
          'email': 'letitiaalexander@gogol.com',
          'phone': '+1 (917) 494-3484',
          'address': {
            'street': 643,
            'city': 'Motley',
            'state': 'Illinois',
            'zip': 4852
          },
          'about': 'Do duis commodo irure laboris occaecat ex cillum aute proident. Eiusmod est sint ipsum qui Lorem et quis eu do quis consequat ipsum. Ut exercitation ullamco fugiat proident eu aliquip veniam esse esse in incididunt. Nulla proident eu sunt ex laboris ea veniam labore anim reprehenderit quis ea aute amet. Labore minim id et labore dolore eu fugiat ut quis laboris amet nulla. Qui dolor eu proident officia aliqua. Non laborum proident ipsum et dolor et laborum qui qui culpa.\r\n',
          'registered': '2003-05-22T19:07:22+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Ayala Foreman'
            },
            {
              'id': 1,
              'name': 'Corine Campos'
            },
            {
              'id': 2,
              'name': 'Carlson Daugherty'
            }
          ]
        },
        {
          'id': 124,
          'guid': '21fc5109-39c9-4008-bcd3-1b387d6793fe',
          'isActive': false,
          'balance': '$1,484.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Rowena Campbell',
          'gender': 'female',
          'company': 'Petigems',
          'email': 'rowenacampbell@petigems.com',
          'phone': '+1 (819) 475-2084',
          'address': {
            'street': 757,
            'city': 'Verdi',
            'state': 'Nevada',
            'zip': 3709
          },
          'about': 'Do enim nulla minim Lorem adipisicing sint irure minim id eu reprehenderit ex dolore exercitation. Officia magna dolore ea do. Laboris ex laboris excepteur quis deserunt officia in officia quis pariatur. Aute enim eiusmod culpa ad est culpa in. Sit anim ad nostrud nisi irure. Tempor deserunt nisi in aute elit consectetur deserunt irure ex in velit Lorem aute mollit.\r\n',
          'registered': '1990-09-04T21:34:09+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Suzette Yates'
            },
            {
              'id': 1,
              'name': 'Laura Dorsey'
            },
            {
              'id': 2,
              'name': 'Pauline Lindsay'
            }
          ]
        },
        {
          'id': 125,
          'guid': 'ef6eba35-3313-496f-a864-86a95c503c31',
          'isActive': false,
          'balance': '$1,631.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Roberta Nixon',
          'gender': 'female',
          'company': 'Grupoli',
          'email': 'robertanixon@grupoli.com',
          'phone': '+1 (915) 570-3334',
          'address': {
            'street': 805,
            'city': 'Sunnyside',
            'state': 'New York',
            'zip': 5442
          },
          'about': 'Eu ad occaecat commodo qui officia. Proident sunt officia Lorem irure ut voluptate. Officia sunt ea occaecat laboris cillum. Deserunt proident consequat in ea ipsum duis aliquip do. Laboris culpa cillum veniam labore et veniam mollit laboris tempor.\r\n',
          'registered': '1991-08-06T22:52:38+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Berta Perkins'
            },
            {
              'id': 1,
              'name': 'Potts Lynch'
            },
            {
              'id': 2,
              'name': 'Ora Love'
            }
          ]
        },
        {
          'id': 126,
          'guid': '2ecc802a-6707-4ab2-a724-51ba7b8b6617',
          'isActive': false,
          'balance': '$2,628.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Flynn Carver',
          'gender': 'male',
          'company': 'Koogle',
          'email': 'flynncarver@koogle.com',
          'phone': '+1 (986) 490-2718',
          'address': {
            'street': 766,
            'city': 'Advance',
            'state': 'Arizona',
            'zip': 9968
          },
          'about': 'Sint labore aliquip voluptate mollit anim excepteur nostrud non in ipsum. Quis quis est occaecat qui enim sint Lorem. Ut incididunt commodo aliqua do aliqua in Lorem ipsum fugiat ex aliqua sunt nostrud irure. Lorem labore mollit aliqua proident non magna sit Lorem.\r\n',
          'registered': '2004-09-16T04:51:45+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Rosie Baldwin'
            },
            {
              'id': 1,
              'name': 'Cooper Avery'
            },
            {
              'id': 2,
              'name': 'Stuart Clements'
            }
          ]
        },
        {
          'id': 127,
          'guid': 'f193e270-5e3e-4c5b-ae52-32bb1358fbe8',
          'isActive': false,
          'balance': '$3,371.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Mack Cherry',
          'gender': 'male',
          'company': 'Anocha',
          'email': 'mackcherry@anocha.com',
          'phone': '+1 (951) 545-2171',
          'address': {
            'street': 381,
            'city': 'Boling',
            'state': 'Idaho',
            'zip': 2387
          },
          'about': 'Commodo consectetur sunt aliquip ullamco in irure dolore. Deserunt officia deserunt nostrud eiusmod duis do deserunt exercitation. Ea consectetur cupidatat ea dolore elit sint Lorem commodo Lorem. Reprehenderit tempor in minim qui consequat est ullamco tempor adipisicing ea. Enim pariatur ullamco proident voluptate laboris sit commodo eiusmod. Ipsum consequat in eu voluptate minim Lorem nisi ut.\r\n',
          'registered': '2012-04-10T21:45:02+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mcconnell Garrett'
            },
            {
              'id': 1,
              'name': 'Vickie Riley'
            },
            {
              'id': 2,
              'name': 'Bartlett Berry'
            }
          ]
        },
        {
          'id': 128,
          'guid': '1ca29695-c9ab-434b-8acc-f74619686a51',
          'isActive': false,
          'balance': '$3,828.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Browning Curtis',
          'gender': 'male',
          'company': 'Duflex',
          'email': 'browningcurtis@duflex.com',
          'phone': '+1 (855) 435-2488',
          'address': {
            'street': 604,
            'city': 'Nord',
            'state': 'Montana',
            'zip': 1732
          },
          'about': 'Consectetur cillum est aute ullamco non occaecat cupidatat. Mollit enim ad sit quis mollit reprehenderit. Eu enim commodo quis est irure consequat et commodo duis ea duis proident fugiat ut. Pariatur eiusmod consectetur veniam magna tempor. Dolor dolor magna sunt aliquip deserunt sit reprehenderit nisi dolore duis dolor aliqua id. Lorem dolore nisi amet adipisicing veniam fugiat est consectetur irure magna culpa proident id ex.\r\n',
          'registered': '2008-12-13T05:58:26+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Alisa Harmon'
            },
            {
              'id': 1,
              'name': 'Angie Long'
            },
            {
              'id': 2,
              'name': 'Sara Summers'
            }
          ]
        },
        {
          'id': 129,
          'guid': 'e48f3320-f619-4a9d-b00a-8e5a2229da02',
          'isActive': false,
          'balance': '$1,216.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Frank Huber',
          'gender': 'male',
          'company': 'Medmex',
          'email': 'frankhuber@medmex.com',
          'phone': '+1 (917) 403-3466',
          'address': {
            'street': 328,
            'city': 'Stockwell',
            'state': 'Missouri',
            'zip': 8952
          },
          'about': 'Non ut exercitation veniam fugiat duis eiusmod sunt sit consectetur esse duis ad cupidatat. Nostrud laborum tempor mollit aliqua amet. Deserunt elit sit irure minim aute laboris. Ad culpa enim quis laborum tempor non adipisicing. Labore sit do minim adipisicing irure. Fugiat proident fugiat exercitation anim amet consectetur quis excepteur ut. Veniam duis laboris tempor aliquip consequat eiusmod aute ullamco deserunt fugiat minim id reprehenderit.\r\n',
          'registered': '2011-09-14T20:27:29+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Cooke Durham'
            },
            {
              'id': 1,
              'name': 'Debora Gay'
            },
            {
              'id': 2,
              'name': 'Goodman Dixon'
            }
          ]
        },
        {
          'id': 130,
          'guid': 'eaac94f0-9467-4ab2-b5db-bdd7ea056d19',
          'isActive': true,
          'balance': '$1,143.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Clements Olson',
          'gender': 'male',
          'company': 'Kinetica',
          'email': 'clementsolson@kinetica.com',
          'phone': '+1 (959) 457-3845',
          'address': {
            'street': 371,
            'city': 'Topaz',
            'state': 'South Dakota',
            'zip': 613
          },
          'about': 'Eiusmod do officia ipsum ut sit elit elit nulla ut Lorem. In et in anim id. Esse deserunt pariatur incididunt eu elit qui ex voluptate excepteur eiusmod. Elit dolor adipisicing dolore dolore et qui ex. Eu culpa laboris laboris deserunt et laboris mollit quis. Amet cillum dolore qui in est nisi mollit.\r\n',
          'registered': '2007-03-04T16:06:41+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Johnson Miranda'
            },
            {
              'id': 1,
              'name': 'Fuller Key'
            },
            {
              'id': 2,
              'name': 'Marylou Madden'
            }
          ]
        },
        {
          'id': 131,
          'guid': '62560091-6b89-4158-8057-5b52ca346d77',
          'isActive': false,
          'balance': '$3,162.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Hallie Schneider',
          'gender': 'female',
          'company': 'Kineticut',
          'email': 'hallieschneider@kineticut.com',
          'phone': '+1 (864) 437-3755',
          'address': {
            'street': 349,
            'city': 'Campo',
            'state': 'Kansas',
            'zip': 3724
          },
          'about': 'Commodo veniam eiusmod ullamco pariatur esse pariatur occaecat anim eiusmod pariatur proident dolore incididunt. Eiusmod amet dolore duis dolor ullamco esse amet consectetur in ad occaecat consequat. Non id qui aute consequat aliquip veniam dolor ea officia laboris consectetur. In adipisicing exercitation commodo ullamco elit. Incididunt deserunt id veniam dolore incididunt eiusmod excepteur exercitation commodo anim et ipsum cupidatat. In occaecat eiusmod minim duis.\r\n',
          'registered': '2007-06-07T22:04:27+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Jenkins Emerson'
            },
            {
              'id': 1,
              'name': 'Kerr Gonzales'
            },
            {
              'id': 2,
              'name': 'Aimee Cardenas'
            }
          ]
        },
        {
          'id': 132,
          'guid': 'd714458a-aa77-4652-aa1e-dcb2fcbcc0be',
          'isActive': false,
          'balance': '$1,213.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Jacquelyn Dean',
          'gender': 'female',
          'company': 'Zaj',
          'email': 'jacquelyndean@zaj.com',
          'phone': '+1 (862) 426-2572',
          'address': {
            'street': 968,
            'city': 'Bannock',
            'state': 'South Carolina',
            'zip': 7399
          },
          'about': 'Minim nostrud minim nisi cillum velit est amet Lorem incididunt proident magna in esse. Velit incididunt esse excepteur et amet consequat ut mollit id. Nisi ex tempor aute anim consectetur deserunt id magna Lorem reprehenderit proident.\r\n',
          'registered': '1988-11-09T17:54:58+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Glenn Acosta'
            },
            {
              'id': 1,
              'name': 'Morris Kennedy'
            },
            {
              'id': 2,
              'name': 'Manning Bird'
            }
          ]
        },
        {
          'id': 133,
          'guid': '2f997187-3e41-451a-8bc1-1377f7f93ca3',
          'isActive': false,
          'balance': '$2,559.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Beck Mccall',
          'gender': 'male',
          'company': 'Ebidco',
          'email': 'beckmccall@ebidco.com',
          'phone': '+1 (972) 519-3952',
          'address': {
            'street': 409,
            'city': 'Fillmore',
            'state': 'Louisiana',
            'zip': 5367
          },
          'about': 'Minim fugiat eiusmod amet pariatur ex eiusmod mollit. Anim consequat mollit ipsum nisi officia aliqua. Ullamco ullamco tempor ipsum enim aute do. Consectetur commodo non eu dolore adipisicing commodo sit ea deserunt non. Ut est cillum dolore qui tempor pariatur. Voluptate incididunt quis minim proident consectetur id. Irure ut voluptate qui et culpa.\r\n',
          'registered': '2010-08-31T19:52:31+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Yesenia Hancock'
            },
            {
              'id': 1,
              'name': 'Rosa Perez'
            },
            {
              'id': 2,
              'name': 'Bridgette Wright'
            }
          ]
        },
        {
          'id': 134,
          'guid': '70e8f207-c84c-41bf-aa00-d3f546c61463',
          'isActive': true,
          'balance': '$1,778.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Angelique Gardner',
          'gender': 'female',
          'company': 'Imperium',
          'email': 'angeliquegardner@imperium.com',
          'phone': '+1 (879) 577-2860',
          'address': {
            'street': 556,
            'city': 'Bladensburg',
            'state': 'North Dakota',
            'zip': 5974
          },
          'about': 'Labore laboris Lorem mollit ut sit ex mollit. Amet eu mollit tempor consectetur Lorem tempor ipsum. Proident duis qui dolor dolore commodo anim est magna ad ipsum aliqua. Sunt eu pariatur incididunt sunt cillum proident cillum officia dolor culpa do. Ipsum aliqua eu id proident fugiat. Et commodo ea laborum sint.\r\n',
          'registered': '1994-07-03T13:48:47+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mai Webb'
            },
            {
              'id': 1,
              'name': 'Margo Figueroa'
            },
            {
              'id': 2,
              'name': 'Bray Ferguson'
            }
          ]
        },
        {
          'id': 135,
          'guid': 'b0765507-53b8-4756-82f4-8c9cd73e8faf',
          'isActive': true,
          'balance': '$2,133.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Penelope Foster',
          'gender': 'female',
          'company': 'Digifad',
          'email': 'penelopefoster@digifad.com',
          'phone': '+1 (906) 565-2492',
          'address': {
            'street': 482,
            'city': 'Canoochee',
            'state': 'Vermont',
            'zip': 1625
          },
          'about': 'Pariatur dolore sint velit pariatur esse fugiat eiusmod culpa aute aute velit. Cillum ad aliquip cillum mollit ex nulla deserunt labore. Do sint dolor voluptate do culpa in et et reprehenderit quis aliqua consequat ea.\r\n',
          'registered': '2011-09-02T22:07:52+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Strong Hodges'
            },
            {
              'id': 1,
              'name': 'Millicent Sosa'
            },
            {
              'id': 2,
              'name': 'Bonita Cole'
            }
          ]
        },
        {
          'id': 136,
          'guid': '082165e2-84c2-45bd-85ab-6240cc79f343',
          'isActive': false,
          'balance': '$1,626.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Clarice Macias',
          'gender': 'female',
          'company': 'Visualix',
          'email': 'claricemacias@visualix.com',
          'phone': '+1 (879) 423-3121',
          'address': {
            'street': 445,
            'city': 'Boyd',
            'state': 'North Carolina',
            'zip': 9966
          },
          'about': 'Duis magna pariatur ullamco irure do ea exercitation do. Voluptate cillum cupidatat nostrud ut culpa ipsum. Excepteur enim reprehenderit dolor mollit nisi do Lorem fugiat. Culpa eiusmod qui amet irure aliqua deserunt nulla nisi eu. Duis eiusmod sunt culpa pariatur non elit proident ut incididunt.\r\n',
          'registered': '2005-02-28T21:34:57+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Jennings Bates'
            },
            {
              'id': 1,
              'name': 'Yvette Bryant'
            },
            {
              'id': 2,
              'name': 'Foster Bush'
            }
          ]
        },
        {
          'id': 137,
          'guid': 'c3203d03-d7a7-423a-ba9e-09460ebab11f',
          'isActive': true,
          'balance': '$1,367.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Boyle Dale',
          'gender': 'male',
          'company': 'Niquent',
          'email': 'boyledale@niquent.com',
          'phone': '+1 (947) 596-2316',
          'address': {
            'street': 206,
            'city': 'Homeland',
            'state': 'Pennsylvania',
            'zip': 4041
          },
          'about': 'Dolor quis minim mollit irure excepteur nisi tempor dolor incididunt elit. Sunt officia proident sunt anim voluptate minim id. Ipsum cupidatat duis et qui nisi voluptate tempor laborum ut do mollit. Cillum adipisicing duis exercitation ipsum est occaecat. Irure magna deserunt fugiat ea eiusmod fugiat nisi esse. In amet eiusmod non mollit minim culpa elit consectetur cillum ad anim eiusmod sint aliqua. Ex fugiat aliqua labore et cupidatat occaecat mollit dolore pariatur id eu est est.\r\n',
          'registered': '2006-12-25T07:16:06+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Wilkins Larsen'
            },
            {
              'id': 1,
              'name': 'Rosalyn Dennis'
            },
            {
              'id': 2,
              'name': 'Flossie Matthews'
            }
          ]
        },
        {
          'id': 138,
          'guid': '51357561-ada6-4871-b001-3922205f23b1',
          'isActive': true,
          'balance': '$2,980.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Espinoza Brooks',
          'gender': 'male',
          'company': 'Flyboyz',
          'email': 'espinozabrooks@flyboyz.com',
          'phone': '+1 (953) 476-2580',
          'address': {
            'street': 392,
            'city': 'Alamo',
            'state': 'Wisconsin',
            'zip': 1626
          },
          'about': 'Dolore irure consequat sunt Lorem officia pariatur ut ut et ea magna nulla non veniam. Cupidatat id amet elit incididunt adipisicing anim consectetur sunt aliqua. Id aliquip reprehenderit nostrud elit qui aute cupidatat aute id cillum nulla veniam amet.\r\n',
          'registered': '1997-11-29T01:50:30+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Vang Cobb'
            },
            {
              'id': 1,
              'name': 'Brittney Morris'
            },
            {
              'id': 2,
              'name': 'Washington Beard'
            }
          ]
        },
        {
          'id': 139,
          'guid': 'b25fb618-922f-48f7-98d7-c526082b54ab',
          'isActive': true,
          'balance': '$2,337.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Dolly Miller',
          'gender': 'female',
          'company': 'Quarex',
          'email': 'dollymiller@quarex.com',
          'phone': '+1 (935) 527-2943',
          'address': {
            'street': 249,
            'city': 'Chical',
            'state': 'Utah',
            'zip': 8996
          },
          'about': 'In excepteur nisi duis sunt esse cupidatat non. Deserunt voluptate commodo veniam laboris velit et aute non nulla duis exercitation. Enim anim dolor deserunt nulla esse anim aute id do aliquip duis enim minim ut. Irure nulla velit mollit sunt dolor velit labore consectetur est nulla nulla ullamco magna nulla. Pariatur id ut exercitation consequat non eiusmod esse anim. Tempor sint do nisi veniam.\r\n',
          'registered': '1994-07-24T07:13:41+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Twila Powers'
            },
            {
              'id': 1,
              'name': 'Ryan Wyatt'
            },
            {
              'id': 2,
              'name': 'Burks Clark'
            }
          ]
        },
        {
          'id': 140,
          'guid': '291d61ca-0235-4e94-9510-0b3689e7ef2f',
          'isActive': false,
          'balance': '$1,489.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Goodwin Alford',
          'gender': 'male',
          'company': 'Escenta',
          'email': 'goodwinalford@escenta.com',
          'phone': '+1 (865) 481-3772',
          'address': {
            'street': 953,
            'city': 'Smeltertown',
            'state': 'Kentucky',
            'zip': 604
          },
          'about': 'Eiusmod enim culpa aliqua ea ex reprehenderit. Dolore quis cupidatat labore incididunt magna. Commodo magna voluptate reprehenderit aliquip ea. Irure aute proident officia occaecat non incididunt Lorem cupidatat nisi. Ad amet dolor consectetur ipsum occaecat esse consequat non reprehenderit esse laboris aliqua nulla. Qui do aliqua est officia adipisicing sunt anim dolor occaecat ullamco laborum velit ut.\r\n',
          'registered': '1999-04-29T15:12:29+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Araceli Albert'
            },
            {
              'id': 1,
              'name': 'Jeanette Neal'
            },
            {
              'id': 2,
              'name': 'Woodard Sharp'
            }
          ]
        },
        {
          'id': 141,
          'guid': '737fe951-f2e3-4778-acc6-2fef5158380e',
          'isActive': false,
          'balance': '$3,732.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Joan Preston',
          'gender': 'female',
          'company': 'Techtrix',
          'email': 'joanpreston@techtrix.com',
          'phone': '+1 (972) 503-2155',
          'address': {
            'street': 711,
            'city': 'Oberlin',
            'state': 'Iowa',
            'zip': 4383
          },
          'about': 'Sit ullamco nisi quis ad non sint. Magna amet anim irure ad enim dolore. Commodo elit est sit veniam labore qui esse exercitation eu. Amet labore aliquip aute et in ipsum culpa voluptate ut exercitation sit exercitation.\r\n',
          'registered': '2001-06-20T03:25:04+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Marquez Heath'
            },
            {
              'id': 1,
              'name': 'Roach Hubbard'
            },
            {
              'id': 2,
              'name': 'Karla Phillips'
            }
          ]
        },
        {
          'id': 142,
          'guid': '5da94330-73c0-4b2d-a887-06e5f9a27dac',
          'isActive': true,
          'balance': '$2,473.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Kramer Booker',
          'gender': 'male',
          'company': 'Orbaxter',
          'email': 'kramerbooker@orbaxter.com',
          'phone': '+1 (995) 524-3299',
          'address': {
            'street': 520,
            'city': 'Twilight',
            'state': 'Ohio',
            'zip': 6151
          },
          'about': 'Voluptate consequat pariatur nulla Lorem fugiat consequat deserunt anim eiusmod. Sunt reprehenderit amet ut enim fugiat tempor eiusmod. Veniam nulla tempor esse fugiat exercitation occaecat labore nisi incididunt. Nisi enim ipsum nulla quis duis qui in. Ipsum pariatur excepteur incididunt aliquip veniam sit anim qui et sunt ullamco eiusmod. Reprehenderit commodo nostrud sint cupidatat dolor veniam.\r\n',
          'registered': '1993-08-15T13:12:28+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Charlene Wade'
            },
            {
              'id': 1,
              'name': 'Oliver Chang'
            },
            {
              'id': 2,
              'name': 'Sadie Dillard'
            }
          ]
        },
        {
          'id': 143,
          'guid': '20a5a300-59e0-4dca-86af-e0916e367aef',
          'isActive': false,
          'balance': '$2,644.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Carpenter Hammond',
          'gender': 'male',
          'company': 'Tropolis',
          'email': 'carpenterhammond@tropolis.com',
          'phone': '+1 (927) 583-3026',
          'address': {
            'street': 770,
            'city': 'Healy',
            'state': 'Maine',
            'zip': 1750
          },
          'about': 'Id nostrud consectetur sint labore irure cupidatat cupidatat aute. Lorem sint fugiat laboris officia laborum fugiat excepteur consequat nostrud ut laboris ad do ullamco. Elit nostrud labore ullamco ex elit velit sunt ullamco sit do ullamco quis commodo. Ex ipsum est reprehenderit amet esse est eu sunt. Minim proident ea Lorem et cillum id laborum eiusmod est exercitation ut.\r\n',
          'registered': '2002-08-02T16:18:58+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Atkins Mueller'
            },
            {
              'id': 1,
              'name': 'Key Mcgee'
            },
            {
              'id': 2,
              'name': 'Rhoda Cantrell'
            }
          ]
        },
        {
          'id': 144,
          'guid': 'cb828595-cdd8-44a0-966b-aeb08300537d',
          'isActive': true,
          'balance': '$2,927.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Guthrie Stokes',
          'gender': 'male',
          'company': 'Polarax',
          'email': 'guthriestokes@polarax.com',
          'phone': '+1 (808) 584-2974',
          'address': {
            'street': 280,
            'city': 'Vicksburg',
            'state': 'Hawaii',
            'zip': 7206
          },
          'about': 'Esse sit est ullamco proident dolor non occaecat aute. Lorem occaecat cillum sit do minim nulla adipisicing fugiat sunt. Eu esse commodo tempor ullamco non mollit eu ullamco laborum. Laboris exercitation dolor dolore nisi fugiat mollit ex amet proident dolor occaecat in aliquip ipsum. Tempor labore cillum excepteur irure veniam nulla. Excepteur eu Lorem nisi pariatur nostrud nulla et laborum ullamco nostrud magna. Aute elit proident mollit culpa ad.\r\n',
          'registered': '2007-05-18T04:45:10+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Billie Juarez'
            },
            {
              'id': 1,
              'name': 'Rose Stone'
            },
            {
              'id': 2,
              'name': 'Lesa Gilmore'
            }
          ]
        },
        {
          'id': 145,
          'guid': 'e5e818c3-76af-4380-a90f-98761516986c',
          'isActive': true,
          'balance': '$1,844.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Gillespie Rojas',
          'gender': 'male',
          'company': 'Helixo',
          'email': 'gillespierojas@helixo.com',
          'phone': '+1 (822) 458-3034',
          'address': {
            'street': 197,
            'city': 'Loyalhanna',
            'state': 'Arkansas',
            'zip': 7453
          },
          'about': 'Sunt incididunt eiusmod dolor commodo id voluptate culpa ipsum incididunt Lorem do tempor ea. Sunt sint duis est laboris nulla. Enim ut commodo nulla ea occaecat. Adipisicing culpa sit ullamco velit laboris quis. Dolor reprehenderit exercitation veniam ut sint nostrud eu nulla amet proident veniam fugiat Lorem ad. Irure dolore tempor commodo fugiat.\r\n',
          'registered': '2011-02-28T21:28:26+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Santana Mason'
            },
            {
              'id': 1,
              'name': 'Bridgett Fowler'
            },
            {
              'id': 2,
              'name': 'Jana Rogers'
            }
          ]
        },
        {
          'id': 146,
          'guid': '9e762266-b65e-40f3-9fa4-d1a1082abd3f',
          'isActive': true,
          'balance': '$1,332.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Burns Bishop',
          'gender': 'male',
          'company': 'Isbol',
          'email': 'burnsbishop@isbol.com',
          'phone': '+1 (973) 470-2443',
          'address': {
            'street': 885,
            'city': 'Chalfant',
            'state': 'Nebraska',
            'zip': 5554
          },
          'about': 'Eiusmod sunt fugiat id non mollit aliquip esse sunt eiusmod qui. Enim ea Lorem ullamco ipsum. Laborum mollit consequat et mollit tempor tempor dolore officia. Veniam mollit nisi excepteur dolore non Lorem duis ipsum dolor irure consequat irure magna.\r\n',
          'registered': '2013-10-11T20:36:28+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Chapman Owens'
            },
            {
              'id': 1,
              'name': 'Mccray Schmidt'
            },
            {
              'id': 2,
              'name': 'Tracy Blankenship'
            }
          ]
        },
        {
          'id': 147,
          'guid': '60797637-17e0-485b-b9f0-bc6946d5ddfd',
          'isActive': true,
          'balance': '$3,658.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Nolan Romero',
          'gender': 'male',
          'company': 'Turnling',
          'email': 'nolanromero@turnling.com',
          'phone': '+1 (897) 500-3920',
          'address': {
            'street': 913,
            'city': 'Ronco',
            'state': 'Delaware',
            'zip': 7379
          },
          'about': 'Magna labore consequat eiusmod cupidatat laboris eu esse officia exercitation magna. Ad eu consectetur duis incididunt adipisicing irure ipsum dolor exercitation laborum est sit velit. Ea eu ad reprehenderit pariatur reprehenderit commodo cillum ipsum. Cupidatat laboris incididunt consequat cillum eu irure excepteur Lorem minim consequat minim exercitation proident est. Incididunt occaecat velit commodo occaecat. Dolore eiusmod consequat deserunt incididunt ullamco nostrud laboris ad ut sit dolore enim fugiat.\r\n',
          'registered': '2012-11-07T00:04:26+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Ofelia Herring'
            },
            {
              'id': 1,
              'name': 'Mann David'
            },
            {
              'id': 2,
              'name': 'Reese Knight'
            }
          ]
        },
        {
          'id': 148,
          'guid': '4faee5bb-41e0-4ee7-b0b1-ef48b185d405',
          'isActive': false,
          'balance': '$1,913.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Mendoza Gilmore',
          'gender': 'male',
          'company': 'Undertap',
          'email': 'mendozagilmore@undertap.com',
          'phone': '+1 (844) 524-3950',
          'address': {
            'street': 975,
            'city': 'Muir',
            'state': 'New Mexico',
            'zip': 8309
          },
          'about': 'Aliqua nulla proident excepteur est laborum adipisicing amet consequat ea duis aute occaecat ad. Ipsum anim et proident enim ex exercitation cillum sit excepteur. Ut nisi sit cupidatat sint anim do minim velit dolor cillum. Est irure ea culpa esse et eiusmod consectetur cillum quis.\r\n',
          'registered': '2000-05-26T04:03:38+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Charity Frost'
            },
            {
              'id': 1,
              'name': 'Frost Walton'
            },
            {
              'id': 2,
              'name': 'Betty Miranda'
            }
          ]
        },
        {
          'id': 149,
          'guid': 'ed0f1742-1fad-4618-8aec-0b5d9d27db17',
          'isActive': true,
          'balance': '$2,222.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Barton Martinez',
          'gender': 'male',
          'company': 'Insuron',
          'email': 'bartonmartinez@insuron.com',
          'phone': '+1 (945) 563-2527',
          'address': {
            'street': 671,
            'city': 'Hannasville',
            'state': 'Tennessee',
            'zip': 5087
          },
          'about': 'Culpa et aliquip ipsum labore id nisi cupidatat ut ea consequat ipsum exercitation. Ipsum ut mollit elit dolor eu esse excepteur in culpa minim aliqua fugiat cupidatat. Mollit anim consectetur anim officia.\r\n',
          'registered': '1992-09-24T07:35:03+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Austin York'
            },
            {
              'id': 1,
              'name': 'Hess Andrews'
            },
            {
              'id': 2,
              'name': 'Danielle Horn'
            }
          ]
        },
        {
          'id': 150,
          'guid': 'ee9c49bc-f394-46fe-b308-22f51f439c19',
          'isActive': false,
          'balance': '$2,844.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Cecile Dorsey',
          'gender': 'female',
          'company': 'Tetratrex',
          'email': 'ceciledorsey@tetratrex.com',
          'phone': '+1 (917) 564-2202',
          'address': {
            'street': 618,
            'city': 'Defiance',
            'state': 'California',
            'zip': 9018
          },
          'about': 'Laboris cupidatat fugiat consequat sit nisi et aliquip adipisicing dolore aliqua eiusmod Lorem ut proident. Nulla voluptate reprehenderit laboris elit eiusmod aliquip ad minim sit. Ex labore sit pariatur tempor pariatur culpa velit reprehenderit irure officia enim exercitation fugiat. Labore et Lorem minim do eu cupidatat excepteur dolor.\r\n',
          'registered': '1991-10-15T08:24:05+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'June Britt'
            },
            {
              'id': 1,
              'name': 'Ashley Tucker'
            },
            {
              'id': 2,
              'name': 'Mcintyre Maldonado'
            }
          ]
        },
        {
          'id': 151,
          'guid': 'cac4e84d-be79-4d96-981d-2eacb33909d0',
          'isActive': true,
          'balance': '$2,786.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Franks Herrera',
          'gender': 'male',
          'company': 'Arctiq',
          'email': 'franksherrera@arctiq.com',
          'phone': '+1 (954) 417-2621',
          'address': {
            'street': 979,
            'city': 'Stewart',
            'state': 'Kansas',
            'zip': 3408
          },
          'about': 'Consectetur aliquip laborum in voluptate consectetur ipsum minim. Magna fugiat adipisicing magna veniam. Reprehenderit dolor reprehenderit consectetur enim in elit officia. Occaecat incididunt adipisicing velit et nostrud sit elit dolore. Deserunt qui aliquip eiusmod exercitation.\r\n',
          'registered': '2005-12-25T03:15:50+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Ernestine Ashley'
            },
            {
              'id': 1,
              'name': 'Dudley Ballard'
            },
            {
              'id': 2,
              'name': 'Teresa Young'
            }
          ]
        },
        {
          'id': 152,
          'guid': 'fa07a404-6fdb-4cc4-a530-00b82160e80a',
          'isActive': false,
          'balance': '$2,711.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Francisca Foreman',
          'gender': 'female',
          'company': 'Petigems',
          'email': 'franciscaforeman@petigems.com',
          'phone': '+1 (943) 511-3813',
          'address': {
            'street': 690,
            'city': 'Masthope',
            'state': 'New Hampshire',
            'zip': 8290
          },
          'about': 'Minim labore Lorem laborum fugiat sit ex esse excepteur laboris esse pariatur. Dolore eu laboris incididunt esse exercitation labore sit occaecat. Ut proident et magna veniam.\r\n',
          'registered': '2010-07-31T00:34:25+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Bowman Harding'
            },
            {
              'id': 1,
              'name': 'Florine Butler'
            },
            {
              'id': 2,
              'name': 'Sherri Fry'
            }
          ]
        },
        {
          'id': 153,
          'guid': '60cb20b3-63b0-4eea-80c3-0c3bcbf7adb1',
          'isActive': true,
          'balance': '$3,722.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Allie Gonzales',
          'gender': 'female',
          'company': 'Extremo',
          'email': 'alliegonzales@extremo.com',
          'phone': '+1 (921) 427-3341',
          'address': {
            'street': 973,
            'city': 'Independence',
            'state': 'Arkansas',
            'zip': 6163
          },
          'about': 'Consequat laborum aliqua adipisicing excepteur laboris ex est adipisicing mollit. Nulla tempor voluptate duis occaecat dolor pariatur dolore officia ipsum pariatur in sint quis fugiat. Dolore ea proident aliquip deserunt aliqua aute.\r\n',
          'registered': '1993-04-30T23:53:30+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Park Spence'
            },
            {
              'id': 1,
              'name': 'Bridgett Mccarty'
            },
            {
              'id': 2,
              'name': 'Johnson Schroeder'
            }
          ]
        },
        {
          'id': 154,
          'guid': '215e1e5b-ec2e-4c3f-8399-a179326f25a6',
          'isActive': true,
          'balance': '$2,083.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Vance Hamilton',
          'gender': 'male',
          'company': 'Naxdis',
          'email': 'vancehamilton@naxdis.com',
          'phone': '+1 (986) 416-2020',
          'address': {
            'street': 472,
            'city': 'Choctaw',
            'state': 'Colorado',
            'zip': 4825
          },
          'about': 'Consequat labore enim consectetur sunt anim aliqua ea qui consequat eu minim ad sit. Enim sit occaecat sint minim amet labore consectetur exercitation do incididunt id cupidatat amet nulla. Elit ullamco quis nisi ad officia aliquip occaecat dolor minim consectetur ut. Eu voluptate officia tempor laboris sunt ea elit cillum sint ipsum quis incididunt ut. Lorem dolor qui exercitation ex est adipisicing Lorem.\r\n',
          'registered': '1993-04-11T15:45:35+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Waters Lamb'
            },
            {
              'id': 1,
              'name': 'Avis Terrell'
            },
            {
              'id': 2,
              'name': 'Wanda Dickson'
            }
          ]
        },
        {
          'id': 155,
          'guid': '513ecccb-ce41-4be7-ad82-2fc1e2232673',
          'isActive': true,
          'balance': '$2,475.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Houston Park',
          'gender': 'male',
          'company': 'Lyria',
          'email': 'houstonpark@lyria.com',
          'phone': '+1 (973) 453-3701',
          'address': {
            'street': 971,
            'city': 'Linganore',
            'state': 'Oregon',
            'zip': 5912
          },
          'about': 'In commodo aute minim ipsum qui. Deserunt irure qui excepteur irure Lorem. Laborum culpa et enim nostrud occaecat cillum nulla ullamco minim ipsum mollit irure culpa. Officia ea laboris nisi id sunt incididunt id aliquip excepteur. Eiusmod mollit duis nostrud qui et laborum. Ullamco deserunt fugiat ad fugiat laboris magna laboris incididunt. In ad Lorem id velit reprehenderit laborum ex voluptate aute mollit ea ipsum.\r\n',
          'registered': '2013-01-01T23:23:45+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Leann Burt'
            },
            {
              'id': 1,
              'name': 'Atkins Thompson'
            },
            {
              'id': 2,
              'name': 'Bolton Fuentes'
            }
          ]
        },
        {
          'id': 156,
          'guid': '6d721b2e-1dbe-4770-a2bc-e83dfe3adcf4',
          'isActive': false,
          'balance': '$1,638.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Sharon Meyers',
          'gender': 'female',
          'company': 'Hyplex',
          'email': 'sharonmeyers@hyplex.com',
          'phone': '+1 (906) 529-3578',
          'address': {
            'street': 720,
            'city': 'Orick',
            'state': 'Florida',
            'zip': 5865
          },
          'about': 'Occaecat sint anim labore ea excepteur tempor consequat aliquip ullamco non. Sunt anim sit Lorem tempor ut sunt. Dolore sunt occaecat duis cupidatat.\r\n',
          'registered': '2004-07-20T01:27:52+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Britt Coffey'
            },
            {
              'id': 1,
              'name': 'Kristina Myers'
            },
            {
              'id': 2,
              'name': 'Elinor Roach'
            }
          ]
        },
        {
          'id': 157,
          'guid': 'd81c7582-7780-4b7d-8fb2-d02051577e0f',
          'isActive': true,
          'balance': '$1,431.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Singleton Lyons',
          'gender': 'male',
          'company': 'Centregy',
          'email': 'singletonlyons@centregy.com',
          'phone': '+1 (998) 424-3737',
          'address': {
            'street': 278,
            'city': 'Eureka',
            'state': 'Illinois',
            'zip': 2200
          },
          'about': 'Exercitation dolor nisi Lorem culpa exercitation minim. Dolore ullamco consequat in magna deserunt aliqua aute eiusmod. Eu proident dolor fugiat officia nostrud aliqua ut ex pariatur non aute.\r\n',
          'registered': '2010-09-23T15:31:46+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Benton Mckenzie'
            },
            {
              'id': 1,
              'name': 'Patti Lloyd'
            },
            {
              'id': 2,
              'name': 'Cecelia Acosta'
            }
          ]
        },
        {
          'id': 158,
          'guid': 'bbbcaca1-a18a-4923-8b47-15ed88093c29',
          'isActive': true,
          'balance': '$3,010.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Snyder Becker',
          'gender': 'male',
          'company': 'Neptide',
          'email': 'snyderbecker@neptide.com',
          'phone': '+1 (823) 406-3315',
          'address': {
            'street': 420,
            'city': 'Nadine',
            'state': 'Kentucky',
            'zip': 2473
          },
          'about': 'Velit irure in proident excepteur voluptate eu voluptate. Cillum eu aliqua minim ad. Aute irure adipisicing cillum anim dolore. Ea laborum reprehenderit excepteur aliqua in elit eiusmod quis proident. Consectetur sint aute do aute dolor nostrud.\r\n',
          'registered': '2003-07-31T10:15:36+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Morrison Hahn'
            },
            {
              'id': 1,
              'name': 'Heather Stephenson'
            },
            {
              'id': 2,
              'name': 'Rosanna Brewer'
            }
          ]
        },
        {
          'id': 159,
          'guid': 'f996d7f6-57b8-4eea-8363-ac4357d0a97d',
          'isActive': true,
          'balance': '$2,073.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Velazquez Macdonald',
          'gender': 'male',
          'company': 'Earthwax',
          'email': 'velazquezmacdonald@earthwax.com',
          'phone': '+1 (918) 473-2383',
          'address': {
            'street': 323,
            'city': 'Wedgewood',
            'state': 'Texas',
            'zip': 7081
          },
          'about': 'Quis ex non aliqua in. Sunt enim do fugiat sint cillum cupidatat commodo in quis deserunt. Duis esse amet id id. Quis commodo nulla sunt commodo quis ex irure cillum. Ut enim magna enim mollit fugiat.\r\n',
          'registered': '1990-03-08T03:49:44+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Angelita Rocha'
            },
            {
              'id': 1,
              'name': 'Kirby Pace'
            },
            {
              'id': 2,
              'name': 'Judy Weaver'
            }
          ]
        },
        {
          'id': 160,
          'guid': '81f7cb89-3bed-41fc-a98d-9f445eac8f1b',
          'isActive': true,
          'balance': '$2,226.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Corina Ayala',
          'gender': 'female',
          'company': 'Snacktion',
          'email': 'corinaayala@snacktion.com',
          'phone': '+1 (949) 405-2957',
          'address': {
            'street': 897,
            'city': 'Ribera',
            'state': 'Louisiana',
            'zip': 214
          },
          'about': 'Labore proident do ullamco velit ipsum voluptate Lorem reprehenderit tempor laboris anim. Est irure cupidatat cupidatat pariatur. Consectetur adipisicing Lorem nostrud duis consequat officia proident culpa.\r\n',
          'registered': '2003-08-27T03:31:51+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Wendi Pickett'
            },
            {
              'id': 1,
              'name': 'Nadia Kramer'
            },
            {
              'id': 2,
              'name': 'Hickman Wall'
            }
          ]
        },
        {
          'id': 161,
          'guid': 'd04357c5-2cb2-46b5-ba0e-65618ca75b04',
          'isActive': false,
          'balance': '$2,420.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Glenna Hardy',
          'gender': 'female',
          'company': 'Izzby',
          'email': 'glennahardy@izzby.com',
          'phone': '+1 (849) 479-2064',
          'address': {
            'street': 970,
            'city': 'Nile',
            'state': 'Minnesota',
            'zip': 8402
          },
          'about': 'Eiusmod nisi sunt culpa Lorem anim. Amet laborum et ut et aliquip ex reprehenderit duis consequat. Id eiusmod nisi cillum amet anim ut aliquip dolore enim anim officia aliqua reprehenderit. Deserunt dolore aute reprehenderit dolor.\r\n',
          'registered': '1994-01-21T23:28:40+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Weeks Grimes'
            },
            {
              'id': 1,
              'name': 'Olsen Stephens'
            },
            {
              'id': 2,
              'name': 'Kaye Newman'
            }
          ]
        },
        {
          'id': 162,
          'guid': 'b29c9ae0-e21a-4310-990e-af1fce2779bb',
          'isActive': true,
          'balance': '$3,956.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Justice Allen',
          'gender': 'male',
          'company': 'Geekosis',
          'email': 'justiceallen@geekosis.com',
          'phone': '+1 (884) 557-2987',
          'address': {
            'street': 638,
            'city': 'Southmont',
            'state': 'Washington',
            'zip': 4153
          },
          'about': 'Laborum proident velit velit proident magna nostrud irure occaecat qui qui officia eiusmod deserunt. Exercitation duis incididunt esse laboris nulla esse ipsum. Veniam ut exercitation culpa fugiat commodo enim et ut ipsum qui cillum enim aute.\r\n',
          'registered': '1995-06-11T13:27:38+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Wilder Frank'
            },
            {
              'id': 1,
              'name': 'Lily Munoz'
            },
            {
              'id': 2,
              'name': 'Beverley Leblanc'
            }
          ]
        },
        {
          'id': 163,
          'guid': '22c7cce0-84ec-4c0f-93e1-e4d7a862bdb4',
          'isActive': true,
          'balance': '$2,568.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Randi Landry',
          'gender': 'female',
          'company': 'Obones',
          'email': 'randilandry@obones.com',
          'phone': '+1 (959) 599-3666',
          'address': {
            'street': 296,
            'city': 'Rowe',
            'state': 'Idaho',
            'zip': 1831
          },
          'about': 'Mollit exercitation cupidatat aliquip deserunt. Sunt tempor esse ipsum non. Id ex labore deserunt tempor cillum dolor amet esse. Enim dolore veniam mollit dolor aliquip incididunt ex nostrud exercitation. Ea sint occaecat dolore cupidatat deserunt ea consequat duis qui laboris sunt aliquip velit incididunt. Duis irure ipsum sunt elit veniam cillum non do dolor duis ea. Exercitation ea mollit aliquip eiusmod eu id elit anim laboris ea incididunt sint laborum.\r\n',
          'registered': '2000-05-12T22:47:11+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Perez Adams'
            },
            {
              'id': 1,
              'name': 'Jeanie English'
            },
            {
              'id': 2,
              'name': 'Mcfadden Sherman'
            }
          ]
        },
        {
          'id': 164,
          'guid': '7bf28852-d33c-45ee-960c-eff8f00e9bbf',
          'isActive': false,
          'balance': '$1,570.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Gray Leach',
          'gender': 'male',
          'company': 'Infotrips',
          'email': 'grayleach@infotrips.com',
          'phone': '+1 (929) 459-2028',
          'address': {
            'street': 466,
            'city': 'Hamilton',
            'state': 'North Dakota',
            'zip': 6361
          },
          'about': 'Enim in ex laborum pariatur fugiat aliquip adipisicing adipisicing. Dolore nostrud minim sint id ipsum aute sit deserunt. Velit irure anim nisi magna sunt incididunt nisi veniam. Nostrud tempor consectetur proident officia id esse sint quis commodo Lorem pariatur esse laborum aute. Ea officia est ut ea ex eiusmod officia laborum occaecat non nulla exercitation. Lorem incididunt quis Lorem officia sunt anim consectetur ut.\r\n',
          'registered': '1996-09-08T17:06:30+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Patrice Davenport'
            },
            {
              'id': 1,
              'name': 'Paulette Dunlap'
            },
            {
              'id': 2,
              'name': 'Whitehead Stein'
            }
          ]
        },
        {
          'id': 165,
          'guid': '7cf86794-ddc9-4f7c-a1b3-f29455ee7be4',
          'isActive': false,
          'balance': '$1,731.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Shelley Stanton',
          'gender': 'female',
          'company': 'Xoggle',
          'email': 'shelleystanton@xoggle.com',
          'phone': '+1 (848) 491-3114',
          'address': {
            'street': 981,
            'city': 'Iberia',
            'state': 'Mississippi',
            'zip': 1889
          },
          'about': 'Culpa eiusmod incididunt exercitation dolor ad. Sunt eu pariatur minim exercitation officia Lorem. Labore duis sint irure ut sint irure. Amet adipisicing aliquip sunt id qui dolor sunt dolor. In fugiat mollit ad labore aliquip exercitation eu mollit quis in. Eu enim amet sit ex fugiat aliqua pariatur. Nisi fugiat ullamco tempor officia esse culpa dolor enim ipsum officia cupidatat.\r\n',
          'registered': '2012-11-23T10:33:15+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Leta Duke'
            },
            {
              'id': 1,
              'name': 'Mabel Stevenson'
            },
            {
              'id': 2,
              'name': 'Burt Herman'
            }
          ]
        },
        {
          'id': 166,
          'guid': 'fb87f70f-8fd2-480c-ba0f-99000645d6fc',
          'isActive': false,
          'balance': '$1,769.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Roman Estrada',
          'gender': 'male',
          'company': 'Vetron',
          'email': 'romanestrada@vetron.com',
          'phone': '+1 (920) 461-3525',
          'address': {
            'street': 350,
            'city': 'Cade',
            'state': 'Wyoming',
            'zip': 8667
          },
          'about': 'Sint adipisicing excepteur ut laboris excepteur ex fugiat officia Lorem eiusmod culpa minim veniam dolor. Eu et et qui magna exercitation magna officia nisi nostrud sint reprehenderit reprehenderit mollit ut. Amet cupidatat quis elit sint do non quis consectetur proident aliquip. Eu veniam ullamco ex anim ad commodo minim veniam ea laboris. Exercitation nisi ex ea esse.\r\n',
          'registered': '2001-03-09T16:00:34+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Shawna Beck'
            },
            {
              'id': 1,
              'name': 'Mclean Wong'
            },
            {
              'id': 2,
              'name': 'Socorro Bell'
            }
          ]
        },
        {
          'id': 167,
          'guid': '9ad3c18e-d49a-466d-87ad-5ede1c46f753',
          'isActive': false,
          'balance': '$1,056.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Blair Buckner',
          'gender': 'male',
          'company': 'Genmy',
          'email': 'blairbuckner@genmy.com',
          'phone': '+1 (850) 434-2631',
          'address': {
            'street': 805,
            'city': 'Nettie',
            'state': 'Ohio',
            'zip': 4630
          },
          'about': 'Tempor dolore mollit minim excepteur amet velit ut pariatur commodo amet. Culpa reprehenderit ex ut esse. Pariatur dolore nulla pariatur non. Non ex culpa ut tempor laborum cillum veniam reprehenderit nisi culpa nulla do id qui.\r\n',
          'registered': '1990-04-28T00:31:39+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Carla Bauer'
            },
            {
              'id': 1,
              'name': 'Annette Head'
            },
            {
              'id': 2,
              'name': 'Zimmerman Bradford'
            }
          ]
        },
        {
          'id': 168,
          'guid': 'a6ff56c2-e388-47f1-9e43-d7672d5b2cad',
          'isActive': false,
          'balance': '$3,155.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Greene May',
          'gender': 'male',
          'company': 'Digial',
          'email': 'greenemay@digial.com',
          'phone': '+1 (901) 560-3153',
          'address': {
            'street': 950,
            'city': 'Fidelis',
            'state': 'Indiana',
            'zip': 4254
          },
          'about': 'Eiusmod qui in aliqua pariatur id elit. Irure occaecat irure ad consequat id voluptate velit veniam aliqua. Voluptate ex voluptate Lorem magna occaecat ullamco cillum nisi commodo aute. Sit nulla laborum esse quis pariatur nulla do enim eu commodo adipisicing nostrud irure exercitation. Enim tempor magna aliqua cillum enim elit mollit occaecat. Ipsum voluptate proident nulla sint commodo velit adipisicing laborum aliqua pariatur reprehenderit officia et ipsum. Elit in consectetur sint dolore veniam minim qui labore qui velit.\r\n',
          'registered': '2008-12-21T22:22:22+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Bullock Nicholson'
            },
            {
              'id': 1,
              'name': 'Vaughan Beard'
            },
            {
              'id': 2,
              'name': 'Constance Hall'
            }
          ]
        },
        {
          'id': 169,
          'guid': '066609b0-9b38-420f-816d-045e4cde0a8c',
          'isActive': false,
          'balance': '$3,121.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Eunice Soto',
          'gender': 'female',
          'company': 'Vertide',
          'email': 'eunicesoto@vertide.com',
          'phone': '+1 (844) 524-2108',
          'address': {
            'street': 200,
            'city': 'Biehle',
            'state': 'Montana',
            'zip': 6767
          },
          'about': 'Esse aliquip quis do ad excepteur dolor incididunt deserunt dolor mollit consectetur in. Incididunt labore occaecat sit fugiat id id do qui tempor reprehenderit. Qui in voluptate nostrud laborum velit qui veniam excepteur ex mollit ullamco cillum enim.\r\n',
          'registered': '1995-05-08T02:23:54+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Hoffman Leonard'
            },
            {
              'id': 1,
              'name': 'Cohen Stark'
            },
            {
              'id': 2,
              'name': 'Audra Alvarado'
            }
          ]
        },
        {
          'id': 170,
          'guid': 'a4e1c42d-a624-41f6-93ca-e91018eabb10',
          'isActive': true,
          'balance': '$1,111.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Jennie Garrett',
          'gender': 'female',
          'company': 'Marvane',
          'email': 'jenniegarrett@marvane.com',
          'phone': '+1 (831) 402-3146',
          'address': {
            'street': 615,
            'city': 'Temperanceville',
            'state': 'Pennsylvania',
            'zip': 4076
          },
          'about': 'Dolore ea culpa amet ad. Lorem voluptate aute est proident culpa commodo. Exercitation deserunt voluptate proident duis ullamco adipisicing nulla nulla culpa. Lorem eiusmod occaecat ea pariatur occaecat dolore nostrud veniam officia Lorem culpa eu proident. Lorem Lorem id aute quis magna do adipisicing culpa magna et laborum cupidatat. Ullamco commodo esse consequat mollit. Mollit laboris nulla occaecat cupidatat amet elit id.\r\n',
          'registered': '2006-10-07T17:56:54+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Patricia Barrera'
            },
            {
              'id': 1,
              'name': 'Gilliam Bonner'
            },
            {
              'id': 2,
              'name': 'Maldonado Mendez'
            }
          ]
        },
        {
          'id': 171,
          'guid': 'db2bbee3-fb70-46ef-b84d-62bd7cbaff70',
          'isActive': true,
          'balance': '$2,930.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Bessie Mack',
          'gender': 'female',
          'company': 'Velos',
          'email': 'bessiemack@velos.com',
          'phone': '+1 (929) 470-3801',
          'address': {
            'street': 271,
            'city': 'Newkirk',
            'state': 'Alabama',
            'zip': 944
          },
          'about': 'Incididunt aliquip quis do enim commodo ipsum. Tempor eiusmod enim id exercitation commodo id proident exercitation dolore labore dolore excepteur. Commodo esse ea ipsum cupidatat ad officia exercitation nostrud ullamco. Elit adipisicing commodo ea fugiat labore consequat culpa. Commodo culpa irure voluptate laboris cillum veniam velit aute ut ea commodo ad dolore voluptate.\r\n',
          'registered': '1992-06-21T10:25:21+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Dominguez Bruce'
            },
            {
              'id': 1,
              'name': 'Avila Mcpherson'
            },
            {
              'id': 2,
              'name': 'Rene Farmer'
            }
          ]
        },
        {
          'id': 172,
          'guid': 'a145ede2-392b-45b7-ae1e-78ed4f04e5c5',
          'isActive': false,
          'balance': '$3,984.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Travis Hogan',
          'gender': 'male',
          'company': 'Accidency',
          'email': 'travishogan@accidency.com',
          'phone': '+1 (965) 437-2550',
          'address': {
            'street': 890,
            'city': 'Needmore',
            'state': 'New York',
            'zip': 8979
          },
          'about': 'Incididunt id ad aliqua ut minim officia amet et. Culpa ea deserunt ipsum aliquip ipsum id adipisicing non sint. Et duis aliquip est incididunt et et culpa ea ex laboris non. Duis aliquip voluptate deserunt consequat cupidatat voluptate laborum excepteur do proident enim velit occaecat. Sit esse adipisicing elit velit nostrud occaecat amet sit duis tempor nostrud.\r\n',
          'registered': '1991-11-10T03:46:17+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Martin Townsend'
            },
            {
              'id': 1,
              'name': 'Abby Montgomery'
            },
            {
              'id': 2,
              'name': 'Snow Ayers'
            }
          ]
        },
        {
          'id': 173,
          'guid': 'ec91d751-d788-4be7-976f-4872e8ebf0a9',
          'isActive': true,
          'balance': '$1,066.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Jimmie Woods',
          'gender': 'female',
          'company': 'Slofast',
          'email': 'jimmiewoods@slofast.com',
          'phone': '+1 (872) 423-2555',
          'address': {
            'street': 983,
            'city': 'Curtice',
            'state': 'Alaska',
            'zip': 4841
          },
          'about': 'Anim laboris dolore tempor id irure sunt proident anim excepteur. Aliquip eiusmod irure do laborum ex. Quis occaecat aliquip in adipisicing aute dolor eu proident est sint incididunt. Magna proident aliquip deserunt dolore qui exercitation aliquip ullamco et aliquip eiusmod sit. Sint exercitation nisi enim et quis sint ex et aliqua labore in exercitation. Lorem fugiat duis ipsum reprehenderit nostrud ea sit esse aliqua enim dolor velit sit.\r\n',
          'registered': '2013-01-20T04:27:36+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Cobb Petty'
            },
            {
              'id': 1,
              'name': 'Stevenson Avery'
            },
            {
              'id': 2,
              'name': 'Robin Mcmillan'
            }
          ]
        },
        {
          'id': 174,
          'guid': 'd7c15d37-0b78-4569-a079-86546414a488',
          'isActive': false,
          'balance': '$2,496.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Lacey Moran',
          'gender': 'female',
          'company': 'Intradisk',
          'email': 'laceymoran@intradisk.com',
          'phone': '+1 (994) 509-2235',
          'address': {
            'street': 723,
            'city': 'Campo',
            'state': 'Hawaii',
            'zip': 6939
          },
          'about': 'Do reprehenderit eu et dolor et consectetur adipisicing ipsum nulla excepteur. Aliqua occaecat consectetur amet Lorem dolor officia nisi nisi. Minim consectetur adipisicing ut in minim dolor id consequat ullamco ipsum non consequat. Et veniam id sunt nostrud consectetur officia aliqua minim.\r\n',
          'registered': '2013-12-23T10:36:43+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Roberts Zamora'
            },
            {
              'id': 1,
              'name': 'Hunt Riddle'
            },
            {
              'id': 2,
              'name': 'Jeannine Puckett'
            }
          ]
        },
        {
          'id': 175,
          'guid': '221b1357-736d-4442-a0a6-c7986f202b31',
          'isActive': false,
          'balance': '$1,746.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Leonard Vazquez',
          'gender': 'male',
          'company': 'Centree',
          'email': 'leonardvazquez@centree.com',
          'phone': '+1 (943) 452-3837',
          'address': {
            'street': 988,
            'city': 'Coultervillle',
            'state': 'Georgia',
            'zip': 8241
          },
          'about': 'Et occaecat tempor esse esse nulla laboris dolor magna culpa deserunt voluptate adipisicing nisi. In aliquip occaecat adipisicing sint ut sunt. Culpa adipisicing veniam labore incididunt non aliqua nisi consectetur et veniam adipisicing esse. Do ex mollit laboris proident magna labore sunt Lorem nostrud culpa adipisicing sit ullamco sint. Reprehenderit sunt ut aliqua officia ut pariatur veniam.\r\n',
          'registered': '1991-12-11T14:10:05+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Spence Graves'
            },
            {
              'id': 1,
              'name': 'Henrietta Padilla'
            },
            {
              'id': 2,
              'name': 'Mullen French'
            }
          ]
        },
        {
          'id': 176,
          'guid': 'bbc336de-2493-4f1d-8ffa-21cbaecd7b27',
          'isActive': true,
          'balance': '$2,770.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Pearson Villarreal',
          'gender': 'male',
          'company': 'Bleendot',
          'email': 'pearsonvillarreal@bleendot.com',
          'phone': '+1 (871) 564-2674',
          'address': {
            'street': 192,
            'city': 'Stockdale',
            'state': 'Wisconsin',
            'zip': 4395
          },
          'about': 'Officia irure dolore proident nostrud ut velit. Mollit qui enim quis anim esse. Anim sit duis consequat pariatur nisi occaecat ipsum.\r\n',
          'registered': '2002-02-06T14:18:52+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Penelope Wright'
            },
            {
              'id': 1,
              'name': 'Sophie Dalton'
            },
            {
              'id': 2,
              'name': 'Liza Conner'
            }
          ]
        },
        {
          'id': 177,
          'guid': '3ef0d025-4e01-4c46-95c7-68e3e83fee0d',
          'isActive': true,
          'balance': '$1,155.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Zelma Pugh',
          'gender': 'female',
          'company': 'Mixers',
          'email': 'zelmapugh@mixers.com',
          'phone': '+1 (968) 517-2277',
          'address': {
            'street': 996,
            'city': 'Gorst',
            'state': 'Arizona',
            'zip': 1225
          },
          'about': 'Labore do id esse elit laboris nostrud laboris. Irure ullamco reprehenderit adipisicing consectetur nisi aliqua eu mollit. Amet sit in id labore duis labore qui reprehenderit ex.\r\n',
          'registered': '2013-02-05T00:04:39+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Summers Mason'
            },
            {
              'id': 1,
              'name': 'Perry Powell'
            },
            {
              'id': 2,
              'name': 'Matilda Branch'
            }
          ]
        },
        {
          'id': 178,
          'guid': '977b1728-e402-46f8-9c17-158c495beea2',
          'isActive': false,
          'balance': '$2,043.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Buckner Barron',
          'gender': 'male',
          'company': 'Injoy',
          'email': 'bucknerbarron@injoy.com',
          'phone': '+1 (863) 581-3015',
          'address': {
            'street': 700,
            'city': 'Bayview',
            'state': 'Nevada',
            'zip': 8513
          },
          'about': 'Reprehenderit sint cupidatat aliquip excepteur eu. Culpa cupidatat id occaecat laborum magna culpa ex do est. Cupidatat et et non voluptate aute sit do ad enim. Et quis commodo voluptate occaecat voluptate anim quis quis id ipsum do nostrud ut do. Aute do minim ad et aliqua fugiat sunt enim quis ipsum sint sit.\r\n',
          'registered': '2012-01-30T06:51:49+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Marianne Gallegos'
            },
            {
              'id': 1,
              'name': 'Diann Kirk'
            },
            {
              'id': 2,
              'name': 'Mcbride Rivas'
            }
          ]
        },
        {
          'id': 179,
          'guid': 'f20f3ea4-9496-45be-ba29-1314fd2eb5d3',
          'isActive': false,
          'balance': '$1,616.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Allison Barrett',
          'gender': 'female',
          'company': 'Retrotex',
          'email': 'allisonbarrett@retrotex.com',
          'phone': '+1 (961) 447-3111',
          'address': {
            'street': 380,
            'city': 'Bluffview',
            'state': 'Maryland',
            'zip': 1215
          },
          'about': 'Aliquip qui sunt non qui cillum officia aliquip magna id aliquip. Proident ullamco consequat eiusmod anim nisi eu Lorem ipsum minim minim sint est eiusmod est. Ut aliquip reprehenderit adipisicing nulla Lorem elit cupidatat labore adipisicing non et tempor incididunt. Consequat non cillum amet tempor sit nisi elit nostrud ea do aliqua Lorem consequat occaecat. Incididunt adipisicing Lorem nulla enim eu.\r\n',
          'registered': '1996-07-30T07:46:07+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Janet Green'
            },
            {
              'id': 1,
              'name': 'Padilla Jordan'
            },
            {
              'id': 2,
              'name': 'Sabrina Huff'
            }
          ]
        },
        {
          'id': 180,
          'guid': '6b1e25f6-4c04-47ca-8b2c-a95af3615147',
          'isActive': false,
          'balance': '$3,995.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Lorrie Barber',
          'gender': 'female',
          'company': 'Oatfarm',
          'email': 'lorriebarber@oatfarm.com',
          'phone': '+1 (846) 562-3502',
          'address': {
            'street': 539,
            'city': 'Fruitdale',
            'state': 'Utah',
            'zip': 455
          },
          'about': 'Voluptate commodo ad aliqua do esse in. Do est amet veniam amet culpa pariatur incididunt quis fugiat. Laborum non aliqua sint officia eu duis sunt quis aute. Nisi Lorem consequat deserunt adipisicing sit tempor aliqua sunt sint adipisicing est amet adipisicing anim. Do nulla officia eiusmod ullamco.\r\n',
          'registered': '1997-01-26T04:32:49+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Marcie Ware'
            },
            {
              'id': 1,
              'name': 'Amie Grant'
            },
            {
              'id': 2,
              'name': 'Buchanan Hood'
            }
          ]
        },
        {
          'id': 181,
          'guid': '22637ac3-4eaa-40e0-8e56-0c82052e98ac',
          'isActive': true,
          'balance': '$3,884.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Hester Bolton',
          'gender': 'female',
          'company': 'Aquamate',
          'email': 'hesterbolton@aquamate.com',
          'phone': '+1 (915) 574-2300',
          'address': {
            'street': 589,
            'city': 'Edinburg',
            'state': 'New Jersey',
            'zip': 5206
          },
          'about': 'Tempor ex ut est officia. Enim ea et do tempor commodo incididunt magna adipisicing reprehenderit dolor. Incididunt amet ullamco quis elit aute officia nisi. Id non eiusmod tempor Lorem enim consequat excepteur sit.\r\n',
          'registered': '1993-06-16T04:22:55+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Bauer Bryant'
            },
            {
              'id': 1,
              'name': 'Brandie Blake'
            },
            {
              'id': 2,
              'name': 'Alvarez Willis'
            }
          ]
        },
        {
          'id': 182,
          'guid': '232d12c1-de58-4c25-81d0-c5ee39ffafbd',
          'isActive': true,
          'balance': '$1,456.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Carroll Mcdonald',
          'gender': 'male',
          'company': 'Cofine',
          'email': 'carrollmcdonald@cofine.com',
          'phone': '+1 (880) 575-2821',
          'address': {
            'street': 834,
            'city': 'Topanga',
            'state': 'Oklahoma',
            'zip': 5869
          },
          'about': 'Est tempor cupidatat ut amet velit ipsum consectetur voluptate. Culpa proident duis sunt tempor dolore ipsum in laboris dolor consequat proident pariatur occaecat aliqua. Ad et est consectetur mollit elit commodo ex consequat mollit. Lorem consequat exercitation qui quis culpa ex velit anim eiusmod ullamco. Ea aute deserunt veniam id occaecat anim ut aute. Ea est qui laborum qui deserunt nulla dolor duis tempor. Ullamco id ullamco eu sint sint commodo sunt est aliqua laborum.\r\n',
          'registered': '2009-01-26T04:58:24+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Tameka Elliott'
            },
            {
              'id': 1,
              'name': 'Durham Mcneil'
            },
            {
              'id': 2,
              'name': 'Baker Delgado'
            }
          ]
        },
        {
          'id': 183,
          'guid': '74241e91-71b0-4449-94a1-c9bd4e597b0f',
          'isActive': false,
          'balance': '$1,496.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'James Baxter',
          'gender': 'male',
          'company': 'Splinx',
          'email': 'jamesbaxter@splinx.com',
          'phone': '+1 (957) 423-2917',
          'address': {
            'street': 558,
            'city': 'Byrnedale',
            'state': 'Michigan',
            'zip': 8685
          },
          'about': 'Duis dolore nisi mollit elit pariatur occaecat elit sint consequat laboris incididunt. Aliqua nostrud deserunt in sit et. Ullamco esse consectetur nostrud qui nostrud adipisicing elit. Ad nostrud cillum tempor mollit. Velit amet do deserunt fugiat. Dolore culpa laborum cillum mollit nulla excepteur Lorem eiusmod Lorem eu officia. Voluptate sint ea et ipsum ipsum.\r\n',
          'registered': '2001-05-17T12:04:31+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Anita Lindsay'
            },
            {
              'id': 1,
              'name': 'Chelsea Singleton'
            },
            {
              'id': 2,
              'name': 'Hancock Wilson'
            }
          ]
        },
        {
          'id': 184,
          'guid': '095eaf9a-7a9f-4917-b71c-257cf5aa6c81',
          'isActive': true,
          'balance': '$2,199.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Herring Rodriguez',
          'gender': 'male',
          'company': 'Paprikut',
          'email': 'herringrodriguez@paprikut.com',
          'phone': '+1 (897) 435-3440',
          'address': {
            'street': 934,
            'city': 'Wilmington',
            'state': 'Massachusetts',
            'zip': 6920
          },
          'about': 'Consequat consectetur voluptate occaecat commodo quis pariatur culpa non veniam ipsum laborum enim et. Dolor id sit veniam cillum enim aute irure non laborum commodo. Veniam officia nostrud pariatur dolor dolor commodo commodo nulla magna commodo. Elit aliquip elit in proident fugiat deserunt commodo tempor laborum veniam. Ullamco eu deserunt velit aute.\r\n',
          'registered': '2003-06-29T16:54:31+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Adrian Booth'
            },
            {
              'id': 1,
              'name': 'Lorene Williamson'
            },
            {
              'id': 2,
              'name': 'Frank Reeves'
            }
          ]
        },
        {
          'id': 185,
          'guid': 'b017bc09-33e2-4379-a464-317282935147',
          'isActive': true,
          'balance': '$2,933.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Tamika Franks',
          'gender': 'female',
          'company': 'Qaboos',
          'email': 'tamikafranks@qaboos.com',
          'phone': '+1 (889) 441-3621',
          'address': {
            'street': 133,
            'city': 'Newry',
            'state': 'Virginia',
            'zip': 2473
          },
          'about': 'Anim est nulla deserunt in sit id non et sunt nostrud. Cupidatat fugiat incididunt occaecat dolore laboris qui amet ipsum. Aliqua quis qui irure aute esse. Culpa eiusmod magna veniam incididunt anim ea non deserunt. Eu ullamco veniam deserunt est. Elit id deserunt elit qui aliquip dolore occaecat incididunt reprehenderit duis amet. Amet consequat minim eiusmod proident.\r\n',
          'registered': '1994-01-29T18:51:22+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Guzman Parsons'
            },
            {
              'id': 1,
              'name': 'Agnes Mercer'
            },
            {
              'id': 2,
              'name': 'Angie Bishop'
            }
          ]
        },
        {
          'id': 186,
          'guid': '9ee3be7a-98b1-474d-8c57-ed32d2c11446',
          'isActive': false,
          'balance': '$3,573.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Davenport Moreno',
          'gender': 'male',
          'company': 'Caxt',
          'email': 'davenportmoreno@caxt.com',
          'phone': '+1 (801) 416-3344',
          'address': {
            'street': 413,
            'city': 'Alden',
            'state': 'South Dakota',
            'zip': 6715
          },
          'about': 'Officia aute enim Lorem exercitation. In do sit labore et officia laborum. Ipsum sunt excepteur ut pariatur ut irure est voluptate aute sit veniam enim ea fugiat. Amet ipsum do amet nostrud adipisicing sint occaecat excepteur officia aliquip ad in. Cillum duis esse esse sint.\r\n',
          'registered': '1996-11-20T10:51:20+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Gutierrez Mcleod'
            },
            {
              'id': 1,
              'name': 'Alyce Avila'
            },
            {
              'id': 2,
              'name': 'Liliana Hill'
            }
          ]
        },
        {
          'id': 187,
          'guid': '0cca03e6-f6a3-431f-92cf-2ddb60cd8e5e',
          'isActive': false,
          'balance': '$3,075.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Dyer Rivera',
          'gender': 'male',
          'company': 'Comvey',
          'email': 'dyerrivera@comvey.com',
          'phone': '+1 (889) 527-2885',
          'address': {
            'street': 646,
            'city': 'Derwood',
            'state': 'Missouri',
            'zip': 2387
          },
          'about': 'Excepteur ad consequat labore pariatur culpa labore amet fugiat laborum cillum. Dolore laborum eiusmod culpa aliqua mollit nulla sint dolore dolor velit commodo. Lorem veniam consequat non nulla commodo cupidatat. Non sint est anim exercitation laborum non minim nulla do. Ut dolor commodo do minim tempor commodo occaecat exercitation sunt mollit tempor do. Duis non excepteur exercitation nulla. Lorem adipisicing dolor sunt non magna sint pariatur anim magna.\r\n',
          'registered': '2000-08-10T09:55:05+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Christi Trevino'
            },
            {
              'id': 1,
              'name': 'Vega Bailey'
            },
            {
              'id': 2,
              'name': 'Lizzie Rios'
            }
          ]
        },
        {
          'id': 188,
          'guid': '8cf5734d-5f59-4402-a6a0-8c4d78501066',
          'isActive': true,
          'balance': '$2,076.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Chaney Carr',
          'gender': 'male',
          'company': 'Collaire',
          'email': 'chaneycarr@collaire.com',
          'phone': '+1 (908) 543-2264',
          'address': {
            'street': 578,
            'city': 'Starks',
            'state': 'Nebraska',
            'zip': 9933
          },
          'about': 'Esse occaecat voluptate ut incididunt nostrud Lorem pariatur ea officia Lorem ut minim anim. Pariatur laborum aliquip cupidatat officia sint magna consequat. Ut officia pariatur voluptate aute anim magna. Aliqua excepteur dolor anim dolor id aliquip eu voluptate ea Lorem velit. Ea est qui est qui minim deserunt labore. Ea enim mollit culpa cillum dolor labore. Adipisicing magna incididunt consectetur aliquip.\r\n',
          'registered': '2005-05-24T09:17:19+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Arnold Austin'
            },
            {
              'id': 1,
              'name': 'Giles Camacho'
            },
            {
              'id': 2,
              'name': 'Navarro Chapman'
            }
          ]
        },
        {
          'id': 189,
          'guid': '9e2e669c-ba91-4ec7-ab0d-44a065c82332',
          'isActive': true,
          'balance': '$2,023.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Hinton Glover',
          'gender': 'male',
          'company': 'Netility',
          'email': 'hintonglover@netility.com',
          'phone': '+1 (944) 419-3677',
          'address': {
            'street': 543,
            'city': 'Wiscon',
            'state': 'Vermont',
            'zip': 1448
          },
          'about': 'Ipsum amet consequat esse in Lorem adipisicing culpa fugiat. Ex laboris aute cupidatat non officia sunt. Esse duis incididunt duis reprehenderit quis ut mollit cillum ipsum cupidatat. Mollit eu officia non eu est laborum incididunt eu pariatur nostrud. Commodo deserunt elit laboris laborum ea consectetur fugiat ex. Sunt pariatur magna reprehenderit nulla qui amet. Qui consectetur cillum eu aliquip elit occaecat enim culpa mollit sint laboris.\r\n',
          'registered': '2006-08-12T03:59:17+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Buck Richmond'
            },
            {
              'id': 1,
              'name': 'Mooney Mcmahon'
            },
            {
              'id': 2,
              'name': 'Mack Neal'
            }
          ]
        },
        {
          'id': 190,
          'guid': 'a10ede97-1c61-4588-8dc3-21db364f666b',
          'isActive': false,
          'balance': '$2,587.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Aimee Turner',
          'gender': 'female',
          'company': 'Quizka',
          'email': 'aimeeturner@quizka.com',
          'phone': '+1 (967) 531-3979',
          'address': {
            'street': 371,
            'city': 'Gardiner',
            'state': 'South Carolina',
            'zip': 6875
          },
          'about': 'Nostrud do do qui velit officia labore pariatur do officia fugiat consequat amet Lorem. Anim Lorem ad proident commodo mollit consectetur nostrud. Ut magna occaecat commodo anim dolore elit culpa. Culpa est dolor officia labore cillum Lorem nostrud incididunt ad. Adipisicing ipsum sunt labore veniam in reprehenderit. Labore elit deserunt officia adipisicing laboris non laboris consequat incididunt consectetur adipisicing nostrud velit.\r\n',
          'registered': '1995-02-10T22:59:48+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Florence Dyer'
            },
            {
              'id': 1,
              'name': 'Nichole Cote'
            },
            {
              'id': 2,
              'name': 'Angeline Gaines'
            }
          ]
        },
        {
          'id': 191,
          'guid': '4877689e-f08e-4413-bb96-d73041787b14',
          'isActive': false,
          'balance': '$3,711.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Lenore Travis',
          'gender': 'female',
          'company': 'Zosis',
          'email': 'lenoretravis@zosis.com',
          'phone': '+1 (934) 452-2240',
          'address': {
            'street': 223,
            'city': 'Dixie',
            'state': 'North Carolina',
            'zip': 3608
          },
          'about': 'Eu commodo voluptate culpa dolor tempor deserunt adipisicing proident mollit fugiat ullamco. Cupidatat ex laboris nisi ad tempor ex veniam. Occaecat non nisi aliquip aute proident esse duis consectetur ex sint excepteur. Anim officia ea sint esse ex laboris. Nulla proident magna ex et do ad id ipsum commodo in.\r\n',
          'registered': '1994-01-09T14:31:44+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mcneil Kent'
            },
            {
              'id': 1,
              'name': 'Erika Ortega'
            },
            {
              'id': 2,
              'name': 'Nikki Dillard'
            }
          ]
        },
        {
          'id': 192,
          'guid': 'a26fe7f8-82ed-48b8-8868-bd26ebff6212',
          'isActive': false,
          'balance': '$3,978.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Jacobs Buckley',
          'gender': 'male',
          'company': 'Grupoli',
          'email': 'jacobsbuckley@grupoli.com',
          'phone': '+1 (867) 595-3840',
          'address': {
            'street': 666,
            'city': 'Rote',
            'state': 'Iowa',
            'zip': 939
          },
          'about': 'Sint dolore adipisicing aliqua eu. Velit excepteur ullamco officia fugiat consectetur. Magna veniam adipisicing velit consequat magna quis qui quis culpa esse. Consectetur nostrud fugiat aute veniam ea laboris tempor quis et incididunt voluptate ipsum sint irure. Aliquip cillum veniam enim consectetur dolore anim eiusmod occaecat. Pariatur sint quis ipsum eiusmod tempor incididunt consectetur anim deserunt ut ipsum. In tempor consequat cupidatat magna nostrud ex cupidatat voluptate deserunt laboris.\r\n',
          'registered': '1997-05-20T12:46:48+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Lora Lawrence'
            },
            {
              'id': 1,
              'name': 'Welch Gonzalez'
            },
            {
              'id': 2,
              'name': 'Trina Rosa'
            }
          ]
        },
        {
          'id': 193,
          'guid': '90b86e32-0224-44e7-b6eb-756b1f5b6795',
          'isActive': false,
          'balance': '$2,386.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Natasha Stafford',
          'gender': 'female',
          'company': 'Magneato',
          'email': 'natashastafford@magneato.com',
          'phone': '+1 (885) 430-3912',
          'address': {
            'street': 694,
            'city': 'Chapin',
            'state': 'Rhode Island',
            'zip': 6365
          },
          'about': 'Lorem aliqua reprehenderit aliquip quis. Quis cupidatat deserunt adipisicing excepteur anim qui non pariatur culpa culpa. Proident in commodo voluptate in do occaecat aute qui est non incididunt.\r\n',
          'registered': '1989-07-05T11:12:35+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Maude Hays'
            },
            {
              'id': 1,
              'name': 'Sharp Erickson'
            },
            {
              'id': 2,
              'name': 'Dennis Cleveland'
            }
          ]
        },
        {
          'id': 194,
          'guid': 'aa82dcba-7cf0-4ff1-a732-865203b9aabe',
          'isActive': false,
          'balance': '$2,307.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Camille Sexton',
          'gender': 'female',
          'company': 'Motovate',
          'email': 'camillesexton@motovate.com',
          'phone': '+1 (896) 431-3993',
          'address': {
            'street': 797,
            'city': 'Bentley',
            'state': 'Maine',
            'zip': 915
          },
          'about': 'Sit aliquip ad consectetur ad pariatur commodo sit culpa. Proident eiusmod sint consectetur eiusmod ea ad aliquip anim magna aliqua cupidatat. Nulla amet eiusmod dolor elit Lorem occaecat dolore irure. Minim occaecat sint Lorem laborum.\r\n',
          'registered': '2006-06-04T00:32:00+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Shannon Edwards'
            },
            {
              'id': 1,
              'name': 'Underwood Woodward'
            },
            {
              'id': 2,
              'name': 'Newman Pope'
            }
          ]
        },
        {
          'id': 195,
          'guid': 'e77ccbaf-dae2-40d9-9af4-cafcb913c814',
          'isActive': true,
          'balance': '$3,088.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Claudia Serrano',
          'gender': 'female',
          'company': 'Zilphur',
          'email': 'claudiaserrano@zilphur.com',
          'phone': '+1 (932) 577-3765',
          'address': {
            'street': 539,
            'city': 'Sedley',
            'state': 'West Virginia',
            'zip': 8992
          },
          'about': 'Qui eiusmod sunt cupidatat proident cupidatat aute sit consequat laborum commodo aliquip nisi sint consectetur. Pariatur dolore est non elit velit ipsum ex excepteur nulla enim. Pariatur aliqua amet veniam cillum anim id minim elit. Cupidatat ea irure reprehenderit qui anim. Voluptate est aliquip qui eu ad aute laboris id quis aute. Nisi Lorem irure laboris voluptate quis.\r\n',
          'registered': '1994-07-09T13:29:11+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Williamson Castro'
            },
            {
              'id': 1,
              'name': 'Ruthie Moore'
            },
            {
              'id': 2,
              'name': 'Browning Holman'
            }
          ]
        },
        {
          'id': 196,
          'guid': '9f23787e-584f-4ef4-abbb-f94d5902cb8c',
          'isActive': false,
          'balance': '$2,167.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Koch Ramos',
          'gender': 'male',
          'company': 'Silodyne',
          'email': 'kochramos@silodyne.com',
          'phone': '+1 (945) 574-3329',
          'address': {
            'street': 129,
            'city': 'Deltaville',
            'state': 'Wisconsin',
            'zip': 2080
          },
          'about': 'Culpa ut sunt ex et minim quis. Ipsum est consequat pariatur proident. Ex mollit id ullamco in adipisicing culpa id nulla elit qui. Non elit ipsum id ullamco fugiat officia cillum incididunt.\r\n',
          'registered': '1994-04-05T11:02:13+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mcpherson Frank'
            },
            {
              'id': 1,
              'name': 'Ashlee Madden'
            },
            {
              'id': 2,
              'name': 'Farmer Clay'
            }
          ]
        },
        {
          'id': 197,
          'guid': '12621d60-9576-4aad-a46d-0f78456f3947',
          'isActive': false,
          'balance': '$3,937.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Mavis Steele',
          'gender': 'female',
          'company': 'Vixo',
          'email': 'mavissteele@vixo.com',
          'phone': '+1 (977) 472-3028',
          'address': {
            'street': 263,
            'city': 'Leola',
            'state': 'New Jersey',
            'zip': 7051
          },
          'about': 'Eiusmod sunt cupidatat nostrud reprehenderit ullamco aliqua elit laborum dolor tempor consectetur et officia. Consequat sit et adipisicing cupidatat. Ex nulla laboris consequat consequat voluptate et in cupidatat tempor cupidatat dolore qui. Ea dolore Lorem veniam qui officia est nulla culpa veniam cillum mollit ut elit. Incididunt sunt cillum veniam ut amet Lorem. Qui fugiat esse consequat deserunt sint commodo non veniam ex quis nisi tempor ullamco. Duis aliquip adipisicing sint consectetur consectetur id irure.\r\n',
          'registered': '1991-12-22T08:18:32+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Morgan Oneil'
            },
            {
              'id': 1,
              'name': 'Lana Cherry'
            },
            {
              'id': 2,
              'name': 'Eunice Haley'
            }
          ]
        },
        {
          'id': 198,
          'guid': '18d129e9-22bb-43e9-812a-0a3e8248a9da',
          'isActive': false,
          'balance': '$2,624.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Maryellen Brennan',
          'gender': 'female',
          'company': 'Enjola',
          'email': 'maryellenbrennan@enjola.com',
          'phone': '+1 (813) 592-3608',
          'address': {
            'street': 459,
            'city': 'Lynn',
            'state': 'Michigan',
            'zip': 8602
          },
          'about': 'Aliqua laborum cupidatat nulla cillum mollit ex quis non enim magna incididunt ut. Ullamco nisi dolore incididunt nulla est anim adipisicing pariatur irure proident tempor aliqua ex. Officia commodo ipsum laborum ad laborum consequat nostrud. Cillum aute ex amet ut incididunt officia ex ea pariatur incididunt officia aliquip laboris. Ipsum aliquip reprehenderit consequat eiusmod amet et laborum qui deserunt adipisicing ad.\r\n',
          'registered': '2000-01-02T14:25:50+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mamie Barry'
            },
            {
              'id': 1,
              'name': 'Kerr Dillon'
            },
            {
              'id': 2,
              'name': 'Vaughan Cash'
            }
          ]
        },
        {
          'id': 199,
          'guid': '1367089b-a478-4fde-a355-fe82b92f4f66',
          'isActive': true,
          'balance': '$1,180.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Melissa Reeves',
          'gender': 'female',
          'company': 'Magnemo',
          'email': 'melissareeves@magnemo.com',
          'phone': '+1 (879) 599-2180',
          'address': {
            'street': 150,
            'city': 'Hollins',
            'state': 'Missouri',
            'zip': 5305
          },
          'about': 'Sunt culpa sint dolor dolor eiusmod incididunt incididunt cupidatat do nisi reprehenderit laboris ad. Cupidatat irure consectetur deserunt proident pariatur nulla elit culpa ex qui amet. Velit aute sit veniam duis laborum commodo irure. Duis elit enim Lorem est cupidatat ipsum magna.\r\n',
          'registered': '2008-06-17T00:48:02+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Barbara Fuentes'
            },
            {
              'id': 1,
              'name': 'Marcie Cooley'
            },
            {
              'id': 2,
              'name': 'Janet Thompson'
            }
          ]
        },
        {
          'id': 200,
          'guid': 'efed383b-f982-4fea-b99c-35f15acb16c4',
          'isActive': false,
          'balance': '$1,232.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Langley Parsons',
          'gender': 'male',
          'company': 'Pyrami',
          'email': 'langleyparsons@pyrami.com',
          'phone': '+1 (918) 496-3263',
          'address': {
            'street': 682,
            'city': 'Suitland',
            'state': 'Alabama',
            'zip': 3953
          },
          'about': 'Exercitation in officia qui consectetur dolor quis labore ut elit. Cupidatat ipsum eu laboris excepteur aute. Eiusmod nostrud consequat non ullamco ex cillum anim excepteur veniam. Aliqua reprehenderit cupidatat non do reprehenderit ex irure sint do commodo.\r\n',
          'registered': '1999-09-15T10:47:11+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Robinson Huber'
            },
            {
              'id': 1,
              'name': 'Edna Key'
            },
            {
              'id': 2,
              'name': 'Watkins Bryan'
            }
          ]
        },
        {
          'id': 201,
          'guid': 'd0b3f5d2-8b4f-4687-8459-4006a6e6b7da',
          'isActive': true,
          'balance': '$1,791.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Christy Cabrera',
          'gender': 'female',
          'company': 'Cytrak',
          'email': 'christycabrera@cytrak.com',
          'phone': '+1 (906) 559-2087',
          'address': {
            'street': 882,
            'city': 'Sabillasville',
            'state': 'Texas',
            'zip': 2187
          },
          'about': 'Irure nostrud laboris commodo id ullamco exercitation cupidatat eu ad dolore. Deserunt nulla fugiat eu mollit dolore tempor ad ea consequat commodo anim Lorem pariatur occaecat. Nulla nulla laborum eiusmod adipisicing nulla Lorem excepteur. Ex tempor esse duis irure cillum minim do eiusmod est qui quis officia. Id do incididunt ut adipisicing do non labore.\r\n',
          'registered': '2003-06-26T09:36:32+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Brady Harvey'
            },
            {
              'id': 1,
              'name': 'Chambers Harrell'
            },
            {
              'id': 2,
              'name': 'Lorena Hancock'
            }
          ]
        },
        {
          'id': 202,
          'guid': 'f3bc3f8b-b5f7-4de6-a6d2-f6f7ac0b44f6',
          'isActive': false,
          'balance': '$3,953.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Cruz Durham',
          'gender': 'male',
          'company': 'Comtest',
          'email': 'cruzdurham@comtest.com',
          'phone': '+1 (884) 460-2269',
          'address': {
            'street': 673,
            'city': 'Keller',
            'state': 'Oklahoma',
            'zip': 7737
          },
          'about': 'Adipisicing culpa enim est aute incididunt aute nostrud non eiusmod aliquip reprehenderit exercitation. Non nostrud incididunt tempor fugiat elit elit aliqua ea eiusmod. Culpa tempor culpa aliqua deserunt exercitation non anim nostrud nostrud et ullamco esse nostrud. Sunt Lorem incididunt in mollit minim est cupidatat laboris et anim.\r\n',
          'registered': '2005-03-11T23:12:43+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Williamson Dennis'
            },
            {
              'id': 1,
              'name': 'Matilda Griffin'
            },
            {
              'id': 2,
              'name': 'Emily Sparks'
            }
          ]
        },
        {
          'id': 203,
          'guid': '42bda688-9a39-431a-bdfe-55ca5bdb299a',
          'isActive': true,
          'balance': '$1,494.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Hill Buckley',
          'gender': 'male',
          'company': 'Magmina',
          'email': 'hillbuckley@magmina.com',
          'phone': '+1 (905) 523-3301',
          'address': {
            'street': 834,
            'city': 'Summerset',
            'state': 'Minnesota',
            'zip': 8787
          },
          'about': 'Excepteur mollit ex non do pariatur enim nostrud laborum cillum proident reprehenderit cillum. Anim anim nostrud mollit aute magna sint laborum pariatur nostrud sint anim veniam cupidatat occaecat. Enim occaecat culpa anim mollit Lorem incididunt duis ea sint dolore. Laborum mollit ex aliqua voluptate.\r\n',
          'registered': '2002-03-02T08:48:07+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mendoza Walton'
            },
            {
              'id': 1,
              'name': 'Terra Bush'
            },
            {
              'id': 2,
              'name': 'Reynolds Holden'
            }
          ]
        },
        {
          'id': 204,
          'guid': '4007259f-33f2-47ad-a99d-f80727e067c6',
          'isActive': true,
          'balance': '$1,067.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Aisha Freeman',
          'gender': 'female',
          'company': 'Ecratic',
          'email': 'aishafreeman@ecratic.com',
          'phone': '+1 (964) 408-3213',
          'address': {
            'street': 515,
            'city': 'Chical',
            'state': 'North Dakota',
            'zip': 234
          },
          'about': 'Veniam adipisicing proident Lorem quis voluptate laboris in enim qui ipsum adipisicing non incididunt consequat. Officia sunt dolore eu ipsum adipisicing mollit eiusmod nulla laborum magna duis. Eu nostrud consequat in laboris veniam dolor velit enim laborum magna.\r\n',
          'registered': '2009-04-03T03:02:20+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Shawna Norman'
            },
            {
              'id': 1,
              'name': 'Britney Baldwin'
            },
            {
              'id': 2,
              'name': 'Kim Puckett'
            }
          ]
        },
        {
          'id': 205,
          'guid': '94265a8f-b32e-44c5-bcd7-b81f6198adad',
          'isActive': true,
          'balance': '$2,533.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Simone Calhoun',
          'gender': 'female',
          'company': 'Prowaste',
          'email': 'simonecalhoun@prowaste.com',
          'phone': '+1 (944) 472-2197',
          'address': {
            'street': 604,
            'city': 'Unionville',
            'state': 'Mississippi',
            'zip': 9400
          },
          'about': 'Incididunt minim esse cupidatat sint deserunt mollit. Officia dolore occaecat eiusmod mollit mollit magna nulla id do ullamco incididunt dolor est eu. Exercitation laboris aliquip ullamco ut ex ad velit velit irure nostrud sint tempor. Laboris consectetur ut ad velit voluptate. Id ut officia laboris nulla laboris quis.\r\n',
          'registered': '1996-05-03T01:22:42+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Riddle Munoz'
            },
            {
              'id': 1,
              'name': 'Romero Stephens'
            },
            {
              'id': 2,
              'name': 'Lourdes Reese'
            }
          ]
        },
        {
          'id': 206,
          'guid': '4cd1b5df-2eac-4058-9128-d761d6c57fa2',
          'isActive': false,
          'balance': '$1,924.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Bettie Chan',
          'gender': 'female',
          'company': 'Zillar',
          'email': 'bettiechan@zillar.com',
          'phone': '+1 (967) 533-3936',
          'address': {
            'street': 458,
            'city': 'Eureka',
            'state': 'North Carolina',
            'zip': 1169
          },
          'about': 'Id ad amet in exercitation aliquip tempor labore voluptate laboris mollit id. Tempor nisi eiusmod aliqua sit enim minim deserunt sunt et tempor. Non ipsum nisi deserunt elit eu ad ut ex ex mollit cupidatat est adipisicing. Sunt officia qui aute nostrud officia cupidatat. Ex velit enim elit sunt labore nulla minim ut commodo culpa sit. Eu duis pariatur consequat anim nostrud duis eiusmod elit irure pariatur.\r\n',
          'registered': '1999-12-08T21:25:28+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'English Sosa'
            },
            {
              'id': 1,
              'name': 'Bettye Montgomery'
            },
            {
              'id': 2,
              'name': 'Virgie Nielsen'
            }
          ]
        },
        {
          'id': 207,
          'guid': 'bdea0421-a5a0-4400-bda2-609196b0c802',
          'isActive': false,
          'balance': '$3,788.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Ratliff Jacobs',
          'gender': 'male',
          'company': 'Tropolis',
          'email': 'ratliffjacobs@tropolis.com',
          'phone': '+1 (900) 405-2758',
          'address': {
            'street': 183,
            'city': 'Lawrence',
            'state': 'Kentucky',
            'zip': 321
          },
          'about': 'Minim adipisicing ad cupidatat elit deserunt ea et cillum pariatur dolor non. Velit ea aute anim anim nisi in esse esse irure ea tempor. Commodo mollit amet consectetur dolor commodo esse est laborum adipisicing nostrud consectetur sit. Tempor labore incididunt anim officia eiusmod. Mollit cillum velit sit id ullamco commodo commodo. Cillum incididunt tempor nostrud reprehenderit veniam nisi nostrud. Ut proident ut voluptate exercitation dolore laboris minim ad Lorem.\r\n',
          'registered': '2001-12-26T13:54:11+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mathis Burris'
            },
            {
              'id': 1,
              'name': 'Callahan Colon'
            },
            {
              'id': 2,
              'name': 'Cathy Holmes'
            }
          ]
        },
        {
          'id': 208,
          'guid': '3ef72e5a-ab18-474e-bad7-4cb3c04bdca0',
          'isActive': false,
          'balance': '$3,056.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Bond Michael',
          'gender': 'male',
          'company': 'Zilch',
          'email': 'bondmichael@zilch.com',
          'phone': '+1 (881) 487-3679',
          'address': {
            'street': 905,
            'city': 'Bowden',
            'state': 'Arizona',
            'zip': 7575
          },
          'about': 'Minim et Lorem voluptate quis magna laboris adipisicing. Est minim labore esse consectetur aliqua commodo fugiat irure aute. Irure occaecat aute adipisicing minim tempor. Consequat do officia officia commodo esse sit adipisicing esse ullamco nostrud adipisicing. Dolor anim magna ipsum aute. Esse eu adipisicing officia aliquip id deserunt sunt fugiat nostrud. Reprehenderit consectetur officia enim do minim aliqua.\r\n',
          'registered': '2008-01-05T00:45:39+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Carolyn Hamilton'
            },
            {
              'id': 1,
              'name': 'Nora Watson'
            },
            {
              'id': 2,
              'name': 'Carlene Johns'
            }
          ]
        },
        {
          'id': 209,
          'guid': '818960a3-6e79-4ac0-8188-19effba97647',
          'isActive': false,
          'balance': '$3,503.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Hayden Cochran',
          'gender': 'male',
          'company': 'Jimbies',
          'email': 'haydencochran@jimbies.com',
          'phone': '+1 (918) 448-2547',
          'address': {
            'street': 867,
            'city': 'Collins',
            'state': 'Maryland',
            'zip': 6156
          },
          'about': 'Mollit in proident consequat ea voluptate incididunt cillum. Nostrud velit irure esse velit nulla fugiat. Ut consequat excepteur deserunt sit nisi. Occaecat labore eu esse labore elit consectetur ad. Mollit id sint nisi officia culpa sunt Lorem consequat. Veniam tempor exercitation aute ut reprehenderit sit enim esse aliqua consequat et duis nisi. Tempor duis exercitation aute consectetur ea aute aliqua nulla.\r\n',
          'registered': '1998-11-26T17:50:46+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Dixie Hughes'
            },
            {
              'id': 1,
              'name': 'Quinn Miles'
            },
            {
              'id': 2,
              'name': 'Petra Ayers'
            }
          ]
        },
        {
          'id': 210,
          'guid': 'a97708ba-a932-4633-af23-dcf6b8695ec2',
          'isActive': false,
          'balance': '$3,694.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Shelia Osborne',
          'gender': 'female',
          'company': 'Exoswitch',
          'email': 'sheliaosborne@exoswitch.com',
          'phone': '+1 (999) 414-2735',
          'address': {
            'street': 525,
            'city': 'Downsville',
            'state': 'New Hampshire',
            'zip': 8546
          },
          'about': 'Nostrud aliquip anim anim elit est cillum dolor non. Tempor exercitation mollit ut eu irure sunt. Irure cillum labore mollit non et tempor velit velit Lorem consectetur dolore aliqua deserunt velit. Dolore nisi adipisicing veniam ea officia tempor reprehenderit tempor aute laboris.\r\n',
          'registered': '1994-05-07T04:53:22+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Elisa Schroeder'
            },
            {
              'id': 1,
              'name': 'Noble Forbes'
            },
            {
              'id': 2,
              'name': 'Thelma Rodriquez'
            }
          ]
        },
        {
          'id': 211,
          'guid': '930e10fa-d596-4b46-a986-74aca4ec4b6b',
          'isActive': true,
          'balance': '$2,566.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Phoebe Holder',
          'gender': 'female',
          'company': 'Zytrac',
          'email': 'phoebeholder@zytrac.com',
          'phone': '+1 (924) 519-3800',
          'address': {
            'street': 504,
            'city': 'Fulford',
            'state': 'Florida',
            'zip': 2157
          },
          'about': 'Fugiat nisi do incididunt consequat voluptate irure est duis. Mollit magna officia occaecat dolore sint nulla ex velit cillum laborum. Ea sint reprehenderit consequat dolore qui et reprehenderit anim dolor id.\r\n',
          'registered': '2000-03-06T23:12:36+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Moody Ball'
            },
            {
              'id': 1,
              'name': 'Bentley Gilbert'
            },
            {
              'id': 2,
              'name': 'Stout Parker'
            }
          ]
        },
        {
          'id': 212,
          'guid': '96f28923-5186-489f-8eef-ca6041679272',
          'isActive': false,
          'balance': '$1,538.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Bishop Salinas',
          'gender': 'male',
          'company': 'Puria',
          'email': 'bishopsalinas@puria.com',
          'phone': '+1 (865) 497-2145',
          'address': {
            'street': 362,
            'city': 'Kerby',
            'state': 'Idaho',
            'zip': 4031
          },
          'about': 'Mollit minim ipsum incididunt eiusmod qui cupidatat culpa pariatur occaecat. Ut elit commodo est quis exercitation nisi. Ex fugiat veniam tempor laboris anim.\r\n',
          'registered': '1995-01-13T19:09:39+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Holder Bauer'
            },
            {
              'id': 1,
              'name': 'Brooks Logan'
            },
            {
              'id': 2,
              'name': 'Morrow Buchanan'
            }
          ]
        },
        {
          'id': 213,
          'guid': 'e9c625fa-f289-495b-adfd-9655cf1dd524',
          'isActive': false,
          'balance': '$3,415.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Hanson Rich',
          'gender': 'male',
          'company': 'Organica',
          'email': 'hansonrich@organica.com',
          'phone': '+1 (842) 479-3227',
          'address': {
            'street': 377,
            'city': 'Bradenville',
            'state': 'Kansas',
            'zip': 6383
          },
          'about': 'Veniam exercitation commodo Lorem labore eiusmod sint est sunt cupidatat. Id ut anim adipisicing consequat eu. Velit aliqua Lorem sit occaecat sint cillum deserunt proident et.\r\n',
          'registered': '2013-05-10T17:00:19+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Tracey Ryan'
            },
            {
              'id': 1,
              'name': 'Jerri Adams'
            },
            {
              'id': 2,
              'name': 'Fran Salas'
            }
          ]
        },
        {
          'id': 214,
          'guid': '8cf7d57b-96b2-404e-9e36-45ec819d6608',
          'isActive': true,
          'balance': '$3,546.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Catalina Sherman',
          'gender': 'female',
          'company': 'Comvene',
          'email': 'catalinasherman@comvene.com',
          'phone': '+1 (846) 514-3115',
          'address': {
            'street': 751,
            'city': 'Glenshaw',
            'state': 'New York',
            'zip': 4877
          },
          'about': 'Do fugiat ut consequat officia. Ex commodo proident eiusmod labore cillum cupidatat tempor est velit voluptate ea ut ullamco consequat. Consequat reprehenderit elit minim magna duis non nisi. Ad incididunt ullamco exercitation elit dolore commodo pariatur commodo ullamco. Ea nostrud qui excepteur irure duis laboris ipsum mollit ipsum consectetur qui nisi. Anim anim commodo occaecat cupidatat in consequat in deserunt esse duis pariatur fugiat aliqua eu. Ex sunt aute laboris officia enim anim anim dolore cillum eu.\r\n',
          'registered': '2001-12-13T16:56:13+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Deanna Knox'
            },
            {
              'id': 1,
              'name': 'Traci Bailey'
            },
            {
              'id': 2,
              'name': 'Mcdowell Gallegos'
            }
          ]
        },
        {
          'id': 215,
          'guid': '5918588e-7c56-4095-926c-fbea17aad80c',
          'isActive': true,
          'balance': '$3,433.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Golden Bond',
          'gender': 'male',
          'company': 'Shepard',
          'email': 'goldenbond@shepard.com',
          'phone': '+1 (895) 478-2030',
          'address': {
            'street': 225,
            'city': 'Roderfield',
            'state': 'Montana',
            'zip': 9429
          },
          'about': 'Elit cupidatat quis mollit id. Cillum do aute commodo aute labore duis et cillum irure. Irure excepteur commodo deserunt reprehenderit aute quis consectetur consequat commodo minim occaecat nostrud.\r\n',
          'registered': '2005-07-25T03:01:20+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Rowland Shannon'
            },
            {
              'id': 1,
              'name': 'Peters Kidd'
            },
            {
              'id': 2,
              'name': 'Naomi Mccullough'
            }
          ]
        },
        {
          'id': 216,
          'guid': 'd46ce717-4a98-4420-8317-4d0108596760',
          'isActive': false,
          'balance': '$1,870.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Singleton Oneill',
          'gender': 'male',
          'company': 'Datagen',
          'email': 'singletononeill@datagen.com',
          'phone': '+1 (873) 431-3343',
          'address': {
            'street': 100,
            'city': 'Driftwood',
            'state': 'Georgia',
            'zip': 8855
          },
          'about': 'Ut ea mollit magna ullamco non nisi ex velit ipsum aliquip eu dolor. Eu non officia deserunt sit commodo sit labore non aliquip consectetur et. Fugiat dolor eiusmod sunt duis consequat laboris adipisicing minim. Proident aute reprehenderit aliquip culpa aute id laborum nostrud do est labore cillum.\r\n',
          'registered': '2003-11-09T07:47:24+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Amber James'
            },
            {
              'id': 1,
              'name': 'Sarah Patrick'
            },
            {
              'id': 2,
              'name': 'Drake Mendez'
            }
          ]
        },
        {
          'id': 217,
          'guid': '6835978b-a1f6-465c-a9c3-df5d808d1ab9',
          'isActive': false,
          'balance': '$3,179.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Lola Monroe',
          'gender': 'female',
          'company': 'Deviltoe',
          'email': 'lolamonroe@deviltoe.com',
          'phone': '+1 (917) 538-2527',
          'address': {
            'street': 412,
            'city': 'Hayden',
            'state': 'Colorado',
            'zip': 4152
          },
          'about': 'Lorem do proident reprehenderit exercitation commodo minim dolore velit ipsum non eiusmod. Et labore adipisicing reprehenderit nostrud laboris proident aute qui consectetur magna elit ea minim tempor. Laborum anim velit veniam nulla laboris consequat occaecat sint eiusmod est in. Ea nostrud cillum aliquip amet sunt excepteur amet nostrud mollit. Aute irure sunt minim magna dolor.\r\n',
          'registered': '1999-11-30T02:52:31+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Buck Boone'
            },
            {
              'id': 1,
              'name': 'Summers Morse'
            },
            {
              'id': 2,
              'name': 'Ware Barber'
            }
          ]
        },
        {
          'id': 218,
          'guid': '1931b94a-a2c5-4712-b9b0-825b540878f5',
          'isActive': true,
          'balance': '$3,608.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Bethany Marks',
          'gender': 'female',
          'company': 'Talkalot',
          'email': 'bethanymarks@talkalot.com',
          'phone': '+1 (986) 527-2806',
          'address': {
            'street': 698,
            'city': 'Diaperville',
            'state': 'Oregon',
            'zip': 8777
          },
          'about': 'Ad sit sint occaecat ea veniam cillum elit ex veniam cillum dolore incididunt consequat Lorem. In culpa eu proident occaecat duis. Ut anim exercitation cupidatat ullamco aliqua amet tempor. Aute mollit magna consectetur laborum amet minim commodo. Dolore non excepteur Lorem anim labore anim aliqua ex minim qui aliquip proident irure.\r\n',
          'registered': '2010-06-01T11:37:04+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Dotson Weeks'
            },
            {
              'id': 1,
              'name': 'Townsend Rodgers'
            },
            {
              'id': 2,
              'name': 'Zamora Newton'
            }
          ]
        },
        {
          'id': 219,
          'guid': '784f8eb6-2aa4-42d2-94c3-e21486a75d1f',
          'isActive': false,
          'balance': '$3,926.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Snider Palmer',
          'gender': 'male',
          'company': 'Klugger',
          'email': 'sniderpalmer@klugger.com',
          'phone': '+1 (884) 438-2870',
          'address': {
            'street': 207,
            'city': 'Fairmount',
            'state': 'Illinois',
            'zip': 9002
          },
          'about': 'Qui dolor culpa amet ullamco aute esse. Ipsum mollit fugiat elit incididunt aliqua ex. Incididunt laborum fugiat Lorem Lorem in consequat nulla esse duis fugiat cillum cillum non consequat. Nulla in dolor laborum consectetur ipsum incididunt officia adipisicing consequat duis ipsum ullamco elit sunt.\r\n',
          'registered': '1992-06-07T12:42:24+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Imelda Russell'
            },
            {
              'id': 1,
              'name': 'Coffey Moreno'
            },
            {
              'id': 2,
              'name': 'Figueroa Moran'
            }
          ]
        },
        {
          'id': 220,
          'guid': '3fcfdc98-6feb-48cb-a97c-a22d7a3f23a7',
          'isActive': false,
          'balance': '$2,325.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Duran Callahan',
          'gender': 'male',
          'company': 'Netagy',
          'email': 'durancallahan@netagy.com',
          'phone': '+1 (826) 476-3977',
          'address': {
            'street': 656,
            'city': 'Herlong',
            'state': 'Vermont',
            'zip': 5377
          },
          'about': 'Duis labore eu mollit excepteur qui fugiat proident consectetur veniam duis cillum esse. In laborum est velit do sunt commodo consectetur reprehenderit fugiat consequat culpa. Aliqua eu consequat aliquip ea esse reprehenderit sunt laborum deserunt anim reprehenderit culpa non consectetur. Amet veniam duis culpa dolor fugiat nisi veniam ex do sunt dolor. Aute amet quis dolore in sunt. Quis cillum consectetur labore nulla esse aute dolore cillum ad. Sint ex esse aute adipisicing anim ullamco.\r\n',
          'registered': '1990-02-05T05:07:53+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Patricia Scott'
            },
            {
              'id': 1,
              'name': 'Frances Lamb'
            },
            {
              'id': 2,
              'name': 'Francis Berry'
            }
          ]
        },
        {
          'id': 221,
          'guid': 'a4817b76-0136-446e-bef0-698097c5f024',
          'isActive': true,
          'balance': '$2,578.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Sylvia Frazier',
          'gender': 'female',
          'company': 'Signity',
          'email': 'sylviafrazier@signity.com',
          'phone': '+1 (897) 416-2203',
          'address': {
            'street': 173,
            'city': 'Leyner',
            'state': 'Maine',
            'zip': 4865
          },
          'about': 'Voluptate qui commodo quis deserunt aute in eu deserunt ad id voluptate sint sit. Sint esse aute pariatur anim occaecat minim qui aliqua. Elit ut consectetur laboris ipsum adipisicing dolor.\r\n',
          'registered': '2006-02-05T16:39:58+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Clark Newman'
            },
            {
              'id': 1,
              'name': 'Rodriguez Smith'
            },
            {
              'id': 2,
              'name': 'Aurelia Hester'
            }
          ]
        },
        {
          'id': 222,
          'guid': '9d391e0d-1f97-40a0-b6c2-8123b0dee843',
          'isActive': false,
          'balance': '$2,182.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Beulah Stanley',
          'gender': 'female',
          'company': 'Interloo',
          'email': 'beulahstanley@interloo.com',
          'phone': '+1 (907) 454-3397',
          'address': {
            'street': 787,
            'city': 'Roland',
            'state': 'Alaska',
            'zip': 8297
          },
          'about': 'Aliquip consectetur mollit amet exercitation nulla tempor deserunt do. Exercitation velit enim velit culpa minim cillum incididunt sit sunt. Commodo laboris ut non culpa irure in consequat velit reprehenderit dolore laboris proident non.\r\n',
          'registered': '2007-10-20T07:59:51+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Trujillo Walls'
            },
            {
              'id': 1,
              'name': 'Juliana Osborn'
            },
            {
              'id': 2,
              'name': 'Kramer Gordon'
            }
          ]
        },
        {
          'id': 223,
          'guid': 'c8c26d92-2bcc-4b12-ab15-f9417e8f1cb8',
          'isActive': false,
          'balance': '$1,900.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Delia Hopkins',
          'gender': 'female',
          'company': 'Aclima',
          'email': 'deliahopkins@aclima.com',
          'phone': '+1 (863) 464-2709',
          'address': {
            'street': 445,
            'city': 'Connerton',
            'state': 'Nebraska',
            'zip': 3212
          },
          'about': 'Cupidatat quis qui elit consectetur quis sunt velit nisi nulla veniam qui ad. Enim consectetur Lorem non mollit eu nulla culpa voluptate minim ad adipisicing. Velit magna do irure laborum id. Ut fugiat nostrud officia duis exercitation ea esse ea nostrud consectetur sunt occaecat deserunt eu. Consequat sint exercitation esse consequat ex sint in cillum cupidatat velit duis Lorem. Laborum minim dolore est nostrud voluptate elit in nostrud et et labore sint.\r\n',
          'registered': '2012-11-07T14:50:59+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Lowery Weaver'
            },
            {
              'id': 1,
              'name': 'Salinas Gentry'
            },
            {
              'id': 2,
              'name': 'Anne Santiago'
            }
          ]
        },
        {
          'id': 224,
          'guid': 'f90f6375-c412-4126-9c82-e873bad79cae',
          'isActive': true,
          'balance': '$1,833.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Melendez Branch',
          'gender': 'male',
          'company': 'Ziggles',
          'email': 'melendezbranch@ziggles.com',
          'phone': '+1 (994) 413-3243',
          'address': {
            'street': 154,
            'city': 'Salunga',
            'state': 'South Dakota',
            'zip': 4155
          },
          'about': 'Qui deserunt aliquip laborum aute et tempor. Duis dolore id cupidatat voluptate minim veniam ad laboris ea ullamco pariatur qui cupidatat eu. Excepteur ut culpa et tempor.\r\n',
          'registered': '2011-12-26T15:07:00+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Rachael Bird'
            },
            {
              'id': 1,
              'name': 'Zelma Wilson'
            },
            {
              'id': 2,
              'name': 'Rojas Gill'
            }
          ]
        },
        {
          'id': 225,
          'guid': '4c288003-3e3f-49fd-9204-f2cd26cdd613',
          'isActive': false,
          'balance': '$3,150.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Contreras Walker',
          'gender': 'male',
          'company': 'Ebidco',
          'email': 'contreraswalker@ebidco.com',
          'phone': '+1 (833) 569-2843',
          'address': {
            'street': 397,
            'city': 'Klondike',
            'state': 'Massachusetts',
            'zip': 8266
          },
          'about': 'Enim aliqua ea commodo labore aliqua ut exercitation Lorem. Ea culpa officia ipsum ex et adipisicing elit nisi anim nisi. Proident sunt esse sint velit dolor occaecat exercitation veniam do tempor est aute consectetur. Proident cillum aliqua reprehenderit aute dolor dolore veniam do ipsum qui labore sit. Non ut adipisicing mollit ad voluptate ea occaecat aliqua anim.\r\n',
          'registered': '2012-12-14T19:22:00+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Schultz Ayala'
            },
            {
              'id': 1,
              'name': 'Snow Maxwell'
            },
            {
              'id': 2,
              'name': 'Ida Hodge'
            }
          ]
        },
        {
          'id': 226,
          'guid': 'eec7d9d3-347c-4e62-acbd-ab5145e583b7',
          'isActive': true,
          'balance': '$1,459.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Horn Mckinney',
          'gender': 'male',
          'company': 'Dognost',
          'email': 'hornmckinney@dognost.com',
          'phone': '+1 (925) 594-3539',
          'address': {
            'street': 624,
            'city': 'Yettem',
            'state': 'Tennessee',
            'zip': 4667
          },
          'about': 'Quis cupidatat consectetur ad deserunt cillum cupidatat esse enim. Adipisicing nostrud aute ea sint reprehenderit eu aliquip. Laboris do aliqua laborum sint exercitation officia Lorem voluptate esse nulla nostrud. Id cupidatat quis nostrud consectetur sint eiusmod. Commodo ea esse officia aliquip ullamco tempor mollit fugiat sint in consectetur amet.\r\n',
          'registered': '1988-05-05T02:39:25+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Carrillo Fletcher'
            },
            {
              'id': 1,
              'name': 'Lisa Hickman'
            },
            {
              'id': 2,
              'name': 'Ingram Mcmahon'
            }
          ]
        },
        {
          'id': 227,
          'guid': 'de9ef832-e7c6-4066-ba37-7f5d1a81fd66',
          'isActive': true,
          'balance': '$3,089.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Mercado Vaughn',
          'gender': 'male',
          'company': 'Telepark',
          'email': 'mercadovaughn@telepark.com',
          'phone': '+1 (862) 557-2737',
          'address': {
            'street': 566,
            'city': 'Villarreal',
            'state': 'Delaware',
            'zip': 946
          },
          'about': 'Eiusmod adipisicing sunt laborum nostrud aliquip culpa minim. Ex anim nisi sunt eiusmod officia enim incididunt reprehenderit cillum est nisi sunt proident excepteur. Amet nisi officia in et sint labore dolor aliquip quis magna sunt et. Voluptate id dolore non dolore ea eu dolore ea enim ut voluptate in laborum. Velit minim sint consectetur nostrud Lorem. Nulla nostrud non duis commodo adipisicing non sint tempor in elit veniam exercitation. Sunt consequat ut est enim enim aliqua deserunt amet ex anim culpa dolore.\r\n',
          'registered': '2004-02-24T01:11:12+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Audrey Alvarado'
            },
            {
              'id': 1,
              'name': 'Douglas Sellers'
            },
            {
              'id': 2,
              'name': 'Selma Williamson'
            }
          ]
        },
        {
          'id': 228,
          'guid': '431a3c3d-8c1c-4a12-9a54-cd44427d31d5',
          'isActive': false,
          'balance': '$2,271.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Sondra Sanford',
          'gender': 'female',
          'company': 'Konnect',
          'email': 'sondrasanford@konnect.com',
          'phone': '+1 (975) 530-2100',
          'address': {
            'street': 958,
            'city': 'Osage',
            'state': 'Nevada',
            'zip': 1627
          },
          'about': 'Est quis eu occaecat magna non. Deserunt quis irure nulla culpa mollit ex commodo minim dolor Lorem do. Ullamco reprehenderit laboris deserunt et anim eu. Fugiat eiusmod qui aute ullamco tempor occaecat dolore reprehenderit sit quis pariatur dolor elit occaecat.\r\n',
          'registered': '1999-10-14T14:44:38+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Julia Mcfadden'
            },
            {
              'id': 1,
              'name': 'Aida Miller'
            },
            {
              'id': 2,
              'name': 'Faulkner Guthrie'
            }
          ]
        },
        {
          'id': 229,
          'guid': 'dc8e02ec-8814-4573-a2db-01df8b975b8e',
          'isActive': false,
          'balance': '$3,892.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Roberson Blevins',
          'gender': 'male',
          'company': 'Zytrek',
          'email': 'robersonblevins@zytrek.com',
          'phone': '+1 (973) 512-3464',
          'address': {
            'street': 666,
            'city': 'Conestoga',
            'state': 'Indiana',
            'zip': 155
          },
          'about': 'Nisi aliquip do enim culpa. Do consectetur nostrud et nisi ipsum commodo eiusmod reprehenderit. Exercitation labore commodo excepteur ad occaecat non culpa aute ipsum voluptate reprehenderit deserunt consectetur est. Elit excepteur minim esse nostrud labore veniam laborum est.\r\n',
          'registered': '2011-03-02T22:27:51+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Velazquez Shepard'
            },
            {
              'id': 1,
              'name': 'Krista Casey'
            },
            {
              'id': 2,
              'name': 'Maddox Talley'
            }
          ]
        },
        {
          'id': 230,
          'guid': '7d9a528f-b3a0-40a5-b6a4-0e10274682f7',
          'isActive': false,
          'balance': '$2,470.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Loretta Joyce',
          'gender': 'female',
          'company': 'Thredz',
          'email': 'lorettajoyce@thredz.com',
          'phone': '+1 (876) 459-3178',
          'address': {
            'street': 561,
            'city': 'Dodge',
            'state': 'Virginia',
            'zip': 161
          },
          'about': 'Commodo anim nisi eu qui sunt sunt. Dolore exercitation magna irure eiusmod esse officia minim consectetur. Mollit commodo fugiat consequat exercitation aliqua dolore eiusmod qui proident qui proident est nisi eu.\r\n',
          'registered': '1999-12-30T03:53:17+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Dejesus Vincent'
            },
            {
              'id': 1,
              'name': 'Lucy Brady'
            },
            {
              'id': 2,
              'name': 'Jensen Mcdonald'
            }
          ]
        },
        {
          'id': 231,
          'guid': 'd039ed64-7858-42da-a624-239ddd865699',
          'isActive': true,
          'balance': '$3,537.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Atkins Lang',
          'gender': 'male',
          'company': 'Polarax',
          'email': 'atkinslang@polarax.com',
          'phone': '+1 (917) 450-2491',
          'address': {
            'street': 664,
            'city': 'Lavalette',
            'state': 'Washington',
            'zip': 1835
          },
          'about': 'Ut ut labore cupidatat pariatur dolor mollit irure dolor nostrud ipsum excepteur eiusmod. Labore exercitation ad commodo ea amet ad est ad mollit irure aute. Voluptate elit occaecat pariatur amet officia nostrud ex.\r\n',
          'registered': '2012-07-20T15:24:12+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Kelly Stevens'
            },
            {
              'id': 1,
              'name': 'Jessica Kelly'
            },
            {
              'id': 2,
              'name': 'Chandler Melendez'
            }
          ]
        },
        {
          'id': 232,
          'guid': '32ac9c1a-412e-42b0-ac24-1444bfc3b74c',
          'isActive': false,
          'balance': '$1,661.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Rowena Morrison',
          'gender': 'female',
          'company': 'Enomen',
          'email': 'rowenamorrison@enomen.com',
          'phone': '+1 (969) 427-3339',
          'address': {
            'street': 396,
            'city': 'Naomi',
            'state': 'Pennsylvania',
            'zip': 1941
          },
          'about': 'Consequat aliqua irure enim non exercitation. Ipsum exercitation reprehenderit dolor cupidatat nulla laboris culpa. Occaecat ad aute non proident eu sint aliqua magna elit magna irure exercitation.\r\n',
          'registered': '1995-05-09T17:24:39+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mcknight Ellis'
            },
            {
              'id': 1,
              'name': 'Caitlin Tyler'
            },
            {
              'id': 2,
              'name': 'Annette Shaffer'
            }
          ]
        },
        {
          'id': 233,
          'guid': '97aee93d-be15-4141-880c-ad79fb42b465',
          'isActive': false,
          'balance': '$2,965.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Robyn Wagner',
          'gender': 'female',
          'company': 'Franscene',
          'email': 'robynwagner@franscene.com',
          'phone': '+1 (833) 518-3609',
          'address': {
            'street': 695,
            'city': 'Dyckesville',
            'state': 'Connecticut',
            'zip': 3746
          },
          'about': 'Incididunt Lorem minim culpa esse amet eu dolore sunt laborum veniam. Sunt anim ea eu esse sit enim deserunt esse eiusmod fugiat tempor dolore sit. Ipsum velit duis velit aliquip incididunt tempor minim. Enim laboris minim pariatur incididunt. Mollit labore incididunt elit fugiat ea deserunt cupidatat labore nostrud qui. Est pariatur Lorem occaecat ullamco id anim consequat. Fugiat pariatur sunt magna duis adipisicing enim voluptate ex anim.\r\n',
          'registered': '1997-03-29T05:52:58+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Arlene Singleton'
            },
            {
              'id': 1,
              'name': 'Chandra Grant'
            },
            {
              'id': 2,
              'name': 'Santos Fulton'
            }
          ]
        },
        {
          'id': 234,
          'guid': '3d5231c7-3ff4-469c-80e0-dca4731fdfa4',
          'isActive': true,
          'balance': '$1,262.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Acevedo Anderson',
          'gender': 'male',
          'company': 'Endicil',
          'email': 'acevedoanderson@endicil.com',
          'phone': '+1 (869) 406-2868',
          'address': {
            'street': 999,
            'city': 'Shindler',
            'state': 'Rhode Island',
            'zip': 1303
          },
          'about': 'Fugiat dolore labore esse eiusmod do qui culpa labore irure in elit incididunt nostrud. Ullamco excepteur nisi voluptate est magna tempor aute veniam ad non fugiat reprehenderit aute. Aliquip ipsum aute officia sint et fugiat nisi laboris cillum velit aliquip eiusmod adipisicing. Ex non incididunt enim excepteur ipsum irure tempor duis pariatur ullamco aliquip consectetur. Pariatur nisi esse duis irure eiusmod eiusmod anim aliquip cillum consequat dolor. Elit dolore exercitation tempor elit. Do excepteur nostrud cillum eu ullamco commodo consectetur anim et proident et ut.\r\n',
          'registered': '1999-08-20T15:14:43+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Kaufman Hood'
            },
            {
              'id': 1,
              'name': 'Hawkins Bradshaw'
            },
            {
              'id': 2,
              'name': 'Hattie Cross'
            }
          ]
        },
        {
          'id': 235,
          'guid': 'eab85edf-d38f-47be-bf5f-1045748f8947',
          'isActive': false,
          'balance': '$3,442.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Davis Booth',
          'gender': 'male',
          'company': 'Amtap',
          'email': 'davisbooth@amtap.com',
          'phone': '+1 (989) 462-3758',
          'address': {
            'street': 574,
            'city': 'Cowiche',
            'state': 'West Virginia',
            'zip': 3329
          },
          'about': 'Nisi amet cillum sit veniam aute est quis fugiat pariatur. Nisi laboris eu Lorem est cupidatat pariatur do commodo eu sunt incididunt velit minim. Voluptate sint sint aliqua nostrud laborum veniam elit. Veniam ad velit adipisicing veniam in aliqua tempor enim. Nulla minim laboris dolore officia. Aliquip eu Lorem eiusmod quis veniam sit. Labore incididunt ex labore id.\r\n',
          'registered': '2003-11-03T00:10:53+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Helen Moore'
            },
            {
              'id': 1,
              'name': 'Erika Glover'
            },
            {
              'id': 2,
              'name': 'Wilcox Soto'
            }
          ]
        },
        {
          'id': 236,
          'guid': '4a41cd30-411b-4178-9e1f-29acd29bdc05',
          'isActive': false,
          'balance': '$3,855.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Blake Richard',
          'gender': 'male',
          'company': 'Extro',
          'email': 'blakerichard@extro.com',
          'phone': '+1 (950) 467-2674',
          'address': {
            'street': 283,
            'city': 'Sattley',
            'state': 'South Carolina',
            'zip': 8737
          },
          'about': 'In et cillum deserunt enim. Laboris aliquip officia nulla dolore nulla irure officia qui occaecat reprehenderit sint ea consectetur consectetur. Irure eu Lorem ut aliqua qui nostrud officia qui laboris consectetur consectetur eu mollit laborum. Eiusmod culpa sint cillum dolore nulla laborum sit laborum quis sit quis.\r\n',
          'registered': '2001-11-23T15:49:22+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Walsh Mcdaniel'
            },
            {
              'id': 1,
              'name': 'Katy Solomon'
            },
            {
              'id': 2,
              'name': 'Jan Ford'
            }
          ]
        },
        {
          'id': 237,
          'guid': '0a1d11e1-4942-4b14-adf9-6c972a0a02ae',
          'isActive': true,
          'balance': '$3,580.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Leonor Sims',
          'gender': 'female',
          'company': 'Isis',
          'email': 'leonorsims@isis.com',
          'phone': '+1 (901) 412-2070',
          'address': {
            'street': 438,
            'city': 'Hobucken',
            'state': 'Utah',
            'zip': 9959
          },
          'about': 'Fugiat tempor elit laborum amet proident consectetur nulla. Consectetur est fugiat consequat dolore sint fugiat sit aute magna adipisicing occaecat. Incididunt ea excepteur laboris nulla ullamco et commodo incididunt aliquip. Sit ut id nostrud enim veniam esse esse sit adipisicing ad nostrud consequat eu.\r\n',
          'registered': '1992-07-07T13:51:28+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Elliott Duffy'
            },
            {
              'id': 1,
              'name': 'Bowman Spencer'
            },
            {
              'id': 2,
              'name': 'Haley Thomas'
            }
          ]
        },
        {
          'id': 238,
          'guid': 'ec58fa1d-3081-4560-8914-8ec0e9ea6653',
          'isActive': true,
          'balance': '$2,017.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Clay Wong',
          'gender': 'male',
          'company': 'Twiist',
          'email': 'claywong@twiist.com',
          'phone': '+1 (935) 525-3935',
          'address': {
            'street': 143,
            'city': 'Hall',
            'state': 'Iowa',
            'zip': 1924
          },
          'about': 'Ex qui dolore amet irure pariatur mollit reprehenderit pariatur non ullamco. Nulla in quis commodo labore. Elit in nostrud eu enim laborum amet minim aute anim tempor et officia ad. Do excepteur ad aliquip elit culpa irure. Id sunt labore non est pariatur non aute voluptate irure.\r\n',
          'registered': '1997-06-15T04:12:25+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Bean Keller'
            },
            {
              'id': 1,
              'name': 'Mathews Church'
            },
            {
              'id': 2,
              'name': 'Wynn Sawyer'
            }
          ]
        },
        {
          'id': 239,
          'guid': '16e06d99-b3f1-4ed2-b6d0-4a5574711d9e',
          'isActive': false,
          'balance': '$2,364.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Witt Pittman',
          'gender': 'male',
          'company': 'Bleeko',
          'email': 'wittpittman@bleeko.com',
          'phone': '+1 (932) 407-2364',
          'address': {
            'street': 919,
            'city': 'Stagecoach',
            'state': 'Louisiana',
            'zip': 116
          },
          'about': 'Dolore officia consequat nulla anim adipisicing amet nisi officia cillum exercitation aliquip officia cupidatat. Lorem culpa eu mollit adipisicing minim. Ut quis qui tempor nisi dolor veniam. Fugiat duis sunt consectetur dolore reprehenderit ullamco ut magna fugiat. Ut fugiat occaecat esse ut officia. Esse aute id pariatur consectetur incididunt.\r\n',
          'registered': '2008-01-02T13:03:33+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Sargent Norton'
            },
            {
              'id': 1,
              'name': 'Erna Joyner'
            },
            {
              'id': 2,
              'name': 'Cox Kirkland'
            }
          ]
        },
        {
          'id': 240,
          'guid': 'c9b867ee-5934-4e92-8c1d-9a3ed588cba0',
          'isActive': false,
          'balance': '$3,887.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Mccullough Zimmerman',
          'gender': 'male',
          'company': 'Unisure',
          'email': 'mcculloughzimmerman@unisure.com',
          'phone': '+1 (823) 465-3586',
          'address': {
            'street': 585,
            'city': 'Delwood',
            'state': 'Arkansas',
            'zip': 2617
          },
          'about': 'Nulla id laborum reprehenderit incididunt est. Voluptate reprehenderit sit culpa mollit proident quis consectetur. Et officia et reprehenderit ullamco labore ullamco est. In magna id ea reprehenderit officia eiusmod. Nostrud aliqua cupidatat est sint excepteur id tempor ipsum enim enim quis eiusmod. Non cupidatat laborum nulla dolore in ea minim nostrud adipisicing reprehenderit Lorem qui id fugiat.\r\n',
          'registered': '2007-09-05T21:16:48+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Stacey Mccall'
            },
            {
              'id': 1,
              'name': 'Clemons Tyson'
            },
            {
              'id': 2,
              'name': 'Lindsay Reilly'
            }
          ]
        },
        {
          'id': 241,
          'guid': '198bc5ca-38ef-4c68-a418-ce197c61fadd',
          'isActive': false,
          'balance': '$1,425.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Velez Carpenter',
          'gender': 'male',
          'company': 'Kage',
          'email': 'velezcarpenter@kage.com',
          'phone': '+1 (850) 580-3807',
          'address': {
            'street': 154,
            'city': 'Weedville',
            'state': 'New Mexico',
            'zip': 7932
          },
          'about': 'Duis voluptate aliquip consectetur tempor nostrud aliqua ad anim proident commodo id et sint aute. Reprehenderit veniam dolor officia ex. Irure cupidatat eu officia consectetur tempor qui consequat irure magna irure culpa. Sunt voluptate eu minim cillum voluptate adipisicing excepteur voluptate eiusmod.\r\n',
          'registered': '2003-05-15T08:50:20+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Nielsen Boyle'
            },
            {
              'id': 1,
              'name': 'Carson Nicholson'
            },
            {
              'id': 2,
              'name': 'Fry Summers'
            }
          ]
        },
        {
          'id': 242,
          'guid': '0bc132cb-5fed-4e7f-a7db-de273add69a2',
          'isActive': true,
          'balance': '$1,373.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Maritza Good',
          'gender': 'female',
          'company': 'Asimiline',
          'email': 'maritzagood@asimiline.com',
          'phone': '+1 (850) 480-2579',
          'address': {
            'street': 944,
            'city': 'Crucible',
            'state': 'California',
            'zip': 4669
          },
          'about': 'Irure do eiusmod irure ea enim. Sit aliquip elit dolor duis id id mollit cillum. Excepteur aliqua et consectetur et consectetur id est duis nisi eiusmod. Laborum aute veniam ex amet nisi est duis minim pariatur. Nulla magna quis consequat cupidatat id nulla. Duis labore sit eu ipsum qui. Non in est commodo ex.\r\n',
          'registered': '2006-01-08T19:02:50+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Hooper Stark'
            },
            {
              'id': 1,
              'name': 'Susie Gonzalez'
            },
            {
              'id': 2,
              'name': 'Vaughn Lester'
            }
          ]
        },
        {
          'id': 243,
          'guid': '798f0be5-a214-4dea-8dbd-3c4dc7b5c51f',
          'isActive': false,
          'balance': '$2,286.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Maxine Odonnell',
          'gender': 'female',
          'company': 'Cyclonica',
          'email': 'maxineodonnell@cyclonica.com',
          'phone': '+1 (971) 527-2484',
          'address': {
            'street': 429,
            'city': 'Walker',
            'state': 'Wyoming',
            'zip': 9657
          },
          'about': 'Ullamco consequat ullamco Lorem consequat laboris nulla officia ad nostrud incididunt id tempor. Sunt ullamco voluptate mollit id mollit nostrud labore duis magna cillum. Lorem ea consequat aute nisi.\r\n',
          'registered': '2003-08-30T18:05:24+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Keith Porter'
            },
            {
              'id': 1,
              'name': 'Kristen Day'
            },
            {
              'id': 2,
              'name': 'Harrell Erickson'
            }
          ]
        },
        {
          'id': 244,
          'guid': '9491c7a1-eb1d-497e-84dd-f01f5ab91c92',
          'isActive': false,
          'balance': '$1,737.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Shelton Cardenas',
          'gender': 'male',
          'company': 'Gink',
          'email': 'sheltoncardenas@gink.com',
          'phone': '+1 (848) 558-3596',
          'address': {
            'street': 527,
            'city': 'Manchester',
            'state': 'Hawaii',
            'zip': 2145
          },
          'about': 'Veniam tempor aliqua commodo et reprehenderit deserunt et labore adipisicing anim amet tempor ad. Non anim eu nulla do reprehenderit duis amet in ea pariatur deserunt cillum. Do qui duis exercitation voluptate minim enim dolor ex irure. Reprehenderit tempor cupidatat mollit reprehenderit Lorem aliqua cillum proident officia Lorem mollit ipsum cillum ipsum. Non occaecat ullamco commodo in aliqua tempor dolore occaecat qui non ipsum aliqua. Amet aute consequat aliquip non proident laboris commodo. Consequat aliqua ullamco quis in nostrud proident enim irure dolor id.\r\n',
          'registered': '1990-07-23T04:14:09+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Hinton Stein'
            },
            {
              'id': 1,
              'name': 'Stokes Conrad'
            },
            {
              'id': 2,
              'name': 'Sybil Schwartz'
            }
          ]
        },
        {
          'id': 245,
          'guid': 'ffa9943b-e0c7-4978-aa4f-b412188c2d06',
          'isActive': false,
          'balance': '$1,991.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Mcmillan Malone',
          'gender': 'male',
          'company': 'Melbacor',
          'email': 'mcmillanmalone@melbacor.com',
          'phone': '+1 (879) 561-3007',
          'address': {
            'street': 249,
            'city': 'Drummond',
            'state': 'Missouri',
            'zip': 7234
          },
          'about': 'Cupidatat voluptate laborum ea dolore duis elit. Exercitation ipsum amet aliqua culpa dolore aliquip exercitation. Enim consectetur ullamco sunt et eu laboris ad magna ut laboris est irure proident. Eu incididunt esse occaecat officia labore culpa do. Adipisicing anim voluptate aute pariatur esse ullamco cupidatat exercitation deserunt irure eu sit ex. Enim mollit adipisicing enim elit. Excepteur duis do ullamco enim non velit voluptate qui pariatur enim fugiat qui cupidatat.\r\n',
          'registered': '2011-01-17T21:41:08+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Lou Wilson'
            },
            {
              'id': 1,
              'name': 'Stacey Watson'
            },
            {
              'id': 2,
              'name': 'Tracie Henderson'
            }
          ]
        },
        {
          'id': 246,
          'guid': 'cda90226-71b7-495a-8a70-878cc34aa137',
          'isActive': true,
          'balance': '$1,349.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Mollie Miles',
          'gender': 'female',
          'company': 'Cogentry',
          'email': 'molliemiles@cogentry.com',
          'phone': '+1 (992) 547-3436',
          'address': {
            'street': 350,
            'city': 'Caberfae',
            'state': 'Delaware',
            'zip': 7320
          },
          'about': 'Officia laborum aliqua non exercitation. Excepteur occaecat exercitation reprehenderit et sunt nulla dolore eu veniam aute quis. Occaecat dolore consequat aliqua sit consectetur excepteur. Eu irure ullamco dolore occaecat officia cillum. Ullamco minim pariatur ullamco esse ex aliqua cillum laboris veniam nostrud.\r\n',
          'registered': '2005-10-14T07:20:05+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Bruce Barr'
            },
            {
              'id': 1,
              'name': 'Tracy Shannon'
            },
            {
              'id': 2,
              'name': 'Rosalyn Powers'
            }
          ]
        },
        {
          'id': 247,
          'guid': 'e4195d14-b88b-4155-bea5-0c3dac73ed49',
          'isActive': true,
          'balance': '$1,927.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Owens Gonzalez',
          'gender': 'male',
          'company': 'Puria',
          'email': 'owensgonzalez@puria.com',
          'phone': '+1 (975) 408-3655',
          'address': {
            'street': 557,
            'city': 'Hasty',
            'state': 'New Mexico',
            'zip': 1448
          },
          'about': 'Eiusmod veniam ad duis magna sunt. Ea velit do magna anim exercitation sunt amet occaecat nostrud id et. Sunt laborum culpa eu cupidatat sit velit cupidatat irure consectetur nisi.\r\n',
          'registered': '2012-07-08T20:00:21+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Garrett Singleton'
            },
            {
              'id': 1,
              'name': 'Huffman Burnett'
            },
            {
              'id': 2,
              'name': 'Monroe Knox'
            }
          ]
        },
        {
          'id': 248,
          'guid': 'd8c093cc-3233-4d7f-9a87-34e1ac1f855f',
          'isActive': false,
          'balance': '$1,376.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Rice Dillon',
          'gender': 'male',
          'company': 'Memora',
          'email': 'ricedillon@memora.com',
          'phone': '+1 (808) 440-3794',
          'address': {
            'street': 448,
            'city': 'Carlos',
            'state': 'Kansas',
            'zip': 8752
          },
          'about': 'Aliqua ad adipisicing labore cupidatat. Et in Lorem veniam qui. Labore veniam sit do esse aute laborum commodo magna aute ullamco eiusmod aliquip amet.\r\n',
          'registered': '1996-12-17T12:29:34+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Louise Burns'
            },
            {
              'id': 1,
              'name': 'Roach Mendoza'
            },
            {
              'id': 2,
              'name': 'Henrietta Frost'
            }
          ]
        },
        {
          'id': 249,
          'guid': 'ebf21fb1-60ec-4548-abb6-5a98a0abc480',
          'isActive': false,
          'balance': '$1,929.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Mcmillan Vega',
          'gender': 'male',
          'company': 'Artiq',
          'email': 'mcmillanvega@artiq.com',
          'phone': '+1 (826) 541-3737',
          'address': {
            'street': 737,
            'city': 'Hinsdale',
            'state': 'Arizona',
            'zip': 6603
          },
          'about': 'Tempor qui id labore aute. Veniam veniam aute Lorem officia amet amet incididunt ex. Cillum sunt non ipsum quis pariatur quis fugiat cupidatat tempor. Officia ea sint sit fugiat commodo ipsum quis velit sint ut pariatur ullamco non.\r\n',
          'registered': '2001-07-31T05:29:50+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Vilma Porter'
            },
            {
              'id': 1,
              'name': 'Reeves Kerr'
            },
            {
              'id': 2,
              'name': 'Swanson Joseph'
            }
          ]
        },
        {
          'id': 250,
          'guid': '0d303bc9-0d1e-421d-a42e-cd0262d8f963',
          'isActive': true,
          'balance': '$3,799.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Fern Daniel',
          'gender': 'female',
          'company': 'Bisba',
          'email': 'ferndaniel@bisba.com',
          'phone': '+1 (941) 550-2486',
          'address': {
            'street': 195,
            'city': 'Skyland',
            'state': 'Maine',
            'zip': 1780
          },
          'about': 'Consectetur qui ullamco cillum reprehenderit veniam tempor labore dolore sit voluptate in. Et duis in irure sint id duis tempor Lorem est. Culpa cillum id sint irure incididunt commodo consequat minim eiusmod ea ad amet adipisicing non. Culpa eiusmod magna tempor ex voluptate.\r\n',
          'registered': '2005-10-12T01:58:09+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Buchanan Finch'
            },
            {
              'id': 1,
              'name': 'Todd Stanley'
            },
            {
              'id': 2,
              'name': 'Drake Merritt'
            }
          ]
        },
        {
          'id': 251,
          'guid': '42774020-7d7e-49a7-8cab-d422bfd64cae',
          'isActive': false,
          'balance': '$1,998.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Estella Rowe',
          'gender': 'female',
          'company': 'Combogen',
          'email': 'estellarowe@combogen.com',
          'phone': '+1 (961) 482-3629',
          'address': {
            'street': 443,
            'city': 'Albrightsville',
            'state': 'Michigan',
            'zip': 1662
          },
          'about': 'Occaecat magna ut enim et voluptate sunt est sint anim laboris consectetur anim. Nisi nulla irure culpa aliqua duis velit laboris aliqua adipisicing cupidatat culpa minim consectetur veniam. Enim elit irure ut ipsum sit mollit incididunt. Dolor eu Lorem irure proident officia. Duis laborum velit duis occaecat proident do exercitation occaecat eiusmod nisi. Nisi exercitation ea est eiusmod elit non pariatur magna et occaecat reprehenderit proident duis ullamco.\r\n',
          'registered': '2006-08-07T17:03:55+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Maureen Hughes'
            },
            {
              'id': 1,
              'name': 'Gregory Evans'
            },
            {
              'id': 2,
              'name': 'Lourdes Horne'
            }
          ]
        },
        {
          'id': 252,
          'guid': 'b6a7a4c6-7749-42b3-b7bc-eb984687a0c3',
          'isActive': false,
          'balance': '$1,774.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Lula Blevins',
          'gender': 'female',
          'company': 'Kongle',
          'email': 'lulablevins@kongle.com',
          'phone': '+1 (973) 487-2756',
          'address': {
            'street': 657,
            'city': 'Bellfountain',
            'state': 'Oregon',
            'zip': 883
          },
          'about': 'Laborum reprehenderit do et ad deserunt quis cupidatat. Dolor magna officia sunt labore deserunt consectetur do incididunt exercitation. Do est duis pariatur ad magna laboris quis Lorem duis ea nostrud esse et. Tempor minim id ea ad. Exercitation est labore ex dolor labore aliquip irure consequat deserunt irure occaecat mollit nulla. Exercitation eiusmod esse sunt laboris amet reprehenderit et elit est aliquip do.\r\n',
          'registered': '2003-12-07T02:01:36+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Flora Fry'
            },
            {
              'id': 1,
              'name': 'Stella Patterson'
            },
            {
              'id': 2,
              'name': 'Hickman Smith'
            }
          ]
        },
        {
          'id': 253,
          'guid': 'fedf17f1-608e-4dc2-95b0-f5fd6b760066',
          'isActive': false,
          'balance': '$3,233.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Stewart Scott',
          'gender': 'male',
          'company': 'Illumity',
          'email': 'stewartscott@illumity.com',
          'phone': '+1 (924) 502-2662',
          'address': {
            'street': 264,
            'city': 'Enetai',
            'state': 'Tennessee',
            'zip': 6469
          },
          'about': 'Laboris amet sint proident deserunt consectetur eu consectetur culpa labore labore quis velit occaecat. Ullamco ullamco minim aute laborum tempor dolor veniam amet ea cupidatat et minim dolor reprehenderit. Quis minim duis qui reprehenderit eiusmod tempor cupidatat esse magna et eu. Ullamco proident ad dolor reprehenderit Lorem cupidatat velit ipsum exercitation. Ullamco Lorem ea enim cupidatat laboris cillum est cupidatat dolor dolore occaecat aliquip. In id quis laboris deserunt. Esse mollit pariatur incididunt aliquip dolore in sunt velit mollit in ex aute est.\r\n',
          'registered': '2009-12-08T00:07:05+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Combs Duran'
            },
            {
              'id': 1,
              'name': 'Corina Clements'
            },
            {
              'id': 2,
              'name': 'Karyn Burris'
            }
          ]
        },
        {
          'id': 254,
          'guid': '8a67940c-2b31-421a-9f9c-72219e30b284',
          'isActive': false,
          'balance': '$3,733.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Jerry Holmes',
          'gender': 'female',
          'company': 'Bitrex',
          'email': 'jerryholmes@bitrex.com',
          'phone': '+1 (888) 482-3467',
          'address': {
            'street': 672,
            'city': 'Bedias',
            'state': 'Nevada',
            'zip': 1581
          },
          'about': 'In elit sunt eu est. Amet irure cupidatat in irure. Consequat sint irure nulla pariatur exercitation quis velit velit et. Aliqua nisi consequat esse ut eu consectetur cupidatat ad consectetur irure Lorem voluptate Lorem. Veniam voluptate ex consectetur cupidatat eiusmod magna.\r\n',
          'registered': '2009-05-28T07:05:39+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Roth Macdonald'
            },
            {
              'id': 1,
              'name': 'Hurst Brady'
            },
            {
              'id': 2,
              'name': 'Karen Nguyen'
            }
          ]
        },
        {
          'id': 255,
          'guid': 'cf81dbfa-76bb-494b-acc2-9e33ca92126c',
          'isActive': true,
          'balance': '$3,824.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Cain Wagner',
          'gender': 'male',
          'company': 'Tourmania',
          'email': 'cainwagner@tourmania.com',
          'phone': '+1 (980) 517-2188',
          'address': {
            'street': 956,
            'city': 'Darrtown',
            'state': 'Maryland',
            'zip': 946
          },
          'about': 'Nulla id commodo qui velit laborum cupidatat excepteur irure tempor. Excepteur incididunt irure exercitation nulla eu ullamco. Sunt exercitation esse velit aute. Velit dolor exercitation voluptate reprehenderit deserunt occaecat tempor laborum est deserunt labore duis incididunt. Ut elit id nulla nostrud. Veniam fugiat ea dolor velit quis exercitation incididunt pariatur eiusmod occaecat quis labore enim nulla.\r\n',
          'registered': '1989-09-24T06:33:54+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Sims Cochran'
            },
            {
              'id': 1,
              'name': 'Norris Petersen'
            },
            {
              'id': 2,
              'name': 'Elnora Kane'
            }
          ]
        },
        {
          'id': 256,
          'guid': '9e401336-f2bd-4597-b7c8-62af74c72131',
          'isActive': true,
          'balance': '$1,149.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Crane Sandoval',
          'gender': 'male',
          'company': 'Utara',
          'email': 'cranesandoval@utara.com',
          'phone': '+1 (847) 429-2442',
          'address': {
            'street': 276,
            'city': 'Chelsea',
            'state': 'Rhode Island',
            'zip': 8029
          },
          'about': 'Aute Lorem consectetur mollit reprehenderit. Eiusmod velit mollit est ad elit. Exercitation dolore culpa sint laboris Lorem et sunt ea culpa aliqua veniam exercitation. Veniam ad aute sint tempor esse esse excepteur irure do ipsum nisi sint cillum.\r\n',
          'registered': '1991-08-18T04:48:18+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Marks Bernard'
            },
            {
              'id': 1,
              'name': 'Riggs Salas'
            },
            {
              'id': 2,
              'name': 'Rodriguez Wilder'
            }
          ]
        },
        {
          'id': 257,
          'guid': '43a70162-6068-49c3-8afb-270b36d12ee6',
          'isActive': true,
          'balance': '$3,288.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Dena Rocha',
          'gender': 'female',
          'company': 'Satiance',
          'email': 'denarocha@satiance.com',
          'phone': '+1 (852) 412-2776',
          'address': {
            'street': 330,
            'city': 'Bartonsville',
            'state': 'Iowa',
            'zip': 2778
          },
          'about': 'Proident voluptate anim nisi laborum excepteur. Consequat voluptate ipsum sint fugiat enim quis sunt. Laborum magna duis sunt nisi aliqua irure anim.\r\n',
          'registered': '2004-12-05T09:33:37+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mueller Fowler'
            },
            {
              'id': 1,
              'name': 'Alvarez Curry'
            },
            {
              'id': 2,
              'name': 'Shari Arnold'
            }
          ]
        },
        {
          'id': 258,
          'guid': 'b64b1693-2c94-4906-b902-ce8437f05b08',
          'isActive': true,
          'balance': '$1,222.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Goodwin Sampson',
          'gender': 'male',
          'company': 'Cytrek',
          'email': 'goodwinsampson@cytrek.com',
          'phone': '+1 (900) 500-3402',
          'address': {
            'street': 977,
            'city': 'Rodanthe',
            'state': 'Colorado',
            'zip': 366
          },
          'about': 'Veniam cillum ea velit ex anim Lorem amet. Adipisicing enim amet velit qui amet officia mollit tempor laborum dolore consectetur elit. Voluptate nisi exercitation qui nostrud aute et. Amet ipsum esse aliqua eu et elit consectetur.\r\n',
          'registered': '2009-05-01T00:01:00+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Margie Bowman'
            },
            {
              'id': 1,
              'name': 'Osborne Marshall'
            },
            {
              'id': 2,
              'name': 'Keri Rowland'
            }
          ]
        },
        {
          'id': 259,
          'guid': '3d945edb-baed-4b08-8cd5-06fb31827b10',
          'isActive': true,
          'balance': '$1,879.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Ashlee Lamb',
          'gender': 'female',
          'company': 'Zilladyne',
          'email': 'ashleelamb@zilladyne.com',
          'phone': '+1 (811) 544-2577',
          'address': {
            'street': 871,
            'city': 'Highland',
            'state': 'Mississippi',
            'zip': 7695
          },
          'about': 'Fugiat ullamco duis aute cillum elit fugiat velit incididunt. Commodo sit esse id fugiat ullamco pariatur culpa. Ut ut proident et cupidatat nisi id ex tempor laboris nostrud aliqua ipsum. Sint magna ut do ea est aliquip reprehenderit.\r\n',
          'registered': '1997-02-08T18:04:30+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Daugherty Nichols'
            },
            {
              'id': 1,
              'name': 'Terrie Hickman'
            },
            {
              'id': 2,
              'name': 'Laverne Cross'
            }
          ]
        },
        {
          'id': 260,
          'guid': 'bdbffe5c-c78b-4f6c-bc1f-b167eacf2a6d',
          'isActive': false,
          'balance': '$3,838.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Underwood Dickerson',
          'gender': 'male',
          'company': 'Geekola',
          'email': 'underwooddickerson@geekola.com',
          'phone': '+1 (882) 409-2976',
          'address': {
            'street': 112,
            'city': 'Brookfield',
            'state': 'New York',
            'zip': 9362
          },
          'about': 'Proident reprehenderit anim ut quis irure cillum fugiat nisi tempor quis sit consectetur. Ad incididunt ut cupidatat veniam minim voluptate ad culpa fugiat dolore sint. Esse fugiat reprehenderit irure velit non labore adipisicing incididunt velit proident duis. Laboris elit esse laborum ea. Consequat est esse in est irure anim nulla occaecat sunt ea proident enim ipsum ea.\r\n',
          'registered': '1994-10-29T14:03:53+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Richardson Bates'
            },
            {
              'id': 1,
              'name': 'Atkinson Cervantes'
            },
            {
              'id': 2,
              'name': 'Jenkins Pearson'
            }
          ]
        },
        {
          'id': 261,
          'guid': 'ef681c1f-3dde-41d8-bdb1-cfcd089a8677',
          'isActive': false,
          'balance': '$3,811.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Ericka Lyons',
          'gender': 'female',
          'company': 'Eargo',
          'email': 'erickalyons@eargo.com',
          'phone': '+1 (806) 416-2946',
          'address': {
            'street': 422,
            'city': 'Kilbourne',
            'state': 'New Hampshire',
            'zip': 295
          },
          'about': 'Aute laboris dolor dolore eiusmod nisi tempor ut exercitation sint nisi. Nulla esse minim velit minim in tempor tempor ipsum non voluptate. Ea duis eu consequat nulla eiusmod. Mollit aliqua aute sit dolore laboris esse ullamco. Aliqua minim quis ullamco proident exercitation.\r\n',
          'registered': '1990-06-15T19:46:00+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Rios Casey'
            },
            {
              'id': 1,
              'name': 'Good Ramos'
            },
            {
              'id': 2,
              'name': 'Luisa Chavez'
            }
          ]
        },
        {
          'id': 262,
          'guid': '902e644c-51fe-44a0-9a2c-8be1a45d0c07',
          'isActive': true,
          'balance': '$1,519.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Valeria Burke',
          'gender': 'female',
          'company': 'Oulu',
          'email': 'valeriaburke@oulu.com',
          'phone': '+1 (939) 553-3290',
          'address': {
            'street': 847,
            'city': 'Columbus',
            'state': 'Arkansas',
            'zip': 1769
          },
          'about': 'Fugiat ea ut fugiat esse officia ea nisi amet esse excepteur. Exercitation tempor mollit reprehenderit est minim irure sunt nulla irure. Occaecat excepteur labore eu proident tempor amet qui tempor officia officia est est aliqua reprehenderit. Eiusmod et voluptate irure duis duis. Excepteur ullamco Lorem sint anim consequat nostrud anim laboris pariatur id ea culpa cillum.\r\n',
          'registered': '2007-11-08T08:39:08+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Carrillo Colon'
            },
            {
              'id': 1,
              'name': 'Deanna West'
            },
            {
              'id': 2,
              'name': 'Julia Kirby'
            }
          ]
        },
        {
          'id': 263,
          'guid': 'cf5ce202-06a1-4e31-8a1d-3b5262ded0c2',
          'isActive': true,
          'balance': '$3,499.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Maribel Mcfadden',
          'gender': 'female',
          'company': 'Daido',
          'email': 'maribelmcfadden@daido.com',
          'phone': '+1 (923) 575-3788',
          'address': {
            'street': 934,
            'city': 'Beaverdale',
            'state': 'North Dakota',
            'zip': 4931
          },
          'about': 'Sit quis quis quis amet aute eu exercitation occaecat nostrud sit. Nulla elit deserunt proident dolore ad excepteur voluptate aliquip qui consequat elit sit voluptate fugiat. Aute pariatur do aliqua proident. Veniam ut et officia culpa sint et. Velit deserunt commodo aute mollit. Tempor mollit reprehenderit proident commodo. Tempor velit do officia ad ea commodo eu nulla.\r\n',
          'registered': '2007-04-16T09:01:42+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Corine Reyes'
            },
            {
              'id': 1,
              'name': 'Erin David'
            },
            {
              'id': 2,
              'name': 'Ruiz Silva'
            }
          ]
        },
        {
          'id': 264,
          'guid': 'dd524db9-5aec-4ed3-90c9-f802cc76e6cd',
          'isActive': true,
          'balance': '$1,869.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Wilson Dixon',
          'gender': 'male',
          'company': 'Coriander',
          'email': 'wilsondixon@coriander.com',
          'phone': '+1 (908) 571-3309',
          'address': {
            'street': 441,
            'city': 'Fredericktown',
            'state': 'Massachusetts',
            'zip': 1455
          },
          'about': 'Ullamco culpa minim proident dolore est Lorem nulla. Aute commodo sit ad duis pariatur proident. Laborum ipsum ad officia et qui laborum.\r\n',
          'registered': '2001-04-17T12:54:54+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Robinson Sparks'
            },
            {
              'id': 1,
              'name': 'Myrna Jordan'
            },
            {
              'id': 2,
              'name': 'Pacheco Bowen'
            }
          ]
        },
        {
          'id': 265,
          'guid': '947c8770-7e8d-4350-8d61-d39795973e22',
          'isActive': true,
          'balance': '$3,359.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Iris Eaton',
          'gender': 'female',
          'company': 'Prosure',
          'email': 'iriseaton@prosure.com',
          'phone': '+1 (871) 524-2765',
          'address': {
            'street': 176,
            'city': 'Veguita',
            'state': 'Pennsylvania',
            'zip': 9869
          },
          'about': 'Ad ad cillum elit dolor quis dolor nisi qui elit laboris consectetur culpa dolor. Dolore minim anim nisi pariatur ullamco officia dolor velit non do duis culpa laboris non. Cillum quis voluptate irure nulla eu nulla magna cillum adipisicing proident id ullamco sunt culpa. Cillum commodo tempor culpa esse laborum magna sit. Lorem amet tempor dolore et eu. Duis ex labore minim eiusmod quis do adipisicing.\r\n',
          'registered': '1998-06-23T10:00:48+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Dixon Vaughan'
            },
            {
              'id': 1,
              'name': 'Mullins Riggs'
            },
            {
              'id': 2,
              'name': 'Queen Moran'
            }
          ]
        },
        {
          'id': 266,
          'guid': 'c21ee71b-6a25-4c35-a0a7-57a8e7529c61',
          'isActive': true,
          'balance': '$3,963.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Marci Campos',
          'gender': 'female',
          'company': 'Cosmetex',
          'email': 'marcicampos@cosmetex.com',
          'phone': '+1 (882) 580-2316',
          'address': {
            'street': 289,
            'city': 'Harrison',
            'state': 'Louisiana',
            'zip': 9268
          },
          'about': 'Tempor commodo voluptate do nulla aliquip cupidatat duis enim minim culpa. Nostrud duis labore ipsum qui proident amet occaecat labore laborum commodo nostrud aliquip deserunt. Dolore reprehenderit veniam velit aute aute.\r\n',
          'registered': '2002-09-18T23:00:45+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Houston Fields'
            },
            {
              'id': 1,
              'name': 'Leslie Lewis'
            },
            {
              'id': 2,
              'name': 'Becker Willis'
            }
          ]
        },
        {
          'id': 267,
          'guid': 'a4cc8d98-c225-4403-a815-b9bbd150460b',
          'isActive': false,
          'balance': '$1,876.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Juliette Koch',
          'gender': 'female',
          'company': 'Krog',
          'email': 'juliettekoch@krog.com',
          'phone': '+1 (932) 515-3267',
          'address': {
            'street': 797,
            'city': 'Glasgow',
            'state': 'Kentucky',
            'zip': 5276
          },
          'about': 'Aliqua enim duis incididunt tempor adipisicing ullamco dolore aliquip incididunt consectetur enim. Ea veniam ex ea adipisicing ullamco cillum veniam dolor. Laborum ex sit anim cupidatat pariatur ad labore qui ad.\r\n',
          'registered': '1988-12-24T19:03:24+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Donna Carr'
            },
            {
              'id': 1,
              'name': 'Yolanda Oliver'
            },
            {
              'id': 2,
              'name': 'Nolan Newton'
            }
          ]
        },
        {
          'id': 268,
          'guid': '0468bd2f-e04b-4feb-9383-6161630d0e83',
          'isActive': true,
          'balance': '$2,640.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Barron Alford',
          'gender': 'male',
          'company': 'Medifax',
          'email': 'barronalford@medifax.com',
          'phone': '+1 (982) 593-2268',
          'address': {
            'street': 928,
            'city': 'Weogufka',
            'state': 'Washington',
            'zip': 3429
          },
          'about': 'Ullamco et cillum sint reprehenderit eiusmod cupidatat. Dolor ullamco eu ipsum consequat pariatur ut cupidatat officia. Cupidatat excepteur eu laboris velit.\r\n',
          'registered': '2007-09-06T05:39:18+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Christa Gilliam'
            },
            {
              'id': 1,
              'name': 'Aida Booth'
            },
            {
              'id': 2,
              'name': 'Tiffany Sloan'
            }
          ]
        },
        {
          'id': 269,
          'guid': '80836f7d-a0da-49d3-ab63-1c33c9de06ad',
          'isActive': false,
          'balance': '$2,432.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'James Morin',
          'gender': 'male',
          'company': 'Frenex',
          'email': 'jamesmorin@frenex.com',
          'phone': '+1 (918) 451-3074',
          'address': {
            'street': 527,
            'city': 'Hickory',
            'state': 'Minnesota',
            'zip': 4876
          },
          'about': 'Quis esse cillum laboris exercitation dolor ex exercitation deserunt qui. Culpa cillum occaecat labore laborum irure aute magna irure quis sunt. Ea exercitation occaecat aute voluptate sunt ex qui irure. Est pariatur commodo deserunt id officia sit cillum ad commodo amet enim culpa labore. Mollit anim laborum reprehenderit nisi ullamco qui ea qui.\r\n',
          'registered': '2005-06-27T03:49:16+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Nelson Cohen'
            },
            {
              'id': 1,
              'name': 'Francisca Jefferson'
            },
            {
              'id': 2,
              'name': 'Katrina Morales'
            }
          ]
        },
        {
          'id': 270,
          'guid': '1e31edf9-b87f-4f61-b2a5-6270e6e25a82',
          'isActive': true,
          'balance': '$2,398.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Leona Dotson',
          'gender': 'female',
          'company': 'Irack',
          'email': 'leonadotson@irack.com',
          'phone': '+1 (856) 588-2822',
          'address': {
            'street': 469,
            'city': 'Soham',
            'state': 'South Carolina',
            'zip': 4224
          },
          'about': 'Aute minim ea non labore nostrud velit amet nostrud occaecat ipsum. Ex reprehenderit commodo nulla pariatur do nostrud in sint pariatur laboris elit amet pariatur. Quis et dolore eiusmod tempor. Voluptate aliqua ullamco consequat fugiat est in consequat proident minim adipisicing irure do ipsum aliquip. Ex aute anim enim id nostrud aute occaecat elit veniam. Magna velit deserunt aute adipisicing aliqua sunt nulla laborum et laborum tempor excepteur. Minim officia quis esse est ea deserunt ad fugiat.\r\n',
          'registered': '2010-11-20T11:02:54+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Marlene Mcgee'
            },
            {
              'id': 1,
              'name': 'Ramos Sherman'
            },
            {
              'id': 2,
              'name': 'Olive Yates'
            }
          ]
        },
        {
          'id': 271,
          'guid': '35922464-54f4-45e7-99b8-9193081fdae7',
          'isActive': false,
          'balance': '$1,059.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Berger Mckee',
          'gender': 'male',
          'company': 'Cofine',
          'email': 'bergermckee@cofine.com',
          'phone': '+1 (846) 409-2677',
          'address': {
            'street': 772,
            'city': 'Ballico',
            'state': 'Virginia',
            'zip': 3344
          },
          'about': 'Consectetur amet consectetur nostrud commodo dolor culpa enim cupidatat. Ad officia laboris pariatur nostrud ad non dolor ea. Voluptate cupidatat minim nostrud dolore officia et pariatur velit aute enim nisi.\r\n',
          'registered': '1992-07-26T00:33:24+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Angel Davenport'
            },
            {
              'id': 1,
              'name': 'Terri Mayo'
            },
            {
              'id': 2,
              'name': 'Patel Avery'
            }
          ]
        },
        {
          'id': 272,
          'guid': 'b8be2205-8d5a-412b-900a-8dd3557d2bf9',
          'isActive': false,
          'balance': '$3,527.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Conway Coffey',
          'gender': 'male',
          'company': 'Overplex',
          'email': 'conwaycoffey@overplex.com',
          'phone': '+1 (987) 559-3047',
          'address': {
            'street': 834,
            'city': 'Barrelville',
            'state': 'Florida',
            'zip': 4323
          },
          'about': 'Id consequat aliqua qui consectetur magna adipisicing nostrud cupidatat est reprehenderit mollit occaecat eu. Do excepteur ea esse dolor et eu commodo veniam et exercitation in dolore. Voluptate enim adipisicing ea excepteur eu aliqua labore irure eiusmod occaecat ut sint. Ad id eiusmod nostrud esse aliquip. Consectetur enim duis cillum cupidatat officia incididunt. Laboris non veniam eiusmod velit minim sit. Eiusmod quis reprehenderit labore aliquip commodo incididunt consequat cillum pariatur do dolor irure in aliqua.\r\n',
          'registered': '2011-10-18T18:28:52+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Sherrie Daniels'
            },
            {
              'id': 1,
              'name': 'Walter Pate'
            },
            {
              'id': 2,
              'name': 'Patti Hebert'
            }
          ]
        },
        {
          'id': 273,
          'guid': 'a899b929-06db-4eb3-a28a-12c42e0788f7',
          'isActive': true,
          'balance': '$2,066.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Justice Figueroa',
          'gender': 'male',
          'company': 'Geeknet',
          'email': 'justicefigueroa@geeknet.com',
          'phone': '+1 (968) 468-2700',
          'address': {
            'street': 406,
            'city': 'Collins',
            'state': 'Georgia',
            'zip': 9368
          },
          'about': 'Consectetur fugiat aliquip ea aliquip occaecat enim proident veniam nulla esse aute amet cillum excepteur. Incididunt est esse non officia. Amet ut cillum dolor esse aute excepteur excepteur nostrud. Labore ut in non fugiat est. Pariatur et deserunt mollit nisi.\r\n',
          'registered': '2005-01-28T07:12:08+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Briggs Padilla'
            },
            {
              'id': 1,
              'name': 'Cox Kelly'
            },
            {
              'id': 2,
              'name': 'George Valencia'
            }
          ]
        },
        {
          'id': 274,
          'guid': 'f5e00eef-9afb-4cb8-bd43-073e2317ea81',
          'isActive': false,
          'balance': '$2,981.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Holden Leon',
          'gender': 'male',
          'company': 'Kneedles',
          'email': 'holdenleon@kneedles.com',
          'phone': '+1 (998) 481-3553',
          'address': {
            'street': 238,
            'city': 'Eagletown',
            'state': 'California',
            'zip': 9014
          },
          'about': 'Consectetur voluptate consectetur tempor nulla duis excepteur id. Do mollit nostrud non in magna officia in minim ipsum. Ex aute esse eu nisi mollit minim. Reprehenderit aute consequat do est tempor sit magna eiusmod minim anim eu officia magna eiusmod. Reprehenderit laborum Lorem veniam commodo aliquip ullamco ex Lorem laborum eiusmod.\r\n',
          'registered': '2008-10-14T13:19:48+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Ines Martin'
            },
            {
              'id': 1,
              'name': 'Harper Reynolds'
            },
            {
              'id': 2,
              'name': 'Tommie Fernandez'
            }
          ]
        },
        {
          'id': 275,
          'guid': '6dd0de9a-1dc5-41c0-9887-4217111e577f',
          'isActive': false,
          'balance': '$3,953.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Lora Brewer',
          'gender': 'female',
          'company': 'Marketoid',
          'email': 'lorabrewer@marketoid.com',
          'phone': '+1 (836) 511-2614',
          'address': {
            'street': 455,
            'city': 'Tolu',
            'state': 'West Virginia',
            'zip': 4487
          },
          'about': 'Eu velit fugiat esse culpa excepteur qui sint aute id culpa est labore do. Ex aliquip fugiat pariatur sunt sunt. Anim dolor non commodo Lorem anim. Sint nisi tempor sint officia dolor esse incididunt pariatur commodo eiusmod.\r\n',
          'registered': '1994-02-17T20:26:06+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Dale Navarro'
            },
            {
              'id': 1,
              'name': 'Alisa Hardy'
            },
            {
              'id': 2,
              'name': 'Elsa Kidd'
            }
          ]
        },
        {
          'id': 276,
          'guid': 'fcf48a67-5823-4821-9f8a-8aa00a13ecfe',
          'isActive': false,
          'balance': '$1,707.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Janie Mason',
          'gender': 'female',
          'company': 'Xerex',
          'email': 'janiemason@xerex.com',
          'phone': '+1 (876) 515-3690',
          'address': {
            'street': 859,
            'city': 'Marbury',
            'state': 'Utah',
            'zip': 4210
          },
          'about': 'Consectetur nisi sint esse est commodo sunt proident fugiat officia dolor proident. Culpa cupidatat sit voluptate qui minim enim irure tempor magna amet veniam. Consequat velit consequat commodo id quis consequat aliqua ea. Minim est ipsum duis est qui anim exercitation nulla. Consectetur elit id ex ex aliquip irure enim non officia amet. Irure cupidatat ipsum ullamco qui ad incididunt magna incididunt. Amet incididunt veniam sunt ullamco irure.\r\n',
          'registered': '2002-11-06T07:47:18+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Elinor Mitchell'
            },
            {
              'id': 1,
              'name': 'Hutchinson Gould'
            },
            {
              'id': 2,
              'name': 'Melba Jensen'
            }
          ]
        },
        {
          'id': 277,
          'guid': 'd3305cdc-7f8b-4ca3-939b-0da5085f0489',
          'isActive': true,
          'balance': '$2,583.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Ava Haney',
          'gender': 'female',
          'company': 'Buzzmaker',
          'email': 'avahaney@buzzmaker.com',
          'phone': '+1 (913) 426-3098',
          'address': {
            'street': 717,
            'city': 'Walker',
            'state': 'Alabama',
            'zip': 6547
          },
          'about': 'Eu nostrud deserunt amet aute ipsum consequat adipisicing nulla laborum. Nisi deserunt ad exercitation proident irure do pariatur deserunt nostrud dolor nulla cillum. Duis mollit cillum duis aliqua ea dolor excepteur deserunt do laborum deserunt aliquip. Cupidatat elit pariatur excepteur non magna ad.\r\n',
          'registered': '1994-08-07T01:35:32+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Glenn Preston'
            },
            {
              'id': 1,
              'name': 'Alicia Norman'
            },
            {
              'id': 2,
              'name': 'Higgins Bonner'
            }
          ]
        },
        {
          'id': 278,
          'guid': '7dabb23e-e67f-4004-923f-37cca515731f',
          'isActive': false,
          'balance': '$2,115.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'English Mccoy',
          'gender': 'male',
          'company': 'Providco',
          'email': 'englishmccoy@providco.com',
          'phone': '+1 (817) 574-3379',
          'address': {
            'street': 878,
            'city': 'Nanafalia',
            'state': 'Montana',
            'zip': 8075
          },
          'about': 'Labore velit pariatur commodo ea excepteur enim nostrud reprehenderit laborum nulla aute reprehenderit laborum. Non velit sint incididunt dolor fugiat sint Lorem veniam sint exercitation Lorem elit. Labore aliqua ut irure proident laboris nostrud deserunt. Fugiat est id duis nisi Lorem ea eu id. Ullamco qui pariatur magna enim occaecat incididunt nulla ut. Incididunt culpa est sit aute occaecat cupidatat sint incididunt ad culpa nostrud. Aliqua proident in aliquip ea anim cillum laborum quis.\r\n',
          'registered': '1999-12-26T03:02:21+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Evangeline Pacheco'
            },
            {
              'id': 1,
              'name': 'Muriel Barlow'
            },
            {
              'id': 2,
              'name': 'Shelley Massey'
            }
          ]
        },
        {
          'id': 279,
          'guid': '6d086aac-1645-4596-85de-91d5670280ea',
          'isActive': false,
          'balance': '$3,701.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Hoover Mcmahon',
          'gender': 'male',
          'company': 'Zosis',
          'email': 'hoovermcmahon@zosis.com',
          'phone': '+1 (909) 516-3039',
          'address': {
            'street': 592,
            'city': 'Hatteras',
            'state': 'Connecticut',
            'zip': 5754
          },
          'about': 'Dolor exercitation voluptate eiusmod aute ex consectetur nulla. Esse deserunt irure ex enim non est officia sunt minim. Quis in in ipsum sunt reprehenderit officia nisi. Enim cupidatat ex nisi fugiat do cillum quis id duis ullamco nisi laboris nostrud. Amet irure dolore exercitation nisi laborum.\r\n',
          'registered': '2001-09-13T14:51:16+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Rosario Mckenzie'
            },
            {
              'id': 1,
              'name': 'Adriana Potts'
            },
            {
              'id': 2,
              'name': 'Clarice Blanchard'
            }
          ]
        },
        {
          'id': 280,
          'guid': '2ea6fddc-f5fb-41e8-9c99-3e0192ccd358',
          'isActive': false,
          'balance': '$1,492.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Cardenas Tucker',
          'gender': 'male',
          'company': 'Comtrail',
          'email': 'cardenastucker@comtrail.com',
          'phone': '+1 (801) 582-2586',
          'address': {
            'street': 705,
            'city': 'Sardis',
            'state': 'South Dakota',
            'zip': 212
          },
          'about': 'Sit veniam aliquip do non dolore sit minim non cillum aliquip laborum mollit eu. Mollit nulla nostrud minim veniam sit in enim enim ex aliqua occaecat. Non nisi minim consectetur commodo elit cillum cupidatat aute occaecat dolore elit. Voluptate elit officia dolor mollit nostrud tempor. Velit Lorem minim laboris nostrud velit.\r\n',
          'registered': '1988-04-23T01:16:05+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Trujillo Olson'
            },
            {
              'id': 1,
              'name': 'Ford Bailey'
            },
            {
              'id': 2,
              'name': 'Susie Mcclure'
            }
          ]
        },
        {
          'id': 281,
          'guid': 'a1a8993a-5b9a-432f-80db-8f049ca367de',
          'isActive': false,
          'balance': '$2,311.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Cynthia Case',
          'gender': 'female',
          'company': 'Furnitech',
          'email': 'cynthiacase@furnitech.com',
          'phone': '+1 (932) 403-3459',
          'address': {
            'street': 290,
            'city': 'Martell',
            'state': 'Oklahoma',
            'zip': 8803
          },
          'about': 'Occaecat eiusmod nisi deserunt consequat mollit aliquip. Veniam Lorem laboris aliquip cillum dolor. Magna labore minim amet nulla laboris culpa exercitation cupidatat elit aliquip adipisicing tempor. Duis laboris commodo eu commodo laboris do qui mollit. Voluptate anim quis incididunt id do duis ex laboris qui nisi magna nostrud incididunt. Cillum laboris dolore cupidatat fugiat non exercitation.\r\n',
          'registered': '1988-03-04T00:17:02+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Christian Petty'
            },
            {
              'id': 1,
              'name': 'Tania Parsons'
            },
            {
              'id': 2,
              'name': 'Phyllis Cotton'
            }
          ]
        },
        {
          'id': 282,
          'guid': 'a361da33-bdd6-49c9-a23a-6f3824877655',
          'isActive': true,
          'balance': '$3,191.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Snow Goodman',
          'gender': 'male',
          'company': 'Optyk',
          'email': 'snowgoodman@optyk.com',
          'phone': '+1 (850) 557-2034',
          'address': {
            'street': 845,
            'city': 'Jamestown',
            'state': 'North Carolina',
            'zip': 5553
          },
          'about': 'Occaecat do dolor ut officia consequat eu nisi eiusmod elit. Anim Lorem anim laboris dolore anim sint laborum deserunt laboris labore nulla. Ad non occaecat laborum officia culpa ullamco aliqua est eu. Id nulla officia tempor enim nisi incididunt. Cupidatat laborum culpa consequat laboris eiusmod. Do id officia sit commodo officia irure voluptate voluptate laborum ea velit.\r\n',
          'registered': '2001-05-01T22:29:52+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Pope Lawrence'
            },
            {
              'id': 1,
              'name': 'Lelia Baxter'
            },
            {
              'id': 2,
              'name': 'Denise Mcleod'
            }
          ]
        },
        {
          'id': 283,
          'guid': '258f4faa-4d63-445d-b6d8-8097226e584d',
          'isActive': false,
          'balance': '$1,329.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Olivia Hubbard',
          'gender': 'female',
          'company': 'Overfork',
          'email': 'oliviahubbard@overfork.com',
          'phone': '+1 (842) 414-3370',
          'address': {
            'street': 682,
            'city': 'Rossmore',
            'state': 'Idaho',
            'zip': 4074
          },
          'about': 'Culpa excepteur consequat velit eu Lorem ut sint quis. Consectetur ex ut anim velit officia irure non veniam commodo ut. Mollit ipsum non elit dolore sunt amet officia irure quis. Proident voluptate Lorem labore reprehenderit enim nostrud. Exercitation labore quis exercitation ipsum ea culpa in voluptate deserunt non. Laboris dolor irure esse sint proident et nulla cupidatat officia magna ad laboris.\r\n',
          'registered': '1998-09-22T02:52:37+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mayra Dominguez'
            },
            {
              'id': 1,
              'name': 'Rosalind Estes'
            },
            {
              'id': 2,
              'name': 'Savannah Trevino'
            }
          ]
        },
        {
          'id': 284,
          'guid': '10e1fcef-511c-4d21-9bb7-d869dddac504',
          'isActive': true,
          'balance': '$2,486.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Snider Buckner',
          'gender': 'male',
          'company': 'Aquamate',
          'email': 'sniderbuckner@aquamate.com',
          'phone': '+1 (908) 412-3613',
          'address': {
            'street': 532,
            'city': 'Hachita',
            'state': 'Vermont',
            'zip': 5447
          },
          'about': 'Exercitation nisi excepteur laborum occaecat ex reprehenderit excepteur aliquip adipisicing dolor do consectetur amet do. Commodo excepteur laboris adipisicing eu sint ut voluptate Lorem ad pariatur minim exercitation incididunt esse. Est velit exercitation cillum ad in pariatur occaecat aute.\r\n',
          'registered': '2000-12-15T03:56:17+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Elaine Morse'
            },
            {
              'id': 1,
              'name': 'Rhonda Spears'
            },
            {
              'id': 2,
              'name': 'Palmer Cantrell'
            }
          ]
        },
        {
          'id': 285,
          'guid': '3635493b-453a-41ca-a2e5-2d312085dc98',
          'isActive': true,
          'balance': '$3,365.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Rhoda Ryan',
          'gender': 'female',
          'company': 'Exodoc',
          'email': 'rhodaryan@exodoc.com',
          'phone': '+1 (955) 578-3504',
          'address': {
            'street': 423,
            'city': 'Haena',
            'state': 'Alaska',
            'zip': 5131
          },
          'about': 'Aliqua ut nisi anim id qui do incididunt. Irure mollit nisi incididunt proident nostrud magna voluptate esse officia tempor laborum cillum cupidatat. Duis ipsum est est veniam. Sint elit consequat velit proident. Labore esse non ea consectetur pariatur dolor tempor est non velit. Enim cillum ipsum magna duis esse aliqua excepteur anim in do culpa aliquip.\r\n',
          'registered': '1997-08-10T14:33:52+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Rebecca Holloway'
            },
            {
              'id': 1,
              'name': 'Jenifer Luna'
            },
            {
              'id': 2,
              'name': 'Douglas Slater'
            }
          ]
        },
        {
          'id': 286,
          'guid': 'cbaeb732-a403-47d7-9a8f-6dd87d0656a4',
          'isActive': true,
          'balance': '$2,455.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Cheryl Wilkerson',
          'gender': 'female',
          'company': 'Daisu',
          'email': 'cherylwilkerson@daisu.com',
          'phone': '+1 (978) 551-2129',
          'address': {
            'street': 102,
            'city': 'Kingstowne',
            'state': 'Nebraska',
            'zip': 5859
          },
          'about': 'Nisi aute amet cupidatat sint do do proident nulla proident nulla enim ipsum. Pariatur magna laboris incididunt amet. Irure commodo deserunt fugiat eu velit ullamco aliquip. Deserunt est quis ut consequat nulla esse adipisicing ex do.\r\n',
          'registered': '2002-01-23T23:36:16+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mckinney Leach'
            },
            {
              'id': 1,
              'name': 'Dawn Randall'
            },
            {
              'id': 2,
              'name': 'Long Curtis'
            }
          ]
        },
        {
          'id': 287,
          'guid': '415f567d-1f0b-43a6-aadf-6ba9a26bca1b',
          'isActive': false,
          'balance': '$1,231.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Larson Macias',
          'gender': 'male',
          'company': 'Opticom',
          'email': 'larsonmacias@opticom.com',
          'phone': '+1 (985) 421-3396',
          'address': {
            'street': 796,
            'city': 'Indio',
            'state': 'Hawaii',
            'zip': 9911
          },
          'about': 'Pariatur incididunt incididunt consectetur ut tempor dolor in. Nisi velit ipsum mollit consequat deserunt consectetur aute. Occaecat amet eu aute elit Lorem officia exercitation elit dolore occaecat ex amet. Et non ad eiusmod est enim duis velit sit enim deserunt.\r\n',
          'registered': '2008-12-22T09:03:15+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Gross Wright'
            },
            {
              'id': 1,
              'name': 'Ware Owen'
            },
            {
              'id': 2,
              'name': 'Terrell Nash'
            }
          ]
        },
        {
          'id': 288,
          'guid': 'f52197b6-7be4-406c-bcc3-8aac4fc34c24',
          'isActive': true,
          'balance': '$1,171.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Ruthie Elliott',
          'gender': 'female',
          'company': 'Nixelt',
          'email': 'ruthieelliott@nixelt.com',
          'phone': '+1 (867) 462-2992',
          'address': {
            'street': 211,
            'city': 'Groton',
            'state': 'Indiana',
            'zip': 2677
          },
          'about': 'Cupidatat est nulla enim ad culpa consectetur quis voluptate minim laborum est nisi quis. Nostrud anim reprehenderit dolor do labore dolor laboris laboris quis et irure adipisicing aliqua. Cupidatat nostrud cillum elit sunt irure esse irure officia ullamco.\r\n',
          'registered': '1999-10-11T11:44:51+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Whitfield Jacobs'
            },
            {
              'id': 1,
              'name': 'Hicks Manning'
            },
            {
              'id': 2,
              'name': 'Brady Buckley'
            }
          ]
        },
        {
          'id': 289,
          'guid': 'faf8c6c8-4280-48d8-b655-275a3a9f80e2',
          'isActive': true,
          'balance': '$3,158.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Gordon Poole',
          'gender': 'male',
          'company': 'Zolarex',
          'email': 'gordonpoole@zolarex.com',
          'phone': '+1 (972) 507-3643',
          'address': {
            'street': 557,
            'city': 'Gratton',
            'state': 'Wyoming',
            'zip': 4987
          },
          'about': 'Nisi irure Lorem sunt eiusmod reprehenderit eiusmod consectetur magna do. Dolore duis culpa aute voluptate duis dolore. Voluptate eiusmod cupidatat et qui ad minim est mollit aliqua elit. Ipsum culpa mollit duis ullamco excepteur minim. Lorem proident non ea enim quis duis eiusmod pariatur magna dolore. Aliquip officia eiusmod reprehenderit nulla commodo. Magna consectetur sunt minim cillum ad officia id ullamco adipisicing anim.\r\n',
          'registered': '2002-11-06T10:51:53+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Kane Osborne'
            },
            {
              'id': 1,
              'name': 'Bender Hester'
            },
            {
              'id': 2,
              'name': 'Morton Simmons'
            }
          ]
        },
        {
          'id': 290,
          'guid': '4e577442-76a0-4cfb-9af7-1b001068a439',
          'isActive': true,
          'balance': '$1,177.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Pruitt Bartlett',
          'gender': 'male',
          'company': 'Wazzu',
          'email': 'pruittbartlett@wazzu.com',
          'phone': '+1 (955) 570-2451',
          'address': {
            'street': 870,
            'city': 'Crown',
            'state': 'Wisconsin',
            'zip': 1228
          },
          'about': 'Quis nisi consequat mollit in mollit. In magna elit irure excepteur ad eu nostrud esse deserunt est consequat qui. Pariatur incididunt tempor officia proident. Labore et exercitation aute qui proident incididunt et incididunt voluptate ipsum. Nulla minim non adipisicing veniam commodo dolore proident culpa velit. Reprehenderit consequat labore dolor esse. Excepteur nulla id dolore id minim laboris irure ex ipsum proident non reprehenderit est.\r\n',
          'registered': '2007-08-04T19:29:05+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Morse Morgan'
            },
            {
              'id': 1,
              'name': 'Bean Hodge'
            },
            {
              'id': 2,
              'name': 'Valenzuela Maxwell'
            }
          ]
        },
        {
          'id': 291,
          'guid': '4c910806-45fa-4a20-8b63-726f01bf6e78',
          'isActive': true,
          'balance': '$3,499.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Laurel Nieves',
          'gender': 'female',
          'company': 'Exiand',
          'email': 'laurelnieves@exiand.com',
          'phone': '+1 (805) 515-3251',
          'address': {
            'street': 706,
            'city': 'Templeton',
            'state': 'Texas',
            'zip': 4926
          },
          'about': 'Et officia dolor laborum Lorem aliqua reprehenderit quis veniam in qui excepteur. Nulla ipsum anim sint anim ad anim velit amet sint eiusmod ullamco eu minim incididunt. Ullamco sit nisi veniam ut ipsum ad irure ea in sunt proident ea aliquip. Adipisicing ea ea voluptate laboris ullamco.\r\n',
          'registered': '1991-09-27T20:17:52+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Orr Mcgowan'
            },
            {
              'id': 1,
              'name': 'Hubbard Houston'
            },
            {
              'id': 2,
              'name': 'Church Wall'
            }
          ]
        },
        {
          'id': 292,
          'guid': '7634ef79-ee53-4fec-8cf1-8578553daeec',
          'isActive': true,
          'balance': '$1,833.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Edwina England',
          'gender': 'female',
          'company': 'Apex',
          'email': 'edwinaengland@apex.com',
          'phone': '+1 (815) 557-3539',
          'address': {
            'street': 684,
            'city': 'Maxville',
            'state': 'Illinois',
            'zip': 782
          },
          'about': 'Excepteur in voluptate consectetur aute officia et sit adipisicing. Labore qui aliqua deserunt et consectetur minim eu aliquip ea tempor. Consectetur sint laboris velit sit anim duis culpa proident. Amet ea incididunt incididunt adipisicing enim mollit laboris magna quis. Consequat fugiat mollit amet incididunt esse qui esse excepteur laborum.\r\n',
          'registered': '1996-09-04T21:39:18+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Stark Shaw'
            },
            {
              'id': 1,
              'name': 'Baird Mills'
            },
            {
              'id': 2,
              'name': 'Dawson Coleman'
            }
          ]
        },
        {
          'id': 293,
          'guid': '7991128c-fdb3-409e-8e2d-d12d09501d28',
          'isActive': false,
          'balance': '$1,282.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Nguyen Turner',
          'gender': 'male',
          'company': 'Olucore',
          'email': 'nguyenturner@olucore.com',
          'phone': '+1 (959) 408-2244',
          'address': {
            'street': 827,
            'city': 'Dodge',
            'state': 'Ohio',
            'zip': 5347
          },
          'about': 'Adipisicing enim ea ullamco sint tempor tempor. Elit adipisicing nisi ipsum culpa quis laborum sunt commodo consectetur magna laboris anim duis. Ad culpa ex irure ullamco ipsum Lorem nostrud. Qui excepteur ex laborum velit officia aliquip. Velit culpa magna minim fugiat minim ipsum non sunt consequat occaecat adipisicing cupidatat minim. Amet officia labore aliquip qui. Deserunt consectetur pariatur ut sint sint fugiat et adipisicing culpa velit cupidatat.\r\n',
          'registered': '1999-01-06T18:45:21+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Brenda Pennington'
            },
            {
              'id': 1,
              'name': 'Geraldine Johns'
            },
            {
              'id': 2,
              'name': 'Alyson Franks'
            }
          ]
        },
        {
          'id': 294,
          'guid': '17c9e76e-3aed-42b3-8c17-96033e5bdfc1',
          'isActive': false,
          'balance': '$3,991.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Jan Cole',
          'gender': 'female',
          'company': 'Newcube',
          'email': 'jancole@newcube.com',
          'phone': '+1 (864) 545-3072',
          'address': {
            'street': 451,
            'city': 'Cavalero',
            'state': 'Montana',
            'zip': 5785
          },
          'about': 'Pariatur tempor ipsum commodo nostrud ut commodo nostrud ut exercitation dolor tempor est aliqua. Velit occaecat aliqua amet incididunt sint anim. Tempor nulla exercitation irure veniam anim Lorem nulla. Mollit ad eu elit veniam irure deserunt sit consequat. In aliqua dolore consectetur est commodo eiusmod et duis. Amet est pariatur pariatur Lorem culpa velit excepteur adipisicing consectetur non amet dolor. Irure id ipsum consequat occaecat eu reprehenderit.\r\n',
          'registered': '1998-06-13T19:59:00+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Jeanette Wolf'
            },
            {
              'id': 1,
              'name': 'Kane Holmes'
            },
            {
              'id': 2,
              'name': 'Sampson Stout'
            }
          ]
        },
        {
          'id': 295,
          'guid': 'd387db41-c09e-4209-ae8b-4458b986faec',
          'isActive': false,
          'balance': '$2,418.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Byrd Sears',
          'gender': 'male',
          'company': 'Datagen',
          'email': 'byrdsears@datagen.com',
          'phone': '+1 (942) 469-2156',
          'address': {
            'street': 745,
            'city': 'Turpin',
            'state': 'Minnesota',
            'zip': 6381
          },
          'about': 'Duis dolor veniam sunt exercitation minim occaecat. Deserunt laborum exercitation fugiat Lorem irure ea sint do laborum non veniam quis ad. Aliqua dolore commodo labore duis nulla esse ea et laboris ipsum excepteur nisi qui. Nisi est exercitation commodo ut elit. Exercitation anim magna adipisicing ea amet. Lorem deserunt veniam est duis cupidatat mollit ex.\r\n',
          'registered': '1995-05-06T20:34:50+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Janell Justice'
            },
            {
              'id': 1,
              'name': 'Donaldson Roberson'
            },
            {
              'id': 2,
              'name': 'Maricela Jordan'
            }
          ]
        },
        {
          'id': 296,
          'guid': '9258bd4a-0129-4c8f-891c-8c3ea8c4be1d',
          'isActive': false,
          'balance': '$2,385.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Zelma Santos',
          'gender': 'female',
          'company': 'Futurize',
          'email': 'zelmasantos@futurize.com',
          'phone': '+1 (986) 498-2815',
          'address': {
            'street': 259,
            'city': 'Klagetoh',
            'state': 'Oklahoma',
            'zip': 5182
          },
          'about': 'Ad eiusmod do excepteur sit mollit laborum adipisicing non. Laborum adipisicing consectetur mollit tempor consectetur aliqua. Ad sint anim sunt reprehenderit laboris exercitation nisi eu anim ad ut labore laboris. Proident in cupidatat commodo incididunt occaecat. Excepteur irure tempor eu quis. Sint exercitation proident exercitation proident consequat sunt deserunt sunt. Labore adipisicing pariatur occaecat mollit dolore id ipsum ex duis aliqua aliqua officia dolore ut.\r\n',
          'registered': '1990-01-05T18:48:00+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Elisabeth Caldwell'
            },
            {
              'id': 1,
              'name': 'Hodge Wilkins'
            },
            {
              'id': 2,
              'name': 'Osborn Osborne'
            }
          ]
        },
        {
          'id': 297,
          'guid': 'c15f74e5-b183-4391-bd44-aace954efe0e',
          'isActive': true,
          'balance': '$2,717.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Aileen Ferrell',
          'gender': 'female',
          'company': 'Orbean',
          'email': 'aileenferrell@orbean.com',
          'phone': '+1 (883) 586-3049',
          'address': {
            'street': 607,
            'city': 'Konterra',
            'state': 'Indiana',
            'zip': 2355
          },
          'about': 'Nulla exercitation reprehenderit cupidatat eu ipsum pariatur aliquip anim elit velit labore cillum deserunt magna. Nostrud irure sunt dolore irure do. Duis veniam pariatur in magna nulla nisi Lorem cillum occaecat et magna occaecat nulla dolor. Elit dolor eu dolore dolor irure mollit nulla ea. Fugiat minim est ex mollit Lorem sint aliqua est elit est in consequat.\r\n',
          'registered': '1998-04-17T11:19:53+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Beulah Mckee'
            },
            {
              'id': 1,
              'name': 'Celeste Kaufman'
            },
            {
              'id': 2,
              'name': 'Harmon Parker'
            }
          ]
        },
        {
          'id': 298,
          'guid': 'e18ba81e-4942-4162-a865-7db1b8eef4da',
          'isActive': false,
          'balance': '$3,032.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Calderon Mccray',
          'gender': 'male',
          'company': 'Miraclis',
          'email': 'calderonmccray@miraclis.com',
          'phone': '+1 (848) 551-3640',
          'address': {
            'street': 325,
            'city': 'Flintville',
            'state': 'Connecticut',
            'zip': 7167
          },
          'about': 'Sunt nulla deserunt minim veniam velit fugiat exercitation et ex fugiat duis sint pariatur. Fugiat reprehenderit laborum ex ex mollit. Ipsum pariatur ullamco eiusmod in exercitation deserunt. Labore cillum magna aute irure pariatur cillum proident mollit ullamco in do. Sunt eiusmod officia commodo eu do nisi sint duis eiusmod commodo.\r\n',
          'registered': '2011-04-28T10:31:20+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Burch Avila'
            },
            {
              'id': 1,
              'name': 'Bush Cooper'
            },
            {
              'id': 2,
              'name': 'Logan Silva'
            }
          ]
        },
        {
          'id': 299,
          'guid': '20dadc7a-d9e7-41cf-95ae-17fbe4ae327e',
          'isActive': false,
          'balance': '$1,147.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Anita Dotson',
          'gender': 'female',
          'company': 'Isologics',
          'email': 'anitadotson@isologics.com',
          'phone': '+1 (952) 562-2933',
          'address': {
            'street': 361,
            'city': 'Sharon',
            'state': 'Nevada',
            'zip': 6469
          },
          'about': 'Laboris quis aliqua nisi id. Officia mollit proident id cillum velit est nulla esse amet. Adipisicing magna sit amet dolore sit Lorem elit nisi nostrud tempor eiusmod occaecat culpa labore. Eiusmod incididunt adipisicing sunt velit.\r\n',
          'registered': '1995-04-27T20:49:13+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Lula Harvey'
            },
            {
              'id': 1,
              'name': 'Bernadine Edwards'
            },
            {
              'id': 2,
              'name': 'Edna Martin'
            }
          ]
        },
        {
          'id': 300,
          'guid': '36878a19-5cd5-4125-94d6-27ad3df27238',
          'isActive': false,
          'balance': '$3,086.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Whitley Olsen',
          'gender': 'male',
          'company': 'Cyclonica',
          'email': 'whitleyolsen@cyclonica.com',
          'phone': '+1 (885) 451-2332',
          'address': {
            'street': 703,
            'city': 'Rodanthe',
            'state': 'New Mexico',
            'zip': 4925
          },
          'about': 'Ullamco Lorem exercitation elit ad. Sit veniam id nisi ut velit enim dolore aliquip in ad amet officia cupidatat eu. Mollit est voluptate ut eiusmod tempor aute velit proident adipisicing esse exercitation. Proident fugiat qui quis est proident proident sit ullamco occaecat. Exercitation non est velit sit cillum amet reprehenderit do eiusmod amet irure consectetur. Eiusmod sit culpa esse nostrud enim ut quis excepteur. Irure ullamco dolore velit excepteur Lorem Lorem.\r\n',
          'registered': '2010-09-13T21:53:13+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Reynolds Zimmerman'
            },
            {
              'id': 1,
              'name': 'Woodward Paul'
            },
            {
              'id': 2,
              'name': 'Deloris Lowe'
            }
          ]
        },
        {
          'id': 301,
          'guid': 'ab3c6e6d-2eb5-4226-9db3-fda8345bf0e1',
          'isActive': false,
          'balance': '$3,066.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Armstrong Santiago',
          'gender': 'male',
          'company': 'Waretel',
          'email': 'armstrongsantiago@waretel.com',
          'phone': '+1 (840) 600-2836',
          'address': {
            'street': 696,
            'city': 'Gardners',
            'state': 'North Dakota',
            'zip': 8921
          },
          'about': 'Eu id esse reprehenderit Lorem laborum sunt tempor. Et adipisicing ipsum amet eiusmod incididunt incididunt id voluptate enim id. Culpa qui quis irure aliquip duis cillum incididunt do. Labore laborum occaecat nulla pariatur amet sint aliquip incididunt officia nisi qui exercitation quis incididunt. Aliqua sit commodo cupidatat reprehenderit non ullamco duis nisi officia ex. Consequat do anim duis ullamco incididunt labore ut eiusmod dolor sit.\r\n',
          'registered': '1994-04-23T21:33:22+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Bender Frank'
            },
            {
              'id': 1,
              'name': 'Casey Olson'
            },
            {
              'id': 2,
              'name': 'Randi Buckley'
            }
          ]
        },
        {
          'id': 302,
          'guid': '6a12e957-780b-4a34-83e8-fe214d322f68',
          'isActive': false,
          'balance': '$3,268.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Strickland Shepard',
          'gender': 'male',
          'company': 'Maxemia',
          'email': 'stricklandshepard@maxemia.com',
          'phone': '+1 (994) 541-2785',
          'address': {
            'street': 512,
            'city': 'Takilma',
            'state': 'Alaska',
            'zip': 1734
          },
          'about': 'Sint quis excepteur consequat sunt reprehenderit dolor et ad. Aliqua aute aliqua duis sunt eu culpa. Labore velit sit et nulla ut aute ex exercitation exercitation cillum do pariatur. Est officia cupidatat culpa incididunt ut reprehenderit labore culpa amet mollit do.\r\n',
          'registered': '1996-08-02T08:03:13+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Cunningham Summers'
            },
            {
              'id': 1,
              'name': 'Millicent Benjamin'
            },
            {
              'id': 2,
              'name': 'Laura Rice'
            }
          ]
        },
        {
          'id': 303,
          'guid': '8da54354-0535-4bbf-8a96-58d6309bfcc7',
          'isActive': false,
          'balance': '$1,787.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Lowery Mercer',
          'gender': 'male',
          'company': 'Grainspot',
          'email': 'lowerymercer@grainspot.com',
          'phone': '+1 (876) 533-3108',
          'address': {
            'street': 658,
            'city': 'Chamberino',
            'state': 'Texas',
            'zip': 2644
          },
          'about': 'Ut amet Lorem in ad. Consequat excepteur consequat amet id sit aliqua esse qui. Consectetur nisi incididunt Lorem eu ad nulla consequat irure mollit et ullamco ex cupidatat.\r\n',
          'registered': '2003-02-22T04:38:52+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Roach Nicholson'
            },
            {
              'id': 1,
              'name': 'Sophia Morin'
            },
            {
              'id': 2,
              'name': 'Stanton Oneal'
            }
          ]
        },
        {
          'id': 304,
          'guid': '1252f9ed-559b-4d37-ada7-cf42f227bf15',
          'isActive': true,
          'balance': '$2,976.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Nicole Livingston',
          'gender': 'female',
          'company': 'Tasmania',
          'email': 'nicolelivingston@tasmania.com',
          'phone': '+1 (899) 473-2594',
          'address': {
            'street': 305,
            'city': 'Fontanelle',
            'state': 'Florida',
            'zip': 8521
          },
          'about': 'Cillum labore ipsum esse ad irure aute pariatur nisi amet eiusmod minim. Tempor deserunt sunt enim cupidatat mollit Lorem consequat veniam Lorem fugiat esse Lorem. Officia commodo mollit duis Lorem.\r\n',
          'registered': '2000-10-13T17:22:44+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Freeman Emerson'
            },
            {
              'id': 1,
              'name': 'Jacklyn Giles'
            },
            {
              'id': 2,
              'name': 'Coleen Harper'
            }
          ]
        },
        {
          'id': 305,
          'guid': '7e02c617-decb-4568-83a3-c45b866a0e9a',
          'isActive': false,
          'balance': '$3,773.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Bailey Hensley',
          'gender': 'male',
          'company': 'Glasstep',
          'email': 'baileyhensley@glasstep.com',
          'phone': '+1 (950) 502-2295',
          'address': {
            'street': 409,
            'city': 'Motley',
            'state': 'Missouri',
            'zip': 667
          },
          'about': 'Duis id laboris nisi ea irure culpa. Excepteur commodo adipisicing deserunt incididunt laborum cillum irure aliquip est eiusmod enim nostrud elit qui. Ex dolore sunt commodo sunt excepteur commodo sit sint amet consequat et aliquip quis. Aliquip deserunt eiusmod minim eiusmod dolore excepteur est ea consectetur do. Aute veniam sit eiusmod cupidatat pariatur qui dolore adipisicing id nisi est.\r\n',
          'registered': '1994-10-10T21:13:58+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Rachel Compton'
            },
            {
              'id': 1,
              'name': 'Lorie Gilbert'
            },
            {
              'id': 2,
              'name': 'Moss Calderon'
            }
          ]
        },
        {
          'id': 306,
          'guid': '81fc2d66-9da8-433c-90d5-45a2b94a2859',
          'isActive': false,
          'balance': '$2,296.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Meyer Fuentes',
          'gender': 'male',
          'company': 'Flotonic',
          'email': 'meyerfuentes@flotonic.com',
          'phone': '+1 (966) 589-2859',
          'address': {
            'street': 393,
            'city': 'Mayfair',
            'state': 'Tennessee',
            'zip': 9950
          },
          'about': 'Proident pariatur dolore cupidatat id ut tempor exercitation duis nisi. Elit laborum amet amet tempor voluptate duis irure nisi ad dolore adipisicing. Amet cupidatat consectetur duis officia excepteur in. Duis culpa velit quis deserunt elit tempor culpa.\r\n',
          'registered': '2013-12-17T06:53:54+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Bernard Mcdonald'
            },
            {
              'id': 1,
              'name': 'Owen Castillo'
            },
            {
              'id': 2,
              'name': 'Jacobs Conrad'
            }
          ]
        },
        {
          'id': 307,
          'guid': '0cd908dc-dbff-427c-9170-4cf36f8f8105',
          'isActive': false,
          'balance': '$3,328.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Lillie Goodwin',
          'gender': 'female',
          'company': 'Exposa',
          'email': 'lilliegoodwin@exposa.com',
          'phone': '+1 (989) 514-2531',
          'address': {
            'street': 561,
            'city': 'Irwin',
            'state': 'South Carolina',
            'zip': 1287
          },
          'about': 'Sunt sit dolore aliqua aliquip aliquip nulla consequat qui eiusmod eu. Voluptate elit ad do aliquip et excepteur aliqua ut reprehenderit in anim amet nulla. Irure voluptate officia aute amet non non ex duis do aute. Proident veniam cillum est magna esse culpa cupidatat nisi laboris laborum pariatur dolore anim ea. Laborum ex et incididunt proident minim aliqua reprehenderit. Adipisicing proident magna proident dolore aute Lorem enim dolor enim ut officia do. Voluptate excepteur enim commodo consequat ea tempor incididunt aliqua laboris.\r\n',
          'registered': '2010-08-20T02:07:16+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Powers Shaffer'
            },
            {
              'id': 1,
              'name': 'Patrice Wise'
            },
            {
              'id': 2,
              'name': 'David Dean'
            }
          ]
        },
        {
          'id': 308,
          'guid': 'e5f65913-6a63-4ce6-afdc-c0b294f289f8',
          'isActive': false,
          'balance': '$2,956.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Estelle Stephenson',
          'gender': 'female',
          'company': 'Automon',
          'email': 'estellestephenson@automon.com',
          'phone': '+1 (847) 497-2868',
          'address': {
            'street': 571,
            'city': 'Longoria',
            'state': 'Louisiana',
            'zip': 1005
          },
          'about': 'Lorem est irure cupidatat sint nulla eu adipisicing deserunt Lorem officia. Anim nostrud amet mollit occaecat sunt incididunt. Qui duis sint Lorem sit eu mollit ad ea. Veniam id do Lorem do. Qui fugiat ullamco laborum mollit laboris non aliqua anim adipisicing ut nisi sit sint tempor. Non aliqua aliqua esse eiusmod amet ut nulla minim in anim elit dolor sunt.\r\n',
          'registered': '2004-02-17T10:23:50+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mitzi Greene'
            },
            {
              'id': 1,
              'name': 'Charmaine Warren'
            },
            {
              'id': 2,
              'name': 'Norris Graves'
            }
          ]
        },
        {
          'id': 309,
          'guid': '0f3c91fe-421e-49e2-a14f-117a1f239180',
          'isActive': false,
          'balance': '$1,164.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Kim Good',
          'gender': 'male',
          'company': 'Zyple',
          'email': 'kimgood@zyple.com',
          'phone': '+1 (986) 411-2791',
          'address': {
            'street': 660,
            'city': 'Murillo',
            'state': 'Idaho',
            'zip': 1255
          },
          'about': 'Culpa pariatur anim cillum nisi nostrud quis consectetur consectetur. Ut reprehenderit exercitation quis ea minim eu duis duis. Eiusmod voluptate incididunt veniam elit occaecat officia ullamco enim excepteur cupidatat. Exercitation sit consequat irure ex sunt. Eu ut pariatur sint consectetur fugiat incididunt voluptate Lorem irure dolore sunt deserunt et. Enim exercitation pariatur reprehenderit deserunt.\r\n',
          'registered': '1988-11-08T07:57:20+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Bianca Mckay'
            },
            {
              'id': 1,
              'name': 'Ross Finley'
            },
            {
              'id': 2,
              'name': 'Lana Harrison'
            }
          ]
        },
        {
          'id': 310,
          'guid': 'b10471fc-1b99-4377-8a40-09406e2955b4',
          'isActive': true,
          'balance': '$2,674.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Tommie Fisher',
          'gender': 'female',
          'company': 'Zuvy',
          'email': 'tommiefisher@zuvy.com',
          'phone': '+1 (892) 426-2828',
          'address': {
            'street': 808,
            'city': 'Sehili',
            'state': 'Virginia',
            'zip': 3557
          },
          'about': 'Amet nulla nulla minim nulla sit nostrud labore aliquip mollit eiusmod voluptate proident est commodo. Adipisicing consectetur et consectetur aliqua nostrud aliquip esse voluptate ad elit ipsum. Pariatur amet cillum sint nulla duis. Ipsum adipisicing pariatur voluptate occaecat eiusmod fugiat irure. Cupidatat voluptate nulla ipsum ut. Sunt anim do veniam cillum.\r\n',
          'registered': '2009-10-14T19:22:03+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Lamb Cole'
            },
            {
              'id': 1,
              'name': 'Hess Murphy'
            },
            {
              'id': 2,
              'name': 'Clarissa Wood'
            }
          ]
        },
        {
          'id': 311,
          'guid': '1ade711f-6356-4f2a-b725-2d5f88beb74b',
          'isActive': true,
          'balance': '$3,459.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Leila Sampson',
          'gender': 'female',
          'company': 'Intrawear',
          'email': 'leilasampson@intrawear.com',
          'phone': '+1 (940) 407-3831',
          'address': {
            'street': 705,
            'city': 'Boonville',
            'state': 'Delaware',
            'zip': 9360
          },
          'about': 'Cupidatat ullamco est adipisicing ex in irure commodo velit Lorem elit. Irure velit amet ea quis labore fugiat anim nisi. Sint est eiusmod ut quis. Exercitation magna amet exercitation sit mollit commodo ea aliquip nostrud. Sit anim culpa excepteur laboris occaecat sit tempor anim minim anim officia sit.\r\n',
          'registered': '2008-01-15T11:30:12+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Hurst Larsen'
            },
            {
              'id': 1,
              'name': 'Livingston Colon'
            },
            {
              'id': 2,
              'name': 'Kaufman Cannon'
            }
          ]
        },
        {
          'id': 312,
          'guid': 'a8e33185-d040-4ae1-8514-c7e7a82711a6',
          'isActive': false,
          'balance': '$3,670.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Macdonald Moreno',
          'gender': 'male',
          'company': 'Tropoli',
          'email': 'macdonaldmoreno@tropoli.com',
          'phone': '+1 (958) 529-2705',
          'address': {
            'street': 723,
            'city': 'Haena',
            'state': 'Rhode Island',
            'zip': 1375
          },
          'about': 'Laborum sint ex do reprehenderit nulla est commodo nulla minim dolor laboris. Aliquip sit excepteur minim qui eiusmod ex incididunt eiusmod. Voluptate nisi ut pariatur officia cupidatat consectetur labore enim laboris fugiat. Mollit qui velit est cillum minim commodo culpa consectetur exercitation occaecat.\r\n',
          'registered': '1999-07-22T10:32:54+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Gregory Maxwell'
            },
            {
              'id': 1,
              'name': 'Morgan Holt'
            },
            {
              'id': 2,
              'name': 'Woodard Woodard'
            }
          ]
        },
        {
          'id': 313,
          'guid': '155c2474-c111-40f6-a722-3cc8dd4ebc76',
          'isActive': false,
          'balance': '$1,722.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Olson Cardenas',
          'gender': 'male',
          'company': 'Stelaecor',
          'email': 'olsoncardenas@stelaecor.com',
          'phone': '+1 (801) 468-3005',
          'address': {
            'street': 127,
            'city': 'Bourg',
            'state': 'New York',
            'zip': 8273
          },
          'about': 'Labore velit magna aliqua aliquip mollit exercitation eiusmod veniam officia commodo commodo velit sit. Non deserunt reprehenderit cillum laboris do non do deserunt. Adipisicing minim reprehenderit duis adipisicing magna elit. Lorem laboris ex cupidatat sit.\r\n',
          'registered': '2000-05-27T07:45:03+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Holloway Bush'
            },
            {
              'id': 1,
              'name': 'Wells Fowler'
            },
            {
              'id': 2,
              'name': 'Howell Parrish'
            }
          ]
        },
        {
          'id': 314,
          'guid': 'f1848e2a-b2de-4764-ad42-1de3ccd55d9f',
          'isActive': false,
          'balance': '$3,121.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Jarvis Shepherd',
          'gender': 'male',
          'company': 'Eclipto',
          'email': 'jarvisshepherd@eclipto.com',
          'phone': '+1 (993) 465-2043',
          'address': {
            'street': 581,
            'city': 'Steinhatchee',
            'state': 'Hawaii',
            'zip': 2097
          },
          'about': 'Tempor cillum quis sunt ea incididunt. Voluptate irure deserunt sunt elit non. Enim quis veniam sunt do ut dolor officia. Et fugiat sint mollit et aliquip. Anim voluptate sint et eiusmod.\r\n',
          'registered': '2013-10-12T14:37:29+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Jaclyn Allen'
            },
            {
              'id': 1,
              'name': 'Fay Buckner'
            },
            {
              'id': 2,
              'name': 'Carole Curtis'
            }
          ]
        },
        {
          'id': 315,
          'guid': 'b7c4ecf3-faa3-4fe7-a099-79a4cb32d038',
          'isActive': true,
          'balance': '$3,988.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Chrystal Riley',
          'gender': 'female',
          'company': 'Buzzmaker',
          'email': 'chrystalriley@buzzmaker.com',
          'phone': '+1 (897) 523-3459',
          'address': {
            'street': 880,
            'city': 'Lafferty',
            'state': 'Iowa',
            'zip': 8588
          },
          'about': 'Tempor ad aute eu consequat sit aliqua ad labore mollit aliquip velit nisi commodo. Irure do ut anim laborum deserunt nostrud. Laboris ullamco ut qui Lorem aliqua quis cupidatat nostrud. Nostrud in aliqua eu laboris esse quis cupidatat fugiat ullamco duis veniam proident non. Sunt ad voluptate laborum voluptate sit duis nulla quis Lorem. Eiusmod amet minim anim in qui tempor qui voluptate non magna ad deserunt ex. Nisi id minim culpa ad magna ea minim ea cupidatat qui sint.\r\n',
          'registered': '2007-10-04T15:57:25+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Hazel Mccullough'
            },
            {
              'id': 1,
              'name': 'Hendrix Gilmore'
            },
            {
              'id': 2,
              'name': 'Luz Logan'
            }
          ]
        },
        {
          'id': 316,
          'guid': '58c016bb-f10a-40a9-b8de-97c2932b049d',
          'isActive': false,
          'balance': '$2,966.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Katie Salas',
          'gender': 'female',
          'company': 'Jamnation',
          'email': 'katiesalas@jamnation.com',
          'phone': '+1 (849) 596-3673',
          'address': {
            'street': 309,
            'city': 'Canoochee',
            'state': 'Wisconsin',
            'zip': 1685
          },
          'about': 'Deserunt minim laborum esse non mollit eiusmod elit deserunt esse Lorem. Cillum laboris dolore voluptate est laboris reprehenderit ex. Ad mollit cupidatat aute tempor minim pariatur et cupidatat. Ad deserunt magna deserunt adipisicing. Lorem commodo anim officia deserunt ipsum excepteur qui adipisicing cillum aliqua dolore voluptate cillum. Ipsum sunt ex non qui esse reprehenderit pariatur aliquip laborum consequat. Minim aute ipsum ex ex est in esse ipsum.\r\n',
          'registered': '2009-08-05T12:21:44+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Charity Mcguire'
            },
            {
              'id': 1,
              'name': 'Cochran Bond'
            },
            {
              'id': 2,
              'name': 'Banks Peck'
            }
          ]
        },
        {
          'id': 317,
          'guid': '31ce61a7-e961-4ed7-bf43-0230fb40976f',
          'isActive': false,
          'balance': '$1,884.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Phyllis Joyner',
          'gender': 'female',
          'company': 'Telpod',
          'email': 'phyllisjoyner@telpod.com',
          'phone': '+1 (996) 598-3102',
          'address': {
            'street': 573,
            'city': 'Lewis',
            'state': 'Ohio',
            'zip': 3961
          },
          'about': 'Commodo deserunt Lorem nostrud veniam occaecat aliqua magna. Elit aliqua aliquip ullamco excepteur mollit aute proident do deserunt cillum ipsum in. Officia amet incididunt fugiat sit ea nisi officia laborum esse anim veniam. Cupidatat ea sunt aliqua enim. Do eu amet reprehenderit adipisicing excepteur esse. Sunt occaecat eiusmod aute in sint laborum pariatur.\r\n',
          'registered': '1999-01-13T11:51:18+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Rhoda Serrano'
            },
            {
              'id': 1,
              'name': 'Mccullough Swanson'
            },
            {
              'id': 2,
              'name': 'Tami Jensen'
            }
          ]
        },
        {
          'id': 318,
          'guid': 'fe4b5e9c-4131-4279-afa8-5886a008f4e7',
          'isActive': true,
          'balance': '$2,007.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Mary Boone',
          'gender': 'female',
          'company': 'Qot',
          'email': 'maryboone@qot.com',
          'phone': '+1 (980) 457-3110',
          'address': {
            'street': 564,
            'city': 'Brownsville',
            'state': 'Nebraska',
            'zip': 9685
          },
          'about': 'Minim proident elit culpa culpa laborum fugiat id id culpa adipisicing occaecat laboris elit. Officia laborum cupidatat pariatur incididunt deserunt. Nostrud fugiat nisi officia deserunt nostrud voluptate ut ad. Officia cupidatat sint ipsum enim ad aliquip culpa incididunt adipisicing duis fugiat. Sit ea sint sit aliquip veniam irure. Aute adipisicing consequat nisi nulla Lorem quis exercitation sit nostrud consequat cupidatat tempor. Cillum sunt ullamco non enim.\r\n',
          'registered': '2010-08-08T17:32:02+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Berg Wilcox'
            },
            {
              'id': 1,
              'name': 'Terri Nash'
            },
            {
              'id': 2,
              'name': 'Butler Jenkins'
            }
          ]
        },
        {
          'id': 319,
          'guid': '2a59a595-cf5e-4f84-bd7e-dbf10017cb8e',
          'isActive': false,
          'balance': '$2,997.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Barbra Fitzpatrick',
          'gender': 'female',
          'company': 'Zipak',
          'email': 'barbrafitzpatrick@zipak.com',
          'phone': '+1 (811) 410-3683',
          'address': {
            'street': 798,
            'city': 'Axis',
            'state': 'Maryland',
            'zip': 5666
          },
          'about': 'Pariatur occaecat consequat commodo aliquip anim. Elit officia culpa nulla excepteur. Labore et elit voluptate mollit. Nulla enim dolore laboris esse nisi.\r\n',
          'registered': '1998-12-31T02:59:52+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Kinney Salazar'
            },
            {
              'id': 1,
              'name': 'Riggs Alexander'
            },
            {
              'id': 2,
              'name': 'Sandra Simon'
            }
          ]
        },
        {
          'id': 320,
          'guid': 'dd356c21-39c0-4679-8112-467044b4b92b',
          'isActive': true,
          'balance': '$2,097.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Delaney Alford',
          'gender': 'male',
          'company': 'Chillium',
          'email': 'delaneyalford@chillium.com',
          'phone': '+1 (962) 432-2687',
          'address': {
            'street': 521,
            'city': 'Lisco',
            'state': 'New Hampshire',
            'zip': 4009
          },
          'about': 'Laborum adipisicing labore voluptate culpa adipisicing pariatur nulla minim. Ad minim velit non ea ullamco nisi ut consectetur officia ut non voluptate. Deserunt deserunt minim veniam ipsum mollit sit.\r\n',
          'registered': '1992-02-22T11:46:32+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Herminia Lewis'
            },
            {
              'id': 1,
              'name': 'Zamora Dennis'
            },
            {
              'id': 2,
              'name': 'May Hendrix'
            }
          ]
        },
        {
          'id': 321,
          'guid': '2d9ac6d1-f64d-4f47-bae6-009d9180c018',
          'isActive': false,
          'balance': '$1,518.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Reilly Foreman',
          'gender': 'male',
          'company': 'Repetwire',
          'email': 'reillyforeman@repetwire.com',
          'phone': '+1 (860) 518-2356',
          'address': {
            'street': 115,
            'city': 'Freelandville',
            'state': 'New Jersey',
            'zip': 4453
          },
          'about': 'Aute aute ex laboris ea duis. Fugiat sint sit amet laborum proident ut proident Lorem amet deserunt veniam reprehenderit. Eu aute commodo cupidatat deserunt consectetur quis qui. Ut voluptate anim nisi minim anim sunt commodo nisi irure. Incididunt deserunt minim et cupidatat do voluptate pariatur qui.\r\n',
          'registered': '2000-04-11T00:41:59+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Hunt Pope'
            },
            {
              'id': 1,
              'name': 'Norman Dudley'
            },
            {
              'id': 2,
              'name': 'Beverly Cabrera'
            }
          ]
        },
        {
          'id': 322,
          'guid': '4f2ceb04-49d8-441d-940b-35341f4cbb5b',
          'isActive': true,
          'balance': '$1,984.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Madeline Branch',
          'gender': 'female',
          'company': 'Emtrac',
          'email': 'madelinebranch@emtrac.com',
          'phone': '+1 (926) 598-3985',
          'address': {
            'street': 940,
            'city': 'Clinton',
            'state': 'Alabama',
            'zip': 279
          },
          'about': 'Incididunt enim cupidatat proident non magna ea incididunt est tempor velit officia. Non enim non ullamco esse elit. Amet cillum nulla non sint.\r\n',
          'registered': '1992-05-14T07:37:02+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Stein Duncan'
            },
            {
              'id': 1,
              'name': 'Keri Witt'
            },
            {
              'id': 2,
              'name': 'Tabitha Suarez'
            }
          ]
        },
        {
          'id': 323,
          'guid': '3ce856a7-d78a-4e8b-ae26-deb7af6600eb',
          'isActive': true,
          'balance': '$3,789.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Adeline Burt',
          'gender': 'female',
          'company': 'Comtrail',
          'email': 'adelineburt@comtrail.com',
          'phone': '+1 (817) 434-3848',
          'address': {
            'street': 255,
            'city': 'Woodlake',
            'state': 'South Dakota',
            'zip': 2669
          },
          'about': 'Quis reprehenderit proident aliqua pariatur eu do aliqua consequat sunt consectetur incididunt ex velit. Duis sit tempor esse Lorem sit sint. Nulla ullamco ut excepteur mollit excepteur sit adipisicing cupidatat velit do qui sint. Reprehenderit eu Lorem pariatur ipsum ipsum non excepteur.\r\n',
          'registered': '2002-03-13T15:10:30+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Schultz Morales'
            },
            {
              'id': 1,
              'name': 'Brandi Head'
            },
            {
              'id': 2,
              'name': 'Cantrell Medina'
            }
          ]
        },
        {
          'id': 324,
          'guid': '4f195134-eb98-41e3-b2f1-61bb159b4856',
          'isActive': true,
          'balance': '$3,739.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Tammie Battle',
          'gender': 'female',
          'company': 'Zilidium',
          'email': 'tammiebattle@zilidium.com',
          'phone': '+1 (969) 555-2332',
          'address': {
            'street': 392,
            'city': 'Swartzville',
            'state': 'Illinois',
            'zip': 6940
          },
          'about': 'Ea duis sint incididunt deserunt laborum elit do occaecat cillum ex nostrud officia. Anim et sit labore amet commodo. Amet id ut do sunt pariatur eiusmod elit proident anim proident. Exercitation proident duis sunt magna labore aute veniam labore dolore sit labore labore mollit. Consequat adipisicing mollit cupidatat nulla magna dolore tempor consequat do fugiat.\r\n',
          'registered': '2001-03-17T14:28:39+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Knight Cross'
            },
            {
              'id': 1,
              'name': 'Burke Cooley'
            },
            {
              'id': 2,
              'name': 'Blackburn Richmond'
            }
          ]
        },
        {
          'id': 325,
          'guid': '5677e95b-b6fb-4aee-b65f-35ba9f4c501a',
          'isActive': true,
          'balance': '$2,425.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Stella Rodriguez',
          'gender': 'female',
          'company': 'Autograte',
          'email': 'stellarodriguez@autograte.com',
          'phone': '+1 (967) 431-3778',
          'address': {
            'street': 679,
            'city': 'Leyner',
            'state': 'Arizona',
            'zip': 2240
          },
          'about': 'Eu aliqua reprehenderit ipsum ea elit. Excepteur ex pariatur et eiusmod id officia aliqua consequat. Aliqua ea quis ea labore sit ad exercitation nisi. Do eu labore id velit laboris amet aute culpa amet velit nostrud aliquip. Nostrud quis aliqua enim officia nostrud aute. Incididunt esse qui consectetur ex sunt et ullamco pariatur culpa id reprehenderit consequat sit.\r\n',
          'registered': '1994-05-18T21:19:23+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Holcomb Vaughan'
            },
            {
              'id': 1,
              'name': 'Whitaker Strickland'
            },
            {
              'id': 2,
              'name': 'Marisol Walsh'
            }
          ]
        },
        {
          'id': 326,
          'guid': '2002cdfd-a56f-443f-b1e7-718c1800175c',
          'isActive': false,
          'balance': '$3,949.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Aurora Doyle',
          'gender': 'female',
          'company': 'Kinetica',
          'email': 'auroradoyle@kinetica.com',
          'phone': '+1 (872) 430-3790',
          'address': {
            'street': 678,
            'city': 'Englevale',
            'state': 'Utah',
            'zip': 9209
          },
          'about': 'Sint consequat eu consequat ipsum elit laboris tempor minim laborum nostrud. Voluptate deserunt laborum sint eu qui laborum nulla commodo. Cupidatat pariatur aliquip sint et magna ut nostrud in est id quis non adipisicing id.\r\n',
          'registered': '2008-09-20T08:42:42+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Isabel Lopez'
            },
            {
              'id': 1,
              'name': 'Richmond Hill'
            },
            {
              'id': 2,
              'name': 'Melba Camacho'
            }
          ]
        },
        {
          'id': 327,
          'guid': 'ae6cf862-fa9d-42d2-8fb1-b31efa1712ec',
          'isActive': true,
          'balance': '$3,259.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Huff Meyers',
          'gender': 'male',
          'company': 'Snorus',
          'email': 'huffmeyers@snorus.com',
          'phone': '+1 (972) 529-3905',
          'address': {
            'street': 402,
            'city': 'Fidelis',
            'state': 'Mississippi',
            'zip': 3242
          },
          'about': 'Pariatur commodo cillum eu labore est amet. Veniam minim mollit officia tempor aliqua mollit sit eiusmod. Id commodo adipisicing aliquip commodo enim pariatur fugiat Lorem et aliqua sit nostrud deserunt. Non ipsum deserunt dolore ad minim Lorem amet eu ad elit tempor duis. Occaecat proident aute eu mollit cupidatat eiusmod ea.\r\n',
          'registered': '1990-08-26T14:52:19+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Price Collier'
            },
            {
              'id': 1,
              'name': 'Murray Forbes'
            },
            {
              'id': 2,
              'name': 'Hester Singleton'
            }
          ]
        },
        {
          'id': 328,
          'guid': 'b69f52da-5e1d-4ce2-b2f9-a808bc295b5e',
          'isActive': false,
          'balance': '$3,812.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Maddox Cohen',
          'gender': 'male',
          'company': 'Mitroc',
          'email': 'maddoxcohen@mitroc.com',
          'phone': '+1 (997) 420-2871',
          'address': {
            'street': 681,
            'city': 'Gouglersville',
            'state': 'Pennsylvania',
            'zip': 1419
          },
          'about': 'Eu ullamco incididunt aliqua magna quis sit ea irure. Ipsum ad do consequat duis culpa enim. Velit nostrud enim fugiat non. Officia et labore esse consequat tempor incididunt cupidatat. Sit officia amet irure aliquip. Ad consequat est proident irure est tempor anim incididunt fugiat dolor.\r\n',
          'registered': '2012-02-15T07:34:06+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mcknight Underwood'
            },
            {
              'id': 1,
              'name': 'Leticia Simpson'
            },
            {
              'id': 2,
              'name': 'Virginia Rosales'
            }
          ]
        },
        {
          'id': 329,
          'guid': '37d3819a-6a3c-45ba-8798-0cc6861bc390',
          'isActive': true,
          'balance': '$3,346.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Anne Glover',
          'gender': 'female',
          'company': 'Bullzone',
          'email': 'anneglover@bullzone.com',
          'phone': '+1 (950) 488-2211',
          'address': {
            'street': 789,
            'city': 'Moquino',
            'state': 'Kentucky',
            'zip': 1226
          },
          'about': 'Lorem fugiat pariatur aliquip proident pariatur irure. Adipisicing nulla nulla ex aute est. Aliqua in officia veniam nulla sint exercitation veniam. Sunt esse aliquip incididunt nisi consectetur commodo sit.\r\n',
          'registered': '1992-03-14T03:37:44+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Ruiz Mills'
            },
            {
              'id': 1,
              'name': 'Christy Franklin'
            },
            {
              'id': 2,
              'name': 'Allen Foley'
            }
          ]
        },
        {
          'id': 330,
          'guid': 'e97fb3ab-454e-4e14-a575-242115e0a91e',
          'isActive': false,
          'balance': '$1,858.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Lily Little',
          'gender': 'female',
          'company': 'Temorak',
          'email': 'lilylittle@temorak.com',
          'phone': '+1 (956) 546-3237',
          'address': {
            'street': 676,
            'city': 'Dale',
            'state': 'California',
            'zip': 8337
          },
          'about': 'Consequat id officia excepteur amet aute Lorem non aliquip enim tempor mollit mollit. Aliquip ad ullamco labore labore non ex. Lorem adipisicing veniam cillum ex nostrud incididunt qui. Nulla enim adipisicing labore dolor dolor sunt ut aute irure aliqua.\r\n',
          'registered': '1996-07-12T01:06:06+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Cassandra Adams'
            },
            {
              'id': 1,
              'name': 'Jodi Ortega'
            },
            {
              'id': 2,
              'name': 'Greene Sutton'
            }
          ]
        },
        {
          'id': 331,
          'guid': '10f0ca92-c0b1-4556-b144-3135b4d4f266',
          'isActive': false,
          'balance': '$2,652.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Chan Chaney',
          'gender': 'male',
          'company': 'Comtour',
          'email': 'chanchaney@comtour.com',
          'phone': '+1 (840) 503-2829',
          'address': {
            'street': 357,
            'city': 'Coral',
            'state': 'Oregon',
            'zip': 6076
          },
          'about': 'Labore ex pariatur aute veniam laborum ex sint esse laborum et ad cillum veniam mollit. Do deserunt velit ipsum est occaecat pariatur ipsum fugiat ea sit. Ullamco magna exercitation voluptate amet labore aliqua labore fugiat incididunt. Irure exercitation amet esse aliqua nulla cupidatat duis culpa proident sint exercitation cillum adipisicing elit. Voluptate occaecat labore eu nulla irure exercitation. Elit nostrud occaecat incididunt labore excepteur consectetur deserunt Lorem. Esse deserunt mollit nulla reprehenderit aliqua officia tempor voluptate amet occaecat esse proident anim sint.\r\n',
          'registered': '1995-11-13T04:23:38+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Estes Sheppard'
            },
            {
              'id': 1,
              'name': 'Barron Marshall'
            },
            {
              'id': 2,
              'name': 'Jayne Howell'
            }
          ]
        },
        {
          'id': 332,
          'guid': 'c8177515-76e0-4836-b0e2-12d1f9c5dcbb',
          'isActive': true,
          'balance': '$3,646.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Gaines Mcconnell',
          'gender': 'male',
          'company': 'Kongle',
          'email': 'gainesmcconnell@kongle.com',
          'phone': '+1 (984) 590-3388',
          'address': {
            'street': 561,
            'city': 'Bainbridge',
            'state': 'Kansas',
            'zip': 981
          },
          'about': 'Veniam voluptate Lorem aute consectetur minim. Culpa tempor adipisicing dolore minim laboris pariatur aliqua amet nostrud. Consectetur esse eiusmod fugiat sint et velit ullamco eu laborum aliquip ad. Nisi cupidatat proident amet Lorem eiusmod cupidatat eiusmod elit eiusmod ex eiusmod. Dolore labore aliquip aliquip magna cillum commodo officia aute voluptate magna mollit. Velit eiusmod dolor proident deserunt in fugiat enim.\r\n',
          'registered': '2006-09-29T04:39:48+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Josefa Fletcher'
            },
            {
              'id': 1,
              'name': 'Marie Estes'
            },
            {
              'id': 2,
              'name': 'Pope Wade'
            }
          ]
        },
        {
          'id': 333,
          'guid': '696b0b53-c08e-4b66-8b6f-f1c0c704b8cd',
          'isActive': true,
          'balance': '$2,374.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Albert Mathews',
          'gender': 'male',
          'company': 'Essensia',
          'email': 'albertmathews@essensia.com',
          'phone': '+1 (939) 485-2459',
          'address': {
            'street': 710,
            'city': 'Blende',
            'state': 'Massachusetts',
            'zip': 657
          },
          'about': 'Consectetur exercitation ipsum nulla deserunt elit ullamco. Voluptate ut officia dolor do reprehenderit sint ullamco. Ea incididunt eiusmod Lorem labore et.\r\n',
          'registered': '1989-06-08T12:02:37+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Lynch Nelson'
            },
            {
              'id': 1,
              'name': 'Pamela Mcleod'
            },
            {
              'id': 2,
              'name': 'Guthrie Rodgers'
            }
          ]
        },
        {
          'id': 334,
          'guid': '6002ce28-7c05-4aa2-b1c1-fe08ecb70278',
          'isActive': true,
          'balance': '$3,361.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Schmidt Haney',
          'gender': 'male',
          'company': 'Remotion',
          'email': 'schmidthaney@remotion.com',
          'phone': '+1 (860) 587-3342',
          'address': {
            'street': 412,
            'city': 'Freeburn',
            'state': 'Georgia',
            'zip': 6232
          },
          'about': 'Magna voluptate duis laborum duis pariatur ad tempor tempor nostrud qui commodo. Minim Lorem sunt sint commodo excepteur adipisicing sunt anim. Aliquip cillum dolor consectetur non ex sunt Lorem adipisicing proident tempor deserunt anim. Duis minim ullamco irure anim nulla et in quis officia reprehenderit. Magna id eiusmod quis eu veniam commodo incididunt. Consectetur ea nulla ea pariatur adipisicing sint culpa. Aliqua aliqua duis pariatur mollit non labore est pariatur.\r\n',
          'registered': '2013-09-24T09:23:14+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Tracy Patel'
            },
            {
              'id': 1,
              'name': 'Conrad Cervantes'
            },
            {
              'id': 2,
              'name': 'Craig Carpenter'
            }
          ]
        },
        {
          'id': 335,
          'guid': '858c9fea-638e-4be0-8bda-3079a055b59c',
          'isActive': true,
          'balance': '$1,724.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Nannie Guerrero',
          'gender': 'female',
          'company': 'Rodeocean',
          'email': 'nannieguerrero@rodeocean.com',
          'phone': '+1 (945) 454-3638',
          'address': {
            'street': 761,
            'city': 'Sandston',
            'state': 'Washington',
            'zip': 315
          },
          'about': 'Fugiat ea fugiat esse eu exercitation adipisicing eu tempor et commodo id aliquip ullamco. Cupidatat ea dolor do occaecat fugiat deserunt reprehenderit tempor Lorem dolor elit enim officia. Ad velit cupidatat officia fugiat ea esse proident esse occaecat laborum ex enim. Deserunt nostrud reprehenderit consectetur est excepteur aliqua duis laboris irure eiusmod ad.\r\n',
          'registered': '1995-05-31T05:29:47+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Josefina Mcbride'
            },
            {
              'id': 1,
              'name': 'Booker Espinoza'
            },
            {
              'id': 2,
              'name': 'Lewis Acevedo'
            }
          ]
        },
        {
          'id': 336,
          'guid': 'a6f3e3c5-3613-4e8d-b34e-0bff7dedff90',
          'isActive': true,
          'balance': '$1,579.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Georgina Owen',
          'gender': 'female',
          'company': 'Fangold',
          'email': 'georginaowen@fangold.com',
          'phone': '+1 (809) 492-2813',
          'address': {
            'street': 162,
            'city': 'Chestnut',
            'state': 'Michigan',
            'zip': 6875
          },
          'about': 'Exercitation laboris tempor incididunt occaecat cillum sit officia in. Nostrud tempor incididunt deserunt dolor cillum laborum cupidatat incididunt exercitation exercitation enim incididunt ea. Dolore officia do proident et aliquip laboris nostrud commodo amet. Ea mollit amet eiusmod consectetur magna exercitation. Laborum id ipsum adipisicing esse ea ipsum. Elit anim culpa laborum occaecat aute est eu non cillum. Cillum do exercitation labore exercitation amet occaecat ad fugiat excepteur Lorem Lorem amet consectetur.\r\n',
          'registered': '2003-06-14T23:38:33+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Barnett Diaz'
            },
            {
              'id': 1,
              'name': 'Adrian Whitney'
            },
            {
              'id': 2,
              'name': 'Camacho Carver'
            }
          ]
        },
        {
          'id': 337,
          'guid': '6b1a0af2-ce33-4c0f-a15a-afbced229811',
          'isActive': false,
          'balance': '$2,012.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Saundra Baldwin',
          'gender': 'female',
          'company': 'Accidency',
          'email': 'saundrabaldwin@accidency.com',
          'phone': '+1 (873) 463-2971',
          'address': {
            'street': 345,
            'city': 'Hiwasse',
            'state': 'Wyoming',
            'zip': 6747
          },
          'about': 'Nostrud sunt cillum aliqua laborum ex voluptate nostrud exercitation excepteur fugiat nulla non esse. Commodo ex reprehenderit pariatur voluptate sit nulla laborum aliqua adipisicing. Duis minim tempor magna labore Lorem incididunt aute eu aute magna culpa aliquip. Reprehenderit aliqua duis eiusmod ad enim voluptate nisi. Laborum dolor culpa esse Lorem commodo deserunt. Culpa pariatur reprehenderit duis ipsum enim aute laborum cupidatat et id.\r\n',
          'registered': '1990-07-04T13:50:23+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Hilda Contreras'
            },
            {
              'id': 1,
              'name': 'Mann Kramer'
            },
            {
              'id': 2,
              'name': 'Bonnie Dominguez'
            }
          ]
        },
        {
          'id': 338,
          'guid': '18680345-09e7-4a10-bc60-6bbe6827e9db',
          'isActive': true,
          'balance': '$1,814.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Lorena Albert',
          'gender': 'female',
          'company': 'Cubicide',
          'email': 'lorenaalbert@cubicide.com',
          'phone': '+1 (953) 446-2980',
          'address': {
            'street': 342,
            'city': 'Westwood',
            'state': 'West Virginia',
            'zip': 6381
          },
          'about': 'Ad quis exercitation magna Lorem Lorem duis enim id. Deserunt voluptate mollit incididunt tempor culpa fugiat eiusmod consequat duis duis. Eu nostrud nulla aliqua dolore eiusmod exercitation consequat elit enim enim sint occaecat Lorem. Mollit excepteur eiusmod reprehenderit exercitation qui magna veniam nisi in magna elit reprehenderit officia. Quis sit dolore laborum nisi. Eiusmod ad id nulla amet. Exercitation sunt cillum consectetur aliquip exercitation duis ut.\r\n',
          'registered': '2013-11-12T15:28:20+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Bobbie Stafford'
            },
            {
              'id': 1,
              'name': 'Constance Barrett'
            },
            {
              'id': 2,
              'name': 'Pearl Taylor'
            }
          ]
        },
        {
          'id': 339,
          'guid': '2d1b415d-e495-41a7-8bb3-805576ff1bee',
          'isActive': true,
          'balance': '$3,875.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Paige Levine',
          'gender': 'female',
          'company': 'Multiflex',
          'email': 'paigelevine@multiflex.com',
          'phone': '+1 (842) 551-2693',
          'address': {
            'street': 644,
            'city': 'Blanco',
            'state': 'Arkansas',
            'zip': 5674
          },
          'about': 'Irure nulla id occaecat nisi excepteur velit enim commodo ex minim qui ipsum et. Ea id sit quis ex. Occaecat ipsum sit eiusmod quis occaecat dolor est. Voluptate amet cillum in magna aliquip nulla. Aute laborum dolor tempor consequat laboris amet incididunt nisi et duis nisi id reprehenderit mollit. Excepteur ullamco et est elit ipsum in mollit esse amet.\r\n',
          'registered': '2006-05-09T21:50:14+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Deleon Obrien'
            },
            {
              'id': 1,
              'name': 'Ginger Wooten'
            },
            {
              'id': 2,
              'name': 'Prince Griffin'
            }
          ]
        },
        {
          'id': 340,
          'guid': '72e115c2-8716-46ec-b124-af5c837a4a45',
          'isActive': false,
          'balance': '$2,215.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Hudson Hurst',
          'gender': 'male',
          'company': 'Tri@Tribalog',
          'email': 'hudsonhurst@tri@tribalog.com',
          'phone': '+1 (930) 459-2700',
          'address': {
            'street': 189,
            'city': 'Martell',
            'state': 'Colorado',
            'zip': 3548
          },
          'about': 'Nulla irure duis quis aliqua aliquip officia laboris dolor dolor do et nisi qui ad. In labore dolore ipsum est tempor cupidatat incididunt et exercitation ullamco id do culpa velit. Do excepteur Lorem mollit nulla officia voluptate nulla consectetur culpa pariatur fugiat officia. Excepteur enim pariatur aute sunt sint qui esse. Tempor consectetur et velit in adipisicing occaecat tempor et reprehenderit anim ullamco nostrud. Duis esse nisi et laborum non quis qui in ipsum adipisicing amet in elit.\r\n',
          'registered': '2005-06-10T07:34:46+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Richard Hopkins'
            },
            {
              'id': 1,
              'name': 'Mayra Wilkinson'
            },
            {
              'id': 2,
              'name': 'Delacruz Macdonald'
            }
          ]
        },
        {
          'id': 341,
          'guid': '024261b8-be10-4f20-9843-19c7d7fd70b7',
          'isActive': true,
          'balance': '$2,513.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Tameka Oconnor',
          'gender': 'female',
          'company': 'Insurity',
          'email': 'tamekaoconnor@insurity.com',
          'phone': '+1 (981) 536-2269',
          'address': {
            'street': 806,
            'city': 'Hilltop',
            'state': 'North Carolina',
            'zip': 2436
          },
          'about': 'Aliqua cupidatat dolor cupidatat sunt in pariatur sunt duis cupidatat. Cupidatat exercitation laborum sit fugiat velit in consequat velit. Ex proident culpa qui enim fugiat dolor voluptate mollit magna nisi qui. Consectetur aliqua mollit cupidatat ut anim elit aliquip commodo adipisicing et. Elit nulla et velit incididunt velit sint officia. Adipisicing anim aliquip consectetur ad dolor dolor enim.\r\n',
          'registered': '1995-09-13T07:30:31+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Gallegos Lawrence'
            },
            {
              'id': 1,
              'name': 'Amber Mcknight'
            },
            {
              'id': 2,
              'name': 'Kerr Moran'
            }
          ]
        },
        {
          'id': 342,
          'guid': '7bb56bf3-0e15-43a7-85b8-f855afe18871',
          'isActive': false,
          'balance': '$1,462.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Montgomery Sharp',
          'gender': 'male',
          'company': 'Plutorque',
          'email': 'montgomerysharp@plutorque.com',
          'phone': '+1 (876) 417-2274',
          'address': {
            'street': 644,
            'city': 'Gadsden',
            'state': 'Vermont',
            'zip': 9367
          },
          'about': 'Quis sint veniam adipisicing veniam elit id id deserunt. Magna aliqua minim cupidatat esse aliqua sint anim est enim labore minim ex esse. Non aliquip aliquip eiusmod eiusmod velit non nulla id ex magna proident ut et cillum. Cillum veniam ea esse aute fugiat nisi excepteur cillum ipsum.\r\n',
          'registered': '1992-11-08T05:07:47+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Sherrie Clements'
            },
            {
              'id': 1,
              'name': 'Bridget Case'
            },
            {
              'id': 2,
              'name': 'Phillips Trujillo'
            }
          ]
        },
        {
          'id': 343,
          'guid': '145ee206-c143-4a42-87a2-520c443640c4',
          'isActive': false,
          'balance': '$3,282.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Hanson Rowland',
          'gender': 'male',
          'company': 'Oronoko',
          'email': 'hansonrowland@oronoko.com',
          'phone': '+1 (911) 530-3817',
          'address': {
            'street': 394,
            'city': 'Waverly',
            'state': 'Pennsylvania',
            'zip': 7319
          },
          'about': 'Irure qui aute nulla ad qui ad duis exercitation nulla exercitation fugiat consectetur quis. Eu amet consectetur id labore. Labore deserunt ex Lorem non id proident id ea aute ullamco deserunt sint laborum. Sunt irure aute ad ad veniam.\r\n',
          'registered': '2008-04-18T19:36:14+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Corrine Salazar'
            },
            {
              'id': 1,
              'name': 'Lori Irwin'
            },
            {
              'id': 2,
              'name': 'Wise Pitts'
            }
          ]
        },
        {
          'id': 344,
          'guid': '83cdafae-b548-4a8a-9200-19c7dba48bb1',
          'isActive': false,
          'balance': '$3,999.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Figueroa Dennis',
          'gender': 'male',
          'company': 'Corpulse',
          'email': 'figueroadennis@corpulse.com',
          'phone': '+1 (852) 489-2250',
          'address': {
            'street': 487,
            'city': 'Turpin',
            'state': 'Kansas',
            'zip': 2897
          },
          'about': 'Nisi ipsum excepteur elit excepteur qui proident tempor ullamco ut irure esse. Ex sint est mollit elit voluptate. Esse irure aute voluptate dolore veniam consequat.\r\n',
          'registered': '2012-06-29T11:49:44+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Lorene Morse'
            },
            {
              'id': 1,
              'name': 'Sheppard Jefferson'
            },
            {
              'id': 2,
              'name': 'Sharpe Mcdaniel'
            }
          ]
        },
        {
          'id': 345,
          'guid': '18c8cd08-e6d0-4aad-9de9-0b30db5bb565',
          'isActive': false,
          'balance': '$3,129.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Washington Acosta',
          'gender': 'male',
          'company': 'Ecraze',
          'email': 'washingtonacosta@ecraze.com',
          'phone': '+1 (913) 487-2120',
          'address': {
            'street': 694,
            'city': 'Bartley',
            'state': 'Utah',
            'zip': 5804
          },
          'about': 'Eiusmod aute voluptate cupidatat cupidatat anim. Consequat Lorem do aliqua nulla fugiat do nulla duis velit nulla sint. Cillum pariatur id ut exercitation pariatur Lorem enim ad occaecat anim. Voluptate ad incididunt et elit minim anim duis irure et Lorem esse. Consequat velit consequat nulla exercitation consectetur dolor ipsum deserunt aliquip aliqua.\r\n',
          'registered': '2013-09-13T16:19:29+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Owens Heath'
            },
            {
              'id': 1,
              'name': 'Christa Stephens'
            },
            {
              'id': 2,
              'name': 'Slater Franco'
            }
          ]
        },
        {
          'id': 346,
          'guid': '0edf17be-aee2-483e-a78d-1be467ee04eb',
          'isActive': false,
          'balance': '$2,481.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Jeannette Lowe',
          'gender': 'female',
          'company': 'Fuelworks',
          'email': 'jeannettelowe@fuelworks.com',
          'phone': '+1 (886) 562-3276',
          'address': {
            'street': 813,
            'city': 'Delshire',
            'state': 'Nevada',
            'zip': 3498
          },
          'about': 'Sint velit tempor veniam et est consequat officia dolore ipsum Lorem tempor fugiat. Laboris officia qui eiusmod adipisicing mollit non exercitation nulla officia aute exercitation voluptate. Reprehenderit sint deserunt commodo magna magna cillum aute cupidatat amet.\r\n',
          'registered': '2002-03-23T17:17:39+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Jackie Burke'
            },
            {
              'id': 1,
              'name': 'Kellie Johns'
            },
            {
              'id': 2,
              'name': 'Enid Pena'
            }
          ]
        },
        {
          'id': 347,
          'guid': '24cb4dfc-9ccd-47fd-b9ed-9ee0bdf36f35',
          'isActive': false,
          'balance': '$3,293.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Hilary Beasley',
          'gender': 'female',
          'company': 'Medifax',
          'email': 'hilarybeasley@medifax.com',
          'phone': '+1 (936) 547-3843',
          'address': {
            'street': 121,
            'city': 'Concho',
            'state': 'North Dakota',
            'zip': 654
          },
          'about': 'Labore qui anim nostrud id dolor eiusmod tempor do duis qui non adipisicing veniam laborum. Amet qui voluptate tempor laborum laborum cillum commodo incididunt ad. Voluptate enim dolor tempor id esse aute sit ut. Ipsum incididunt ad sit dolor reprehenderit in ut ea et pariatur adipisicing.\r\n',
          'registered': '1993-11-12T15:06:36+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Madeline Burton'
            },
            {
              'id': 1,
              'name': 'Bobbie Snider'
            },
            {
              'id': 2,
              'name': 'French Dean'
            }
          ]
        },
        {
          'id': 348,
          'guid': 'f6e07149-8dc5-4090-a97b-7200484c72d4',
          'isActive': false,
          'balance': '$3,202.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Veronica Livingston',
          'gender': 'female',
          'company': 'Biohab',
          'email': 'veronicalivingston@biohab.com',
          'phone': '+1 (887) 493-2354',
          'address': {
            'street': 726,
            'city': 'Blackgum',
            'state': 'Ohio',
            'zip': 5277
          },
          'about': 'Ullamco adipisicing occaecat tempor cupidatat excepteur exercitation sint qui et. Elit eiusmod pariatur magna ad magna laborum nulla tempor eiusmod. Amet dolore ullamco nostrud mollit fugiat do esse elit duis nostrud incididunt sit esse. Officia exercitation ad in do eu dolore magna quis voluptate excepteur fugiat anim elit velit. Magna consequat eiusmod ut culpa labore commodo elit Lorem. Est adipisicing reprehenderit duis reprehenderit enim aute sit eu exercitation qui sit esse esse voluptate.\r\n',
          'registered': '2003-10-03T08:30:37+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mcdonald Erickson'
            },
            {
              'id': 1,
              'name': 'Marsha Vargas'
            },
            {
              'id': 2,
              'name': 'Hahn Benton'
            }
          ]
        },
        {
          'id': 349,
          'guid': '3055c091-86b7-4032-89c8-afeb484804bc',
          'isActive': false,
          'balance': '$2,377.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Thelma Parker',
          'gender': 'female',
          'company': 'Cogentry',
          'email': 'thelmaparker@cogentry.com',
          'phone': '+1 (945) 484-2408',
          'address': {
            'street': 278,
            'city': 'Bonanza',
            'state': 'Mississippi',
            'zip': 527
          },
          'about': 'Pariatur deserunt commodo officia ad quis. Pariatur consequat ad consectetur nulla amet in aliqua proident proident. Voluptate et occaecat nisi occaecat occaecat. In consequat ut mollit laborum sunt do ipsum sunt qui.\r\n',
          'registered': '2004-12-05T21:07:46+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Trevino Barnett'
            },
            {
              'id': 1,
              'name': 'Whitfield Craft'
            },
            {
              'id': 2,
              'name': 'Maxwell Roberson'
            }
          ]
        },
        {
          'id': 350,
          'guid': '2be73ea1-e3d2-464d-9684-91ca8a4483f0',
          'isActive': true,
          'balance': '$1,440.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Watson Blevins',
          'gender': 'male',
          'company': 'Xanide',
          'email': 'watsonblevins@xanide.com',
          'phone': '+1 (831) 455-3039',
          'address': {
            'street': 349,
            'city': 'Townsend',
            'state': 'Arkansas',
            'zip': 9320
          },
          'about': 'Labore Lorem consectetur eiusmod enim ipsum culpa dolor officia. Consectetur nostrud cupidatat ex aliqua. Sint sint fugiat dolore quis dolore proident. Aute dolore nostrud sint elit occaecat culpa tempor sunt non.\r\n',
          'registered': '2008-01-19T19:20:10+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Sondra Gilbert'
            },
            {
              'id': 1,
              'name': 'Lacey Sullivan'
            },
            {
              'id': 2,
              'name': 'Flowers Calderon'
            }
          ]
        },
        {
          'id': 351,
          'guid': 'ed3c7b60-0ada-42b4-a23c-bc7dbb7570f5',
          'isActive': true,
          'balance': '$3,594.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Cantu Cross',
          'gender': 'male',
          'company': 'Slambda',
          'email': 'cantucross@slambda.com',
          'phone': '+1 (923) 530-3448',
          'address': {
            'street': 137,
            'city': 'Yonah',
            'state': 'Florida',
            'zip': 9969
          },
          'about': 'Veniam est velit sint sint pariatur aliqua elit. Fugiat nulla ullamco voluptate irure culpa nisi id amet do. Anim nisi esse esse officia pariatur elit. Incididunt magna proident ex in eu.\r\n',
          'registered': '1998-03-25T07:00:58+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Claire Singleton'
            },
            {
              'id': 1,
              'name': 'Lenore Carson'
            },
            {
              'id': 2,
              'name': 'Sexton Rowe'
            }
          ]
        },
        {
          'id': 352,
          'guid': '0053c7dc-c786-4925-996f-01afd3bf692f',
          'isActive': false,
          'balance': '$1,424.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Flynn Baird',
          'gender': 'male',
          'company': 'Kozgene',
          'email': 'flynnbaird@kozgene.com',
          'phone': '+1 (847) 480-3135',
          'address': {
            'street': 769,
            'city': 'Ebro',
            'state': 'New Jersey',
            'zip': 1686
          },
          'about': 'Eiusmod voluptate ea minim ut sunt mollit esse aliquip pariatur velit Lorem sint. Tempor nulla dolor reprehenderit ad. Dolore aliquip incididunt ea est qui quis reprehenderit nostrud. Proident elit pariatur elit id eiusmod qui id cupidatat excepteur excepteur occaecat exercitation. Ex ipsum amet commodo nisi magna voluptate. Ut excepteur ut nisi ex duis ut velit incididunt nisi. Duis ut eu incididunt id.\r\n',
          'registered': '1994-01-25T03:40:43+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'David Gamble'
            },
            {
              'id': 1,
              'name': 'Frazier Rose'
            },
            {
              'id': 2,
              'name': 'Lauren Duncan'
            }
          ]
        },
        {
          'id': 353,
          'guid': 'da05d645-4e83-4865-bcc2-f72163c472c6',
          'isActive': true,
          'balance': '$1,891.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Diana Frye',
          'gender': 'female',
          'company': 'Bicol',
          'email': 'dianafrye@bicol.com',
          'phone': '+1 (998) 510-2769',
          'address': {
            'street': 902,
            'city': 'Gibsonia',
            'state': 'New Hampshire',
            'zip': 6709
          },
          'about': 'Sunt laboris cupidatat aliqua consequat laboris ad pariatur ut minim veniam qui nostrud aliquip. Ullamco ad et tempor magna. Quis et sint veniam incididunt ipsum pariatur non ut occaecat sit.\r\n',
          'registered': '2009-09-29T15:13:43+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Ruby Cummings'
            },
            {
              'id': 1,
              'name': 'Cotton Olsen'
            },
            {
              'id': 2,
              'name': 'Kelley Parrish'
            }
          ]
        },
        {
          'id': 354,
          'guid': 'ede66734-81b8-46fb-89a2-425ef40c9ce4',
          'isActive': false,
          'balance': '$3,969.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Brock Mcknight',
          'gender': 'male',
          'company': 'Octocore',
          'email': 'brockmcknight@octocore.com',
          'phone': '+1 (821) 572-2559',
          'address': {
            'street': 430,
            'city': 'Deercroft',
            'state': 'Wyoming',
            'zip': 3127
          },
          'about': 'Quis nulla esse est aliquip sint veniam labore aliquip pariatur. Ex irure nostrud enim deserunt minim. Esse pariatur non qui incididunt culpa laboris laborum ex. Enim qui ex deserunt consectetur adipisicing eu non velit. Exercitation incididunt qui incididunt eiusmod exercitation mollit officia fugiat aute non nisi.\r\n',
          'registered': '1988-08-27T14:28:43+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Chang Ware'
            },
            {
              'id': 1,
              'name': 'Mcfadden Gregory'
            },
            {
              'id': 2,
              'name': 'Adkins Ford'
            }
          ]
        },
        {
          'id': 355,
          'guid': 'e8d17092-2263-41b7-8efd-c880972fbe8a',
          'isActive': true,
          'balance': '$3,649.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Ophelia Evans',
          'gender': 'female',
          'company': 'Valpreal',
          'email': 'opheliaevans@valpreal.com',
          'phone': '+1 (831) 544-2847',
          'address': {
            'street': 277,
            'city': 'Sardis',
            'state': 'California',
            'zip': 9598
          },
          'about': 'Amet nulla culpa exercitation ullamco cupidatat laborum ea. Qui reprehenderit sunt do qui deserunt dolor non dolor non. Ipsum tempor duis commodo magna magna reprehenderit reprehenderit. Amet qui consectetur mollit sunt elit culpa anim.\r\n',
          'registered': '2004-06-16T01:09:14+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Graciela Leon'
            },
            {
              'id': 1,
              'name': 'Acosta Carlson'
            },
            {
              'id': 2,
              'name': 'Parsons Crosby'
            }
          ]
        },
        {
          'id': 356,
          'guid': '37297f73-425e-4c2c-ab54-d1ad4d59e197',
          'isActive': false,
          'balance': '$1,220.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Boone Downs',
          'gender': 'male',
          'company': 'Datacator',
          'email': 'boonedowns@datacator.com',
          'phone': '+1 (801) 471-2448',
          'address': {
            'street': 182,
            'city': 'Manila',
            'state': 'New Mexico',
            'zip': 2491
          },
          'about': 'Eu fugiat duis enim aute ex adipisicing. Incididunt dolore commodo tempor ipsum deserunt. Sint consectetur ipsum sit proident. Anim do eiusmod eiusmod labore minim ad reprehenderit nostrud ex pariatur occaecat ut ipsum cupidatat. Qui nulla commodo minim ut sint nisi ad fugiat reprehenderit quis laborum quis. Irure exercitation aliquip est incididunt enim laborum dolore qui non ad enim ipsum nisi in. Aute duis minim cillum pariatur.\r\n',
          'registered': '2009-07-24T10:08:04+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Le Conrad'
            },
            {
              'id': 1,
              'name': 'Matthews Reeves'
            },
            {
              'id': 2,
              'name': 'Mccoy Craig'
            }
          ]
        },
        {
          'id': 357,
          'guid': 'e6b3d1ed-cdde-499b-9dce-18f21f4e8888',
          'isActive': true,
          'balance': '$2,703.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Jimenez Knapp',
          'gender': 'male',
          'company': 'Sustenza',
          'email': 'jimenezknapp@sustenza.com',
          'phone': '+1 (959) 591-3878',
          'address': {
            'street': 658,
            'city': 'Finzel',
            'state': 'Vermont',
            'zip': 5830
          },
          'about': 'Enim tempor velit velit enim deserunt non labore aute labore elit ut. Deserunt do aute anim fugiat. Mollit ea Lorem duis magna aliquip sint tempor laboris deserunt et quis aute.\r\n',
          'registered': '1995-07-22T06:59:16+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Tamika Pratt'
            },
            {
              'id': 1,
              'name': 'Cobb Pickett'
            },
            {
              'id': 2,
              'name': 'Harding Crawford'
            }
          ]
        },
        {
          'id': 358,
          'guid': 'b8a8b650-80f9-4572-9a8a-3475e3a74728',
          'isActive': true,
          'balance': '$2,957.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Cross Coleman',
          'gender': 'male',
          'company': 'Equicom',
          'email': 'crosscoleman@equicom.com',
          'phone': '+1 (881) 580-2564',
          'address': {
            'street': 841,
            'city': 'Tibbie',
            'state': 'Illinois',
            'zip': 4975
          },
          'about': 'Voluptate duis eu proident laborum officia anim proident enim eu voluptate. Mollit labore culpa ad laboris sint ipsum et aliqua velit enim culpa aliquip laboris. Qui cillum culpa anim cillum commodo incididunt laborum ullamco id cillum Lorem.\r\n',
          'registered': '2005-01-05T20:08:23+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Lester Rhodes'
            },
            {
              'id': 1,
              'name': 'Jenkins Navarro'
            },
            {
              'id': 2,
              'name': 'Glover Greer'
            }
          ]
        },
        {
          'id': 359,
          'guid': '02f8ea8a-3eb9-4ed3-a0c3-8f3014c57013',
          'isActive': true,
          'balance': '$2,505.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Connie Stanton',
          'gender': 'female',
          'company': 'Comvey',
          'email': 'conniestanton@comvey.com',
          'phone': '+1 (916) 444-3009',
          'address': {
            'street': 819,
            'city': 'Ronco',
            'state': 'Alaska',
            'zip': 4631
          },
          'about': 'Et tempor eu Lorem eu tempor do ex incididunt aliquip consequat. Culpa amet aute ex anim mollit ut mollit. Velit esse irure proident aute occaecat quis pariatur. Anim officia eiusmod qui id in elit dolore quis. Lorem ipsum sunt cillum aute adipisicing dolore nisi tempor cillum dolore commodo.\r\n',
          'registered': '1991-08-20T09:00:58+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Rosalyn Tucker'
            },
            {
              'id': 1,
              'name': 'Holt Kline'
            },
            {
              'id': 2,
              'name': 'Spence Payne'
            }
          ]
        },
        {
          'id': 360,
          'guid': 'db7e22b5-8db6-40de-a925-51587b3b9628',
          'isActive': false,
          'balance': '$3,615.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Eva Petty',
          'gender': 'female',
          'company': 'Imkan',
          'email': 'evapetty@imkan.com',
          'phone': '+1 (935) 504-2016',
          'address': {
            'street': 866,
            'city': 'Bend',
            'state': 'Oklahoma',
            'zip': 7811
          },
          'about': 'Nulla incididunt pariatur consectetur do laboris quis eiusmod sint mollit ullamco laborum voluptate labore. Proident adipisicing quis reprehenderit duis adipisicing tempor ut excepteur adipisicing. Ut irure non consectetur esse minim tempor aute elit ullamco irure exercitation non reprehenderit. Ut et aute eu reprehenderit nisi officia pariatur eu. Cupidatat reprehenderit fugiat ipsum pariatur irure amet nostrud pariatur eu et. Nulla laborum ullamco ipsum deserunt laboris reprehenderit.\r\n',
          'registered': '1993-10-04T01:40:03+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Emilia Boone'
            },
            {
              'id': 1,
              'name': 'James Gomez'
            },
            {
              'id': 2,
              'name': 'Charles Boyd'
            }
          ]
        },
        {
          'id': 361,
          'guid': '8ffb971d-0ad9-4038-b4c3-92bc05961599',
          'isActive': true,
          'balance': '$3,098.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Levine Todd',
          'gender': 'male',
          'company': 'Plasmosis',
          'email': 'levinetodd@plasmosis.com',
          'phone': '+1 (883) 473-2671',
          'address': {
            'street': 539,
            'city': 'Coinjock',
            'state': 'Connecticut',
            'zip': 5625
          },
          'about': 'Fugiat ex proident aliquip enim consequat nisi est eiusmod tempor ex eiusmod Lorem et et. Occaecat sint nisi anim amet cillum laboris cupidatat sint enim occaecat. Anim elit irure incididunt qui sunt fugiat sunt ipsum. Adipisicing nulla dolore dolor esse non excepteur. Velit laborum elit ut aute ad esse officia anim aute aute adipisicing. Irure ad labore laboris aute quis culpa adipisicing sint occaecat magna officia minim est.\r\n',
          'registered': '2004-10-11T13:15:11+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Shanna Dunlap'
            },
            {
              'id': 1,
              'name': 'Margaret Rutledge'
            },
            {
              'id': 2,
              'name': 'Rush Ruiz'
            }
          ]
        },
        {
          'id': 362,
          'guid': '03ab30ab-10d9-4693-acef-3415c8832b1c',
          'isActive': false,
          'balance': '$2,288.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Rachelle Harrington',
          'gender': 'female',
          'company': 'Isoswitch',
          'email': 'rachelleharrington@isoswitch.com',
          'phone': '+1 (811) 532-3342',
          'address': {
            'street': 734,
            'city': 'Boomer',
            'state': 'Arizona',
            'zip': 9051
          },
          'about': 'Enim exercitation dolor laborum ad dolor mollit duis elit dolor qui deserunt magna qui magna. Adipisicing mollit voluptate nulla ut cillum non ad non enim laborum consectetur. Incididunt non veniam tempor aute aliqua sint veniam.\r\n',
          'registered': '1993-05-11T16:07:50+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Joann Foster'
            },
            {
              'id': 1,
              'name': 'Pugh Holman'
            },
            {
              'id': 2,
              'name': 'Carmen Sparks'
            }
          ]
        },
        {
          'id': 363,
          'guid': '6b89f953-eb23-4273-bff0-a2dc00be41ad',
          'isActive': false,
          'balance': '$3,228.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Candy Burch',
          'gender': 'female',
          'company': 'Kenegy',
          'email': 'candyburch@kenegy.com',
          'phone': '+1 (898) 516-2306',
          'address': {
            'street': 597,
            'city': 'Brethren',
            'state': 'Tennessee',
            'zip': 3323
          },
          'about': 'Consequat est nulla velit commodo ipsum ea fugiat dolor dolore sint in commodo sunt ut. Aliquip cillum amet excepteur excepteur aliqua minim id sit adipisicing ipsum aliquip occaecat veniam proident. Incididunt occaecat veniam esse exercitation voluptate enim. Ad magna nulla ex est et. Commodo ad enim aute consequat sint proident irure commodo dolor non.\r\n',
          'registered': '1998-06-25T15:55:08+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Marietta Randall'
            },
            {
              'id': 1,
              'name': 'Thomas Quinn'
            },
            {
              'id': 2,
              'name': 'Simone Foley'
            }
          ]
        },
        {
          'id': 364,
          'guid': '1eb793f3-5f19-43a9-b908-e4aaca932553',
          'isActive': true,
          'balance': '$3,772.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Cassandra Fields',
          'gender': 'female',
          'company': 'Ramjob',
          'email': 'cassandrafields@ramjob.com',
          'phone': '+1 (949) 468-2077',
          'address': {
            'street': 439,
            'city': 'Mammoth',
            'state': 'Nebraska',
            'zip': 6704
          },
          'about': 'Aute fugiat elit nisi reprehenderit sunt mollit sit amet consequat. Pariatur mollit et reprehenderit ad mollit labore aute ex fugiat esse magna aliquip. Ipsum est ex ullamco pariatur. Reprehenderit cupidatat esse culpa ad. Nulla laborum anim nulla veniam ea mollit consequat qui reprehenderit exercitation. Consectetur aliquip elit adipisicing irure eu dolore aliquip esse. Laborum irure sit veniam tempor dolor aliqua ipsum adipisicing deserunt mollit.\r\n',
          'registered': '2010-10-08T06:49:22+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Schultz Hayden'
            },
            {
              'id': 1,
              'name': 'Jaclyn Potter'
            },
            {
              'id': 2,
              'name': 'Finch Woodard'
            }
          ]
        },
        {
          'id': 365,
          'guid': '2b929344-f0c2-4904-82a8-5b3ca887cecf',
          'isActive': false,
          'balance': '$2,948.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Frieda Riddle',
          'gender': 'female',
          'company': 'Exoswitch',
          'email': 'friedariddle@exoswitch.com',
          'phone': '+1 (850) 547-3003',
          'address': {
            'street': 576,
            'city': 'Wells',
            'state': 'Massachusetts',
            'zip': 5002
          },
          'about': 'Voluptate ea nisi cillum qui ex id laboris voluptate cupidatat. Elit commodo sit do incididunt. Tempor elit aliquip esse ex ipsum mollit reprehenderit amet.\r\n',
          'registered': '2009-07-25T13:00:06+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Gordon Mullins'
            },
            {
              'id': 1,
              'name': 'Jami Walters'
            },
            {
              'id': 2,
              'name': 'Dona Hawkins'
            }
          ]
        },
        {
          'id': 366,
          'guid': 'ca8ca8b9-4345-4224-9cab-7d8a1192d1d5',
          'isActive': true,
          'balance': '$2,565.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Latonya Kaufman',
          'gender': 'female',
          'company': 'Dreamia',
          'email': 'latonyakaufman@dreamia.com',
          'phone': '+1 (931) 406-3111',
          'address': {
            'street': 602,
            'city': 'Orviston',
            'state': 'Oregon',
            'zip': 4738
          },
          'about': 'Proident veniam dolor non enim consectetur enim aliqua qui proident est ea in proident. Fugiat laborum esse cillum reprehenderit sint ut officia deserunt. Ipsum fugiat do dolor non nulla culpa officia proident ipsum amet do nisi. Lorem duis consectetur nostrud anim. Dolore dolor ullamco cupidatat tempor nulla excepteur nisi laborum eiusmod nulla. Aliquip labore consectetur consequat enim ullamco proident aliqua commodo dolor et non.\r\n',
          'registered': '2011-12-19T17:07:57+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Hensley Blair'
            },
            {
              'id': 1,
              'name': 'Dillard Forbes'
            },
            {
              'id': 2,
              'name': 'Anne Nunez'
            }
          ]
        },
        {
          'id': 367,
          'guid': '9c757bb8-c90d-48d5-a730-05e04456dc5c',
          'isActive': false,
          'balance': '$3,613.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Ericka Finch',
          'gender': 'female',
          'company': 'Neptide',
          'email': 'erickafinch@neptide.com',
          'phone': '+1 (989) 488-3893',
          'address': {
            'street': 711,
            'city': 'Makena',
            'state': 'New York',
            'zip': 3251
          },
          'about': 'Officia reprehenderit est ipsum reprehenderit sit elit et nostrud proident incididunt. Consectetur laboris fugiat nulla anim amet dolor ut. Aliqua ex in eiusmod cupidatat nulla. Incididunt sunt elit et anim in dolore fugiat consectetur pariatur sunt consequat.\r\n',
          'registered': '1993-06-24T04:30:26+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Beverly Mclaughlin'
            },
            {
              'id': 1,
              'name': 'Angelica Lowery'
            },
            {
              'id': 2,
              'name': 'Baxter Hahn'
            }
          ]
        },
        {
          'id': 368,
          'guid': '25ddedf9-2066-4ddc-852d-ed16fb794458',
          'isActive': false,
          'balance': '$1,687.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Joan Jarvis',
          'gender': 'female',
          'company': 'Xylar',
          'email': 'joanjarvis@xylar.com',
          'phone': '+1 (800) 593-3400',
          'address': {
            'street': 269,
            'city': 'Terlingua',
            'state': 'Washington',
            'zip': 7764
          },
          'about': 'Adipisicing minim cupidatat ea et voluptate reprehenderit ea minim. Sit ipsum non eu labore in est nostrud. Ut dolor ex dolor non cupidatat ipsum fugiat exercitation occaecat. Esse mollit non non velit minim nostrud aliqua anim cillum labore sunt ullamco.\r\n',
          'registered': '1994-09-01T05:33:51+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Annie Neal'
            },
            {
              'id': 1,
              'name': 'Castaneda Gillespie'
            },
            {
              'id': 2,
              'name': 'Marjorie Peck'
            }
          ]
        },
        {
          'id': 369,
          'guid': 'c798bfe2-a7ee-4425-a185-dd404b54b2c2',
          'isActive': true,
          'balance': '$2,000.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Rebekah Shields',
          'gender': 'female',
          'company': 'Polarium',
          'email': 'rebekahshields@polarium.com',
          'phone': '+1 (900) 485-2113',
          'address': {
            'street': 978,
            'city': 'Umapine',
            'state': 'Minnesota',
            'zip': 9261
          },
          'about': 'Exercitation in velit incididunt consectetur reprehenderit nulla. Culpa exercitation culpa amet pariatur velit nostrud exercitation dolore quis ullamco dolor ea. Id ad exercitation non commodo cillum dolor nisi nisi velit Lorem. Proident velit sint dolore aliqua eu aliquip ex et reprehenderit proident nisi minim.\r\n',
          'registered': '2004-12-22T11:12:23+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Franks Spence'
            },
            {
              'id': 1,
              'name': 'Summer Brewer'
            },
            {
              'id': 2,
              'name': 'Young Patton'
            }
          ]
        },
        {
          'id': 370,
          'guid': '4b8de02a-df1d-49ff-bdf8-3b742f481257',
          'isActive': false,
          'balance': '$1,467.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Brigitte Juarez',
          'gender': 'female',
          'company': 'Sonique',
          'email': 'brigittejuarez@sonique.com',
          'phone': '+1 (984) 543-3045',
          'address': {
            'street': 725,
            'city': 'Muir',
            'state': 'Kentucky',
            'zip': 5433
          },
          'about': 'Ipsum et qui cillum ad veniam. Deserunt occaecat deserunt elit nostrud et laborum ullamco nisi Lorem enim. Ex ad ex ex consequat. Ipsum excepteur nostrud deserunt quis cillum dolor quis occaecat eiusmod aliquip. Nulla veniam amet dolore ex aliqua eiusmod esse dolore sit sit cillum sunt nulla. Et esse anim et qui non irure.\r\n',
          'registered': '2012-06-02T21:12:33+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Velma Myers'
            },
            {
              'id': 1,
              'name': 'Linda Tanner'
            },
            {
              'id': 2,
              'name': 'Chasity Acevedo'
            }
          ]
        },
        {
          'id': 371,
          'guid': '65698470-bb96-403c-9fbc-602cc48442a5',
          'isActive': true,
          'balance': '$3,393.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Chase Colon',
          'gender': 'male',
          'company': 'Xleen',
          'email': 'chasecolon@xleen.com',
          'phone': '+1 (805) 426-3426',
          'address': {
            'street': 350,
            'city': 'Rosewood',
            'state': 'Rhode Island',
            'zip': 7893
          },
          'about': 'Non sit aliqua dolore eiusmod. Proident elit tempor fugiat reprehenderit id Lorem proident elit do deserunt irure nulla laborum deserunt. Eiusmod consequat aliqua ad exercitation anim elit magna.\r\n',
          'registered': '1995-04-10T11:25:48+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Grace Jensen'
            },
            {
              'id': 1,
              'name': 'Barker Odom'
            },
            {
              'id': 2,
              'name': 'Chandler Robertson'
            }
          ]
        },
        {
          'id': 372,
          'guid': 'bbcb7300-694d-4a24-9e6e-c2fb62fbbd5e',
          'isActive': true,
          'balance': '$3,156.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Jacqueline Wilkinson',
          'gender': 'female',
          'company': 'Vinch',
          'email': 'jacquelinewilkinson@vinch.com',
          'phone': '+1 (875) 596-3737',
          'address': {
            'street': 451,
            'city': 'Fulford',
            'state': 'Hawaii',
            'zip': 744
          },
          'about': 'Pariatur ullamco nulla aliquip officia aliquip qui ipsum. Mollit laborum eiusmod reprehenderit incididunt eiusmod amet id esse occaecat. Excepteur Lorem eu veniam labore officia ea nostrud laborum sunt eu reprehenderit eiusmod elit magna. Occaecat eu nisi velit laboris culpa duis elit. Quis anim laboris minim velit et laborum reprehenderit ex ut do aliqua proident. Ipsum sunt anim ea aliquip culpa. Adipisicing id aliquip eiusmod occaecat culpa et laboris id nisi sint qui enim dolor.\r\n',
          'registered': '1997-12-16T13:30:17+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Kerri Goodwin'
            },
            {
              'id': 1,
              'name': 'Shari Vaughan'
            },
            {
              'id': 2,
              'name': 'Sybil Nelson'
            }
          ]
        },
        {
          'id': 373,
          'guid': 'bfa53a38-510b-49bb-96b7-ed165327a791',
          'isActive': false,
          'balance': '$2,712.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Elliott Elliott',
          'gender': 'male',
          'company': 'Enjola',
          'email': 'elliottelliott@enjola.com',
          'phone': '+1 (969) 598-2178',
          'address': {
            'street': 725,
            'city': 'Darrtown',
            'state': 'West Virginia',
            'zip': 2671
          },
          'about': 'Proident minim aliquip fugiat fugiat duis minim elit tempor do incididunt quis. Culpa ex Lorem quis anim sit elit sint est veniam aliquip enim ea. Minim sit culpa consectetur nulla id aliqua exercitation.\r\n',
          'registered': '1994-08-19T17:39:24+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mills Thomas'
            },
            {
              'id': 1,
              'name': 'Tyler Sloan'
            },
            {
              'id': 2,
              'name': 'Ladonna Wilcox'
            }
          ]
        },
        {
          'id': 374,
          'guid': '30b59f71-ea63-415f-bc56-94e768f4ee0f',
          'isActive': true,
          'balance': '$2,085.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Mcclure Sykes',
          'gender': 'male',
          'company': 'Zillan',
          'email': 'mccluresykes@zillan.com',
          'phone': '+1 (852) 486-2324',
          'address': {
            'street': 704,
            'city': 'Blue',
            'state': 'Louisiana',
            'zip': 9986
          },
          'about': 'Et do commodo proident consectetur duis qui sint eu eiusmod. Qui culpa excepteur enim magna magna ex proident. In magna sit nisi excepteur amet ullamco consequat adipisicing sunt pariatur amet non.\r\n',
          'registered': '2013-11-10T20:50:49+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Juanita Woods'
            },
            {
              'id': 1,
              'name': 'Laura Stafford'
            },
            {
              'id': 2,
              'name': 'Hunter Simmons'
            }
          ]
        },
        {
          'id': 375,
          'guid': '8966ddc9-a43d-4ac0-9843-b4dfe0189d70',
          'isActive': true,
          'balance': '$3,665.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Brandi Jacobson',
          'gender': 'female',
          'company': 'Strozen',
          'email': 'brandijacobson@strozen.com',
          'phone': '+1 (868) 445-2696',
          'address': {
            'street': 726,
            'city': 'Sparkill',
            'state': 'Delaware',
            'zip': 2193
          },
          'about': 'Ad nisi consequat eu ad deserunt ea officia ex et aliqua eu dolor. Deserunt deserunt fugiat ad anim esse excepteur deserunt nulla pariatur adipisicing fugiat est tempor. Enim ea velit dolore id voluptate commodo nostrud sint minim magna commodo. Sunt non laboris eu ex officia dolore qui aliquip commodo.\r\n',
          'registered': '1996-08-01T13:42:16+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Blankenship Brock'
            },
            {
              'id': 1,
              'name': 'Davidson Sexton'
            },
            {
              'id': 2,
              'name': 'Mavis Mcgee'
            }
          ]
        },
        {
          'id': 376,
          'guid': '4dea54ab-e4b5-4768-9bcd-59ac229aef5f',
          'isActive': true,
          'balance': '$2,324.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Irwin Watson',
          'gender': 'male',
          'company': 'Lunchpad',
          'email': 'irwinwatson@lunchpad.com',
          'phone': '+1 (957) 437-3236',
          'address': {
            'street': 677,
            'city': 'Lithium',
            'state': 'Iowa',
            'zip': 8734
          },
          'about': 'Excepteur ullamco quis in ad incididunt laboris anim irure. Excepteur nulla adipisicing adipisicing ullamco aute in. Occaecat minim non qui incididunt dolor magna irure adipisicing Lorem. Do esse cupidatat magna est anim commodo cupidatat officia fugiat exercitation ipsum Lorem est. Ex labore exercitation et deserunt aliquip velit Lorem consequat id commodo et.\r\n',
          'registered': '1999-01-14T22:28:42+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Elsa Kirby'
            },
            {
              'id': 1,
              'name': 'Noemi Camacho'
            },
            {
              'id': 2,
              'name': 'Beatrice Barlow'
            }
          ]
        },
        {
          'id': 377,
          'guid': '96d0a24f-9c4e-431b-b0a2-e63b3cf3e95d',
          'isActive': true,
          'balance': '$1,117.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Rodgers Mcconnell',
          'gender': 'male',
          'company': 'Handshake',
          'email': 'rodgersmcconnell@handshake.com',
          'phone': '+1 (918) 418-2172',
          'address': {
            'street': 254,
            'city': 'Denio',
            'state': 'Maine',
            'zip': 3883
          },
          'about': 'Ut velit laboris ipsum minim consequat culpa aute adipisicing ut aute elit. Consectetur anim Lorem laborum dolore deserunt tempor commodo deserunt. Culpa esse sunt irure culpa sunt occaecat laborum ex eiusmod commodo. Ullamco officia enim reprehenderit ullamco nostrud.\r\n',
          'registered': '2006-05-15T23:54:32+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Candice Velazquez'
            },
            {
              'id': 1,
              'name': 'Martha Hammond'
            },
            {
              'id': 2,
              'name': 'Kate Hoover'
            }
          ]
        },
        {
          'id': 378,
          'guid': 'b5794967-5489-405f-b915-af81d771432b',
          'isActive': true,
          'balance': '$3,636.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Bridgette Pope',
          'gender': 'female',
          'company': 'Glasstep',
          'email': 'bridgettepope@glasstep.com',
          'phone': '+1 (980) 416-2239',
          'address': {
            'street': 605,
            'city': 'Masthope',
            'state': 'Missouri',
            'zip': 3940
          },
          'about': 'Amet cillum exercitation irure adipisicing anim. Adipisicing quis velit id occaecat pariatur aute ipsum esse esse ipsum. Anim consequat duis fugiat culpa in duis veniam velit aliqua et nulla pariatur exercitation tempor.\r\n',
          'registered': '1997-01-24T03:05:31+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'May Stein'
            },
            {
              'id': 1,
              'name': 'Desiree Hopkins'
            },
            {
              'id': 2,
              'name': 'Holden Merritt'
            }
          ]
        },
        {
          'id': 379,
          'guid': '1ee76f50-d37a-48a9-9940-5aaa026df472',
          'isActive': false,
          'balance': '$1,575.00',
          'picture': 'http://placehold.it/32x32',
          'age': 32,
          'name': 'Horton Spears',
          'gender': 'male',
          'company': 'Virva',
          'email': 'hortonspears@virva.com',
          'phone': '+1 (822) 512-2238',
          'address': {
            'street': 518,
            'city': 'Westmoreland',
            'state': 'Wisconsin',
            'zip': 250
          },
          'about': 'Tempor ut enim irure aliqua reprehenderit. Minim nulla occaecat non excepteur consequat sunt velit enim qui non nulla. Elit velit dolor elit dolor est laborum. Reprehenderit dolore dolor in voluptate non est anim ad mollit fugiat et mollit officia. Tempor magna esse Lorem nisi qui.\r\n',
          'registered': '2007-08-28T09:53:30+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Long Taylor'
            },
            {
              'id': 1,
              'name': 'Colette Kidd'
            },
            {
              'id': 2,
              'name': 'Kirby Maldonado'
            }
          ]
        },
        {
          'id': 380,
          'guid': '9751f183-f125-48b5-bd8c-445a70068af4',
          'isActive': false,
          'balance': '$2,343.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Audrey Mendez',
          'gender': 'female',
          'company': 'Pyramia',
          'email': 'audreymendez@pyramia.com',
          'phone': '+1 (844) 570-2368',
          'address': {
            'street': 700,
            'city': 'Lupton',
            'state': 'Texas',
            'zip': 7277
          },
          'about': 'Duis incididunt nostrud quis aute ea adipisicing. Cupidatat cupidatat cillum exercitation voluptate voluptate eiusmod enim fugiat irure ut veniam aute. Duis Lorem excepteur esse cillum nulla fugiat culpa pariatur in voluptate aute. Ex duis commodo et sit ullamco officia adipisicing eiusmod id enim. Laborum officia sit laboris enim proident sit nisi elit exercitation adipisicing duis anim labore incididunt.\r\n',
          'registered': '2001-06-29T23:47:14+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Bates Harrell'
            },
            {
              'id': 1,
              'name': 'Beth Baxter'
            },
            {
              'id': 2,
              'name': 'Geraldine Adkins'
            }
          ]
        },
        {
          'id': 381,
          'guid': '46f3aeab-ad02-4ce9-8ff1-66ce74fb5d7e',
          'isActive': true,
          'balance': '$3,781.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Mccormick Mayer',
          'gender': 'male',
          'company': 'Quizka',
          'email': 'mccormickmayer@quizka.com',
          'phone': '+1 (889) 597-3852',
          'address': {
            'street': 247,
            'city': 'Mooresburg',
            'state': 'Idaho',
            'zip': 3133
          },
          'about': 'Sunt sint ad deserunt quis et elit magna elit commodo magna. Incididunt labore laborum incididunt incididunt eu enim nisi. Minim minim est qui eu officia quis anim non id minim ullamco nostrud exercitation est. Sint deserunt ullamco elit ad proident veniam. Quis eu occaecat elit commodo.\r\n',
          'registered': '2007-10-10T07:13:04+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Blackburn Bridges'
            },
            {
              'id': 1,
              'name': 'Verna Daniels'
            },
            {
              'id': 2,
              'name': 'Dolly Ashley'
            }
          ]
        },
        {
          'id': 382,
          'guid': 'd435a177-2c7b-4eab-8ff0-e2af75b7f192',
          'isActive': false,
          'balance': '$3,665.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Nettie Obrien',
          'gender': 'female',
          'company': 'Ovolo',
          'email': 'nettieobrien@ovolo.com',
          'phone': '+1 (826) 450-3415',
          'address': {
            'street': 753,
            'city': 'Belgreen',
            'state': 'Montana',
            'zip': 1739
          },
          'about': 'Ad nisi Lorem dolor ex amet ea tempor ad labore et ut. Deserunt cupidatat voluptate est ex proident. Magna eu consectetur proident non. Nostrud cupidatat commodo sit fugiat elit minim. Anim consequat officia ut nisi dolore elit aliquip sit ad et reprehenderit tempor ut do.\r\n',
          'registered': '1998-01-31T06:42:07+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Lynette Curry'
            },
            {
              'id': 1,
              'name': 'Rosa Hicks'
            },
            {
              'id': 2,
              'name': 'Bush Reyes'
            }
          ]
        },
        {
          'id': 383,
          'guid': '464827ff-972d-4a53-b6c4-9ce01b09fc17',
          'isActive': false,
          'balance': '$3,640.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Eaton Cantrell',
          'gender': 'male',
          'company': 'Ecosys',
          'email': 'eatoncantrell@ecosys.com',
          'phone': '+1 (956) 558-3640',
          'address': {
            'street': 707,
            'city': 'Wedgewood',
            'state': 'Maryland',
            'zip': 1803
          },
          'about': 'Fugiat consectetur anim dolor deserunt labore voluptate ex sit ad adipisicing. Nostrud duis culpa excepteur tempor veniam velit reprehenderit amet esse nostrud. Fugiat in occaecat consequat magna qui sunt exercitation amet quis duis fugiat laboris. Anim enim ex dolore dolore aute sunt do non mollit incididunt nostrud aliqua aliqua.\r\n',
          'registered': '1994-07-11T12:27:06+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Carver Leblanc'
            },
            {
              'id': 1,
              'name': 'Gallagher Steele'
            },
            {
              'id': 2,
              'name': 'Eddie Tran'
            }
          ]
        },
        {
          'id': 384,
          'guid': '200d6b77-6dae-48b9-84e6-7f2e4a1a3ea7',
          'isActive': true,
          'balance': '$2,031.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Wells Kirk',
          'gender': 'male',
          'company': 'Accufarm',
          'email': 'wellskirk@accufarm.com',
          'phone': '+1 (802) 439-2322',
          'address': {
            'street': 513,
            'city': 'Dragoon',
            'state': 'South Carolina',
            'zip': 8608
          },
          'about': 'Incididunt cupidatat veniam incididunt labore id commodo do do. Excepteur occaecat quis veniam duis cillum qui aliqua labore ut sint. Ad eiusmod nisi nulla dolor tempor eiusmod ut fugiat sint do aute.\r\n',
          'registered': '1995-01-11T18:38:09+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Chen Stuart'
            },
            {
              'id': 1,
              'name': 'Fernandez Cohen'
            },
            {
              'id': 2,
              'name': 'Sosa Jimenez'
            }
          ]
        },
        {
          'id': 385,
          'guid': 'e9813e7f-2ea6-4df0-8a22-d15ec83718ff',
          'isActive': false,
          'balance': '$1,730.00',
          'picture': 'http://placehold.it/32x32',
          'age': 20,
          'name': 'Sharlene Lamb',
          'gender': 'female',
          'company': 'Nixelt',
          'email': 'sharlenelamb@nixelt.com',
          'phone': '+1 (956) 561-3398',
          'address': {
            'street': 974,
            'city': 'Mayfair',
            'state': 'North Carolina',
            'zip': 2318
          },
          'about': 'Dolore non fugiat dolor culpa in. Consectetur pariatur eiusmod fugiat ut ad mollit consequat est tempor consectetur tempor eiusmod nisi ipsum. Anim tempor reprehenderit esse voluptate non duis. Do nulla eiusmod non aute aliqua incididunt consectetur aliqua excepteur eu voluptate eiusmod pariatur. Anim nostrud sit sunt sunt aliquip fugiat nisi laboris minim enim nostrud reprehenderit. Qui do dolor nisi amet fugiat commodo adipisicing enim quis consequat veniam Lorem amet. Pariatur fugiat aliqua proident consectetur ex eu eu culpa adipisicing velit sit ut ad duis.\r\n',
          'registered': '2005-04-18T17:35:27+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Harper Mooney'
            },
            {
              'id': 1,
              'name': 'Whitehead Barry'
            },
            {
              'id': 2,
              'name': 'Rochelle Fischer'
            }
          ]
        },
        {
          'id': 386,
          'guid': '0544708d-0dae-439e-a2b3-a5bcc825cc50',
          'isActive': true,
          'balance': '$1,566.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Lynda Knight',
          'gender': 'female',
          'company': 'Anocha',
          'email': 'lyndaknight@anocha.com',
          'phone': '+1 (839) 579-3800',
          'address': {
            'street': 895,
            'city': 'Canoochee',
            'state': 'Georgia',
            'zip': 9548
          },
          'about': 'Adipisicing enim duis ipsum amet est ea magna qui tempor exercitation deserunt quis. Do duis laborum minim ullamco do eu enim nostrud dolor voluptate consectetur eu aliquip culpa. Reprehenderit non nisi nisi est exercitation eu ipsum Lorem mollit nulla cillum. Veniam deserunt reprehenderit ut mollit tempor aliquip duis ut. Ex do incididunt dolor enim. Fugiat laborum amet deserunt amet anim exercitation est.\r\n',
          'registered': '2013-11-07T10:06:16+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Traci Calhoun'
            },
            {
              'id': 1,
              'name': 'Alice Joyce'
            },
            {
              'id': 2,
              'name': 'Bauer Reid'
            }
          ]
        },
        {
          'id': 387,
          'guid': '059e107e-ef01-408e-87c6-e97ae729222c',
          'isActive': false,
          'balance': '$3,176.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Hardin Good',
          'gender': 'male',
          'company': 'Turnabout',
          'email': 'hardingood@turnabout.com',
          'phone': '+1 (923) 588-2473',
          'address': {
            'street': 166,
            'city': 'Coral',
            'state': 'South Dakota',
            'zip': 2566
          },
          'about': 'Nostrud est fugiat incididunt veniam enim enim magna nulla. Nisi magna eiusmod magna deserunt dolore sit eu. Tempor aute esse cillum nostrud reprehenderit duis enim excepteur qui. Veniam anim et duis et laboris laboris do do sunt esse ipsum. Amet adipisicing esse non veniam voluptate minim exercitation esse ipsum aliquip dolore sunt. Ea dolor dolor culpa deserunt amet magna aliquip ea nostrud mollit fugiat.\r\n',
          'registered': '2002-07-13T20:38:52+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Garrett Mathis'
            },
            {
              'id': 1,
              'name': 'Bonita Mack'
            },
            {
              'id': 2,
              'name': 'Lorrie Case'
            }
          ]
        },
        {
          'id': 388,
          'guid': 'e1e09f72-514a-4e14-acb1-c157153b82ff',
          'isActive': false,
          'balance': '$3,306.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Burns Howell',
          'gender': 'male',
          'company': 'Kage',
          'email': 'burnshowell@kage.com',
          'phone': '+1 (913) 470-3976',
          'address': {
            'street': 483,
            'city': 'Connerton',
            'state': 'Colorado',
            'zip': 2427
          },
          'about': 'Non consequat nisi labore consectetur nostrud nisi. Eu esse et magna incididunt. Exercitation Lorem enim voluptate duis adipisicing commodo anim ut dolor. Irure qui minim nisi labore occaecat. Aliqua voluptate eiusmod voluptate cillum sint magna tempor sunt nostrud ea commodo minim ea.\r\n',
          'registered': '1993-11-09T00:50:59+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Duke Battle'
            },
            {
              'id': 1,
              'name': 'Blanche Hinton'
            },
            {
              'id': 2,
              'name': 'Holly Walls'
            }
          ]
        },
        {
          'id': 389,
          'guid': 'e1f3c272-4f29-41d7-937c-4048a51854d2',
          'isActive': true,
          'balance': '$1,817.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Richard Roberts',
          'gender': 'male',
          'company': 'Zappix',
          'email': 'richardroberts@zappix.com',
          'phone': '+1 (849) 515-2075',
          'address': {
            'street': 493,
            'city': 'Herald',
            'state': 'Virginia',
            'zip': 441
          },
          'about': 'Occaecat sit dolore aliquip nulla veniam ea duis anim labore cillum cupidatat. Eiusmod mollit ut aute ipsum non cupidatat. Qui deserunt ipsum voluptate fugiat do nisi cillum velit esse enim fugiat est. Ex irure veniam ea anim tempor enim ex magna. Culpa voluptate dolore ullamco proident tempor aute fugiat adipisicing mollit. Nostrud do officia consequat dolore ipsum excepteur irure ipsum nulla. Reprehenderit laboris aliqua deserunt aliquip dolore esse laboris consequat culpa.\r\n',
          'registered': '1990-02-15T15:30:36+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Jennifer James'
            },
            {
              'id': 1,
              'name': 'Julie Stevens'
            },
            {
              'id': 2,
              'name': 'Griffith Melendez'
            }
          ]
        },
        {
          'id': 390,
          'guid': '2e6c5f6a-4e13-48f9-867f-201ad575c3a0',
          'isActive': true,
          'balance': '$1,291.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Whitaker Graham',
          'gender': 'male',
          'company': 'Kengen',
          'email': 'whitakergraham@kengen.com',
          'phone': '+1 (955) 454-3746',
          'address': {
            'street': 837,
            'city': 'Venice',
            'state': 'Michigan',
            'zip': 4390
          },
          'about': 'Officia sint est anim qui dolore sunt nostrud dolor sunt nostrud excepteur exercitation anim. Proident amet pariatur occaecat exercitation ad veniam eu. Ad cillum dolor consectetur nostrud do. Commodo et nostrud qui nulla anim cillum do. Qui labore ex est ex excepteur ullamco. Enim laborum sit nisi labore aliquip.\r\n',
          'registered': '2004-06-15T13:24:24+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Ursula Holder'
            },
            {
              'id': 1,
              'name': 'Harrell Carrillo'
            },
            {
              'id': 2,
              'name': 'Sampson Chaney'
            }
          ]
        },
        {
          'id': 391,
          'guid': '22316f09-0395-4946-a417-3eee3cc6ecbb',
          'isActive': false,
          'balance': '$3,872.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Blevins Newton',
          'gender': 'male',
          'company': 'Cytrex',
          'email': 'blevinsnewton@cytrex.com',
          'phone': '+1 (988) 572-2413',
          'address': {
            'street': 311,
            'city': 'Fingerville',
            'state': 'Indiana',
            'zip': 5341
          },
          'about': 'Aute mollit esse nisi veniam. Proident ullamco ipsum eu nostrud veniam duis dolore occaecat aliqua dolore voluptate ipsum anim. Aute dolor ut consectetur ullamco amet dolor anim cupidatat consectetur magna anim.\r\n',
          'registered': '2009-10-19T11:26:31+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Hopper Walker'
            },
            {
              'id': 1,
              'name': 'Boyle Spencer'
            },
            {
              'id': 2,
              'name': 'Janelle Figueroa'
            }
          ]
        },
        {
          'id': 392,
          'guid': '583f5cda-e3a6-46a1-984e-25121907a0ce',
          'isActive': false,
          'balance': '$2,091.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Armstrong Sweeney',
          'gender': 'male',
          'company': 'Skinserve',
          'email': 'armstrongsweeney@skinserve.com',
          'phone': '+1 (964) 587-3995',
          'address': {
            'street': 177,
            'city': 'Robinson',
            'state': 'Georgia',
            'zip': 1995
          },
          'about': 'Dolore et qui ea laborum anim sint fugiat ea nisi culpa elit. Qui laborum culpa fugiat cillum laboris do ipsum non duis amet ad. In ad adipisicing veniam aute cillum. Nulla exercitation sunt minim quis id cupidatat cillum dolore nostrud sint. Irure irure ipsum laborum sit mollit dolore fugiat amet. Enim cupidatat dolor occaecat deserunt eiusmod ad sint eu esse in mollit ullamco. Est ut consectetur anim ex et enim.\r\n',
          'registered': '2008-11-17T02:30:29+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Ines Morrow'
            },
            {
              'id': 1,
              'name': 'Wade Pratt'
            },
            {
              'id': 2,
              'name': 'Rasmussen Robbins'
            }
          ]
        },
        {
          'id': 393,
          'guid': 'c4269a6f-7ddd-4545-b652-8312b62b3fe6',
          'isActive': false,
          'balance': '$3,420.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Fry Guerrero',
          'gender': 'male',
          'company': 'Ronelon',
          'email': 'fryguerrero@ronelon.com',
          'phone': '+1 (941) 456-3863',
          'address': {
            'street': 429,
            'city': 'Boling',
            'state': 'Nebraska',
            'zip': 1154
          },
          'about': 'Adipisicing commodo occaecat et qui. Velit proident ullamco Lorem velit ex enim est culpa. Cupidatat proident non laborum Lorem. Exercitation deserunt aliquip labore ut laborum nulla ullamco ut. Amet ipsum ex do aliqua proident voluptate deserunt eiusmod pariatur ullamco ea laboris tempor. Deserunt minim non qui pariatur.\r\n',
          'registered': '2009-12-04T06:16:24+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Jewell House'
            },
            {
              'id': 1,
              'name': 'Palmer Moss'
            },
            {
              'id': 2,
              'name': 'Vivian Nguyen'
            }
          ]
        },
        {
          'id': 394,
          'guid': '29f23094-78dc-4059-825a-70f70391afa2',
          'isActive': true,
          'balance': '$1,327.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Rochelle Green',
          'gender': 'female',
          'company': 'Cinesanct',
          'email': 'rochellegreen@cinesanct.com',
          'phone': '+1 (832) 492-3613',
          'address': {
            'street': 654,
            'city': 'Chical',
            'state': 'South Carolina',
            'zip': 3171
          },
          'about': 'Ex aliquip consectetur incididunt pariatur reprehenderit tempor ipsum magna. Minim culpa elit culpa sit id enim nostrud sit id aliquip quis occaecat est sint. Labore eu eiusmod incididunt Lorem ut mollit tempor. Occaecat nisi fugiat tempor esse enim aliquip aliqua ullamco ad eu tempor. Elit ipsum non non incididunt voluptate minim adipisicing pariatur duis Lorem occaecat quis.\r\n',
          'registered': '1997-10-22T23:59:44+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Hunter Ayala'
            },
            {
              'id': 1,
              'name': 'Toni Kirk'
            },
            {
              'id': 2,
              'name': 'Cleveland Dennis'
            }
          ]
        },
        {
          'id': 395,
          'guid': 'f79ebb04-b152-4eb4-b5d5-9e391f896145',
          'isActive': false,
          'balance': '$1,030.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Terrell Maynard',
          'gender': 'male',
          'company': 'Coash',
          'email': 'terrellmaynard@coash.com',
          'phone': '+1 (923) 412-2580',
          'address': {
            'street': 434,
            'city': 'Durham',
            'state': 'Vermont',
            'zip': 2184
          },
          'about': 'Aliquip anim est elit irure adipisicing culpa pariatur quis labore adipisicing nostrud proident qui. Ut ullamco fugiat pariatur deserunt amet proident id reprehenderit. Laborum tempor culpa pariatur officia ad sint velit deserunt officia deserunt ex ipsum officia. Elit officia reprehenderit duis consectetur eu officia id eu culpa nostrud magna. Sint ipsum ullamco duis velit.\r\n',
          'registered': '2006-10-08T08:45:54+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Lawrence Daniels'
            },
            {
              'id': 1,
              'name': 'Manning Walker'
            },
            {
              'id': 2,
              'name': 'Annie Soto'
            }
          ]
        },
        {
          'id': 396,
          'guid': '79b3c408-a7ab-4211-b7df-bf227183286e',
          'isActive': true,
          'balance': '$1,455.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Barr Walls',
          'gender': 'male',
          'company': 'Zensus',
          'email': 'barrwalls@zensus.com',
          'phone': '+1 (820) 435-3575',
          'address': {
            'street': 566,
            'city': 'Whitewater',
            'state': 'Idaho',
            'zip': 1863
          },
          'about': 'Qui fugiat elit qui cillum tempor duis in magna exercitation. Aliquip nisi Lorem esse cupidatat sit fugiat et aliqua velit et nulla. Excepteur ut nulla pariatur in proident irure Lorem Lorem. Pariatur sint tempor cillum sunt ea eiusmod anim laboris quis ullamco labore officia incididunt labore. Enim cupidatat adipisicing sunt sint commodo non. Et nostrud est anim exercitation incididunt. Non nostrud quis laborum culpa non nostrud qui duis elit ullamco fugiat ex.\r\n',
          'registered': '2013-09-06T09:21:36+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Willis Allen'
            },
            {
              'id': 1,
              'name': 'Lloyd Knowles'
            },
            {
              'id': 2,
              'name': 'Cathleen Weber'
            }
          ]
        },
        {
          'id': 397,
          'guid': '75dc0b8e-c1e5-4173-aa7b-8a3db6283e57',
          'isActive': true,
          'balance': '$1,458.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Miranda Glass',
          'gender': 'female',
          'company': 'Rockyard',
          'email': 'mirandaglass@rockyard.com',
          'phone': '+1 (982) 401-2227',
          'address': {
            'street': 612,
            'city': 'Joes',
            'state': 'Oregon',
            'zip': 7524
          },
          'about': 'Nisi labore deserunt magna velit amet Lorem. Occaecat duis consectetur aliqua veniam. Nisi excepteur labore nostrud esse consectetur excepteur ipsum deserunt Lorem sit. Voluptate consequat irure in veniam pariatur est voluptate officia ad enim ullamco. Ex consectetur et do ipsum consectetur quis ea cillum. Ullamco sit consequat ut nulla laboris anim.\r\n',
          'registered': '1997-08-28T14:26:23+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Christine Hinton'
            },
            {
              'id': 1,
              'name': 'Rhodes Alston'
            },
            {
              'id': 2,
              'name': 'Carmen Mcdowell'
            }
          ]
        },
        {
          'id': 398,
          'guid': '240db31d-a47e-4334-b900-fa4b4eec0076',
          'isActive': true,
          'balance': '$3,445.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Justine Mcfadden',
          'gender': 'female',
          'company': 'Quadeebo',
          'email': 'justinemcfadden@quadeebo.com',
          'phone': '+1 (973) 551-2651',
          'address': {
            'street': 888,
            'city': 'Helen',
            'state': 'Virginia',
            'zip': 9033
          },
          'about': 'Eu ullamco laborum sunt culpa consequat dolor sit veniam. Laborum cupidatat magna occaecat labore quis sunt ipsum consectetur. Officia ipsum amet irure deserunt cillum exercitation sint nisi dolor. Proident ut minim reprehenderit mollit.\r\n',
          'registered': '2011-09-04T22:40:41+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Elisa Sanchez'
            },
            {
              'id': 1,
              'name': 'Florence Peck'
            },
            {
              'id': 2,
              'name': 'Mona Avery'
            }
          ]
        },
        {
          'id': 399,
          'guid': '1a0afc49-8fe4-4102-b924-a3115ceee67d',
          'isActive': true,
          'balance': '$1,182.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Eliza Avila',
          'gender': 'female',
          'company': 'Cablam',
          'email': 'elizaavila@cablam.com',
          'phone': '+1 (867) 427-2739',
          'address': {
            'street': 470,
            'city': 'Glenville',
            'state': 'Kentucky',
            'zip': 7538
          },
          'about': 'Lorem fugiat exercitation id nulla veniam commodo eu id cupidatat cupidatat labore reprehenderit. Occaecat officia irure nisi irure anim irure Lorem pariatur anim magna. Sit non exercitation deserunt commodo ipsum labore velit commodo exercitation sint officia excepteur nisi qui. Incididunt ad sit veniam Lorem est exercitation.\r\n',
          'registered': '2010-03-25T01:45:37+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Christa Hines'
            },
            {
              'id': 1,
              'name': 'Diane Barrera'
            },
            {
              'id': 2,
              'name': 'Harris Gallegos'
            }
          ]
        },
        {
          'id': 400,
          'guid': '916568fc-9bf9-45b5-989e-ebc512c040af',
          'isActive': false,
          'balance': '$2,639.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Ashley Wheeler',
          'gender': 'female',
          'company': 'Enormo',
          'email': 'ashleywheeler@enormo.com',
          'phone': '+1 (951) 535-3118',
          'address': {
            'street': 207,
            'city': 'Alderpoint',
            'state': 'Illinois',
            'zip': 2708
          },
          'about': 'Excepteur consectetur ipsum dolor do aliqua. Ullamco voluptate laboris laborum et quis. Veniam ullamco aliquip cupidatat sunt nulla nulla veniam consectetur aliqua minim occaecat eu. Ullamco do cupidatat sunt mollit voluptate voluptate.\r\n',
          'registered': '2005-04-05T19:34:40+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Maude Terrell'
            },
            {
              'id': 1,
              'name': 'Laurie Cain'
            },
            {
              'id': 2,
              'name': 'Sutton Banks'
            }
          ]
        },
        {
          'id': 401,
          'guid': '7065addc-0e35-4beb-a0d3-811ec331e04f',
          'isActive': false,
          'balance': '$2,326.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Alicia Chavez',
          'gender': 'female',
          'company': 'Stelaecor',
          'email': 'aliciachavez@stelaecor.com',
          'phone': '+1 (973) 519-3035',
          'address': {
            'street': 267,
            'city': 'Titanic',
            'state': 'Pennsylvania',
            'zip': 2292
          },
          'about': 'Sint cupidatat proident anim duis nulla aute aute quis aliqua commodo. Velit aute id consequat esse eu. Consectetur nostrud nulla exercitation mollit. Irure duis ad ullamco nulla fugiat nulla commodo. Veniam irure est in ex ut excepteur qui nisi proident quis est sit veniam laborum. Ea sit culpa do ullamco consequat mollit. Proident exercitation cupidatat tempor incididunt labore ut dolore dolore ut in tempor esse.\r\n',
          'registered': '2005-10-02T08:06:05+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Oneill Dean'
            },
            {
              'id': 1,
              'name': 'Mullins Case'
            },
            {
              'id': 2,
              'name': 'Smith Kirkland'
            }
          ]
        },
        {
          'id': 402,
          'guid': 'a8b0cfcd-f44c-464f-aeea-b8b2ec357dd1',
          'isActive': false,
          'balance': '$1,297.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Tiffany Hutchinson',
          'gender': 'female',
          'company': 'Pharmacon',
          'email': 'tiffanyhutchinson@pharmacon.com',
          'phone': '+1 (971) 600-3477',
          'address': {
            'street': 681,
            'city': 'Ruffin',
            'state': 'Washington',
            'zip': 5468
          },
          'about': 'Eu aliquip veniam sit laborum tempor adipisicing esse aliqua consequat reprehenderit voluptate qui anim labore. Laboris exercitation minim anim officia aliqua laboris amet voluptate irure duis nisi elit Lorem. Nostrud amet duis eiusmod veniam proident ullamco. Aliquip ullamco amet ut elit aliquip nostrud incididunt nulla qui.\r\n',
          'registered': '2013-12-24T09:31:45+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Georgette Maxwell'
            },
            {
              'id': 1,
              'name': 'Bowen Giles'
            },
            {
              'id': 2,
              'name': 'Klein Vincent'
            }
          ]
        },
        {
          'id': 403,
          'guid': 'bcd36ba2-e3df-4a14-a5f3-391d207ec09c',
          'isActive': false,
          'balance': '$2,319.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Rachel Hogan',
          'gender': 'female',
          'company': 'Coriander',
          'email': 'rachelhogan@coriander.com',
          'phone': '+1 (945) 545-2620',
          'address': {
            'street': 120,
            'city': 'Evergreen',
            'state': 'Minnesota',
            'zip': 635
          },
          'about': 'Duis sunt pariatur enim enim veniam adipisicing dolor laborum do nulla irure aliqua. Minim excepteur excepteur aliqua id mollit occaecat cillum mollit veniam proident fugiat qui labore. Tempor deserunt ut do in aliqua dolor ipsum.\r\n',
          'registered': '2006-08-12T09:19:58+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Aisha Ramos'
            },
            {
              'id': 1,
              'name': 'Tate Holcomb'
            },
            {
              'id': 2,
              'name': 'Stefanie Moon'
            }
          ]
        },
        {
          'id': 404,
          'guid': 'ee0d498a-0466-4e1d-b841-26d999e1710a',
          'isActive': false,
          'balance': '$2,827.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Jami Weeks',
          'gender': 'female',
          'company': 'Pasturia',
          'email': 'jamiweeks@pasturia.com',
          'phone': '+1 (936) 600-3377',
          'address': {
            'street': 422,
            'city': 'Vernon',
            'state': 'Alaska',
            'zip': 5165
          },
          'about': 'Ut sint amet reprehenderit est officia in quis consequat commodo consequat do esse. Ex minim esse aliquip cupidatat deserunt adipisicing eu laboris nostrud. Enim anim sint dolore quis laboris occaecat mollit enim aute magna ipsum. Voluptate do cillum dolore eu elit nostrud enim labore. Occaecat aute veniam ullamco excepteur adipisicing consequat non ut dolore dolore veniam aliqua labore labore. Incididunt velit amet cupidatat ex anim aute cupidatat ad ad esse.\r\n',
          'registered': '1990-07-30T14:36:47+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Nancy Crane'
            },
            {
              'id': 1,
              'name': 'Francesca Mcclain'
            },
            {
              'id': 2,
              'name': 'Goodwin Nolan'
            }
          ]
        },
        {
          'id': 405,
          'guid': 'be6d469c-5ff0-499d-83d4-b8762719e1c1',
          'isActive': false,
          'balance': '$1,373.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Ava Rosa',
          'gender': 'female',
          'company': 'Acium',
          'email': 'avarosa@acium.com',
          'phone': '+1 (976) 595-3474',
          'address': {
            'street': 342,
            'city': 'Haring',
            'state': 'Indiana',
            'zip': 1620
          },
          'about': 'Ad minim aute aliqua laborum aliquip cupidatat incididunt reprehenderit aliquip dolore exercitation cupidatat occaecat. In ut mollit incididunt commodo ipsum fugiat est sit ipsum laborum irure quis et. Veniam occaecat commodo mollit labore consectetur ad tempor reprehenderit aute. Duis consequat et ex deserunt Lorem quis. Proident minim ad voluptate eu elit fugiat ex excepteur. Ipsum mollit deserunt officia magna cillum consequat tempor magna id duis labore.\r\n',
          'registered': '1994-07-15T21:46:14+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Jacqueline Kirby'
            },
            {
              'id': 1,
              'name': 'Horne Marshall'
            },
            {
              'id': 2,
              'name': 'Jeri Mclaughlin'
            }
          ]
        },
        {
          'id': 406,
          'guid': '3a0c9cbd-3113-4665-b755-273d1a91809c',
          'isActive': false,
          'balance': '$1,977.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Hudson Carter',
          'gender': 'male',
          'company': 'Conferia',
          'email': 'hudsoncarter@conferia.com',
          'phone': '+1 (938) 525-3606',
          'address': {
            'street': 242,
            'city': 'Maxville',
            'state': 'Alabama',
            'zip': 1161
          },
          'about': 'Dolor dolore voluptate voluptate excepteur velit aliqua ipsum. Non in excepteur exercitation anim velit Lorem mollit enim sint sunt aute minim et dolor. Duis consequat ullamco et officia proident dolore culpa. Do consectetur qui quis aliqua sint id veniam culpa cupidatat enim dolor laborum aliqua pariatur.\r\n',
          'registered': '1993-12-12T19:25:35+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Misty Hester'
            },
            {
              'id': 1,
              'name': 'Hubbard George'
            },
            {
              'id': 2,
              'name': 'Hicks Smith'
            }
          ]
        },
        {
          'id': 407,
          'guid': 'bf63259f-f434-496e-84af-89b7c1a59b96',
          'isActive': false,
          'balance': '$1,464.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Peggy Hodges',
          'gender': 'female',
          'company': 'Zilch',
          'email': 'peggyhodges@zilch.com',
          'phone': '+1 (848) 451-3831',
          'address': {
            'street': 863,
            'city': 'Whipholt',
            'state': 'North Dakota',
            'zip': 3221
          },
          'about': 'Voluptate consequat consequat laboris tempor irure. Aute qui nulla elit laborum deserunt pariatur. Adipisicing velit mollit deserunt sit eu. Pariatur cillum sint pariatur mollit tempor quis id quis proident sunt est in.\r\n',
          'registered': '2004-05-02T15:55:46+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Welch Zamora'
            },
            {
              'id': 1,
              'name': 'Barber Walter'
            },
            {
              'id': 2,
              'name': 'Tasha Mcbride'
            }
          ]
        },
        {
          'id': 408,
          'guid': '0d438f8e-1c75-45d2-be03-987d197fd897',
          'isActive': false,
          'balance': '$3,210.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Chen Stout',
          'gender': 'male',
          'company': 'Ezentia',
          'email': 'chenstout@ezentia.com',
          'phone': '+1 (897) 435-3773',
          'address': {
            'street': 258,
            'city': 'Cleary',
            'state': 'California',
            'zip': 5228
          },
          'about': 'Est ullamco laborum reprehenderit cillum amet ex tempor. Duis ut laborum veniam officia voluptate. Fugiat consectetur aliqua quis aliquip. Quis amet quis dolore Lorem deserunt quis ullamco mollit minim cillum mollit proident nulla et. Irure amet enim exercitation excepteur nostrud eu voluptate non irure aliquip sint. Quis ullamco enim consectetur aute labore consectetur dolor dolore nisi amet sunt. Ullamco officia culpa eu consectetur sunt aute ex sint anim tempor qui exercitation eiusmod.\r\n',
          'registered': '2005-10-04T12:24:43+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Adele Clemons'
            },
            {
              'id': 1,
              'name': 'Mallory Johnson'
            },
            {
              'id': 2,
              'name': 'Moss Moran'
            }
          ]
        },
        {
          'id': 409,
          'guid': '7b6c7c28-d7c8-42e5-97a9-14f1fe337d98',
          'isActive': false,
          'balance': '$3,706.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Juarez Rodriquez',
          'gender': 'male',
          'company': 'Zaggles',
          'email': 'juarezrodriquez@zaggles.com',
          'phone': '+1 (861) 502-2931',
          'address': {
            'street': 722,
            'city': 'Marienthal',
            'state': 'New Jersey',
            'zip': 9410
          },
          'about': 'Mollit sunt anim ex ea ea aute amet ullamco eu. Irure veniam pariatur consequat dolore nulla qui irure pariatur aliqua. Nulla deserunt sint et in cupidatat ea nulla sunt in magna. Sit mollit do ad minim fugiat reprehenderit proident. Pariatur adipisicing fugiat veniam dolor anim incididunt laboris ut amet deserunt ut. Lorem magna mollit ea aute irure dolore Lorem est do mollit. Ut nostrud qui ex enim esse eiusmod.\r\n',
          'registered': '1990-07-20T08:32:22+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Helga Brown'
            },
            {
              'id': 1,
              'name': 'Graves Tyler'
            },
            {
              'id': 2,
              'name': 'Best Cooper'
            }
          ]
        },
        {
          'id': 410,
          'guid': 'dc0b5e2e-85a0-4e21-a08f-c1011c5d1b82',
          'isActive': false,
          'balance': '$1,642.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Addie Fuller',
          'gender': 'female',
          'company': 'Zaphire',
          'email': 'addiefuller@zaphire.com',
          'phone': '+1 (944) 532-2256',
          'address': {
            'street': 540,
            'city': 'Ryderwood',
            'state': 'Michigan',
            'zip': 3914
          },
          'about': 'Amet dolore proident pariatur ea labore incididunt sunt laboris. Duis est dolor laboris nostrud velit. Nulla irure excepteur consectetur aliquip consequat. Eiusmod dolor et elit voluptate duis.\r\n',
          'registered': '2012-06-24T00:59:19+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Russo Bruce'
            },
            {
              'id': 1,
              'name': 'Nettie Porter'
            },
            {
              'id': 2,
              'name': 'Valerie Mcintyre'
            }
          ]
        },
        {
          'id': 411,
          'guid': 'f469138e-f17a-4624-bd73-d9aaa54fea80',
          'isActive': true,
          'balance': '$3,787.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Osborn Grant',
          'gender': 'male',
          'company': 'Harmoney',
          'email': 'osborngrant@harmoney.com',
          'phone': '+1 (992) 402-3556',
          'address': {
            'street': 492,
            'city': 'Emerald',
            'state': 'Hawaii',
            'zip': 9488
          },
          'about': 'Quis cillum sunt commodo commodo ullamco. Ut cupidatat nostrud sit quis. Voluptate mollit ex voluptate eu excepteur voluptate cillum. Reprehenderit amet non est ipsum. Enim qui culpa irure culpa excepteur ad ea exercitation. Velit voluptate ea sint mollit est enim quis tempor nulla.\r\n',
          'registered': '1989-09-01T10:33:52+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Ora Compton'
            },
            {
              'id': 1,
              'name': 'Jordan Rivera'
            },
            {
              'id': 2,
              'name': 'Kristie Dickerson'
            }
          ]
        },
        {
          'id': 412,
          'guid': '2dbe8feb-7208-47a6-afb6-d19a27e01e2f',
          'isActive': false,
          'balance': '$3,944.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Hancock Ballard',
          'gender': 'male',
          'company': 'Flexigen',
          'email': 'hancockballard@flexigen.com',
          'phone': '+1 (806) 517-3354',
          'address': {
            'street': 881,
            'city': 'Duryea',
            'state': 'Missouri',
            'zip': 6615
          },
          'about': 'Culpa aliqua laborum deserunt laboris Lorem aliqua consequat do et do cillum dolor incididunt est. Elit velit occaecat nostrud ex voluptate nulla ut cillum do labore amet. Sint ipsum adipisicing sunt ut adipisicing sint aute nulla consectetur magna officia esse minim. Sit qui pariatur id proident sint officia proident irure exercitation. Proident do commodo nisi proident mollit culpa aliquip cupidatat Lorem ex. Cillum cupidatat occaecat sit veniam qui proident commodo velit proident cupidatat. Id laboris irure in cupidatat et proident et elit mollit voluptate.\r\n',
          'registered': '2010-01-07T17:17:09+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Dana Kim'
            },
            {
              'id': 1,
              'name': 'Hatfield Larsen'
            },
            {
              'id': 2,
              'name': 'Cara Gill'
            }
          ]
        },
        {
          'id': 413,
          'guid': '3ac2e889-55c5-4aa3-b78d-107e7c6aa0c1',
          'isActive': false,
          'balance': '$1,152.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Angel Bauer',
          'gender': 'female',
          'company': 'Rodemco',
          'email': 'angelbauer@rodemco.com',
          'phone': '+1 (890) 406-2360',
          'address': {
            'street': 970,
            'city': 'Templeton',
            'state': 'Wyoming',
            'zip': 8494
          },
          'about': 'Est tempor cupidatat est ea laborum excepteur deserunt cillum anim. Culpa laboris occaecat pariatur laboris deserunt nisi. Sunt do esse consequat amet eu velit aliqua nulla pariatur ex ex irure qui. Labore reprehenderit laborum nisi ipsum pariatur ea non aute. Sint qui ipsum veniam officia do veniam et qui amet minim magna mollit magna.\r\n',
          'registered': '1998-05-19T05:36:48+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Araceli Whitley'
            },
            {
              'id': 1,
              'name': 'Vargas Rojas'
            },
            {
              'id': 2,
              'name': 'Watkins Brennan'
            }
          ]
        },
        {
          'id': 414,
          'guid': '5d972a11-21ee-4425-8786-03f5c5f77804',
          'isActive': false,
          'balance': '$2,077.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Lorena Herrera',
          'gender': 'female',
          'company': 'Katakana',
          'email': 'lorenaherrera@katakana.com',
          'phone': '+1 (898) 422-2223',
          'address': {
            'street': 853,
            'city': 'Chilton',
            'state': 'South Dakota',
            'zip': 1029
          },
          'about': 'Ea ipsum amet laborum magna dolore est ipsum consectetur voluptate quis enim esse occaecat. Cillum pariatur reprehenderit quis qui culpa. Amet cillum duis duis irure proident esse mollit anim magna proident voluptate culpa cupidatat. Laboris pariatur veniam tempor consequat cillum sit consequat veniam exercitation fugiat eu reprehenderit ex cupidatat. Consequat ut culpa ut voluptate Lorem et est dolore cupidatat elit ipsum occaecat. Ad non labore Lorem occaecat veniam aute do aliqua ad do commodo pariatur. Nostrud sint consectetur commodo cillum.\r\n',
          'registered': '1997-12-23T16:01:46+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Jacklyn Byers'
            },
            {
              'id': 1,
              'name': 'Thornton Robinson'
            },
            {
              'id': 2,
              'name': 'Oliver Holman'
            }
          ]
        },
        {
          'id': 415,
          'guid': '37537d17-c15a-4d71-be45-104ac05db02a',
          'isActive': true,
          'balance': '$2,479.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Concetta Oneal',
          'gender': 'female',
          'company': 'Jimbies',
          'email': 'concettaoneal@jimbies.com',
          'phone': '+1 (884) 418-2374',
          'address': {
            'street': 715,
            'city': 'Hebron',
            'state': 'Maryland',
            'zip': 2996
          },
          'about': 'Veniam proident ea consectetur esse consectetur veniam incididunt aliquip aliquip cupidatat. Elit reprehenderit Lorem aute eiusmod labore occaecat ad. Reprehenderit exercitation reprehenderit culpa esse culpa. Sit deserunt deserunt incididunt irure proident ut nostrud.\r\n',
          'registered': '2000-02-26T13:52:51+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Claudette Chase'
            },
            {
              'id': 1,
              'name': 'Sawyer Mcgowan'
            },
            {
              'id': 2,
              'name': 'Katheryn Blackwell'
            }
          ]
        },
        {
          'id': 416,
          'guid': '262a4a1b-4fce-4e7b-96dc-853e884f0438',
          'isActive': false,
          'balance': '$3,392.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Clements Mercer',
          'gender': 'male',
          'company': 'Exodoc',
          'email': 'clementsmercer@exodoc.com',
          'phone': '+1 (850) 402-2064',
          'address': {
            'street': 659,
            'city': 'Tivoli',
            'state': 'Iowa',
            'zip': 9489
          },
          'about': 'Non ullamco veniam labore excepteur exercitation. Commodo officia velit amet qui aliqua magna consequat elit dolor esse non dolore labore veniam. Ut fugiat mollit consectetur non nulla. Consequat sunt commodo cupidatat enim anim ea labore sunt. Elit exercitation ullamco dolore cillum aliquip aliqua. Veniam minim magna officia eu proident.\r\n',
          'registered': '2002-08-28T12:28:15+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Glenn Carney'
            },
            {
              'id': 1,
              'name': 'Graciela Sargent'
            },
            {
              'id': 2,
              'name': 'Suarez Taylor'
            }
          ]
        },
        {
          'id': 417,
          'guid': '19451b8d-fbc8-415b-8741-11bf4c2ed01b',
          'isActive': false,
          'balance': '$3,015.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Tammie Maldonado',
          'gender': 'female',
          'company': 'Zizzle',
          'email': 'tammiemaldonado@zizzle.com',
          'phone': '+1 (874) 574-2562',
          'address': {
            'street': 889,
            'city': 'Sanders',
            'state': 'West Virginia',
            'zip': 1375
          },
          'about': 'Deserunt incididunt sunt in quis dolore Lorem pariatur occaecat anim consectetur. Sunt aliquip nisi sint excepteur commodo. Minim ex ullamco incididunt qui ea elit occaecat eu.\r\n',
          'registered': '1994-11-19T04:07:20+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Ernestine Buck'
            },
            {
              'id': 1,
              'name': 'Mcknight Gibbs'
            },
            {
              'id': 2,
              'name': 'Jeannie Ortega'
            }
          ]
        },
        {
          'id': 418,
          'guid': '5af35cd4-32bf-4ac0-b0cd-b0945ef5130c',
          'isActive': false,
          'balance': '$3,772.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Mcdonald Olson',
          'gender': 'male',
          'company': 'Quarx',
          'email': 'mcdonaldolson@quarx.com',
          'phone': '+1 (928) 557-3710',
          'address': {
            'street': 914,
            'city': 'Benson',
            'state': 'Nevada',
            'zip': 8782
          },
          'about': 'Amet cillum deserunt aute exercitation labore officia elit elit voluptate laborum fugiat in. Aute non aliquip tempor in proident sit dolore laboris nostrud fugiat. Duis irure sint esse tempor ex eiusmod aute ea laboris sit ipsum cupidatat labore velit. Labore culpa duis nulla excepteur officia qui eiusmod ullamco proident dolor.\r\n',
          'registered': '2004-06-18T03:49:03+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Ann Flynn'
            },
            {
              'id': 1,
              'name': 'Bradford Robertson'
            },
            {
              'id': 2,
              'name': 'Alyson Finch'
            }
          ]
        },
        {
          'id': 419,
          'guid': 'd0c02dca-1943-4575-aafe-ff79e37d774a',
          'isActive': false,
          'balance': '$3,473.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Lynne Griffin',
          'gender': 'female',
          'company': 'Exostream',
          'email': 'lynnegriffin@exostream.com',
          'phone': '+1 (887) 490-3581',
          'address': {
            'street': 588,
            'city': 'Lupton',
            'state': 'Ohio',
            'zip': 6493
          },
          'about': 'Consectetur aliquip ex ex ex ipsum labore elit. Ut eu esse cillum enim esse enim laborum enim consectetur ad fugiat consectetur. Ea esse anim cillum consectetur velit id aliqua consequat veniam do non incididunt quis amet.\r\n',
          'registered': '2007-07-20T13:25:03+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Booth Velazquez'
            },
            {
              'id': 1,
              'name': 'Phillips Chaney'
            },
            {
              'id': 2,
              'name': 'Moreno Burton'
            }
          ]
        },
        {
          'id': 420,
          'guid': '5593973a-e608-47c7-ab27-5eea0329f576',
          'isActive': false,
          'balance': '$2,093.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Gentry Dickson',
          'gender': 'male',
          'company': 'Emoltra',
          'email': 'gentrydickson@emoltra.com',
          'phone': '+1 (977) 500-2737',
          'address': {
            'street': 141,
            'city': 'Biehle',
            'state': 'Texas',
            'zip': 5361
          },
          'about': 'Deserunt reprehenderit proident esse exercitation consectetur dolore sint laboris nostrud officia minim consequat consectetur irure. Eu occaecat do ex minim ad. Officia adipisicing magna cillum magna. Est aute non laboris sit dolor ad culpa ipsum nisi eu non do excepteur elit.\r\n',
          'registered': '2002-10-06T16:55:25+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Lakisha Snow'
            },
            {
              'id': 1,
              'name': 'Glenda Petty'
            },
            {
              'id': 2,
              'name': 'Kendra Diaz'
            }
          ]
        },
        {
          'id': 421,
          'guid': 'e2d4bb55-6d70-446d-b27b-ff3ab601f119',
          'isActive': true,
          'balance': '$3,576.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Duke Fowler',
          'gender': 'male',
          'company': 'Konnect',
          'email': 'dukefowler@konnect.com',
          'phone': '+1 (974) 449-2378',
          'address': {
            'street': 596,
            'city': 'Draper',
            'state': 'Rhode Island',
            'zip': 820
          },
          'about': 'Commodo esse deserunt duis id elit id est commodo dolor nostrud. Cupidatat excepteur irure ea ea ipsum pariatur Lorem tempor tempor esse eu in reprehenderit. Sunt incididunt nulla est enim duis eu excepteur.\r\n',
          'registered': '1993-06-24T16:58:20+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mills Wallace'
            },
            {
              'id': 1,
              'name': 'Houston Pacheco'
            },
            {
              'id': 2,
              'name': 'Rachelle Castillo'
            }
          ]
        },
        {
          'id': 422,
          'guid': '01d850ea-4182-4ef5-a86c-b03ae185ed69',
          'isActive': true,
          'balance': '$1,149.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Anna Potts',
          'gender': 'female',
          'company': 'Keengen',
          'email': 'annapotts@keengen.com',
          'phone': '+1 (960) 445-3163',
          'address': {
            'street': 711,
            'city': 'Enetai',
            'state': 'Kansas',
            'zip': 5243
          },
          'about': 'Eiusmod anim anim eu occaecat. Adipisicing sunt nulla ex commodo voluptate consectetur aliqua duis aliquip Lorem quis velit. Nulla ut tempor velit aliquip exercitation ea incididunt consequat veniam consectetur irure occaecat nulla. Veniam ullamco sit elit quis exercitation. Magna ex eiusmod do qui dolor occaecat minim laborum esse dolore aliqua eu voluptate. Et commodo nostrud velit culpa duis ad. Incididunt officia magna quis est ad cupidatat proident occaecat.\r\n',
          'registered': '1998-07-08T06:45:56+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Allison Preston'
            },
            {
              'id': 1,
              'name': 'Amber Cline'
            },
            {
              'id': 2,
              'name': 'Olsen Leach'
            }
          ]
        },
        {
          'id': 423,
          'guid': '55133bfd-5909-43e0-af34-289024e5ca66',
          'isActive': true,
          'balance': '$1,015.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Veronica Alford',
          'gender': 'female',
          'company': 'Netbook',
          'email': 'veronicaalford@netbook.com',
          'phone': '+1 (892) 547-2004',
          'address': {
            'street': 795,
            'city': 'Bartley',
            'state': 'Louisiana',
            'zip': 6529
          },
          'about': 'Id id amet ex aliquip nostrud tempor. Nulla ut incididunt et magna id. Aliqua minim consectetur duis duis veniam elit non adipisicing cillum ipsum sit esse id.\r\n',
          'registered': '2011-06-20T09:23:02+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Kim Lopez'
            },
            {
              'id': 1,
              'name': 'Shelia Owen'
            },
            {
              'id': 2,
              'name': 'Sykes Doyle'
            }
          ]
        },
        {
          'id': 424,
          'guid': 'eb3e8991-3701-49ff-ad95-6bbec519e1b3',
          'isActive': false,
          'balance': '$3,515.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Gail Simmons',
          'gender': 'female',
          'company': 'Uplinx',
          'email': 'gailsimmons@uplinx.com',
          'phone': '+1 (815) 432-2986',
          'address': {
            'street': 176,
            'city': 'Ezel',
            'state': 'Montana',
            'zip': 4705
          },
          'about': 'Cupidatat ea laborum reprehenderit exercitation duis quis ex qui reprehenderit laborum aliquip enim nulla ex. Magna laboris labore occaecat sit anim nostrud culpa culpa. Aliqua in et officia dolor anim proident nisi proident esse enim dolor nulla elit. Reprehenderit cupidatat duis elit dolor commodo tempor ipsum reprehenderit. Quis non culpa officia excepteur reprehenderit magna magna veniam eiusmod consectetur veniam consequat exercitation eiusmod. Proident veniam enim commodo enim ipsum veniam ex adipisicing laborum irure minim quis in.\r\n',
          'registered': '2008-06-30T13:37:25+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Phyllis Mccarty'
            },
            {
              'id': 1,
              'name': 'Morgan Cherry'
            },
            {
              'id': 2,
              'name': 'Horn Savage'
            }
          ]
        },
        {
          'id': 425,
          'guid': '3f94a290-2ab1-4d22-aa5a-ffe5610ab190',
          'isActive': true,
          'balance': '$1,603.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Martha Copeland',
          'gender': 'female',
          'company': 'Earthplex',
          'email': 'marthacopeland@earthplex.com',
          'phone': '+1 (996) 548-2153',
          'address': {
            'street': 892,
            'city': 'Abrams',
            'state': 'Utah',
            'zip': 6631
          },
          'about': 'Quis velit nisi ut commodo cillum adipisicing ea minim officia. Cillum labore occaecat laborum nulla. In mollit excepteur dolore consectetur amet sunt minim. Aliquip consequat eu nulla sint fugiat est occaecat in adipisicing sint. Amet non nostrud qui minim dolor. Tempor labore laboris laboris id voluptate tempor. Deserunt nulla id dolore deserunt cillum laboris.\r\n',
          'registered': '2009-05-31T15:24:33+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Rowland Bailey'
            },
            {
              'id': 1,
              'name': 'Mclean May'
            },
            {
              'id': 2,
              'name': 'Marguerite Holland'
            }
          ]
        },
        {
          'id': 426,
          'guid': '0eae8bb5-d94b-40a2-91d1-85d2df68efe3',
          'isActive': false,
          'balance': '$1,895.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Witt Rios',
          'gender': 'male',
          'company': 'Eschoir',
          'email': 'wittrios@eschoir.com',
          'phone': '+1 (968) 580-2559',
          'address': {
            'street': 609,
            'city': 'Ballico',
            'state': 'New York',
            'zip': 5533
          },
          'about': 'Sunt ipsum do anim et exercitation ullamco ea occaecat exercitation magna. Duis Lorem ex cillum exercitation mollit est sint tempor anim pariatur. Dolore officia incididunt sunt cillum ullamco cillum officia exercitation nulla exercitation ut. Do aliquip deserunt sint reprehenderit ad qui exercitation excepteur reprehenderit. Pariatur labore esse Lorem aliqua amet eiusmod voluptate excepteur aute cillum. Dolor consequat dolor ad nostrud incididunt laborum.\r\n',
          'registered': '2007-04-26T00:47:49+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Marcie Boyle'
            },
            {
              'id': 1,
              'name': 'Tillman Phillips'
            },
            {
              'id': 2,
              'name': 'Sullivan Hebert'
            }
          ]
        },
        {
          'id': 427,
          'guid': '353c0425-ae55-493e-97b7-42409f239cd4',
          'isActive': true,
          'balance': '$3,996.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Tammy Manning',
          'gender': 'female',
          'company': 'Kraggle',
          'email': 'tammymanning@kraggle.com',
          'phone': '+1 (826) 506-2586',
          'address': {
            'street': 825,
            'city': 'Matthews',
            'state': 'Oklahoma',
            'zip': 5096
          },
          'about': 'Id ipsum reprehenderit reprehenderit duis cupidatat officia tempor. Mollit incididunt proident ex ut anim ipsum id aliquip officia excepteur labore. Velit enim est cillum magna excepteur.\r\n',
          'registered': '1995-10-31T13:06:18+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Ward Huber'
            },
            {
              'id': 1,
              'name': 'Becker Mayo'
            },
            {
              'id': 2,
              'name': 'Langley Clarke'
            }
          ]
        },
        {
          'id': 428,
          'guid': '0a1549b3-524c-4ab4-bd78-098865639a4a',
          'isActive': false,
          'balance': '$3,227.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Mable Spence',
          'gender': 'female',
          'company': 'Biospan',
          'email': 'mablespence@biospan.com',
          'phone': '+1 (992) 598-3588',
          'address': {
            'street': 819,
            'city': 'Libertytown',
            'state': 'Arkansas',
            'zip': 6810
          },
          'about': 'Commodo amet consectetur consequat ullamco eu velit deserunt amet. Veniam duis nulla eiusmod sit ex proident mollit irure velit duis. Amet duis cillum aliqua consequat veniam minim eiusmod veniam ipsum eu incididunt proident irure. Do in reprehenderit do ex consequat velit id eiusmod consectetur irure magna.\r\n',
          'registered': '2003-11-07T09:57:35+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Elvia Prince'
            },
            {
              'id': 1,
              'name': 'Rosalinda West'
            },
            {
              'id': 2,
              'name': 'Alba Mitchell'
            }
          ]
        },
        {
          'id': 429,
          'guid': 'e33f8c8d-febb-413b-bba1-763bb972da7b',
          'isActive': false,
          'balance': '$1,003.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Iva Hudson',
          'gender': 'female',
          'company': 'Netplax',
          'email': 'ivahudson@netplax.com',
          'phone': '+1 (806) 577-3457',
          'address': {
            'street': 168,
            'city': 'Toftrees',
            'state': 'Connecticut',
            'zip': 3848
          },
          'about': 'Aliqua reprehenderit ad est nulla adipisicing dolore sunt enim nulla laboris excepteur reprehenderit quis. Cillum adipisicing commodo est tempor magna proident mollit amet enim. Est quis tempor aliqua cupidatat velit proident ullamco cupidatat magna. Duis veniam Lorem ad enim do sint duis enim velit labore proident culpa fugiat quis. Tempor irure veniam fugiat nulla eu cupidatat ut tempor. Velit magna esse eu do id consectetur dolore duis laborum. Veniam pariatur consequat veniam proident officia ex deserunt id.\r\n',
          'registered': '2013-04-18T16:05:38+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Lora Foley'
            },
            {
              'id': 1,
              'name': 'Compton Nieves'
            },
            {
              'id': 2,
              'name': 'Melinda Leblanc'
            }
          ]
        },
        {
          'id': 430,
          'guid': '0d5e5c91-9c6d-4b73-b696-10b022512a48',
          'isActive': false,
          'balance': '$2,887.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Pearl Colon',
          'gender': 'female',
          'company': 'Exovent',
          'email': 'pearlcolon@exovent.com',
          'phone': '+1 (858) 550-3247',
          'address': {
            'street': 718,
            'city': 'Itmann',
            'state': 'Mississippi',
            'zip': 1394
          },
          'about': 'Ut mollit eu irure dolore nostrud irure cupidatat culpa esse laborum. Velit quis anim laboris ut ut et eu do dolor laborum amet labore magna ad. Amet aliqua dolore tempor commodo occaecat proident consequat est mollit.\r\n',
          'registered': '1995-10-21T07:14:20+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Stanton Dunn'
            },
            {
              'id': 1,
              'name': 'Kim Lucas'
            },
            {
              'id': 2,
              'name': 'Patrick Stephens'
            }
          ]
        },
        {
          'id': 431,
          'guid': '246d7af9-fd46-40a1-9b9e-d7b1ecb2f047',
          'isActive': false,
          'balance': '$2,803.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Ofelia Edwards',
          'gender': 'female',
          'company': 'Menbrain',
          'email': 'ofeliaedwards@menbrain.com',
          'phone': '+1 (839) 597-3739',
          'address': {
            'street': 518,
            'city': 'Chelsea',
            'state': 'Florida',
            'zip': 3940
          },
          'about': 'Deserunt sunt anim veniam qui id cupidatat aliqua est. Irure veniam id dolor ipsum incididunt Lorem fugiat quis id. Lorem ipsum eu velit sint aliquip duis eu.\r\n',
          'registered': '2013-08-08T07:19:56+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Davis Estrada'
            },
            {
              'id': 1,
              'name': 'Gracie Fernandez'
            },
            {
              'id': 2,
              'name': 'House Paul'
            }
          ]
        },
        {
          'id': 432,
          'guid': 'f9998290-c938-402d-b72b-ccd0405f394e',
          'isActive': true,
          'balance': '$3,832.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Prince Benton',
          'gender': 'male',
          'company': 'Zaj',
          'email': 'princebenton@zaj.com',
          'phone': '+1 (934) 506-2158',
          'address': {
            'street': 630,
            'city': 'Omar',
            'state': 'Tennessee',
            'zip': 495
          },
          'about': 'Do adipisicing id dolore esse dolore fugiat dolor anim culpa non sint enim fugiat elit. Occaecat ex do ex velit proident sint id. Minim non consectetur Lorem laboris voluptate sint aute. Lorem id esse fugiat id ut ad est velit proident id ea ex velit aute. Do voluptate consequat eu nostrud officia.\r\n',
          'registered': '2009-03-27T16:26:55+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Rosie Melton'
            },
            {
              'id': 1,
              'name': 'Slater Patton'
            },
            {
              'id': 2,
              'name': 'Lilian Benson'
            }
          ]
        },
        {
          'id': 433,
          'guid': 'f1dff9dd-c375-4b17-8ade-e40438434c7f',
          'isActive': false,
          'balance': '$3,976.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Maryanne Aguilar',
          'gender': 'female',
          'company': 'Plasto',
          'email': 'maryanneaguilar@plasto.com',
          'phone': '+1 (848) 498-3221',
          'address': {
            'street': 842,
            'city': 'Hinsdale',
            'state': 'Arizona',
            'zip': 2563
          },
          'about': 'Exercitation excepteur enim mollit aliqua occaecat ut qui veniam sit sint eiusmod minim irure. Amet dolor in laborum culpa quis. Nostrud exercitation nostrud fugiat veniam incididunt Lorem laboris. Ad proident proident elit duis consectetur tempor veniam. Eiusmod deserunt non proident pariatur.\r\n',
          'registered': '2001-07-28T01:05:27+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Cleo Schmidt'
            },
            {
              'id': 1,
              'name': 'Christie Reeves'
            },
            {
              'id': 2,
              'name': 'Webb Bass'
            }
          ]
        },
        {
          'id': 434,
          'guid': '25356d31-f5bd-44de-9c41-7b50094f61ae',
          'isActive': false,
          'balance': '$2,732.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Kristy Ward',
          'gender': 'female',
          'company': 'Furnigeer',
          'email': 'kristyward@furnigeer.com',
          'phone': '+1 (934) 598-2924',
          'address': {
            'street': 437,
            'city': 'Cascades',
            'state': 'Massachusetts',
            'zip': 3966
          },
          'about': 'Incididunt ad nulla non sunt. Laborum est veniam proident minim Lorem elit labore. Eiusmod quis id culpa consequat aute dolor sunt id exercitation. Eu mollit officia dolore ad. Id excepteur quis ut officia nisi laborum. Consectetur do aliquip ea Lorem eiusmod aliqua.\r\n',
          'registered': '2010-05-04T11:14:23+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Eloise Kerr'
            },
            {
              'id': 1,
              'name': 'Keller Montgomery'
            },
            {
              'id': 2,
              'name': 'Dyer Page'
            }
          ]
        },
        {
          'id': 435,
          'guid': '5d3898fa-4b9f-4f13-b3e1-caef8793511f',
          'isActive': false,
          'balance': '$3,844.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Blake Sharp',
          'gender': 'male',
          'company': 'Digigene',
          'email': 'blakesharp@digigene.com',
          'phone': '+1 (997) 540-3371',
          'address': {
            'street': 745,
            'city': 'Kennedyville',
            'state': 'North Carolina',
            'zip': 5613
          },
          'about': 'Consectetur ea consequat elit eiusmod dolore. Do mollit ut irure occaecat. Sit officia laboris pariatur ullamco tempor cillum velit laborum est mollit deserunt. Magna ullamco esse do laboris non et incididunt ex ea dolore. In non tempor est minim nulla enim consequat. Qui deserunt excepteur esse cupidatat nisi anim ad adipisicing tempor.\r\n',
          'registered': '2007-03-06T03:55:02+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Bonnie Garner'
            },
            {
              'id': 1,
              'name': 'Maldonado Bates'
            },
            {
              'id': 2,
              'name': 'Merrill Stone'
            }
          ]
        },
        {
          'id': 436,
          'guid': '345b8fae-7994-42f8-a62a-7209caf25882',
          'isActive': true,
          'balance': '$1,360.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Kennedy Williams',
          'gender': 'male',
          'company': 'Twiggery',
          'email': 'kennedywilliams@twiggery.com',
          'phone': '+1 (881) 508-2825',
          'address': {
            'street': 785,
            'city': 'Santel',
            'state': 'Wisconsin',
            'zip': 5910
          },
          'about': 'Nulla eiusmod incididunt dolor aute adipisicing mollit. Labore nulla qui esse qui est id elit nisi nostrud quis deserunt amet qui. Est incididunt incididunt minim nulla Lorem officia magna occaecat. Culpa nisi labore eiusmod amet occaecat eu eu enim. Laboris ipsum irure enim dolor incididunt. Incididunt dolore aute labore in incididunt eiusmod consectetur veniam duis incididunt officia ipsum.\r\n',
          'registered': '2005-09-03T03:47:39+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mathis Salas'
            },
            {
              'id': 1,
              'name': 'Wood Oliver'
            },
            {
              'id': 2,
              'name': 'Rose Conrad'
            }
          ]
        },
        {
          'id': 437,
          'guid': 'b25f2220-6943-46dd-b70a-9936d9aa7a90',
          'isActive': true,
          'balance': '$3,975.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Aurora Hill',
          'gender': 'female',
          'company': 'Yurture',
          'email': 'aurorahill@yurture.com',
          'phone': '+1 (840) 544-3898',
          'address': {
            'street': 745,
            'city': 'Beyerville',
            'state': 'New Hampshire',
            'zip': 8758
          },
          'about': 'Ea cupidatat aliquip Lorem ea officia officia deserunt et nostrud consequat laboris consequat occaecat. Cupidatat in ut commodo sit sint pariatur anim anim ut laboris do magna. Veniam eiusmod cupidatat id non anim in ipsum cupidatat.\r\n',
          'registered': '1996-08-18T12:27:29+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Cortez Berry'
            },
            {
              'id': 1,
              'name': 'Valeria Kinney'
            },
            {
              'id': 2,
              'name': 'Kenya Dawson'
            }
          ]
        },
        {
          'id': 438,
          'guid': 'a1cb3b16-66c5-420d-be76-cc869922d698',
          'isActive': true,
          'balance': '$1,883.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Laura Logan',
          'gender': 'female',
          'company': 'Vortexaco',
          'email': 'lauralogan@vortexaco.com',
          'phone': '+1 (855) 480-2690',
          'address': {
            'street': 557,
            'city': 'Echo',
            'state': 'Maine',
            'zip': 8928
          },
          'about': 'Ex commodo elit reprehenderit esse fugiat. Reprehenderit esse irure irure minim commodo esse dolor id nostrud ad ipsum id pariatur. Consequat incididunt elit cupidatat magna proident nisi id eiusmod Lorem ad nisi. Non eiusmod cillum aliqua anim magna duis enim aute dolor commodo.\r\n',
          'registered': '2009-02-08T12:42:11+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Caldwell Decker'
            },
            {
              'id': 1,
              'name': 'Ortiz Gay'
            },
            {
              'id': 2,
              'name': 'Banks Bright'
            }
          ]
        },
        {
          'id': 439,
          'guid': 'bd4043f5-3005-4e8d-9dbb-6690ce602d2c',
          'isActive': false,
          'balance': '$1,013.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Joy Rutledge',
          'gender': 'female',
          'company': 'Maximind',
          'email': 'joyrutledge@maximind.com',
          'phone': '+1 (864) 478-3884',
          'address': {
            'street': 138,
            'city': 'Machias',
            'state': 'Delaware',
            'zip': 1654
          },
          'about': 'Irure commodo consequat adipisicing esse sint officia reprehenderit nostrud laboris elit nostrud dolor ea. Mollit esse ex cillum cupidatat consequat. Exercitation excepteur in fugiat veniam duis adipisicing fugiat veniam. Sint sit quis quis minim et fugiat pariatur aliqua magna pariatur pariatur voluptate. Aliquip velit incididunt non deserunt ad exercitation quis velit quis cupidatat ipsum elit. Ex nisi esse culpa non dolor sint tempor qui veniam dolore. Voluptate deserunt exercitation ullamco nulla mollit elit fugiat.\r\n',
          'registered': '2011-10-03T20:26:17+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Manuela Ruiz'
            },
            {
              'id': 1,
              'name': 'Howe Hernandez'
            },
            {
              'id': 2,
              'name': 'Natasha Estes'
            }
          ]
        },
        {
          'id': 440,
          'guid': '9cc9dda4-e78d-4cb3-9bb0-10d002a076c0',
          'isActive': true,
          'balance': '$3,251.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Felecia Butler',
          'gender': 'female',
          'company': 'Newcube',
          'email': 'feleciabutler@newcube.com',
          'phone': '+1 (842) 457-3691',
          'address': {
            'street': 253,
            'city': 'Tryon',
            'state': 'Colorado',
            'zip': 5792
          },
          'about': 'Eu id non voluptate ullamco mollit eiusmod ut id minim minim sunt magna voluptate. Tempor in reprehenderit tempor in tempor ullamco amet. Consequat Lorem in eu velit reprehenderit ut reprehenderit duis voluptate cillum reprehenderit tempor cupidatat. Do consectetur quis adipisicing do laboris occaecat non aliqua eiusmod sit eu. Pariatur exercitation voluptate cillum eiusmod cillum. Commodo aliqua veniam pariatur elit aute fugiat magna aute laboris laboris ipsum cupidatat.\r\n',
          'registered': '1993-08-09T06:05:06+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Angelia Romero'
            },
            {
              'id': 1,
              'name': 'Gayle Shannon'
            },
            {
              'id': 2,
              'name': 'Dale Haynes'
            }
          ]
        },
        {
          'id': 441,
          'guid': '26b4f0e5-40e9-46f5-b045-75792224d3fb',
          'isActive': false,
          'balance': '$2,237.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Johanna Thornton',
          'gender': 'female',
          'company': 'Kidgrease',
          'email': 'johannathornton@kidgrease.com',
          'phone': '+1 (923) 549-3711',
          'address': {
            'street': 120,
            'city': 'Thynedale',
            'state': 'Hawaii',
            'zip': 4775
          },
          'about': 'Consequat sunt ut consequat in mollit. Enim id ipsum proident cupidatat aliqua est proident aliqua nisi quis irure. Excepteur enim tempor ex nulla ad nostrud velit. Do culpa ad nostrud voluptate veniam occaecat est veniam exercitation tempor. Dolore duis non esse elit. Esse esse occaecat sit tempor Lorem aliqua tempor eu non elit sint duis amet dolore.\r\n',
          'registered': '1990-11-30T00:23:29+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mona Castro'
            },
            {
              'id': 1,
              'name': 'Deanna Andrews'
            },
            {
              'id': 2,
              'name': 'Amy Donaldson'
            }
          ]
        },
        {
          'id': 442,
          'guid': '690a02ec-6f49-4529-a54f-b1d90c3ac7a3',
          'isActive': false,
          'balance': '$2,044.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Pate Henson',
          'gender': 'male',
          'company': 'Dragbot',
          'email': 'patehenson@dragbot.com',
          'phone': '+1 (922) 414-3569',
          'address': {
            'street': 412,
            'city': 'Winston',
            'state': 'Georgia',
            'zip': 9837
          },
          'about': 'Non irure mollit dolore qui duis aute nulla excepteur anim ad ipsum Lorem aliquip. Velit dolor qui proident minim ea incididunt non esse mollit aliquip. Eu officia anim aute fugiat veniam aliqua aute in. Adipisicing elit elit deserunt adipisicing tempor mollit et et pariatur reprehenderit commodo. Eu aliqua magna occaecat voluptate consectetur ullamco. Ad eu dolore ea enim elit ad aliquip eu adipisicing anim velit culpa dolor sint. Et ullamco eiusmod aliquip aute nostrud.\r\n',
          'registered': '1999-08-05T07:52:34+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Joy Avery'
            },
            {
              'id': 1,
              'name': 'Golden Bray'
            },
            {
              'id': 2,
              'name': 'Eliza Jennings'
            }
          ]
        },
        {
          'id': 443,
          'guid': 'a850549f-6cc2-4165-835f-f8474ce72a3d',
          'isActive': false,
          'balance': '$3,695.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Wilkerson Stark',
          'gender': 'male',
          'company': 'Skyplex',
          'email': 'wilkersonstark@skyplex.com',
          'phone': '+1 (869) 411-3235',
          'address': {
            'street': 230,
            'city': 'Starks',
            'state': 'Arkansas',
            'zip': 9060
          },
          'about': 'Dolore irure proident labore aute duis. Deserunt veniam dolore labore magna et Lorem non mollit non eu nisi ipsum fugiat id. Do laborum officia quis pariatur tempor sit esse quis qui nostrud. Ullamco in aute dolor nulla exercitation consectetur laborum deserunt sunt ea consequat. Eu enim cillum mollit eiusmod magna ipsum minim nisi veniam tempor esse. Aliquip veniam do laborum reprehenderit irure duis fugiat occaecat.\r\n',
          'registered': '2013-09-16T02:08:54+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Justine Smith'
            },
            {
              'id': 1,
              'name': 'Mindy Banks'
            },
            {
              'id': 2,
              'name': 'Jensen Levine'
            }
          ]
        },
        {
          'id': 444,
          'guid': '0f7d5efe-4640-4846-a267-ba5bd900e02b',
          'isActive': true,
          'balance': '$3,924.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Marsh Dennis',
          'gender': 'male',
          'company': 'Interodeo',
          'email': 'marshdennis@interodeo.com',
          'phone': '+1 (988) 459-3261',
          'address': {
            'street': 377,
            'city': 'Greenwich',
            'state': 'New Mexico',
            'zip': 4945
          },
          'about': 'Cupidatat aliqua sit occaecat tempor nostrud quis laboris culpa eiusmod eiusmod sint do mollit. Esse id non do ex dolore in qui velit eu dolore id et ex mollit. Eu mollit eiusmod commodo veniam cillum proident commodo pariatur ad magna ipsum fugiat deserunt magna. Dolor duis ad pariatur anim incididunt dolore amet culpa mollit. Cillum aute sint sit labore esse id.\r\n',
          'registered': '2007-10-11T05:34:21+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Katharine Ortiz'
            },
            {
              'id': 1,
              'name': 'Vickie Buckner'
            },
            {
              'id': 2,
              'name': 'Tonia Hensley'
            }
          ]
        },
        {
          'id': 445,
          'guid': '858de03d-ec0f-4e6f-918f-fb4fb321b543',
          'isActive': false,
          'balance': '$2,616.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Cummings Page',
          'gender': 'male',
          'company': 'Insource',
          'email': 'cummingspage@insource.com',
          'phone': '+1 (802) 600-3508',
          'address': {
            'street': 418,
            'city': 'Allison',
            'state': 'New Jersey',
            'zip': 2893
          },
          'about': 'Culpa dolor duis fugiat laboris adipisicing laboris dolore fugiat officia laboris. Magna ut minim dolor magna non. Adipisicing do tempor deserunt cillum nostrud Lorem cupidatat ut incididunt nulla ipsum in pariatur amet.\r\n',
          'registered': '1994-05-21T23:32:00+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Ernestine Farmer'
            },
            {
              'id': 1,
              'name': 'Gail Tucker'
            },
            {
              'id': 2,
              'name': 'Aurora Ferguson'
            }
          ]
        },
        {
          'id': 446,
          'guid': 'ee959ec8-146d-4e86-a464-de6745bc3e62',
          'isActive': true,
          'balance': '$2,838.00',
          'picture': 'http://placehold.it/32x32',
          'age': 34,
          'name': 'Brigitte Jones',
          'gender': 'female',
          'company': 'Sunclipse',
          'email': 'brigittejones@sunclipse.com',
          'phone': '+1 (818) 596-2599',
          'address': {
            'street': 922,
            'city': 'Wikieup',
            'state': 'Missouri',
            'zip': 8358
          },
          'about': 'Cillum labore exercitation non irure minim irure quis nulla pariatur. Adipisicing aliqua irure quis velit quis anim sit reprehenderit laborum. Eu cillum ad voluptate ullamco pariatur exercitation fugiat fugiat velit amet labore deserunt. Id incididunt anim deserunt irure ea Lorem aute consectetur. Fugiat duis qui ipsum aute officia. Irure anim et laborum non dolore sit id minim culpa enim.\r\n',
          'registered': '1995-10-04T18:12:31+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Jerri Bates'
            },
            {
              'id': 1,
              'name': 'Hartman Craig'
            },
            {
              'id': 2,
              'name': 'Nash Hicks'
            }
          ]
        },
        {
          'id': 447,
          'guid': '616220d4-4994-4c45-a031-712162381301',
          'isActive': true,
          'balance': '$3,193.00',
          'picture': 'http://placehold.it/32x32',
          'age': 36,
          'name': 'Walton Weber',
          'gender': 'male',
          'company': 'Zisis',
          'email': 'waltonweber@zisis.com',
          'phone': '+1 (950) 490-3427',
          'address': {
            'street': 551,
            'city': 'Baker',
            'state': 'Maine',
            'zip': 3744
          },
          'about': 'Sint anim enim enim laboris commodo qui in Lorem dolor incididunt. Ullamco excepteur sint mollit officia esse. Consequat ea nostrud duis Lorem. Dolor ex proident anim pariatur ad consectetur ullamco sint eiusmod nulla do velit quis. Tempor amet ullamco laboris voluptate. Quis do voluptate sint in adipisicing laborum fugiat ullamco. Eiusmod culpa tempor officia sunt qui cillum irure.\r\n',
          'registered': '1993-04-07T10:59:52+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Marie Cardenas'
            },
            {
              'id': 1,
              'name': 'Bettie Sexton'
            },
            {
              'id': 2,
              'name': 'Richards Conley'
            }
          ]
        },
        {
          'id': 448,
          'guid': '9dc1f87a-a745-4212-b3e3-f16970bcc172',
          'isActive': false,
          'balance': '$3,640.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Kathy Grant',
          'gender': 'female',
          'company': 'Bolax',
          'email': 'kathygrant@bolax.com',
          'phone': '+1 (895) 563-2334',
          'address': {
            'street': 893,
            'city': 'Devon',
            'state': 'North Dakota',
            'zip': 7627
          },
          'about': 'Ex excepteur aliquip anim non occaecat cupidatat aute ex ex pariatur excepteur. Enim est velit sunt nulla minim amet ex proident aliqua nisi. Proident ullamco sint dolore officia et sunt aliquip. Irure excepteur velit voluptate tempor aliqua occaecat mollit esse cupidatat culpa aute duis fugiat culpa. Adipisicing culpa voluptate magna ipsum adipisicing sint cillum dolore occaecat veniam. Commodo duis reprehenderit eu nulla veniam esse do. Officia ex elit do occaecat aliquip.\r\n',
          'registered': '2006-03-08T22:07:01+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Iris Vazquez'
            },
            {
              'id': 1,
              'name': 'Sanchez Jacobson'
            },
            {
              'id': 2,
              'name': 'Lana Benson'
            }
          ]
        },
        {
          'id': 449,
          'guid': 'f55b26dc-00d7-4087-8a84-7e2ba4df5e1e',
          'isActive': false,
          'balance': '$2,494.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Mattie Stone',
          'gender': 'female',
          'company': 'Ziggles',
          'email': 'mattiestone@ziggles.com',
          'phone': '+1 (961) 465-2170',
          'address': {
            'street': 952,
            'city': 'Abiquiu',
            'state': 'Arizona',
            'zip': 6833
          },
          'about': 'Et nisi adipisicing minim est. Lorem ipsum non reprehenderit cupidatat velit quis veniam eiusmod Lorem proident nostrud. Eu quis occaecat ea dolor reprehenderit Lorem non pariatur in eu laborum et dolor.\r\n',
          'registered': '2003-11-18T14:13:36+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Coleman Pruitt'
            },
            {
              'id': 1,
              'name': 'Faulkner Hebert'
            },
            {
              'id': 2,
              'name': 'Jewell Frederick'
            }
          ]
        },
        {
          'id': 450,
          'guid': 'edb733d5-0059-4edf-817e-e84eee726dbc',
          'isActive': false,
          'balance': '$2,498.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Erin Rivas',
          'gender': 'female',
          'company': 'Rugstars',
          'email': 'erinrivas@rugstars.com',
          'phone': '+1 (989) 573-3149',
          'address': {
            'street': 344,
            'city': 'Sussex',
            'state': 'Iowa',
            'zip': 2159
          },
          'about': 'Reprehenderit veniam cillum irure nulla ipsum deserunt exercitation dolor adipisicing. Consequat nostrud culpa ea irure consectetur quis culpa anim eiusmod. Ut pariatur ut velit cupidatat magna. In culpa ea nostrud ex consectetur eu pariatur.\r\n',
          'registered': '2008-01-30T17:09:11+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Suzette Best'
            },
            {
              'id': 1,
              'name': 'Victoria Atkinson'
            },
            {
              'id': 2,
              'name': 'Dina Erickson'
            }
          ]
        },
        {
          'id': 451,
          'guid': 'e7c0977d-6c34-4c43-a6eb-000608e8bead',
          'isActive': true,
          'balance': '$3,082.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Ursula Stanley',
          'gender': 'female',
          'company': 'Orbiflex',
          'email': 'ursulastanley@orbiflex.com',
          'phone': '+1 (931) 504-2101',
          'address': {
            'street': 730,
            'city': 'Dawn',
            'state': 'Tennessee',
            'zip': 1435
          },
          'about': 'Anim Lorem nisi cillum nisi. Officia laboris consequat labore non elit. Ullamco qui consectetur pariatur laborum cupidatat pariatur incididunt velit eu. Consequat non proident laboris nostrud sit Lorem pariatur fugiat esse ea consequat sunt laboris. Id reprehenderit quis officia culpa officia deserunt officia elit eiusmod. Veniam magna magna et sunt magna ad cillum adipisicing. Occaecat ad deserunt eu minim velit irure culpa proident qui et fugiat velit.\r\n',
          'registered': '1995-03-03T20:32:28+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Townsend Emerson'
            },
            {
              'id': 1,
              'name': 'Deanne Chapman'
            },
            {
              'id': 2,
              'name': 'Farmer Lucas'
            }
          ]
        },
        {
          'id': 452,
          'guid': 'ccdf33e1-5d7a-4d87-a1ed-140092939b31',
          'isActive': false,
          'balance': '$2,762.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Cheri Wilkerson',
          'gender': 'female',
          'company': 'Supportal',
          'email': 'cheriwilkerson@supportal.com',
          'phone': '+1 (876) 530-2025',
          'address': {
            'street': 854,
            'city': 'Bethpage',
            'state': 'Pennsylvania',
            'zip': 7686
          },
          'about': 'Aliqua qui commodo consequat officia. Amet ad occaecat qui consequat duis ut commodo ex. Ut incididunt nostrud adipisicing enim amet quis ut incididunt excepteur tempor enim consectetur duis. Elit dolore voluptate cupidatat dolor exercitation eiusmod.\r\n',
          'registered': '1988-09-28T12:56:54+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Paula Gomez'
            },
            {
              'id': 1,
              'name': 'Reva Miranda'
            },
            {
              'id': 2,
              'name': 'Malone Jefferson'
            }
          ]
        },
        {
          'id': 453,
          'guid': 'd6c21601-5ca8-445d-be11-5dbd5a62b39b',
          'isActive': false,
          'balance': '$3,767.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Pearson Mcfadden',
          'gender': 'male',
          'company': 'Xeronk',
          'email': 'pearsonmcfadden@xeronk.com',
          'phone': '+1 (924) 458-3535',
          'address': {
            'street': 318,
            'city': 'Bancroft',
            'state': 'Connecticut',
            'zip': 7147
          },
          'about': 'Adipisicing sit anim sunt officia non duis eiusmod elit reprehenderit irure magna sint. Proident dolor mollit exercitation nostrud. Anim adipisicing sint reprehenderit commodo anim qui qui irure deserunt laborum. Dolore laborum amet elit ut culpa dolor pariatur anim commodo proident. Magna officia commodo dolor nulla veniam labore veniam duis mollit esse.\r\n',
          'registered': '2010-01-05T17:54:38+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Frederick Mcguire'
            },
            {
              'id': 1,
              'name': 'Miller Hancock'
            },
            {
              'id': 2,
              'name': 'Horne Wyatt'
            }
          ]
        },
        {
          'id': 454,
          'guid': '2f5fbe64-ca6c-46d5-af3f-e1f8724629ef',
          'isActive': false,
          'balance': '$3,452.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Natalia Moody',
          'gender': 'female',
          'company': 'Quarex',
          'email': 'nataliamoody@quarex.com',
          'phone': '+1 (896) 550-3648',
          'address': {
            'street': 701,
            'city': 'Loveland',
            'state': 'Wisconsin',
            'zip': 6577
          },
          'about': 'Reprehenderit ullamco ut adipisicing nostrud. Labore eiusmod cupidatat aliqua veniam dolore ullamco fugiat laborum. Do occaecat veniam deserunt duis nisi voluptate tempor incididunt et ullamco. Excepteur qui officia sit ea est commodo ad aute magna. Incididunt minim anim nostrud reprehenderit aute eu consectetur officia.\r\n',
          'registered': '2005-08-20T01:17:07+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Emma Walton'
            },
            {
              'id': 1,
              'name': 'Chris Parsons'
            },
            {
              'id': 2,
              'name': 'Sutton Bryant'
            }
          ]
        },
        {
          'id': 455,
          'guid': '2d250eb5-ed6a-46d6-92e6-2d0479a60330',
          'isActive': true,
          'balance': '$3,894.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'May Martin',
          'gender': 'female',
          'company': 'Uneeq',
          'email': 'maymartin@uneeq.com',
          'phone': '+1 (861) 556-2692',
          'address': {
            'street': 510,
            'city': 'Turpin',
            'state': 'Delaware',
            'zip': 1148
          },
          'about': 'Et velit consectetur id ipsum quis ex fugiat. Ipsum sit Lorem nisi Lorem pariatur irure magna. Nulla aliquip elit fugiat et incididunt adipisicing pariatur est eu culpa nisi culpa. Ad incididunt nostrud amet non aliquip aute et ipsum excepteur Lorem.\r\n',
          'registered': '2008-02-17T13:38:06+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Curtis Olsen'
            },
            {
              'id': 1,
              'name': 'Belinda Mendez'
            },
            {
              'id': 2,
              'name': 'Michael Douglas'
            }
          ]
        },
        {
          'id': 456,
          'guid': 'ec01d483-dd7a-4342-a1af-971da2d44747',
          'isActive': false,
          'balance': '$1,819.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Russell Reid',
          'gender': 'male',
          'company': 'Pushcart',
          'email': 'russellreid@pushcart.com',
          'phone': '+1 (839) 416-2743',
          'address': {
            'street': 830,
            'city': 'Sehili',
            'state': 'Louisiana',
            'zip': 3415
          },
          'about': 'Aliqua aliqua nulla in eiusmod consequat. Qui do proident incididunt aliquip. Esse ex minim deserunt labore aliquip non. Ut occaecat consequat quis duis amet. Laborum do exercitation velit nostrud incididunt quis non sunt sint magna.\r\n',
          'registered': '1992-09-22T05:36:40+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Miranda Mccarty'
            },
            {
              'id': 1,
              'name': 'Effie Barnes'
            },
            {
              'id': 2,
              'name': 'Pearlie Chaney'
            }
          ]
        },
        {
          'id': 457,
          'guid': '6c832171-3242-4e0d-9806-cfd17e67af8f',
          'isActive': true,
          'balance': '$3,829.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Taylor Dominguez',
          'gender': 'female',
          'company': 'Uplinx',
          'email': 'taylordominguez@uplinx.com',
          'phone': '+1 (829) 507-3542',
          'address': {
            'street': 938,
            'city': 'Orick',
            'state': 'Nebraska',
            'zip': 3593
          },
          'about': 'Mollit non sunt ipsum reprehenderit. Id ullamco non magna ut culpa exercitation. Ullamco adipisicing adipisicing occaecat ipsum non. Adipisicing quis consequat Lorem amet. Ad enim consequat velit nostrud dolore dolore non. Cupidatat incididunt aliqua dolor minim ullamco qui aliquip labore elit duis sit do non.\r\n',
          'registered': '1999-01-22T01:15:10+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Geneva Lester'
            },
            {
              'id': 1,
              'name': 'Roman Day'
            },
            {
              'id': 2,
              'name': 'Shannon Paul'
            }
          ]
        },
        {
          'id': 458,
          'guid': 'b86ba5a9-fb23-438f-b13b-cd0cdd08731b',
          'isActive': true,
          'balance': '$2,799.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Barber Little',
          'gender': 'male',
          'company': 'Suretech',
          'email': 'barberlittle@suretech.com',
          'phone': '+1 (829) 521-2788',
          'address': {
            'street': 237,
            'city': 'Shaft',
            'state': 'Minnesota',
            'zip': 2194
          },
          'about': 'Lorem amet veniam duis quis excepteur ad non mollit. Laborum sunt fugiat exercitation amet qui ex aliquip est voluptate et officia pariatur fugiat anim. Ut nostrud ex aute mollit voluptate est ea elit nisi ad exercitation. Ut non dolor minim Lorem incididunt aute. Irure ut aute tempor amet adipisicing exercitation non amet culpa est dolor exercitation nostrud. Amet culpa velit qui cillum velit tempor esse. Proident minim qui cillum irure irure adipisicing do Lorem sit commodo ullamco sunt aliqua duis.\r\n',
          'registered': '1993-05-06T07:36:14+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Garner Dudley'
            },
            {
              'id': 1,
              'name': 'Helga Dawson'
            },
            {
              'id': 2,
              'name': 'Malinda Fowler'
            }
          ]
        },
        {
          'id': 459,
          'guid': '6720cc7a-6fd9-44dc-8e1e-2bd1e57b8f8c',
          'isActive': false,
          'balance': '$3,732.00',
          'picture': 'http://placehold.it/32x32',
          'age': 21,
          'name': 'Parrish Bird',
          'gender': 'male',
          'company': 'Exiand',
          'email': 'parrishbird@exiand.com',
          'phone': '+1 (856) 473-3815',
          'address': {
            'street': 965,
            'city': 'Kirk',
            'state': 'Wyoming',
            'zip': 3878
          },
          'about': 'Laboris anim in id adipisicing quis dolor. Esse est velit qui qui esse voluptate esse veniam quis sint cupidatat quis veniam consectetur. Eiusmod adipisicing anim dolore proident cupidatat eiusmod dolor dolore adipisicing duis aute. Quis qui amet id do labore do culpa magna esse est. Consectetur velit cupidatat in pariatur ullamco aute laborum id esse ipsum nulla. Proident aliquip magna ad occaecat qui commodo deserunt aliquip excepteur aute nulla proident nostrud.\r\n',
          'registered': '2011-07-07T23:17:18+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Guy Holman'
            },
            {
              'id': 1,
              'name': 'Emily Carroll'
            },
            {
              'id': 2,
              'name': 'Adrian Rasmussen'
            }
          ]
        },
        {
          'id': 460,
          'guid': '7c78c69e-f490-4ab5-9472-d436df7a48ac',
          'isActive': true,
          'balance': '$2,159.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Carpenter Monroe',
          'gender': 'male',
          'company': 'Zilodyne',
          'email': 'carpentermonroe@zilodyne.com',
          'phone': '+1 (878) 529-3240',
          'address': {
            'street': 824,
            'city': 'Townsend',
            'state': 'Indiana',
            'zip': 4801
          },
          'about': 'Amet qui aliquip officia duis culpa Lorem ut sit. Et exercitation consequat proident anim labore deserunt. Duis eu cupidatat ipsum id ut elit voluptate. Proident non mollit excepteur ea ut nostrud commodo Lorem do ipsum dolore. Dolore Lorem aliqua laborum quis commodo mollit nisi. Mollit id in deserunt dolore veniam tempor irure cillum ea excepteur.\r\n',
          'registered': '1994-01-14T10:43:29+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Raymond Hale'
            },
            {
              'id': 1,
              'name': 'Rowe Dean'
            },
            {
              'id': 2,
              'name': 'Douglas Lowery'
            }
          ]
        },
        {
          'id': 461,
          'guid': '9cefadd1-c2bd-4c69-81a1-76ffba09a71e',
          'isActive': true,
          'balance': '$1,204.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Williams Sutton',
          'gender': 'male',
          'company': 'Ziore',
          'email': 'williamssutton@ziore.com',
          'phone': '+1 (952) 461-3437',
          'address': {
            'street': 360,
            'city': 'Allamuchy',
            'state': 'Texas',
            'zip': 2624
          },
          'about': 'Ut magna cillum magna cupidatat aliquip anim laborum id laboris deserunt consectetur. Occaecat culpa veniam nostrud eiusmod irure non. Officia officia cillum esse sunt deserunt incididunt enim elit. Pariatur amet fugiat exercitation sit culpa commodo ea occaecat duis incididunt. Laborum ullamco sunt exercitation ex officia voluptate excepteur eiusmod nisi aliqua amet. Ipsum dolore Lorem est elit in.\r\n',
          'registered': '1991-01-15T02:04:42+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Noelle Higgins'
            },
            {
              'id': 1,
              'name': 'Madelyn Willis'
            },
            {
              'id': 2,
              'name': 'Hines Daniels'
            }
          ]
        },
        {
          'id': 462,
          'guid': 'e22e9af9-4e01-44b1-857a-d634c658eec4',
          'isActive': false,
          'balance': '$3,477.00',
          'picture': 'http://placehold.it/32x32',
          'age': 25,
          'name': 'Molly Kaufman',
          'gender': 'female',
          'company': 'Ecratic',
          'email': 'mollykaufman@ecratic.com',
          'phone': '+1 (891) 400-2158',
          'address': {
            'street': 355,
            'city': 'Riceville',
            'state': 'Florida',
            'zip': 8730
          },
          'about': 'Sunt amet ex nostrud voluptate ullamco non sit excepteur ullamco ipsum incididunt incididunt. Occaecat dolor qui aliqua amet fugiat Lorem. Consectetur nostrud duis pariatur nostrud in ullamco ipsum sint. Sint velit excepteur exercitation dolore voluptate est aute eu consectetur ipsum culpa fugiat labore duis. Adipisicing exercitation consectetur dolor mollit non nulla reprehenderit amet eu. Consequat mollit commodo pariatur officia enim tempor aliquip in reprehenderit reprehenderit aliquip aliqua. Occaecat laborum do ea id cillum reprehenderit deserunt in irure magna.\r\n',
          'registered': '1996-03-28T19:49:47+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Valentine Brock'
            },
            {
              'id': 1,
              'name': 'Ashlee Snyder'
            },
            {
              'id': 2,
              'name': 'Mckee Villarreal'
            }
          ]
        },
        {
          'id': 463,
          'guid': '9e31f2a4-4c01-4523-a6a3-a8b67fa2720e',
          'isActive': true,
          'balance': '$1,436.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Jackson Mccullough',
          'gender': 'male',
          'company': 'Enersol',
          'email': 'jacksonmccullough@enersol.com',
          'phone': '+1 (857) 405-3490',
          'address': {
            'street': 781,
            'city': 'Yukon',
            'state': 'Washington',
            'zip': 3314
          },
          'about': 'Labore fugiat elit laboris ipsum aliqua voluptate ad enim sunt qui. Adipisicing elit nulla nulla aute cillum veniam laborum. Laborum minim officia non dolore incididunt ex ex exercitation eu eiusmod labore do mollit magna. Tempor in sit fugiat magna enim nisi et velit labore. Lorem anim minim commodo culpa nostrud.\r\n',
          'registered': '1995-04-25T07:30:35+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Mcfadden Gallagher'
            },
            {
              'id': 1,
              'name': 'Margery Jimenez'
            },
            {
              'id': 2,
              'name': 'Katie Charles'
            }
          ]
        },
        {
          'id': 464,
          'guid': '258dd487-d1c9-4c8e-8f99-adea39321b06',
          'isActive': true,
          'balance': '$3,805.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Cochran Gross',
          'gender': 'male',
          'company': 'Proxsoft',
          'email': 'cochrangross@proxsoft.com',
          'phone': '+1 (910) 497-2077',
          'address': {
            'street': 729,
            'city': 'Ellerslie',
            'state': 'Colorado',
            'zip': 1771
          },
          'about': 'Culpa dolore laborum fugiat est voluptate ex aute labore enim adipisicing consequat. Enim sint aliqua ad enim dolor est adipisicing anim nulla nulla. Enim sunt aliqua veniam tempor est pariatur id est. Nostrud dolor anim voluptate consectetur do nisi Lorem labore reprehenderit duis enim labore enim dolor. Tempor aute velit nostrud magna aute irure labore minim mollit in. Nulla sit magna anim cillum cillum consequat nostrud voluptate aliquip aute.\r\n',
          'registered': '2006-10-10T02:22:56+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Gibbs Sullivan'
            },
            {
              'id': 1,
              'name': 'Campbell Haley'
            },
            {
              'id': 2,
              'name': 'Ola Pate'
            }
          ]
        },
        {
          'id': 465,
          'guid': '397bada5-d015-4e82-b589-13b5a7fc63a5',
          'isActive': false,
          'balance': '$2,555.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Marilyn Alvarez',
          'gender': 'female',
          'company': 'Zilch',
          'email': 'marilynalvarez@zilch.com',
          'phone': '+1 (999) 447-3827',
          'address': {
            'street': 658,
            'city': 'Eden',
            'state': 'California',
            'zip': 4644
          },
          'about': 'Qui ut aliqua tempor Lorem velit aliquip non fugiat proident eu. Eu incididunt nisi nisi in ex irure. Anim adipisicing ea ex eiusmod veniam qui irure dolore dolore veniam.\r\n',
          'registered': '2008-02-20T03:05:03+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Robertson Duran'
            },
            {
              'id': 1,
              'name': 'Susana Harrell'
            },
            {
              'id': 2,
              'name': 'Beck Hernandez'
            }
          ]
        },
        {
          'id': 466,
          'guid': 'eed29d67-b451-4a29-a833-46e3fd93dcb5',
          'isActive': true,
          'balance': '$2,715.00',
          'picture': 'http://placehold.it/32x32',
          'age': 31,
          'name': 'Alissa Mcclure',
          'gender': 'female',
          'company': 'Kiggle',
          'email': 'alissamcclure@kiggle.com',
          'phone': '+1 (842) 465-2486',
          'address': {
            'street': 904,
            'city': 'Islandia',
            'state': 'Alaska',
            'zip': 3803
          },
          'about': 'Dolore incididunt enim sunt consectetur laboris amet reprehenderit et anim laboris dolore cillum. Amet cillum reprehenderit ipsum deserunt tempor pariatur officia anim culpa pariatur id deserunt nulla nulla. Irure sunt adipisicing deserunt mollit exercitation occaecat sit pariatur anim aute tempor.\r\n',
          'registered': '2011-08-20T02:49:33+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Scott Avila'
            },
            {
              'id': 1,
              'name': 'Woodward Mccall'
            },
            {
              'id': 2,
              'name': 'Helene Callahan'
            }
          ]
        },
        {
          'id': 467,
          'guid': 'ef6523bc-cb61-45a1-8a7c-0fef1611f6bf',
          'isActive': false,
          'balance': '$1,135.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Caroline Giles',
          'gender': 'female',
          'company': 'Jumpstack',
          'email': 'carolinegiles@jumpstack.com',
          'phone': '+1 (844) 588-2757',
          'address': {
            'street': 605,
            'city': 'Greenbush',
            'state': 'Alabama',
            'zip': 9434
          },
          'about': 'Quis sint qui quis proident consectetur cillum voluptate. Proident sit cupidatat aliquip excepteur laborum enim laboris aliqua nisi ullamco in Lorem amet et. Et irure aliqua ipsum nisi.\r\n',
          'registered': '2005-09-12T19:50:46+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Desiree Wilcox'
            },
            {
              'id': 1,
              'name': 'Dodson Rhodes'
            },
            {
              'id': 2,
              'name': 'Nellie Gates'
            }
          ]
        },
        {
          'id': 468,
          'guid': 'c4a932af-7251-42c0-ba6b-ea4c207e5d89',
          'isActive': false,
          'balance': '$2,746.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Wade Frye',
          'gender': 'male',
          'company': 'Kenegy',
          'email': 'wadefrye@kenegy.com',
          'phone': '+1 (878) 440-3251',
          'address': {
            'street': 719,
            'city': 'Holcombe',
            'state': 'Rhode Island',
            'zip': 3074
          },
          'about': 'Non adipisicing esse laborum quis consectetur officia ut pariatur et est reprehenderit. Sunt ad aliquip in velit dolore laborum consectetur consequat ad dolore pariatur est Lorem amet. Reprehenderit velit quis velit pariatur cupidatat non ipsum ad sunt pariatur. Id aliquip pariatur dolore deserunt sit. Velit nisi minim veniam exercitation veniam. Nulla esse eiusmod Lorem exercitation ex ex. Fugiat elit aliquip occaecat amet exercitation ea mollit commodo.\r\n',
          'registered': '2011-08-25T08:11:00+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Iva Bell'
            },
            {
              'id': 1,
              'name': 'Estrada Shaw'
            },
            {
              'id': 2,
              'name': 'Bradshaw Blackburn'
            }
          ]
        },
        {
          'id': 469,
          'guid': '9427149f-f86d-4dc0-bde2-c121d2874adf',
          'isActive': true,
          'balance': '$2,990.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Rhoda Ortega',
          'gender': 'female',
          'company': 'Genekom',
          'email': 'rhodaortega@genekom.com',
          'phone': '+1 (827) 567-3336',
          'address': {
            'street': 615,
            'city': 'Highland',
            'state': 'Idaho',
            'zip': 9143
          },
          'about': 'Nulla ea cillum sint reprehenderit aute quis non. Amet eiusmod quis excepteur ut commodo labore excepteur voluptate exercitation labore. Commodo pariatur elit cillum fugiat pariatur nulla dolore tempor fugiat.\r\n',
          'registered': '2013-12-05T06:25:18+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Angelica Odonnell'
            },
            {
              'id': 1,
              'name': 'Merritt Combs'
            },
            {
              'id': 2,
              'name': 'Reyes Spears'
            }
          ]
        },
        {
          'id': 470,
          'guid': 'df5a7771-b825-4841-99ee-61704703ec6b',
          'isActive': true,
          'balance': '$1,865.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Phyllis Hess',
          'gender': 'female',
          'company': 'Rooforia',
          'email': 'phyllishess@rooforia.com',
          'phone': '+1 (966) 547-2958',
          'address': {
            'street': 372,
            'city': 'Ilchester',
            'state': 'Massachusetts',
            'zip': 2709
          },
          'about': 'Consectetur fugiat sit et in velit cupidatat nulla culpa et velit. Dolore ad eu mollit consequat Lorem. Elit ullamco occaecat officia aliqua eiusmod duis excepteur sunt officia irure voluptate. Voluptate irure fugiat voluptate pariatur.\r\n',
          'registered': '1997-08-07T15:23:15+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Sanders Frank'
            },
            {
              'id': 1,
              'name': 'Kristie Herman'
            },
            {
              'id': 2,
              'name': 'Audra Hewitt'
            }
          ]
        },
        {
          'id': 471,
          'guid': 'edf0db14-a2f6-404b-bc99-b1f89f395ece',
          'isActive': true,
          'balance': '$1,130.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Maude Barry',
          'gender': 'female',
          'company': 'Enervate',
          'email': 'maudebarry@enervate.com',
          'phone': '+1 (928) 466-3982',
          'address': {
            'street': 393,
            'city': 'Cutter',
            'state': 'Mississippi',
            'zip': 8609
          },
          'about': 'Nostrud consequat sit laboris et enim ipsum do nisi proident dolore in non proident. Labore adipisicing labore nisi ipsum dolor mollit non eu quis. Officia commodo Lorem elit voluptate tempor. Pariatur et labore reprehenderit ullamco elit non ullamco. Ex sint ad elit aute.\r\n',
          'registered': '2013-01-30T03:34:38+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Harvey Long'
            },
            {
              'id': 1,
              'name': 'Wilma Barrera'
            },
            {
              'id': 2,
              'name': 'Sophia Hansen'
            }
          ]
        },
        {
          'id': 472,
          'guid': 'dc1c589f-f8eb-4129-97ea-59503f31e74e',
          'isActive': false,
          'balance': '$1,894.00',
          'picture': 'http://placehold.it/32x32',
          'age': 39,
          'name': 'Barnes Savage',
          'gender': 'male',
          'company': 'Providco',
          'email': 'barnessavage@providco.com',
          'phone': '+1 (910) 499-3548',
          'address': {
            'street': 550,
            'city': 'Homeland',
            'state': 'Nevada',
            'zip': 2661
          },
          'about': 'Laborum est consequat pariatur consequat veniam culpa proident consequat sint. Cupidatat magna nulla ad non. Duis ex ullamco nisi eiusmod culpa eiusmod culpa labore eiusmod. Laboris commodo non excepteur nisi magna sint Lorem sunt. Do officia labore reprehenderit amet nulla anim.\r\n',
          'registered': '1988-03-29T11:38:30+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Letitia Ramirez'
            },
            {
              'id': 1,
              'name': 'Brandy Grimes'
            },
            {
              'id': 2,
              'name': 'Conway Lee'
            }
          ]
        },
        {
          'id': 473,
          'guid': 'e4efd6bb-5985-47d2-a885-02f9525aa454',
          'isActive': true,
          'balance': '$2,151.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Rochelle Gonzalez',
          'gender': 'female',
          'company': 'Enaut',
          'email': 'rochellegonzalez@enaut.com',
          'phone': '+1 (856) 462-2738',
          'address': {
            'street': 373,
            'city': 'Coldiron',
            'state': 'Vermont',
            'zip': 9948
          },
          'about': 'Deserunt laborum enim dolore ex labore ipsum do. Duis eu cillum ad quis. Esse ipsum irure ut laborum quis duis ipsum consectetur dolor qui consectetur enim nisi. Occaecat magna eiusmod do ipsum quis duis sit velit consequat.\r\n',
          'registered': '1993-09-23T14:57:11+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Weiss Clayton'
            },
            {
              'id': 1,
              'name': 'Araceli Pickett'
            },
            {
              'id': 2,
              'name': 'Janine Mcintyre'
            }
          ]
        },
        {
          'id': 474,
          'guid': 'bd7bd8d0-ed5f-4462-a491-829483bc6c28',
          'isActive': true,
          'balance': '$1,394.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Sampson Chang',
          'gender': 'male',
          'company': 'Quility',
          'email': 'sampsonchang@quility.com',
          'phone': '+1 (964) 584-3766',
          'address': {
            'street': 186,
            'city': 'Yogaville',
            'state': 'Kentucky',
            'zip': 2117
          },
          'about': 'Qui ad velit quis sint. Officia Lorem qui adipisicing nisi consequat esse amet non eiusmod sint. Proident ex et sunt occaecat do labore. Occaecat irure dolor aliqua amet officia laboris proident eiusmod sint laboris do incididunt. Tempor ullamco ex commodo magna. Excepteur officia consequat ex id in amet dolore minim sunt.\r\n',
          'registered': '2001-01-28T04:26:27+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Herrera Hyde'
            },
            {
              'id': 1,
              'name': 'Osborne Holloway'
            },
            {
              'id': 2,
              'name': 'Watson Cain'
            }
          ]
        },
        {
          'id': 475,
          'guid': 'cc19d32f-4f7e-42ee-b6b0-14513287bcfd',
          'isActive': false,
          'balance': '$2,336.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Camille Ingram',
          'gender': 'female',
          'company': 'Idego',
          'email': 'camilleingram@idego.com',
          'phone': '+1 (901) 414-2712',
          'address': {
            'street': 527,
            'city': 'Glenville',
            'state': 'North Carolina',
            'zip': 7483
          },
          'about': 'Eiusmod et dolor est incididunt tempor veniam ut laborum occaecat pariatur nostrud aliquip et enim. Veniam consectetur anim non duis pariatur consequat. Nulla occaecat mollit sunt velit quis aute enim consequat sit duis.\r\n',
          'registered': '2007-07-30T15:09:52+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Antoinette Orr'
            },
            {
              'id': 1,
              'name': 'Murphy Pearson'
            },
            {
              'id': 2,
              'name': 'Carrie Cox'
            }
          ]
        },
        {
          'id': 476,
          'guid': '971d5e6a-5754-4b40-9c97-3b111b2be0d7',
          'isActive': false,
          'balance': '$2,562.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Jenifer Irwin',
          'gender': 'female',
          'company': 'Ebidco',
          'email': 'jeniferirwin@ebidco.com',
          'phone': '+1 (807) 556-2109',
          'address': {
            'street': 168,
            'city': 'Goochland',
            'state': 'Oregon',
            'zip': 8998
          },
          'about': 'Duis est reprehenderit laboris eu. Deserunt ea sunt ullamco commodo adipisicing minim velit qui ea laboris incididunt nulla. Reprehenderit exercitation velit proident ipsum qui et duis magna.\r\n',
          'registered': '1992-09-23T04:31:37+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Vaughan Bolton'
            },
            {
              'id': 1,
              'name': 'Rosario Shepherd'
            },
            {
              'id': 2,
              'name': 'Preston Baker'
            }
          ]
        },
        {
          'id': 477,
          'guid': '76985a08-2801-4c6d-aa2e-d64bd4ab492c',
          'isActive': true,
          'balance': '$2,885.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Kristy Curry',
          'gender': 'female',
          'company': 'Digique',
          'email': 'kristycurry@digique.com',
          'phone': '+1 (932) 457-2841',
          'address': {
            'street': 713,
            'city': 'Groveville',
            'state': 'New Hampshire',
            'zip': 4988
          },
          'about': 'Excepteur eiusmod laborum aute eu cillum dolor minim mollit occaecat. Adipisicing laborum cillum est duis. Sunt labore et quis sit anim id adipisicing. Tempor reprehenderit ad do deserunt commodo consequat excepteur elit amet. Aliqua deserunt adipisicing deserunt culpa do ex reprehenderit dolore.\r\n',
          'registered': '2004-03-20T20:15:04+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Caitlin Morton'
            },
            {
              'id': 1,
              'name': 'Mccall Haney'
            },
            {
              'id': 2,
              'name': 'Valeria Mcgowan'
            }
          ]
        },
        {
          'id': 478,
          'guid': 'cf577cf8-891e-42d4-abc9-fc22999e57d4',
          'isActive': false,
          'balance': '$1,942.00',
          'picture': 'http://placehold.it/32x32',
          'age': 29,
          'name': 'Cooper Noble',
          'gender': 'male',
          'company': 'Isoternia',
          'email': 'coopernoble@isoternia.com',
          'phone': '+1 (814) 485-2640',
          'address': {
            'street': 804,
            'city': 'Nelson',
            'state': 'New York',
            'zip': 6977
          },
          'about': 'Culpa qui in eu amet et aliquip. Duis exercitation reprehenderit ipsum et est non cupidatat dolor cupidatat mollit non proident consectetur. Amet ullamco exercitation in est ad occaecat Lorem. Proident irure voluptate minim aliqua aute exercitation enim anim. Occaecat esse veniam labore ex adipisicing aute nulla anim. Do nostrud sunt esse ullamco dolor est labore ut. Nulla in velit irure consectetur ut sit.\r\n',
          'registered': '2013-02-06T09:23:03+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Bates Dickerson'
            },
            {
              'id': 1,
              'name': 'Rosalinda Riley'
            },
            {
              'id': 2,
              'name': 'Jeanie Howe'
            }
          ]
        },
        {
          'id': 479,
          'guid': '9315bc20-51f0-4abf-af46-f1de93930bcb',
          'isActive': false,
          'balance': '$2,996.00',
          'picture': 'http://placehold.it/32x32',
          'age': 35,
          'name': 'Bridgette Phillips',
          'gender': 'female',
          'company': 'Comverges',
          'email': 'bridgettephillips@comverges.com',
          'phone': '+1 (888) 488-2656',
          'address': {
            'street': 709,
            'city': 'Longoria',
            'state': 'South Dakota',
            'zip': 7085
          },
          'about': 'In incididunt cupidatat duis incididunt et. Nulla aliqua enim pariatur incididunt amet. Sint veniam duis cupidatat eiusmod Lorem magna culpa non amet aliqua eu consequat. Pariatur ad occaecat velit nulla laboris consectetur dolor id labore. Voluptate officia sunt enim quis. Proident qui aliquip proident eu nisi laboris dolore. Quis aliquip ut non ipsum non cillum culpa incididunt.\r\n',
          'registered': '2011-09-08T06:49:05+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Charlene Slater'
            },
            {
              'id': 1,
              'name': 'Rita Rich'
            },
            {
              'id': 2,
              'name': 'Ora Cantrell'
            }
          ]
        },
        {
          'id': 480,
          'guid': 'a4bbec4b-32b3-481d-9f10-fc92f76e74d7',
          'isActive': false,
          'balance': '$1,894.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Stefanie Mccarthy',
          'gender': 'female',
          'company': 'Bugsall',
          'email': 'stefaniemccarthy@bugsall.com',
          'phone': '+1 (925) 597-2082',
          'address': {
            'street': 797,
            'city': 'Cotopaxi',
            'state': 'West Virginia',
            'zip': 4808
          },
          'about': 'Eiusmod aute adipisicing deserunt veniam. Irure duis est est ex pariatur. Laborum elit in et ex magna nostrud adipisicing sint. Labore commodo pariatur nisi incididunt consectetur deserunt dolor laboris. Consectetur elit occaecat magna culpa laboris ipsum aute esse voluptate Lorem commodo. Velit duis excepteur nulla consectetur do. Laborum esse veniam pariatur Lorem ipsum reprehenderit occaecat ex excepteur.\r\n',
          'registered': '2008-12-18T07:36:29+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Agnes Walsh'
            },
            {
              'id': 1,
              'name': 'Clemons Tyson'
            },
            {
              'id': 2,
              'name': 'Saunders Bowers'
            }
          ]
        },
        {
          'id': 481,
          'guid': 'd93bd90b-5c43-4a93-aac2-688f3bde685b',
          'isActive': false,
          'balance': '$2,584.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Vilma Watson',
          'gender': 'female',
          'company': 'Neocent',
          'email': 'vilmawatson@neocent.com',
          'phone': '+1 (973) 597-3714',
          'address': {
            'street': 782,
            'city': 'Wakulla',
            'state': 'Michigan',
            'zip': 9812
          },
          'about': 'Ex est cupidatat officia excepteur in ad quis duis minim pariatur mollit elit ut sint. Enim occaecat laborum aute nisi esse pariatur. Eu irure in occaecat nisi minim tempor cupidatat ut elit incididunt do incididunt sit.\r\n',
          'registered': '2007-11-25T11:13:58+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'West Cross'
            },
            {
              'id': 1,
              'name': 'Guadalupe Rivers'
            },
            {
              'id': 2,
              'name': 'Cara Farley'
            }
          ]
        },
        {
          'id': 482,
          'guid': '64c7a58f-87b4-4dae-888f-db42706ca71c',
          'isActive': true,
          'balance': '$2,670.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Workman Knowles',
          'gender': 'male',
          'company': 'Medicroix',
          'email': 'workmanknowles@medicroix.com',
          'phone': '+1 (819) 565-2956',
          'address': {
            'street': 597,
            'city': 'Barclay',
            'state': 'Montana',
            'zip': 849
          },
          'about': 'Elit dolor irure aliqua in nisi eu sunt. Laboris aliqua cupidatat ad adipisicing eiusmod qui do consectetur minim. Quis ipsum duis eiusmod nostrud dolore aliqua nulla ipsum aliquip sunt cupidatat dolore eu culpa. Laboris nisi mollit cillum eiusmod eu ut anim sint. Minim officia aliqua esse esse ut voluptate labore. Nulla id commodo duis proident.\r\n',
          'registered': '1994-01-07T23:21:36+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Green Knapp'
            },
            {
              'id': 1,
              'name': 'Reynolds Mayo'
            },
            {
              'id': 2,
              'name': 'Margie Patton'
            }
          ]
        },
        {
          'id': 483,
          'guid': 'd463c57e-7197-4a98-ba8a-af68bd0e5fbd',
          'isActive': false,
          'balance': '$2,269.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Tonya Sharpe',
          'gender': 'female',
          'company': 'Applideck',
          'email': 'tonyasharpe@applideck.com',
          'phone': '+1 (844) 443-2753',
          'address': {
            'street': 788,
            'city': 'Blairstown',
            'state': 'Kansas',
            'zip': 5260
          },
          'about': 'Cupidatat duis esse consequat fugiat exercitation nulla nostrud consequat culpa tempor anim occaecat ut elit. Cupidatat nisi est consequat incididunt voluptate nulla excepteur esse duis fugiat proident ea. Commodo commodo amet nostrud veniam nostrud mollit sint excepteur.\r\n',
          'registered': '1994-09-21T00:28:09+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Amber Hays'
            },
            {
              'id': 1,
              'name': 'Chandra Bright'
            },
            {
              'id': 2,
              'name': 'Woodard Rice'
            }
          ]
        },
        {
          'id': 484,
          'guid': 'e1a7f5ec-b477-4af3-a0c8-11ac008bc7bb',
          'isActive': true,
          'balance': '$2,750.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'William Shelton',
          'gender': 'male',
          'company': 'Honotron',
          'email': 'williamshelton@honotron.com',
          'phone': '+1 (977) 553-3810',
          'address': {
            'street': 306,
            'city': 'Lund',
            'state': 'Oklahoma',
            'zip': 6035
          },
          'about': 'Incididunt deserunt velit deserunt sint et cillum velit veniam. Qui qui velit elit esse reprehenderit commodo id pariatur. Dolor enim id esse laboris aliqua sint enim est cillum pariatur veniam consequat. Commodo ullamco fugiat proident irure irure magna ex.\r\n',
          'registered': '2007-09-13T01:58:32+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Nadine Simmons'
            },
            {
              'id': 1,
              'name': 'Olive Short'
            },
            {
              'id': 2,
              'name': 'Cristina Macias'
            }
          ]
        },
        {
          'id': 485,
          'guid': '81366490-38bc-4450-be48-0f37b0ac1125',
          'isActive': true,
          'balance': '$1,641.00',
          'picture': 'http://placehold.it/32x32',
          'age': 28,
          'name': 'Reba Miles',
          'gender': 'female',
          'company': 'Tetak',
          'email': 'rebamiles@tetak.com',
          'phone': '+1 (952) 449-3879',
          'address': {
            'street': 808,
            'city': 'Gorham',
            'state': 'Utah',
            'zip': 5536
          },
          'about': 'Adipisicing nisi officia labore labore velit id reprehenderit sunt ullamco cupidatat. Ullamco id id qui non cillum id commodo consequat exercitation aute reprehenderit. Ullamco officia ex aute consequat ad culpa nisi ex ullamco in id. Ex ad dolor exercitation dolore et ipsum. Elit exercitation eu qui mollit adipisicing.\r\n',
          'registered': '1993-07-26T15:43:35+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Leta Daugherty'
            },
            {
              'id': 1,
              'name': 'Jeri Conrad'
            },
            {
              'id': 2,
              'name': 'Jarvis Pitts'
            }
          ]
        },
        {
          'id': 486,
          'guid': '4a1bdf87-6151-40df-9545-ee6e6359652d',
          'isActive': true,
          'balance': '$1,324.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Christie Kerr',
          'gender': 'female',
          'company': 'Aquamate',
          'email': 'christiekerr@aquamate.com',
          'phone': '+1 (820) 594-2951',
          'address': {
            'street': 232,
            'city': 'Brownsville',
            'state': 'Maryland',
            'zip': 7212
          },
          'about': 'Qui anim do sit officia eiusmod dolor tempor culpa mollit sunt incididunt anim ullamco. Qui eiusmod sit commodo qui. Sint esse cupidatat cillum est deserunt duis. Reprehenderit incididunt aute reprehenderit commodo Lorem do cillum. Reprehenderit ullamco minim labore anim voluptate culpa veniam elit mollit consectetur anim. Consectetur incididunt fugiat sint anim deserunt do Lorem eiusmod. Cupidatat ea fugiat reprehenderit esse anim consequat consequat nostrud in anim ex.\r\n',
          'registered': '1993-08-28T23:47:50+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Rollins Kline'
            },
            {
              'id': 1,
              'name': 'Esther Reilly'
            },
            {
              'id': 2,
              'name': 'Jaime Mckenzie'
            }
          ]
        },
        {
          'id': 487,
          'guid': 'a1f13c2a-db68-48cc-800b-05d7539548f9',
          'isActive': true,
          'balance': '$1,005.00',
          'picture': 'http://placehold.it/32x32',
          'age': 30,
          'name': 'Selma Guerrero',
          'gender': 'female',
          'company': 'Apextri',
          'email': 'selmaguerrero@apextri.com',
          'phone': '+1 (809) 533-3543',
          'address': {
            'street': 334,
            'city': 'Flintville',
            'state': 'South Carolina',
            'zip': 7083
          },
          'about': 'Reprehenderit eu magna quis non irure eiusmod tempor. Dolore elit aliquip est adipisicing quis deserunt Lorem magna eu cupidatat. Minim in voluptate est ea.\r\n',
          'registered': '2001-04-28T20:40:08+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Justice Mccormick'
            },
            {
              'id': 1,
              'name': 'Castillo Powers'
            },
            {
              'id': 2,
              'name': 'Knowles Kelley'
            }
          ]
        },
        {
          'id': 488,
          'guid': '734ee2e0-f302-4d15-b956-21e1e7e2f415',
          'isActive': false,
          'balance': '$3,325.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Michele Vinson',
          'gender': 'female',
          'company': 'Interfind',
          'email': 'michelevinson@interfind.com',
          'phone': '+1 (843) 549-2392',
          'address': {
            'street': 582,
            'city': 'Sattley',
            'state': 'Virginia',
            'zip': 5500
          },
          'about': 'Do esse in in est. Velit proident duis adipisicing eu minim nostrud laboris aliquip eu. Laboris culpa tempor in anim laborum exercitation sit laboris minim occaecat et quis ex.\r\n',
          'registered': '2001-06-11T03:51:24+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Munoz Mercado'
            },
            {
              'id': 1,
              'name': 'Shelby Woodard'
            },
            {
              'id': 2,
              'name': 'Collier Weiss'
            }
          ]
        },
        {
          'id': 489,
          'guid': '4000e1f6-ec7d-4984-b12d-cc65f11e30de',
          'isActive': false,
          'balance': '$1,597.00',
          'picture': 'http://placehold.it/32x32',
          'age': 22,
          'name': 'Hansen Palmer',
          'gender': 'male',
          'company': 'Neptide',
          'email': 'hansenpalmer@neptide.com',
          'phone': '+1 (927) 497-2069',
          'address': {
            'street': 930,
            'city': 'Hiko',
            'state': 'Illinois',
            'zip': 7355
          },
          'about': 'Sunt consectetur nisi nisi incididunt nisi est velit pariatur ullamco. Minim est fugiat sint amet. Cillum occaecat id amet velit et incididunt occaecat duis laboris do et. Est quis dolore pariatur cillum excepteur nostrud eu nisi minim tempor. Cillum ad Lorem nostrud cillum incididunt.\r\n',
          'registered': '2010-07-11T07:49:34+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Glover Madden'
            },
            {
              'id': 1,
              'name': 'Nieves Fernandez'
            },
            {
              'id': 2,
              'name': 'Mcdowell Sharp'
            }
          ]
        },
        {
          'id': 490,
          'guid': 'e3e18815-3b60-46e1-8d16-9714b9164b8c',
          'isActive': false,
          'balance': '$3,922.00',
          'picture': 'http://placehold.it/32x32',
          'age': 27,
          'name': 'Sykes Woodward',
          'gender': 'male',
          'company': 'Capscreen',
          'email': 'sykeswoodward@capscreen.com',
          'phone': '+1 (835) 592-3867',
          'address': {
            'street': 634,
            'city': 'Frystown',
            'state': 'North Carolina',
            'zip': 3510
          },
          'about': 'Duis laboris qui fugiat laborum dolore quis officia mollit culpa et. Incididunt irure proident consectetur laborum nisi sunt non eu deserunt in esse. Labore commodo quis officia elit non ullamco culpa nulla ex Lorem dolore ad. Culpa non minim amet elit labore. Eu officia ullamco eu esse anim ipsum est dolor est minim amet et velit irure. Commodo consequat ipsum cillum nisi do. Aliqua in ipsum culpa dolor officia magna magna amet sunt laborum.\r\n',
          'registered': '1995-10-16T21:15:53+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Socorro Andrews'
            },
            {
              'id': 1,
              'name': 'Richmond Howell'
            },
            {
              'id': 2,
              'name': 'Katie Gillespie'
            }
          ]
        },
        {
          'id': 491,
          'guid': '7f3f1f93-f334-490d-9637-cdc2b2f208ea',
          'isActive': false,
          'balance': '$2,721.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Bartlett Benjamin',
          'gender': 'male',
          'company': 'Aquasseur',
          'email': 'bartlettbenjamin@aquasseur.com',
          'phone': '+1 (958) 419-2609',
          'address': {
            'street': 668,
            'city': 'Homestead',
            'state': 'Oklahoma',
            'zip': 9336
          },
          'about': 'Officia nulla aliquip ex non est do. Incididunt aliquip id eiusmod velit aute. Enim labore nostrud tempor mollit.\r\n',
          'registered': '2006-06-07T19:14:59+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Knox Murray'
            },
            {
              'id': 1,
              'name': 'Alana Garrett'
            },
            {
              'id': 2,
              'name': 'Mollie Chan'
            }
          ]
        },
        {
          'id': 492,
          'guid': 'eb57372f-78ef-420a-862c-7be576287e15',
          'isActive': false,
          'balance': '$3,263.00',
          'picture': 'http://placehold.it/32x32',
          'age': 23,
          'name': 'Morris Manning',
          'gender': 'male',
          'company': 'Manufact',
          'email': 'morrismanning@manufact.com',
          'phone': '+1 (844) 577-2596',
          'address': {
            'street': 149,
            'city': 'Ferney',
            'state': 'Maryland',
            'zip': 2427
          },
          'about': 'Elit quis deserunt duis reprehenderit aliquip sunt ut sint in Lorem velit aliqua. Culpa officia adipisicing excepteur minim minim voluptate excepteur esse nisi aute do ex. Consectetur elit minim quis consectetur nulla. Ipsum occaecat deserunt esse consequat officia ullamco nisi in officia.\r\n',
          'registered': '2010-06-08T21:28:48+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Tasha Lamb'
            },
            {
              'id': 1,
              'name': 'Golden Reynolds'
            },
            {
              'id': 2,
              'name': 'Myers Hayes'
            }
          ]
        },
        {
          'id': 493,
          'guid': '92532339-7f6d-49fe-ad52-d02ecb2ab941',
          'isActive': true,
          'balance': '$2,468.00',
          'picture': 'http://placehold.it/32x32',
          'age': 37,
          'name': 'Avila Riggs',
          'gender': 'male',
          'company': 'Vidto',
          'email': 'avilariggs@vidto.com',
          'phone': '+1 (898) 576-3105',
          'address': {
            'street': 583,
            'city': 'Delwood',
            'state': 'Illinois',
            'zip': 914
          },
          'about': 'Consectetur minim magna amet in ipsum Lorem sint ex sit mollit dolor veniam veniam. Ut pariatur aliqua est in anim fugiat quis. Nisi deserunt aliquip reprehenderit excepteur excepteur irure nostrud et amet magna exercitation exercitation culpa adipisicing.\r\n',
          'registered': '2007-12-20T10:51:48+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Patterson Blair'
            },
            {
              'id': 1,
              'name': 'Olsen Pitts'
            },
            {
              'id': 2,
              'name': 'Emma Madden'
            }
          ]
        },
        {
          'id': 494,
          'guid': '6300e171-0cc1-45a9-aea1-9ec8ec3820ec',
          'isActive': true,
          'balance': '$3,769.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Moon Tran',
          'gender': 'male',
          'company': 'Proxsoft',
          'email': 'moontran@proxsoft.com',
          'phone': '+1 (828) 539-2341',
          'address': {
            'street': 502,
            'city': 'Bordelonville',
            'state': 'California',
            'zip': 5023
          },
          'about': 'Voluptate laboris magna aliqua nulla minim eu pariatur aliqua officia fugiat ad. Tempor Lorem irure magna deserunt magna minim occaecat. Commodo minim in pariatur proident cupidatat qui est consequat aliqua. Et dolore ipsum laboris nisi et deserunt. Irure labore nisi est deserunt mollit laboris. Incididunt pariatur velit ea in aliquip sint mollit cupidatat id sit pariatur proident excepteur.\r\n',
          'registered': '2003-05-02T01:41:33+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Kasey Simon'
            },
            {
              'id': 1,
              'name': 'Sheree Blankenship'
            },
            {
              'id': 2,
              'name': 'Lee Oconnor'
            }
          ]
        },
        {
          'id': 495,
          'guid': '5a77fc33-0781-411a-8336-2c03dc15664c',
          'isActive': false,
          'balance': '$3,330.00',
          'picture': 'http://placehold.it/32x32',
          'age': 26,
          'name': 'Effie Cantrell',
          'gender': 'female',
          'company': 'Megall',
          'email': 'effiecantrell@megall.com',
          'phone': '+1 (803) 515-3375',
          'address': {
            'street': 244,
            'city': 'Chalfant',
            'state': 'Arkansas',
            'zip': 343
          },
          'about': 'Commodo elit commodo ea aute incididunt laboris exercitation labore culpa ad. Enim officia minim incididunt id nostrud tempor. Ad est commodo qui adipisicing amet. Minim reprehenderit occaecat laboris esse sunt.\r\n',
          'registered': '2007-10-07T06:22:19+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Frederick Fry'
            },
            {
              'id': 1,
              'name': 'Huber Perry'
            },
            {
              'id': 2,
              'name': 'Burns Franks'
            }
          ]
        },
        {
          'id': 496,
          'guid': 'fcfe7484-9d2f-4749-89a4-44944754ca66',
          'isActive': true,
          'balance': '$3,970.00',
          'picture': 'http://placehold.it/32x32',
          'age': 33,
          'name': 'Atkinson Forbes',
          'gender': 'male',
          'company': 'Vurbo',
          'email': 'atkinsonforbes@vurbo.com',
          'phone': '+1 (988) 585-3525',
          'address': {
            'street': 442,
            'city': 'Loyalhanna',
            'state': 'Louisiana',
            'zip': 9507
          },
          'about': 'Incididunt velit nostrud do ipsum deserunt magna id cupidatat Lorem dolor nulla ex duis. Esse adipisicing et pariatur occaecat sint do officia id aliqua. Ut nisi enim deserunt est magna ullamco voluptate anim cillum.\r\n',
          'registered': '2013-07-03T00:49:30+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Nicholson Leach'
            },
            {
              'id': 1,
              'name': 'Wade Schultz'
            },
            {
              'id': 2,
              'name': 'Jacquelyn Mcdaniel'
            }
          ]
        },
        {
          'id': 497,
          'guid': '86474dbe-5949-47a3-a90b-41c082ae728b',
          'isActive': false,
          'balance': '$1,551.00',
          'picture': 'http://placehold.it/32x32',
          'age': 24,
          'name': 'Whitfield Humphrey',
          'gender': 'male',
          'company': 'Deminimum',
          'email': 'whitfieldhumphrey@deminimum.com',
          'phone': '+1 (908) 437-3139',
          'address': {
            'street': 585,
            'city': 'Edgewater',
            'state': 'Ohio',
            'zip': 9405
          },
          'about': 'Elit minim ea duis laborum sit eiusmod. Elit quis magna elit ut qui officia amet et qui enim cupidatat ut eiusmod. Aute deserunt do duis cupidatat sint voluptate consectetur et minim eiusmod est. Excepteur anim ullamco occaecat eu eiusmod. Consequat sit mollit eiusmod reprehenderit eiusmod.\r\n',
          'registered': '1991-12-07T07:16:59+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Ford Henry'
            },
            {
              'id': 1,
              'name': 'Ronda Warren'
            },
            {
              'id': 2,
              'name': 'Anthony Weaver'
            }
          ]
        },
        {
          'id': 498,
          'guid': 'd2845bc9-94ed-46d5-8241-c0ca9c891b46',
          'isActive': false,
          'balance': '$3,071.00',
          'picture': 'http://placehold.it/32x32',
          'age': 40,
          'name': 'Jocelyn Cobb',
          'gender': 'female',
          'company': 'Cytrex',
          'email': 'jocelyncobb@cytrex.com',
          'phone': '+1 (963) 430-2757',
          'address': {
            'street': 639,
            'city': 'Frank',
            'state': 'Minnesota',
            'zip': 4316
          },
          'about': 'Est id laboris ea aliquip anim laboris amet nostrud pariatur excepteur. Ullamco aliqua est qui cupidatat deserunt sint consequat elit labore laborum eu. Elit sunt labore elit proident. Adipisicing sunt ex ad quis ex id et cupidatat dolor veniam ipsum ex mollit. Esse in laboris labore do commodo velit velit quis consectetur duis. Consequat veniam sit incididunt anim consequat sunt. Sunt ipsum adipisicing aute magna commodo consequat enim eu aliqua Lorem.\r\n',
          'registered': '1996-11-30T01:37:54+06:00',
          'friends': [
            {
              'id': 0,
              'name': 'Reese Owen'
            },
            {
              'id': 1,
              'name': 'Bass Welch'
            },
            {
              'id': 2,
              'name': 'Hickman Lyons'
            }
          ]
        },
        {
          'id': 499,
          'guid': '29dff816-4f3d-4f4a-85ec-d56c0dbbf7d6',
          'isActive': true,
          'balance': '$1,467.00',
          'picture': 'http://placehold.it/32x32',
          'age': 38,
          'name': 'Marci Emerson',
          'gender': 'female',
          'company': 'Thredz',
          'email': 'marciemerson@thredz.com',
          'phone': '+1 (988) 560-2140',
          'address': {
            'street': 182,
            'city': 'Mulino',
            'state': 'Montana',
            'zip': 9710
          },
          'about': 'Laborum commodo velit fugiat voluptate ut sit occaecat veniam do voluptate adipisicing reprehenderit incididunt. Minim incididunt fugiat ullamco labore in ullamco Lorem eiusmod ad duis dolore adipisicing. Nulla ullamco proident nisi est ullamco aliquip nisi mollit consectetur consequat veniam ipsum. Ex eu deserunt aute esse. Ut aliquip quis commodo ullamco esse incididunt velit aliquip laboris tempor ut ipsum.\r\n',
          'registered': '1994-08-15T22:58:01+05:00',
          'friends': [
            {
              'id': 0,
              'name': 'Brooks Hickman'
            },
            {
              'id': 1,
              'name': 'Mara Everett'
            },
            {
              'id': 2,
              'name': 'Mable Flores'
            }
          ]
        }
      ]
    };
  }
]);
angular.module('demo').controller('tablesPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('tabsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('tabsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('tooltipsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('tooltipsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('typographyCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('typographyPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('ratingsAndReviewsCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
    // this is for functionality related to demo code
    var block = 0;
    var s = 0;
    var totalRatings = 0;
    var ratingAverage = 0;
    var a = 0;
    var thisVar = 0;
    var perCent = 0;
    var recs = 0;
    var totalUsers = 0;
    function renderStars(contextPath, thisVar, perCent) {
      //render stars
      $(contextPath, thisVar).prevAll().andSelf().addClass('yesRatings');
      $(contextPath, thisVar).prevAll().andSelf().removeClass('noRatings');
      $(contextPath, thisVar).prevAll().andSelf().html('<i class="icon-small-favorite-100"></i>');
      $(contextPath, thisVar).nextAll().addClass('noRatings');
      $(contextPath, thisVar).nextAll().removeClass('yesRatings');
      $(contextPath, thisVar).nextAll().html('<i class="icon-small-favorite-0"></i>');
      $(contextPath, thisVar).next().html('<i class="icon-small-favorite-' + perCent * 10 % 10 + '0"></i>');
      console.log(perCent * 10 % 10);
    }
    // iterate through recomends divs on the page
    $('.recoRatio').each(function () {
      $(this).html('<strong style=\'font-size:15px;\'>' + $(this).data('recs') + '</strong> out of <strong style=\'font-size:15px;\'>' + $(this).data('total') + '</strong> (' + Math.floor(parseInt($(this).data('recs')) / parseInt($(this).data('total')) * 100) + '%) people would recommend this product to a friend');
    });
    // iterate through like / dislike divs on the page
    $('.likeDislike').each(function () {
      $(this).html('<a class=\'btn btn-default\'>Yes (' + $(this).data('yes') + ')</a><a class=\'btn btn-default\'>No (' + $(this).data('no') + ')</a>');
    });
    // iterate through like / dislike divs on the page
    $('.individual-rating').each(function () {
      $(this).html('<div class=\'pull-left\'>' + $(this).data('ratingLabel') + '</div><div class=\'pull-right\'>' + $(this).data('userRating') + '/5</div>');
    });
    // iterate through rating divs on the page
    $('.ratingBlock').each(function () {
      // grab the data
      var block = $(this).data('reviewStars');
      // check if there are any star ratings
      if (block.length > 1) {
        //there is rating data
        s = block;
        //store data in an array
        totalRatings = s[0] + s[1] + s[2] + s[3] + s[4];
        //total number of ratings
        ratingAverage = ((s[0] + s[1] * 2 + s[2] * 3 + s[3] * 4 + s[4] * 5) / totalRatings).toFixed(1);
        // get average and store it
        //inject content on the page
        $(this).html('<div style=\'width:100%;\' class=\'pull-left\'><div class=\'starbox pull-left yesRatings\'><span data-rate=\'1\'><i class=\'icon-small-favorite-0\'></i></span><span data-rate=\'2\'><i class=\'icon-small-favorite-0\'></i></span><span data-rate=\'3\'><i class=\'icon-small-favorite-0\'></i></span><span data-rate=\'4\'><i class=\'icon-small-favorite-0\'></i></span><span data-rate=\'5\'><i class=\'icon-small-favorite-0\'></i></span></div><div class=\'pull-left reviewText\'><div class=\'pointy text-blue bold-12 pull-left\'>' + totalRatings + '&nbsp;</div><div class=\'pointy text-blue bold-12 pull-left\'> Ratings</div></div><div class=\'pull-right reviewText\'><div class=\'pointy text-blue bold-12\'>Write your review</div></div></div>');
        $(this).data('userRating', ratingAverage);
        //set current user rating stars
        a = 'span:nth-child(' + Math.floor(parseInt($(this).data('userRating'))) + ')';
        //render stars
        renderStars(a, $(this), $(this).data('userRating'));
      } else {
        //nope, no data... just render the blank stars
        $(this).html('<div style="width:100%;" class="pull-left"><div class="starbox pull-left"><span data-rate="1"><i class="icon-small-favorite-0"></i></span><span data-rate="2"><i class="icon-small-favorite-0"></i></span><span data-rate="3"><i class="icon-small-favorite-0"></i></span><span data-rate="4"><i class="icon-small-favorite-0"></i></span><span data-rate="5"><i class="icon-small-favorite-0"></i></span></div><div class="pull-left reviewText"><div class="linkStyle text-blue">Write your review</div></div>');
        a = 'span:nth-child(' + Math.floor(parseInt($(this).data('userRating'))) + ')';
        //render stars
        renderStars(a, $(this), $(this).data('userRating'));
      }
      if ($(this).data('histogram') === 'yes') {
        $(this).addClass('histogramBlock');
        $(this).removeClass('ratingBlock');
        $(this).append('<div style=\'width:100%;\' class=\'pull-left\'><p>' + ratingAverage + ' out of 5</p></div><div style=\'width:100%;\' class=\'pull-left\'><table width=\'100%\'><tr height=\'24px\'><td width=\'15%\'>5 Stars</td><td width=\'70%\'><div class=\'barG\'><div class=\'histBar well-blue\' style=\'width:' + Math.floor(s[4] / totalRatings * 217) + 'px;\'>&nbsp;</div></div></td><td width=\'15%\'>&nbsp;&nbsp;' + s[4] + '</td></tr><tr><td>4 Stars</td><td><div class=\'barG\'><div class=\'histBar well-blue\' style=\'width:' + Math.floor(s[3] / totalRatings * 217) + 'px;\'>&nbsp;</div></div></td><td>&nbsp;&nbsp;' + s[3] + '</td></tr><tr><td>3 Stars</td><td><div class=\'barG\'><div class=\'histBar well-blue\' style=\'width:' + Math.floor(s[2] / totalRatings * 217) + 'px;\'>&nbsp;</div></div></td><td>&nbsp;&nbsp;' + s[2] + '</td></tr><tr><td>2 Stars</td><td><div class=\'barG\'><div class=\'histBar well-blue\' style=\'width:' + Math.floor(s[1] / totalRatings * 217) + 'px;\'>&nbsp;</div></div></td><td>&nbsp;&nbsp;' + s[1] + '</td></tr><tr><td>1 Star</td><td><div class=\'barG\'><div class=\'histBar well-blue\' style=\'width:' + Math.floor(s[0] / totalRatings * 217) + 'px;\'>&nbsp;</div></div></td><td>&nbsp;&nbsp;' + s[0] + '</td></tr></table></div>');
      }
    });
    // iterate through Customer Quote divs on the page
    $('.revQuote').each(function () {
      $(this).html('<p style="font-size:15px;">"' + $(this).data('quote') + '"</p><span style="font-size:12px;">- ' + $(this).data('attribution') + '</span>');
    });
    //star rating hover function
    $('.starbox > span').mouseenter(function () {
      $(this).prevAll().andSelf().addClass('yesRatings');
      $(this).prevAll().andSelf().removeClass('noRatings');
      $(this).prevAll().andSelf().html('<i class="icon-small-favorite-100"></i>');
      $(this).nextAll().addClass('noRatings');
      $(this).nextAll().removeClass('yesRatings');
      $(this).nextAll().html('<i class="icon-small-favorite-0"></i>');
      console.log('Hover!');
    }).click(function () {
      //set user rating
      $(this).parent().parent().data('userRating', Math.floor(parseInt($(this).data('rate'))));
      console.log('Click!');
    });
    //click to set user rating
    $('.starbox > span').on('click', function () {
      //set user rating
      $(this).parent().parent().data('userRating', Math.floor(parseInt($(this).data('rate'))));
      console.log('Click!');
    });
    $('.starbox').mouseout(function () {
      //set current user rating stars
      a = 'span:nth-child(' + Math.floor(parseInt($(this).parent().parent().data('userRating'))) + ')';
      //render stars
      if ($(this).parent().parent().data('userRating') === 0) {
        $('span:nth-child(5)', $(this)).prevAll().andSelf().addClass('noRatings');
        $('span:nth-child(5)', $(this)).prevAll().andSelf().removeClass('yesRatings');
        $('span:nth-child(5)', $(this)).prevAll().andSelf().html('<i class="icon-small-favorite-0"></i>');
      } else {
        renderStars(a, $(this), $(this).parent().parent().data('userRating'));
      }
    });
  }
]);
angular.module('demo').controller('ratingsAndReviewsPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('contentTeaserCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('contentTeaserPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('dateSelectorCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]).controller('DatepickerDemoCtrl', [
  '$scope',
  function ($scope) {
    $scope.today = function () {
      $scope.dt = new Date();
    };
    // $scope.today();
    $scope.clear = function () {
      $scope.dt = null;
    };
    // Disable weekend selection
    $scope.disabled = function (date, mode) {
      return mode === 'day' && (date.getDay() === 0 || date.getDay() === 6);
    };
    $scope.toggleMin = function () {
      $scope.minDate = $scope.minDate ? null : new Date();
    };
    // $scope.toggleMin();
    $scope.open = function ($event) {
      $event.preventDefault();
      $event.stopPropagation();
      $scope.opened = true;
    };
    $scope.dateOptions = {
      formatYear: 'yy',
      startingDay: 1
    };
    $('thead > tr > th').addClass('theader');
  }
]);
angular.module('demo').controller('dateSelectorPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
angular.module('demo').controller('searchAndNavigationCtrl', [
  '$scope',
  '$rootScope',
  function ($scope, $rootScope) {
  }
]);
angular.module('demo').controller('searchAndNavigationPLayDemoCtrl', [
  '$scope',
  '$rootScope',
  '$sce',
  function ($scope, $rootScope, $sce) {
  }
]);
/////////////////// CheckBox Filter Example
///////////////////////////////////////////
function myCheckboxCtrl($scope) {
  $scope.selected = {};
  $scope.classes = [
    'size1',
    'size2',
    'size3'
  ];
  $scope.cards = [
    {
      name: 'Result1',
      size: 'size1',
      price: 'price1'
    },
    {
      name: 'Result2',
      size: 'size1',
      price: 'price2'
    },
    {
      name: 'Result3',
      size: 'size1',
      price: 'price3'
    },
    {
      name: 'Result4',
      size: 'size2',
      price: 'price1'
    },
    {
      name: 'Result5',
      size: 'size2',
      price: 'price2'
    },
    {
      name: 'Result6',
      size: 'size2',
      price: 'price3'
    },
    {
      name: 'Result7',
      size: 'size3',
      price: 'price1'
    },
    {
      name: 'Result8',
      size: 'size3',
      price: 'price2'
    },
    {
      name: 'Result9',
      size: 'size3',
      price: 'price3'
    }
  ];
  function isChecked(obj) {
    var checked = [];
    for (var key in obj) {
      if (obj[key]) {
        checked.push(key);
      }
    }
    return checked;
  }
  $scope.showCards = function (card) {
    var checked = isChecked($scope.selected);
    if (checked.length < 1) {
      checked = $scope.classes;
    }
    return checked.indexOf(card.size) > -1;
  };
}
/////////////////// Drop Down Filter Example
////////////////////////////////////////////
function myDDCtrl($scope) {
  $scope.selected = {};
  $scope.filterOptions = {
    sizes: [
      { size: 'size1' },
      { size: 'size2' },
      { size: 'size3' },
      { size: 'size4' }
    ],
    prices: [
      { pricerange: 'price1' },
      { pricerange: 'price2' },
      { pricerange: 'price3' },
      { pricerange: 'price4' }
    ]
  };
  $scope.data = [
    {
      name: 'Result1',
      size: 'size1',
      pricerange: 'price1'
    },
    {
      name: 'Result2',
      size: 'size1',
      pricerange: 'price2'
    },
    {
      name: 'Result3',
      size: 'size1',
      pricerange: 'price3'
    },
    {
      name: 'Result4',
      size: 'size1',
      pricerange: 'price4'
    },
    {
      name: 'Result5',
      size: 'size2',
      pricerange: 'price2'
    },
    {
      name: 'Result6',
      size: 'size2',
      pricerange: 'price3'
    },
    {
      name: 'Result7',
      size: 'size2',
      pricerange: 'price4'
    },
    {
      name: 'Result8',
      size: 'size2',
      pricerange: 'price1'
    },
    {
      name: 'Result9',
      size: 'size3',
      pricerange: 'price2'
    },
    {
      name: 'Result10',
      size: 'size3',
      pricerange: 'price3'
    },
    {
      name: 'Result11',
      size: 'size3',
      pricerange: 'price4'
    },
    {
      name: 'Result12',
      size: 'size3',
      pricerange: 'price1'
    },
    {
      name: 'Result13',
      size: 'size4',
      pricerange: 'price2'
    },
    {
      name: 'Result14',
      size: 'size4',
      pricerange: 'price3'
    },
    {
      name: 'Result15',
      size: 'size4',
      pricerange: 'price4'
    }
  ];
  //Mapped to the model to filter
  $scope.filterItem = { store: $scope.filterOptions.sizes[0] };
  //Custom filter - filter based on the rating selected
  $scope.customFilter = function (data) {
    if (data.size === $scope.filterItem.store.sizes) {
      return true;
    } else {
      return false;
    }
  };
}
angular.module('dellUiComponents').run([
  '$templateCache',
  function ($templateCache) {
    'use strict';
    $templateCache.put('components/alerts/demo-alerts.html', '<section ng-controller=alertsCtrl id=alerts-html-example><div class=container><h2>Alerts Demo</h2><h3 class=bottom-offset-20>Alert types</h3><div class="alert alert-warning"><p><strong>User Errors:</strong>A soft stop, requiring users to take an action before proceeding. The error cannot be dismissed and is visible until the error is fixed.</p></div><div class="row bottom-offset-20"><div class="col-xs-12 col-md-4"><div class="alert alert-success alert-collapsible"><button type=button class=close data-toggle=collapse data-target=.cssDataTargetDismiss-2>\xd7</button><p class=show-expanded><strong>Success Alerts:</strong> Indicates the task has been completed successfully. Can be collapsed and reopened.</p><p class=show-collapsed>Re-open dismissed info alert</p></div></div><div class="col-xs-12 col-md-4"><div class="alert alert-info alert-collapsible"><button type=button class=close>\xd7</button><p class=show-expanded><strong>Information Alerts:</strong> Information alerts display important information for the page. Can be collapsed and reopened.</p><p class=show-collapsed>Re-open dismissed info alert</p></div></div><div class="col-xs-12 col-md-4"><div class="alert alert-error"><p><strong>Catastrophic Errors:</strong>A hard stop, meaning users cannot go forward. Cannot be collapsed.</p></div></div></div><h3 class="top-offset-40 bottom-offset-20">Informational alerts</h3><div class="alert alert-info alert-collapsible"><button type=button class=close>\xd7</button><p class=show-expanded><strong>Informational alerts:</strong> Information alerts display important information for the page. Can be collapsed and reopened.</p><p class=show-collapsed>Re-open dismissed alert</p></div><div class="alert alert-info alert-collapsible"><button type=button class=close data-toggle=collapse data-target=".cssDataTargetDismiss-5 ">\xd7</button><div class=show-expanded><h4>Informational alerts example with a title.</h4><p>Information alerts display important information for the page. Can be collapsed and reopened.</p></div><p class=show-collapsed>Re-open dismissed alert</p></div><div class=alert><div class="alert-info alert-collapsible"><button type=button class=close>\xd7</button><div class=show-expanded><h4>Informational alerts example with a title and multiple links.</h4><p class=bottom-offset-0>Information alerts display important information for the page. Can be collapsed and reopened.</p><ul><li>Lorum ipsum with <a href=javascript:;>anchor link</a></li><li>Lorum ipsum with <a href=javascript:;>anchor link</a></li><li>Lorum ipsum with <a href=javascript:;>anchor link</a></li></ul></div><p class=show-collapsed>Re-open <strong>first</strong> dismissed alert</p></div><div class="alert-info alert-collapsible"><button type=button class=close>\xd7</button><div class=show-expanded><h4>Additional alert example.</h4><p class=bottom-offset-0>Information alerts display important information for the page. Can be collapsed and reopened.</p><ul><li>Lorum ipsum with <a href=javascript:;>anchor link</a></li><li>Lorum ipsum with <a href=javascript:;>anchor link</a></li><li>Lorum ipsum with <a href=javascript:;>anchor link</a></li></ul></div><p class=show-collapsed>Re-open <strong>second</strong> dismissed alert</p></div></div><h3 class="top-offset-40 bottom-offset-20">Success alerts</h3><div class="alert alert-success alert-collapsible"><button type=button class=close>\xd7</button><p class=show-expanded><strong>Success alerts:</strong> Indicates the task has been completed successfully. Can be collapsed and reopened.</p><p class=show-collapsed>Re-open dismissed alert</p></div><div class="alert alert-success alert-collapsible"><button type=button class=close>\xd7</button><div class=show-expanded><h4>Success alerts example with a title.</h4><p><strong>Success alerts:</strong>Indicates the task has been completed successfully. Can be collapsed and reopened.</p></div><p class=show-collapsed>Re-open dismissed alert</p></div><div class="alert alert-success alert-collapsible"><button type=button class=close>\xd7</button><div class=show-expanded><h4>Success alerts example with a title and multiple links.</h4><p class=bottom-offset-0>Indicates the task has been completed successfully. Can be collapsed and reopened.</p><ul><li>Lorum ipsum with <a href=javascript:;>anchor link</a></li><li>Lorum ipsum with <a href=javascript:;>anchor link</a></li><li>Lorum ipsum with <a href=javascript:;>anchor link</a></li></ul></div><p class=show-collapsed>Re-open dismissed alert</p></div><h3 class="top-offset-40 bottom-offset-20">User Error</h3><div class="alert alert-warning alert-collapsible"><p class=show-expanded><strong>User Errors:</strong> A soft stop, requiring users to take an action before proceeding. The error cannot be dismissed and is visible until the error is fixed.</p><p class=show-collapsed>Re-open dismissed alert</p></div><div class=alert><div class=alert-warning><h4>User Errors example with a title and multiple links.</h4><p class=bottom-offset-0>A soft stop, requiring users to take an action before proceeding. The error cannot be dismissed and is visible until the error is fixed.</p><ul><li>Lorum ipsum with <a href=javascript:;>anchor link</a></li><li>Lorum ipsum with <a href=javascript:;>anchor link</a></li><li>Lorum ipsum with <a href=javascript:;>anchor link</a></li></ul></div><div class="alert-info alert-collapsible"><button type=button class=close>\xd7</button><div class=show-expanded><h4>Dismissible informational alert example with title.</h4><p class=bottom-offset-0>Dolor sit amet, con Maecenas egestas scelerisque porttitor. Dolor sit amet, con Maecenas egestas scelerisque porttitor.</p><ul><li>Lorum ipsum with <a href=javascript:;>anchor link</a></li><li>Lorum ipsum with <a href=javascript:;>anchor link</a></li><li>Lorum ipsum with <a href=javascript:;>anchor link</a></li></ul></div><p class=show-collapsed>Re-open dismissed alert</p></div></div><h3 class="top-offset-40 bottom-offset-20">Catastrophic Error</h3><div class="alert alert-error"><p><strong>Catastrophic Errors:</strong>A hard stop, meaning users cannot go forward. Cannot be collapsed.</p></div><div class="alert alert-error"><h4>Catastrophic Errors example with a title</h4><p>A hard stop, meaning users cannot go forward. Cannot be collapsed.</p></div></div></section>');
    $templateCache.put('components/alerts/demo-play-alerts.html', '<section ng-controller=alertsPLayDemoCtrl id=alerts-play-demo><div class=container><h2>Alerts Builder</h2><div></div></div></section>');
    $templateCache.put('components/announcements/demo-announcements.html', '<section ng-controller=announcementsCtrl id=announcements-html-example><div class=container><h2>Announcements Demo</h2><div><h3>Default announcement (Bootstrap blockquote)</h3><div id=announcement-default><blockquote><h4>Lorem ipsum dolor sit amet</h4><p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p></blockquote></div><h3>Right justified announcement (Bootstrap blockquote - pull right)</h3><div id=announcement-default><blockquote class=pull-right><h4>Lorem ipsum dolor sit amet</h4><p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p></blockquote></div><h3>Announcements with links</h3><p>An Announcement can include a maximum of 2 links. Links are stacked vertically</p><div class="bottom-offset-10 clearfix"><h3>Colored bar with title and call to action link</h3><div id=announcement-call-to-action><blockquote class=blockquote-blue><h4>Lorem ipsum dolor sit amet</h4><p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p><ul class="list-unstyled list-inline blockquote-links"><li><a href=javascript:;>Claim your rewards</a></li></ul></blockquote></div></div><div class="bottom-offset-10 clearfix"><h3>Colored bar with two call to action links</h3><div id=announcement-two-call-to-action><blockquote class=blockquote-blue><p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p><ul class="list-unstyled list-inline blockquote-links"><li><a href=javascript:;>Claim your rewards</a></li><li><a href=javascript:;>Register now for free</a></li></ul></blockquote></div></div><h3>Announcements with color treatment (Bootstrap enhancement)</h3><div id=announcement-blue><blockquote class=blockquote-blue><h4>Lorem ipsum dolor sit amet</h4><p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p></blockquote></div><div id=announcement-green><blockquote class=blockquote-green><h4>Lorem ipsum dolor sit amet</h4><p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p></blockquote></div><div id=announcement-purple><blockquote class=blockquote-purple><h4>Lorem ipsum dolor sit amet</h4><p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p></blockquote></div><div id=announcement-orange><blockquote class=blockquote-orange><h4>Lorem ipsum dolor sit amet</h4><p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p></blockquote></div><div id=announcement-berry><blockquote class=blockquote-berry><h4>Lorem ipsum dolor sit amet</h4><p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p></blockquote></div><div id=announcement-red><blockquote class=blockquote-red><h4>Lorem ipsum dolor sit amet</h4><p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p></blockquote></div><div id=announcement-red-dark><blockquote class=blockquote-red-dark><h4>Lorem ipsum dolor sit amet</h4><p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p></blockquote></div><div id=announcement-dark-blue><blockquote class=blockquote-dark-blue><h4>Lorem ipsum dolor sit amet</h4><p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p></blockquote></div><h3>Announcements with icon treatment (Dell specific enhancement)</h3><div id=announcement-icon-dpa><blockquote class=blockquote-icon><div class=blockquote-dell-dpa></div><h4>Lorem ipsum dolor sit amet</h4><p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p></blockquote></div><div id=announcement-icon-advantage><blockquote class=blockquote-icon><div class=blockquote-dell-advantage></div><div><h4>Lorem ipsum dolor sit amet</h4><p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p></div></blockquote></div><h3>Right justified announcements with icon treatment (Dell specific enhancement)</h3><div id=announcement-icon-dpa><blockquote class="blockquote-icon pull-right"><div class="blockquote-dell-dpa pull-right"></div><h4 class=text-rtl>Lorem ipsum dolor sit amet</h4><p class=text-rtl>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p></blockquote></div><div id=announcement-icon-advantage><blockquote class="blockquote-icon pull-right"><div class="blockquote-dell-advantage pull-right"></div><div><h4 class=text-rtl>Lorem ipsum dolor sit amet</h4><p class=text-rtl>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p></div></blockquote></div></div></div></section>');
    $templateCache.put('components/announcements/demo-play-announcements.html', '<section ng-controller=announcementsPLayDemoCtrl id=announcements-play-demo><div class=container><h2>Announcements Builder</h2><div><h4>Rendered Example</h4><div id=announcement-play-code ng-bind-html=renderingHTML></div><h4>Rendered HTML Code</h4><div class=play-code><button to-clipboard clipboard-target=#announcement-play-code class="btn btn-xs btn-default copy-play-code">copy html</button><pre><code>{{playHtmlCode}}</code></pre></div><hr><div class=row><div class=col-sm-5><h4>Customize</h4><div class=form-group><label for=text-label-input>ID</label><div><input type=text class=form-control id=sample-announcement-id placeholder=optional ng-model=sampleAnnouncementConfig.id></div></div><div class=form-group><label for=sample-announcement-type>Type</label><select class=form-control id=sample-announcement-type ng-model=sampleAnnouncementConfig.type><option value=blue>Blue (Default)</option><option value=purple>Purple</option><option value=green>Green</option><option value=orange>Orange</option><option value=berry>Berry</option><option value=dark-blue>Dark blue</option><option value=red>Red</option><option value=red-dark>Dark red</option><option value=gray>Gray</option><option value=gray-dark>Dark gray</option><option value=icon>Icon</option></select></div><div class=form-group ng-if="sampleAnnouncementConfig.type===\'icon\'"><label for=sample-announcement-icon>Icon</label><select class=form-control id=sample-announcement-icon ng-model=sampleAnnouncementConfig.icon><option value=dell-advantage-star>Star (Default)</option><option value=dpa-card>Dell Prefered Card</option></select></div><div class=form-group><label for=text-label-input>Title</label><div><input type=text class=form-control id=sample-announcement-title placeholder=optional ng-model=sampleAnnouncementConfig.title></div></div><div class=form-group><label for=textarea>Body text</label><textarea id=sample-announcement-body class=form-control rows=5 ng-model=sampleAnnouncementConfig.body></textarea></div><div class=form-group><label for=text-label-input>First Link</label><div><input type=text class="form-control bottom-offset-10" placeholder=label ng-model=sampleAnnouncementConfig.cta_0.label> <input type=text class=form-control placeholder=url ng-model=sampleAnnouncementConfig.cta_0.url></div></div><div class=form-group><label for=text-label-input>Second Link</label><div><input type=text class="form-control bottom-offset-10" placeholder=label ng-model=sampleAnnouncementConfig.cta_1.label> <input type=text class=form-control placeholder=url ng-model=sampleAnnouncementConfig.cta_1.url></div></div></div><div class=col-sm-7><prototype-code-title></prototype-code-title><div ng-if=sampleAnnouncementConfig.id><h5>HTML code</h5><div class=play-code><button to-clipboard clipboard-target=#announcement-sherpa-code class="btn btn-xs btn-default copy-play-code">copy html</button><pre><code id=announcement-sherpa-code>&lt;blockquote id="{{sampleSherpaConfig.id | _.str: \'dasherize\'}}" class="blockquote-{{sampleSherpaConfig.type}}"&gt;\r' + '\n' + '\t&lt;h4 msg="title_{{sampleSherpaConfig.id | _.str: \'underscored\'}}"&gt;&lt;/h4&gt;\r' + '\n' + '\t&lt;p msg="text_{{sampleSherpaConfig.id | _.str: \'underscored\'}}"&gt;&lt;/p&gt;\r' + '\n' + '&lt;/blockquote&gt;</code></pre></div><h5>Textkeys to add to messages file</h5><div class=play-code ng-if=textkeysToAdd><button to-clipboard clipboard-target=#announcement-sherpa-keys class="btn btn-xs btn-default copy-play-code">copy keys</button><pre><code id=announcement-sherpa-keys>{{textkeysToAdd}}</code></pre></div><pre ng-if=!textkeysToAdd>None specified until custom body or title is entered.</pre><h5>Resource keys to add to resources file</h5><div class=play-code ng-if=resourcesToAdd><button to-clipboard clipboard-target=#announcement-sherpa-resource-keys class="btn btn-xs btn-default copy-play-code">copy keys</button><pre><code id=announcement-sherpa-resource-keys>{{resourcesToAdd}}</code></pre></div><pre ng-if=!resourcesToAdd>None specified until cta is specified.</pre></div><p ng-if=!sampleAnnouncementConfig.id>Must enter id to see Sherpa code</p></div></div></div></div></section>');
    $templateCache.put('components/block-buttons/demo-block-buttons.html', '<section ng-controller=blockButtonsCtrl id=block-buttons-html-example><div class=container><h2 class=bottom-offset-40>Block-Buttons Demo</h2><div class="top-offset-20 bottom-offset-30"><div class=row><h4 class=col-xs-12>Block level button col-xs-12</h4><div class=col-xs-12><button class="btn btn-primary btn-lg btn-block" type=button>col-xs-12</button></div><h4 class="top-offset-40 col-xs-12">Block level button col-xs-6</h4><div class=col-xs-6><button class="btn btn-primary btn-lg btn-block" type=button>col-xs-6</button></div><h4 class="top-offset-40 col-xs-12">Block level button col-xs-4</h4><div class=col-xs-4><button class="btn btn-primary btn-lg btn-block" type=button>col-xs-4</button></div></div></div></div></section>');
    $templateCache.put('components/block-buttons/demo-play-block-buttons.html', '<section ng-controller=blockButtonsPLayDemoCtrl id=block-buttons-play-demo><div class=container><h2>Block-Buttons Builder</h2><div></div></div></section>');
    $templateCache.put('components/breadcrumbs/demo-breadcrumbs.html', '<section ng-controller=breadcrumbsCtrl id=breadcrumbs-html-example><div class=container><h2 class=bottom-offset-20>Breadcrumbs Demo</h2><div class=bottom-offset-30><h4>Generic Breadcrumb</h4><ul class=breadcrumb><li><a href=#></a><span class=divider></span></li><li><a href=#>Level 1</a><span class=divider></span></li><li><a href=#>Level 2</a><span class=divider></span></li><li><a href=#>Level 3</a><span class=divider></span></li><li><a href=#>Level 4</a><span class=divider></span></li><li class=active>Level 5</li></ul></div></div></section>');
    $templateCache.put('components/breadcrumbs/demo-play-breadcrumbs.html', '<section ng-controller=breadcrumbsPLayDemoCtrl id=breadcrumbs-play-demo><div class=container><h2>Breadcrumbs Builder</h2><div></div></div></section>');
    $templateCache.put('components/carousel/demo-carousel.html', '<section ng-controller=carouselCtrl id=carousel-html-example><div class=container><h2>Carousel Demo</h2><h3 class=top-offset-40>Banner carousel with all options</h3><div id=banner-carousel-example class="carousel slide carousel-gallery" data-ride=carousel><div class=carousel-inner><div class=item><a href=javascript:;><img alt="First slide" src=http://placehold.it/1140x430></a></div><div class="item active"><a href=javascript:;><img alt="Second slide" src=http://placehold.it/1140x430></a></div><div class=item><a href=javascript:;><img alt="Third slide" src=http://placehold.it/1140x430></a></div></div><ol class=carousel-indicators><li data-target=#banner-carousel-example data-slide-to=0></li><li data-target=#banner-carousel-example data-slide-to=1 class=active></li><li data-target=#banner-carousel-example data-slide-to=2></li></ol><a class="left carousel-control" href=#banner-carousel-example data-slide=prev></a> <a class="right carousel-control" href=#banner-carousel-example data-slide=next></a></div><h3 class=top-offset-40>Banner carousel with no arrows</h3><div id=banner-carousel-no-arrows-example class="carousel slide carousel-gallery" data-ride=carousel><div class=carousel-inner><div class=item><a href=javascript:;><img alt="First slide" src=http://placehold.it/1140x430></a></div><div class="item active"><a href=javascript:;><img alt="Second slide" src=http://placehold.it/1140x430></a></div><div class=item><a href=javascript:;><img alt="Third slide" src=http://placehold.it/1140x430></a></div></div><ol class=carousel-indicators><li data-target=#banner-carousel-no-arrows-example data-slide-to=0></li><li data-target=#banner-carousel-no-arrows-example data-slide-to=1 class=active></li><li data-target=#banner-carousel-no-arrows-example data-slide-to=2></li></ol></div><h3 class=top-offset-40>Banner carousel captions no arrows</h3><div id=carousel-example-with-caption class="carousel slide carousel-gallery" data-ride=carousel><div class=carousel-inner><div class="item active"><img alt="First slide" src=http://placehold.it/1140x430 alt=Image class=image><div class="well well-banner pull-left"><h2 class=hidden-xs>First slide lorem ipsum dolor sit amet.</h2><p>First slide: Mauris in ultricies leo, fermentum consectetur ligula.</p><p><a href=# class="btn btn-primary pull-left hidden-xs">Buy Now!</a> <a href=# class="pull-left visible-xs">Buy Now!</a></p></div></div><div class=item><img alt="second slide" src=http://placehold.it/1140x430 alt=Image class=image><div class="well well-banner pull-left"><h2 class=hidden-xs>Second slide lorem ipsum dolor sit amet.</h2><p>Second slide: Mauris in ultricies leo, fermentum consectetur ligula.</p><p><a href=# class="btn btn-primary pull-left hidden-xs">Buy Now!</a> <a href=# class="pull-left visible-xs">Buy Now!</a></p></div></div><div class=item><img alt="second slide" src=http://placehold.it/1140x430 alt=Image class=image><div class="well well-banner pull-left"><h2 class=hidden-xs>Second slide lorem ipsum dolor sit amet.</h2><p>Second slide: Mauris in ultricies leo, fermentum consectetur ligula.</p><p><a href=# class="btn btn-primary pull-left hidden-xs">Buy Now!</a> <a href=# class="pull-left visible-xs">Buy Now!</a></p></div></div><div class=item><img alt="second slide" src=http://placehold.it/1140x430 alt=Image class=image><div class="well well-banner pull-left"><h2 class=hidden-xs>Fourth slide lorem ipsum dolor sit amet.</h2><p>Fourth slide: Mauris in ultricies leo, fermentum consectetur ligula.</p><p><a href=# class="btn btn-primary pull-left hidden-xs">Buy Now!</a> <a href=# class="pull-left visible-xs">Buy Now!</a></p></div></div></div><ol class=carousel-indicators><li data-target=#carousel-example-with-caption data-slide-to=0 class=active></li><li data-target=#carousel-example-with-caption data-slide-to=1></li><li data-target=#carousel-example-with-caption data-slide-to=2></li><li data-target=#carousel-example-with-caption data-slide-to=3></li></ol></div><h3 class=top-offset-40>Filmstrip carousel with images (only)</h3><div class="carousel carousel-filmstrip"><div class=carousel-inner><div class=item><a href=javascript:;><img src="http://placehold.it/250x250/cccccc/FFFFFF&text=Image 1" alt=Image class=img-responsive></a></div><div class=item><a href=javascript:;><img src="http://placehold.it/250x250/cccccc/FFFFFF&text=Image 2" alt=Image class=img-responsive></a></div><div class=item><a href=javascript:;><img src="http://placehold.it/250x250/cccccc/FFFFFF&text=Image 3" alt=Image class=img-responsive></a></div><div class=item><a href=javascript:;><img src="http://placehold.it/250x250/cccccc/FFFFFF&text=Image 4" alt=Image class=img-responsive></a></div><div class=item><a href=javascript:;><img src="http://placehold.it/250x250/cccccc/FFFFFF&text=Image 5" alt=Image class=img-responsive></a></div><div class=item><a href=javascript:;><img src="http://placehold.it/250x250/cccccc/FFFFFF&text=Image 6" alt=Image class=img-responsive></a></div><div class=item><a href=javascript:;><img src="http://placehold.it/250x250/cccccc/FFFFFF&text=Image 7" alt=Image class=img-responsive></a></div></div></div></div></section>');
    $templateCache.put('components/carousel/demo-play-carousel.html', '<section ng-controller=carouselPLayDemoCtrl id=carousel-play-demo><div class=container><h2>Carousel Builder</h2><div></div></div></section>');
    $templateCache.put('components/collapsible-items/demo-collapsible-items.html', '<section ng-controller=collapsibleItemsCtrl id=collapsible-items-html-example><div class=container><h2>Collapsible-Items Demo</h2><div class=bottom-offset-40><h3 class=bottom-offset-30>Standard accordion</h3><div class=panel-group id=accordion><div class="panel panel-default"><div class=panel-heading><h4 class=panel-title><a data-toggle=collapse data-parent=#accordion href=#One>Headline title goes here</a></h4></div><div id=One class="panel-collapse collapse in"><div class=panel-body>Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\'t heard of them accusamus labore sustainable VHS.<div class=top-offset-10><div class=bottom-offset-5><a href=javascript:; class=collapsed data-toggle=collapse data-target=#show-hide-bags><span class=show-collapsed><i aria-hidden=true class=icon-ui-triangleright></i>Show more</span> <span class=hide-expanded><i aria-hidden=true class=icon-ui-triangledown></i>Show less</span></a></div><div id=show-hide-bags class=collapse>Etiam odio velit, eleifend id vehicula non, vulputate quis metus. Ut sit amet justo nec urna tincidunt porttitor. Phasellus massa nisl, fringilla ac ligula vitae, ultrices vulputate turpis.</div></div></div></div></div><div class="panel panel-default"><div class=panel-heading><h4 class=panel-title><a data-toggle=collapse data-parent=#accordion href=#Two class=collapsed>Headline title goes here</a></h4></div><div id=Two class="panel-collapse collapse"><div class=panel-body>Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\'t heard of them accusamus labore sustainable VHS.<div class=top-offset-10><div class=bottom-offset-5><a href=javascript:; class=collapsed data-toggle=collapse data-target=#show-hide-tax><span class=show-collapsed><i aria-hidden=true class=icon-ui-triangleright></i>Show more</span> <span class=hide-expanded><i aria-hidden=true class=icon-ui-triangledown></i>Show less</span></a></div><div id=show-hide-tax class=collapse>Etiam odio velit, eleifend id vehicula non, vulputate quis metus. Ut sit amet justo nec urna tincidunt porttitor. Phasellus massa nisl, fringilla ac ligula vitae, ultrices vulputate turpis.</div></div></div></div></div><div class="panel panel-default"><div class=panel-heading><h4 class=panel-title><a data-toggle=collapse data-parent=#accordion href=#Three class=collapsed>Headline title goes here</a></h4></div><div id=Three class="panel-collapse collapse"><div class=panel-body>Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\'t heard of them accusamus labore sustainable VHS.<div class=top-offset-10><div class=bottom-offset-5><a href=javascript:; class=collapsed data-toggle=collapse data-target=#show-hide-solutions><span class=show-collapsed><i aria-hidden=true class=icon-ui-triangleright></i>Show more</span> <span class=hide-expanded><i aria-hidden=true class=icon-ui-triangledown></i>Show less</span></a></div><div id=show-hide-solutions class=collapse>Etiam odio velit, eleifend id vehicula non, vulputate quis metus. Ut sit amet justo nec urna tincidunt porttitor. Phasellus massa nisl, fringilla ac ligula vitae, ultrices vulputate turpis.</div></div></div></div></div></div></div><div ng-if=!guidanceOff class="alert alert-info alert-dismissable bottom-offset-40"><h4>To default a panel open:</h4><p>You have to do two things:</p><ul><li>Remove the class <code>collapsed</code> from the trigger.</li><li>Add the class <code>in</code> to the target panel-collapse.</li></ul></div><div class=bottom-offset-60><h3 class=bottom-offset-30>Accordion with independent panels</h3><div id=accordion-independent-panels><div class=panel-group id=accordion-independant><div class=panel-heading><h4 class=panel-title><a data-toggle=collapse data-parent=#accordion-independant href=#bags-1>Headline title goes here</a></h4></div><div id=bags-1 class="panel-collapse collapse in"><div class=panel-body>Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\'t heard of them accusamus labore sustainable VHS.<div class=top-offset-10><div class=bottom-offset-5><a href=javascript:; class=collapsed data-toggle=collapse data-target=#show-hide-bags-1><span class=show-collapsed><i aria-hidden=true class=icon-ui-triangleright></i>Show more</span> <span class=hide-expanded><i aria-hidden=true class=icon-ui-triangledown></i>Show less</span></a></div><div id=show-hide-bags-1 class=collapse>Etiam odio velit, eleifend id vehicula non, vulputate quis metus. Ut sit amet justo nec urna tincidunt porttitor. Phasellus massa nisl, fringilla ac ligula vitae, ultrices vulputate turpis.</div></div></div></div><div class=panel-heading><h4 class=panel-title><a data-toggle=collapse data-parent=#accordion-independant href=#tax-1 class=collapsed>Headline title goes here</a></h4></div><div id=tax-1 class="panel-collapse collapse"><div class=panel-body>Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\'t heard of them accusamus labore sustainable VHS.<div class=top-offset-10><div class=bottom-offset-5><a href=javascript:; class=collapsed data-toggle=collapse data-target=#show-hide-tax-1><span class=show-collapsed><i aria-hidden=true class=icon-ui-triangleright></i>Show more</span> <span class=hide-expanded><i aria-hidden=true class=icon-ui-triangledown></i>Show less</span></a></div><div id=show-hide-tax-1 class=collapse>Etiam odio velit, eleifend id vehicula non, vulputate quis metus. Ut sit amet justo nec urna tincidunt porttitor. Phasellus massa nisl, fringilla ac ligula vitae, ultrices vulputate turpis.</div></div></div></div><div class=panel-heading><h4 class=panel-title><a data-toggle=collapse data-parent=#accordion-independant href=#home-1 class=collapsed>Headline title goes here</a></h4></div><div id=home-1 class="panel-collapse collapse"><div class=panel-body>Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\'t heard of them accusamus labore sustainable VHS.<div class=top-offset-10><div class=bottom-offset-5><a href=javascript:; class=collapsed data-toggle=collapse data-target=#show-hide-solutions-1><span class=show-collapsed><i aria-hidden=true class=icon-ui-triangleright></i>Show more</span> <span class=hide-expanded><i aria-hidden=true class=icon-ui-triangledown></i>Show less</span></a></div><div id=show-hide-solutions-1 class=collapse>Etiam odio velit, eleifend id vehicula non, vulputate quis metus. Ut sit amet justo nec urna tincidunt porttitor. Phasellus massa nisl, fringilla ac ligula vitae, ultrices vulputate turpis.</div></div></div></div></div></div></div><div class=bottom-offset-60><h3 class=bottom-offset-20>Accordion with show/hide links</h3><div class=show-hide-links><a href=javascript:; class=collapsed data-toggle=collapse data-target="#accordion-independent-with-show-all .panel-collapse:not(.in)" aria-expanded=false>Show all</a> | <a href=javascript:; class=collapsed data-toggle=collapse data-target="#accordion-independent-with-show-all .panel-collapse.in" aria-expanded=false>Hide all</a></div><div class=panel-group id=accordion-independent-with-show-all><div class=panel-heading><h4 class=panel-title><a data-toggle=collapse data-parent=#accordion-independent-with-show-all href=#bags-2 class=collapsed>Headline title goes here</a></h4></div><div id=bags-2 class="panel-collapse collapse"><div class=panel-body>Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\'t heard of them accusamus labore sustainable VHS.<div class=top-offset-10><div class=bottom-offset-5><a href=javascript:; class=collapsed data-toggle=collapse data-target=#show-hide-bags-a><span class=show-collapsed><i aria-hidden=true class=icon-ui-triangleright></i>Show more</span> <span class=hide-expanded><i aria-hidden=true class=icon-ui-triangledown></i>Show less</span></a></div><div id=show-hide-bags-a class=collapse>Etiam odio velit, eleifend id vehicula non, vulputate quis metus. Ut sit amet justo nec urna tincidunt porttitor. Phasellus massa nisl, fringilla ac ligula vitae, ultrices vulputate turpis.</div></div></div></div><div class=panel-heading><h4 class=panel-title><a data-toggle=collapse data-parent=#accordion-independent-with-show-all href=#tax-2 class=collapsed>Headline title goes here</a></h4></div><div id=tax-2 class="panel-collapse collapse"><div class=panel-body>Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\'t heard of them accusamus labore sustainable VHS.<div class=top-offset-10><div class=bottom-offset-5><a href=javascript:; class=collapsed data-toggle=collapse data-target=#show-hide-tax-a><span class=show-collapsed><i aria-hidden=true class=icon-ui-triangleright></i>Show more</span> <span class=hide-expanded><i aria-hidden=true class=icon-ui-triangledown></i>Show less</span></a></div><div id=show-hide-tax-a class=collapse>Etiam odio velit, eleifend id vehicula non, vulputate quis metus. Ut sit amet justo nec urna tincidunt porttitor. Phasellus massa nisl, fringilla ac ligula vitae, ultrices vulputate turpis.</div></div></div></div><div class=panel-heading><h4 class=panel-title><a data-toggle=collapse data-parent=#accordion-independent-with-show-all href=#home-2 class=collapsed>Headline title goes here</a></h4></div><div id=home-2 class="panel-collapse collapse"><div class=panel-body>Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\'t heard of them accusamus labore sustainable VHS.<div class=top-offset-10><div class=bottom-offset-5><a href=javascript:; class=collapsed data-toggle=collapse data-target=#show-hide-solutions-a><span class=show-collapsed><i aria-hidden=true class=icon-ui-triangleright></i>Show more</span> <span class=hide-expanded><i aria-hidden=true class=icon-ui-triangledown></i>Show less</span></a></div><div id=show-hide-solutions-a class=collapse>Etiam odio velit, eleifend id vehicula non, vulputate quis metus. Ut sit amet justo nec urna tincidunt porttitor. Phasellus massa nisl, fringilla ac ligula vitae, ultrices vulputate turpis.</div></div></div></div></div></div><h3 class=bottom-offset-20>From a link</h3><div class=bottom-offset-40><div class=bottom-offset-10><p><a href=javascript:; class=collapsed data-toggle=collapse data-target=#collapsible-example-area-5><span class=show-collapsed><i aria-hidden=true class=icon-ui-triangleright></i>Show stuff</span> <span class=hide-expanded><i aria-hidden=true class=icon-ui-triangledown></i>Hide stuff</span></a></p><p id=collapsible-example-area-5 class=collapse>Etiam odio velit, eleifend id vehicula non, vulputate quis metus. Ut sit amet justo nec urna tincidunt porttitor. Phasellus massa nisl, fringilla ac ligula vitae, ultrices vulputate turpis. Pellentesque molestie posuere tortor. Mauris feugiat elit et lacus tristique, et aliquet risus fermentum.</p></div></div></div></section>');
    $templateCache.put('components/collapsible-items/demo-play-collapsible-items.html', '<section ng-controller=collapsibleItemsPLayDemoCtrl id=collapsible-items-play-demo><div class=container><h2>Collapsible-Items Builder</h2><div></div></div></section>');
    $templateCache.put('components/colors/demo-colors.html', '<section ng-controller=colorsCtrl id=colors-html-example><div class=container><h2>Colors Demo</h2><div><div class=row><div class="col-sm-12 col-md-4"><div class="well well-white text-gray-medium well-white-stroke" to-clipboard="&lt;div class=&quot;well well-white&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;White</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#ffffff</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;text-white</span><br></div><div class="well text-gray-medium well-gray-very-light well-gray-very-light-stroke" to-clipboard="&lt;div class=&quot;well well-gray-very-light&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;7% Dell Light Gray</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#f9f9f9</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;n/a</span><br></div><div class="well text-gray-medium" to-clipboard="&lt;div class=&quot;well&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;Dell Light Gray</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#eeeeee</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;n/a</span><br></div><div class="well text-white well-gray" to-clipboard="&lt;div class=&quot;well well-gray&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;Dell Gray</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#aaaaaa</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;n/a</span><br></div><div class="well well-gray-medium" to-clipboard="&lt;div class=&quot;well well-gray-medium&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;Dell Medium Gray</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#737373</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;text-gray-medium</span><br></div><div class="well well-gray-dark" to-clipboard="&lt;div class=&quot;well well-gray-dark&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;Dell Gray Dark</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#444444</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;text-gray-dark</span><br></div><div class="well well-blue" to-clipboard="&lt;div class=&quot;well well-blue&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;Dell Blue</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#007db8</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;text-blue</span><br></div></div><div class="col-sm-12 col-md-4"><div class="well well-dark-blue" to-clipboard="&lt;div class=&quot;well well-dark-blue&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;Dell Dark Blue</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#00447c</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;text-dark-blue</span><br></div><div class="well well-light-green" to-clipboard="&lt;div class=&quot;well well-light-green&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;Dell Light Green</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#C1D82F</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;n/a</span><br></div><div class="well well-green" to-clipboard="&lt;div class=&quot;well well-green&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;Dell Green</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#6EA204</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;text-green</span><br></div><div class="well well-yellow" to-clipboard="&lt;div class=&quot;well well-yellow&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;Dell Yellow</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#f2af00</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;n/a</span><br></div><div class="well well-orange" to-clipboard="&lt;div class=&quot;well well-orange&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;Dell Orange</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#EE6411</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;text-orange</span><br></div><div class="well well-red" to-clipboard="&lt;div class=&quot;well well-red&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;Dell Red</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#D74324</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;text-red</span><br></div><div class="well well-red-dark" to-clipboard="&lt;div class=&quot;well well-red-dark&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;Dell Dark Red</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#CE1126</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;text-red-dark</span><br></div></div><div class="col-sm-12 col-md-4"><div class="well well-berry" to-clipboard="&lt;div class=&quot;well well-berry&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;Dell Berry</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#B7295A</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;text-berry</span><br></div><div class="well well-purple" to-clipboard="&lt;div class=&quot;well well-purple&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;Dell Purple</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#6E2585</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;text-purple</span><br></div><div class="well well-teal" to-clipboard="&lt;div class=&quot;well well-teal&quot;&gt;&lt;p&gt;Lorem ipsum...&lt;/p&gt;&lt;/div&gt;"><span class=pull-left>color:</span><span class=pull-right>&nbsp;&nbsp;Dell Teal</span><br><span class=pull-left>hex:</span><span class=pull-right>&nbsp;&nbsp;#42aeaf</span><br><span class=pull-left>css:</span><span class=pull-right>&nbsp;&nbsp;n/a</span><br></div></div></div></div></div></section>');
    $templateCache.put('components/colors/demo-play-colors.html', '<section ng-controller=colorsPLayDemoCtrl id=colors-play-demo><div class=container><h2>Colors Builder</h2><div></div></div></section>');
    $templateCache.put('components/containers/demo-containers.html', '<section ng-controller=containersCtrl id=containers-html-example><div class=container><h2>Containers Demo</h2><div><h4>Default well example</h4><div id=example-well><div class="well well-transparent-stroke"><p>This is a default Well...</p></div></div></div><h4>Solid colored wells &amp; containers</h4><div class="well well-lg well-blue"><h2>Headline</h2><p>Content placed in a <strong>"well well-lg well-blue"</strong></p></div><div class="well well-lg well-dark-blue"><h2>Headline</h2><p>Content placed in a <strong>"well well-lg well-dark-blue"</strong></p></div><div class="well well-lg well-purple"><h2>Headline</h2><p>Content placed in a <strong>"well well-lg well-purple"</strong></p></div><div class="well well-lg well-berry"><h2>Headline</h2><p>Content placed in a <strong>"well well-lg well-berry"</strong></p></div><div class="well well-lg well-red"><h2>Headline</h2><p>Content placed in a <strong>"well well-lg well-red"</strong></p></div><div class="well well-lg well-gray-medium"><h2>Headline</h2><p>Content placed in a <strong>"well well-lg well-gray-medium"</strong></p></div><div class="well well-lg well-gray-dark"><h2>Headline</h2><p>Content placed in a <strong>"well well-lg well-gray-dark"</strong></p></div><h4 class=top-offset-60>Color stroked wells &amp; containers</h4><div class="well well-lg well-blue-stroke"><h2>Headline</h2><p>Content placed in a <strong>"well well-lg well-blue-stroke"</strong></p></div><div class="well well-lg well-dark-blue-stroke"><h2>Headline</h2><p>Content placed in a <strong>"well well-lg well-dark-blue-stroke"</strong></p></div><div class="well well-lg well-purple-stroke"><h2>Headline</h2><p>Content placed in a <strong>"well well-lg well-purple-stroke"</strong></p></div><div class="well well-lg well-berry-stroke"><h2>Headline</h2><p>Content placed in a <strong>"well well-lg well-berry-stroke"</strong></p></div><div class="well well-lg well-red-stroke"><h2>Headline</h2><p>Content placed in a <strong>"well well-lg well-red-stroke"</strong></p></div><div class="well well-lg well-red-dark-stroke"><h2>Headline</h2><p>Content placed in a <strong>"well well-lg well-red-dark-stroke"</strong></p></div><div class="well well-lg well-gray-medium-stroke"><h2>Headline</h2><p>Content placed in a <strong>"well well-lg well-gray-medium-stroke"</strong></p></div><div class="well well-lg well-gray-dark-stroke"><h2>Headline</h2><p>Content placed in a <strong>"well well-lg well-gray-dark-stroke"</strong></p></div><h4 class=top-offset-60>Color stroked wells &amp; containers with title</h4><div class="well well-lg well-blue-stroke"><h4 class=container-title>A really long title goes here</h4><p>Content placed in a <strong>"well well-lg well-blue-stroke"</strong></p></div><div class="well well-lg well-dark-blue-stroke"><h4 class=container-title>A really long title goes here</h4><p>Content placed in a <strong>"well well-lg well-dark-blue-stroke"</strong></p></div><div class="well well-lg well-purple-stroke"><h4 class=container-title>A really long title goes here</h4><p>Content placed in a <strong>"well well-lg well-purple-stroke"</strong></p></div><div class="well well-lg well-berry-stroke"><h4 class=container-title>A really long title goes here</h4><p>Content placed in a <strong>"well well-lg well-berry-stroke"</strong></p></div><div class="well well-lg well-red-stroke"><h4 class=container-title>A really long title goes here</h4><p>Content placed in a <strong>"well well-lg well-red-stroke"</strong></p></div><div class="well well-lg well-red-dark-stroke"><h4 class=container-title>A really long title goes here</h4><p>Content placed in a <strong>"well well-lg well-red-dark-stroke"</strong></p></div><div class="well well-lg well-gray-medium-stroke"><h4 class=container-title>A really long title goes here</h4><p>Content placed in a <strong>"well well-lg well-gray-medium-stroke"</strong></p></div><div class="well well-lg well-gray-dark-stroke"><h4 class=container-title>A really long title goes here</h4><p>Content placed in a <strong>"well well-lg well-gray-dark-stroke"</strong></p></div><h4 class=top-offset-60>Color stroked wells &amp; containers with title</h4><div class="panel panel-blue"><h3 class=panel-heading>A really long title goes here</h3><p class=panel-body>Content placed in a <strong>"panel panel-blue"</strong></p></div><div class="panel panel-dark-blue"><h3 class=panel-heading>A really long title goes here</h3><p class=panel-body>Content placed in a <strong>"panel panel-dark-blue"</strong></p></div><div class="panel panel-purple"><h3 class=panel-heading>A really long title goes here</h3><p class=panel-body>Content placed in a <strong>"panel panel-purple"</strong></p></div><div class="panel panel-purple"><h3 class=panel-heading>A really long title goes here</h3><p class=panel-body>Content placed in a <strong>"panel panel-purple"</strong></p></div><div class="panel panel-berry"><h3 class=panel-heading>A really long title goes here</h3><p class=panel-body>Content placed in a <strong>"panel panel-berry"</strong></p></div><div class="panel panel-red"><h3 class=panel-heading>A really long title goes here</h3><p class=panel-body>Content placed in a <strong>"panel panel-red"</strong></p></div><div class="panel panel-red-dark"><h3 class=panel-heading>A really long title goes here</h3><p class=panel-body>Content placed in a <strong>"panel panel-red-dark"</strong></p></div><div class="panel panel-gray-medium"><h3 class=panel-heading>A really long title goes here</h3><p class=panel-body>Content placed in a <strong>"panel panel-gray-medium"</strong></p></div><div class="panel panel-gray-dark"><h3 class=panel-heading>A really long title goes here</h3><p class=panel-body>Content placed in a <strong>"panel panel-gray-dark"</strong></p></div></div></section>');
    $templateCache.put('components/containers/demo-play-containers.html', '<section ng-controller=containersPLayDemoCtrl id=containers-play-demo><div class=container><h2>Containers Builder</h2><div></div></div></section>');
    $templateCache.put('components/content-teaser/demo-content-teaser.html', '<section ng-controller=contentTeaserCtrl id=content-teaser-html-example><div class=container><h2>Teasers Demo</h2><div class="row pull-left full-width-container"><div class="content-holder col-lg-12"><h4>Full-width</h4><p class=full-width-teaser><span>Text area may contain centered text up to 140 characters including spaces and call-to-action. <a href=#>Call to Action</a></span></p></div></div><div class="row pull-left"><div class=content-holder><h4>Horizontal - image left</h4><div class="horizontal-teaser row"><div class="pull-left col-xs-5"><img class="visible-sm visible-md visible-lg hidden-xs" src="http://placehold.it/230x175"> <img class=visible-xs src="http://placehold.it/105x80"></div><div class="pull-right col-xs-7"><h5 class=teaser-headline><a href=#>Headline</a></h5><p class=teaser-text>Lorem ipsum dolor sit amet, lorem ipsum dolor sit amet, lorem ipsum dolor sit amet.</p><a class="btn btn-success" href=#>Call to Action</a></div></div></div><div class=content-holder><h4>Horizontal - image right</h4><div class="horizontal-teaser row"><div class="pull-left col-xs-7"><h5 class=teaser-headline><a href=#>Headline</a></h5><p class=teaser-text>Lorem ipsum dolor sit amet, lorem ipsum dolor sit amet, lorem ipsum dolor sit amet.</p><a class=hidden-xs href=#>Call to Action</a></div><div class="pull-right col-xs-5"><img class="visible-sm visible-md visible-lg hidden-xs" src="http://placehold.it/230x175"> <img class=visible-xs src="http://placehold.it/105x80"></div></div></div></div><div class=content-holder><div class=horizontal-full-bleed><h4>Horizontal - full bleed image, text link overlay</h4><img class="pull-left visible-lg" src="http://placehold.it/584x175"> <img class="pull-left visible-md" src="http://placehold.it/750x175"> <img class="pull-left visible-xs visible-sm" src="http://placehold.it/320x155"><p class="pull-left text-link-overlay"><a href=#>Lorem ipsum dolor sit amet, lorem ipsum dolor sit amet.</a></p></div></div><div class="row pull-left" style=width:100%><div class="content-holder div-wrapper col-lg-4 col-md-6 col-sm-12 col-xs-12"><h4>Vertical<br>image with links</h4><div class="vertical-teaser-box pull-left"><p class=vertical-teaser-link><a href=#>Link 1</a></p><p class=vertical-teaser-link><a href=#>Link 2 (optional)</a></p><p class=vertical-teaser-link><a href=#>Link 3 (optional)</a></p></div><img class=pull-left src="http://placehold.it/260x140"></div><div class="content-holder div-wrapper col-lg-4 col-md-6 col-sm-12 col-xs-12"><h4>Vertical<br>video with links</h4><div class="vertical-teaser-box pull-left"><p class=vertical-teaser-link><a href=#>Link 1</a></p><p class=vertical-teaser-link><a href=#>Link 2 (optional)</a></p><p class=vertical-teaser-link><a href=#>Link 3 (optional)</a></p></div><img class=pull-left src="http://placehold.it/260x140"></div><div class="content-holder div-wrapper col-lg-4 col-md-6 col-sm-12 col-xs-12"><h4>Vertical<br>heading, subheading, CTA</h4><div class="vertical-teaser-box pull-left"><p><a href=#>Headline</a><br>Subheading lorem ipsum dolor sit amet. Consectius.</p><p><a href=#>Call to Action</a></p></div><img class="pull-left top-offset-15" src="http://placehold.it/260x140"></div><div class="content-holder div-wrapper col-lg-4 col-md-6 col-sm-12 col-xs-12"><div class=vertical-teaser-box><h4>Vertical<br>with button</h4><p><a href=#>Headline</a><br>Subheading lorem ipsum dolor sit amet. Consectius.</p><a class="btn btn-success" href=#>Call to Action</a></div><img class="pull-left top-offset-15" src="http://placehold.it/260x140"></div></div></div></section>');
    $templateCache.put('components/content-teaser/demo-play-content-teaser.html', '<section ng-controller=contentTeaserPLayDemoCtrl id=content-teaser-play-demo><div class=container><h2>Content-Teaser Builder</h2><div></div></div></section>');
    $templateCache.put('components/date-selector/demo-date-selector.html', '<section ng-controller=dateSelectorCtrl id=date-selector-html-example><div class=container><h2>Date-Selector Demo</h2><div><div ng-controller=DatepickerDemoCtrl><h4>Select date</h4><div class=row><div class="col-md-6 date-selector"><p class=input-group><input type=text class=form-control datepicker-popup=MM-dd-yyyy ng-model=dt is-open=opened min-date=minDate max-date="\'2015-06-22\'" datepicker-options=dateOptions date-disabled="disabled(date, mode)" ng-required=true show-button-bar=false show-weeks="false"> <span class=input-group-btn><button type=button class="btn btn-default" ng-click=open($event)><i class="glyphicon glyphicon-calendar"></i></button></span></p><p>MM/DD/YYYY</p></div></div></div></div></div></section>');
    $templateCache.put('components/date-selector/demo-play-date-selector.html', '<section ng-controller=dateSelectorPLayDemoCtrl id=date-selector-play-demo><div class=container><h2>Date-Selector Builder</h2><div></div></div></section>');
    $templateCache.put('components/dividers/demo-dividers.html', '<section ng-controller=dividersCtrl id=dividers-html-example><div class=container><h2>Dividers Demo</h2><div><div><h4>Section dividers with shadow<small>(supported browsers)</small></h4><hr class=shadow-separator></div><div class=bottom-offset-30><h4>Section dividers default dividers<small>(example of non-supported browsers)</small></h4><hr class=separator-default></div><div class=top-offset-40><h2>Horizontal Dividers</h2></div><div class=top-offset-20><h4>Primary divider</h4><hr class="hr-gray"></div><div class=top-offset-20><h4>Secondary dividers</h4><hr></div><div class=bottom-offset-30><h4>Tertiary dividers</h4><hr class="hr-gray-light"></div><div class=top-offset-40><h2>Vertical Dividers</h2></div><div class=row><div class="col-xs-12 top-offset-20 bottom-offset-20"><div class="col-xs-4 border-left-gray-stroke text-left">&nbsp;vertical divider left</div><div class="col-xs-4 border-right-gray-stroke text-right">&nbsp;vertical divider right</div></div><div class="col-xs-12 top-offset-20 bottom-offset-20"><div class="col-xs-4 border-left-thick-gray-stroke text-left">&nbsp;vertical thick divider left</div><div class="col-xs-4 border-right-thick-gray-stroke text-right">&nbsp;vertical thick divider right</div></div></div></div></div></section>');
    $templateCache.put('components/dividers/demo-play-dividers.html', '<section ng-controller=dividersPLayDemoCtrl id=dividers-play-demo><div class=container><h2>Dividers Builder</h2><div></div></div></section>');
    $templateCache.put('components/dropdown-buttons/demo-dropdown-buttons.html', '<section ng-controller=dropdownButtonsCtrl id=dropdown-buttons-html-example><div class=container><h2 class=bottom-offset-20>Dropdown-Buttons Demo</h2><div class=bottom-offset-30><h4>Primary Non-Purchase Dropdown</h4><div class=btn-group id=button-primary-dropdown><button type=button class="btn btn-primary dropdown-toggle" data-toggle=dropdown aria-expanded=false>Primary <span class=caret></span></button><ul class=dropdown-menu role=menu><li><a href=javascript:;>Action</a></li><li><a href=javascript:;>Another action</a></li><li><a href=javascript:;>Something else here</a></li><li class=divider></li><li><a href=javascript:;>Separated link</a></li></ul></div></div><div class=bottom-offset-30><h4>Primary Purchase Dropdown</h4><div class=btn-group id=button-success-dropdown><a class="btn btn-success dropdown-toggle" data-toggle=dropdown href=javascript:;>Purchase <i class=caret></i></a><ul class=dropdown-menu><li><a href=javascript:;>Action</a></li><li><a href=javascript:;>Another action</a></li><li><a href=javascript:;>Something else here</a></li><li class=divider></li><li><a href=javascript:;>Separated link</a></li></ul></div></div><div class=bottom-offset-30><h4>Secondary or General Use Dropdown</h4><div class=btn-group id=button-default-dropdown><a class="btn btn-default dropdown-toggle" data-toggle=dropdown href=javascript:;>General Use <i class=caret></i></a><ul class=dropdown-menu><li><a href=javascript:;>Action</a></li><li><a href=javascript:;>Another action</a></li><li><a href=javascript:;>Something else here</a></li><li class=divider></li><li><a href=javascript:;>Separated link</a></li></ul></div></div><hr><div class=bottom-offset-30><h4>Primary Split Non-Purchase Dropdown</h4><div class=btn-group id=button-primary-split><button type=button class="btn btn-primary">Primary split</button> <button type=button class="btn btn-primary dropdown-toggle" data-toggle=dropdown aria-expanded=false><span class=caret></span> <span class=sr-only>Toggle Dropdown</span></button><ul class=dropdown-menu role=menu><li><a href=javascript:;>Action</a></li><li><a href=javascript:;>Another action</a></li><li><a href=javascript:;>Something else here</a></li><li class=divider></li><li><a href=javascript:;>Separated link</a></li></ul></div></div><div class=bottom-offset-30><h4>Primary Split Purchase Dropdown</h4><div class=btn-group id=button-success-split><button type=button class="btn btn-success">Purchase split</button> <button type=button class="btn btn-success dropdown-toggle" data-toggle=dropdown aria-expanded=false><span class=caret></span> <span class=sr-only>Toggle Dropdown</span></button><ul class=dropdown-menu role=menu><li><a href=javascript:;>Action</a></li><li><a href=javascript:;>Another action</a></li><li><a href=javascript:;>Something else here</a></li><li class=divider></li><li><a href=javascript:;>Separated link</a></li></ul></div></div><div class=bottom-offset-30><h4>Secondary Split or General Use Dropdown</h4><div class=btn-group id=button-default-split><button type=button class="btn btn-default">General Use split</button> <button type=button class="btn btn-default dropdown-toggle" data-toggle=dropdown aria-expanded=false><span class=caret></span> <span class=sr-only>Toggle Dropdown</span></button><ul class=dropdown-menu role=menu><li><a href=javascript:;>Action</a></li><li><a href=javascript:;>Another action</a></li><li><a href=javascript:;>Something else here</a></li><li class=divider></li><li><a href=javascript:;>Separated link</a></li></ul></div></div></div></section>');
    $templateCache.put('components/dropdown-buttons/demo-play-dropdown-buttons.html', '<section ng-controller=dropdownButtonsPLayDemoCtrl id=dropdown-buttons-play-demo><div class=container><h2>Dropdown-Buttons Builder</h2><div></div></div></section>');
    $templateCache.put('components/footer/demo-footer.html', '<section ng-controller=footerCtrl id=footer-html-example><div class=container><h2>Footer Demo</h2><div></div></div></section>');
    $templateCache.put('components/footer/demo-play-footer.html', '<section ng-controller=footerPLayDemoCtrl id=footer-play-demo><div class=container><h2>Footer Builder</h2><div></div></div></section>');
    $templateCache.put('components/forms/demo-forms.html', '<section ng-controller=formsCtrl id=forms-html-example><div class=container><h2>Forms Demo</h2><h3 class=top-offset-20>individual form controls</h3><hr><div class=bottom-offset-20><form class=form-compressed role=form><div class=row><div class=form-group><label class="col-xs-12 col-sm-2 form-label" for=text-label-input>Text input label</label><div class="col-xs-12 col-sm-5"><input type=text class=form-control id=text-label-input><p class=help-block>In addition to freeform text, any HTML5 text-based input appears like so.</p></div></div></div></form></div><div class=bottom-offset-20><form class=form-compressed role=form><div class=row><div class=form-group><label class="col-xs-12 col-sm-2 form-label" for=uneditable>Uneditable input</label><div class="col-xs-12 col-sm-5"><span id=uneditable class="uneditable-input form-control">Some value here</span></div></div></div></form></div><div class=bottom-offset-20><form class=form-compressed role=form><div class=row><div class=form-group><label class="col-xs-12 col-sm-2 form-label" for=disabledInput>Disabled input</label><div class="col-xs-12 col-sm-5"><input class="disabled form-control" id=disabledInput type=text placeholder="Disabled input here\u2026" disabled></div></div></div></form></div><div class=bottom-offset-40><form class=form-compressed role=form><div class=row><div class=form-group><label class="col-xs-12 col-sm-2 form-label" for=textarea>Textarea input</label><div class="col-xs-12 col-sm-5"><textarea id=textarea class=form-control rows=5></textarea></div></div></div></form></div><div class=row><div class="col-xs-12 col-sm-6 bottom-offset-40"><h4>Checkboxes</h4><div class=checkbox><label><input type=checkbox value="option 1"> Checkbox one</label></div><div class="checkbox disabled bottom-offset-20"><label><input type=checkbox value="value option 2" disabled> Checkbox two is disabled</label></div></div><div class="col-xs-12 col-sm-6 bottom-offset-40"><h4>Inline checkboxes</h4><label class=checkbox-inline><input type=checkbox id=inlineCheckbox1 value=option1>1</label><label class=checkbox-inline><input type=checkbox id=inlineCheckbox2 value=option2>2</label><label class=checkbox-inline><input type=checkbox id=inlineCheckbox3 value=option3>3</label></div></div><div class=row><div class="col-xs-12 col-sm-6 bottom-offset-40"><h4>Radio Buttons</h4><div class=radio><label><input type=radio name=optionsRadios id=options-radio-1 value=option1 checked> Option one radio button</label></div><div class=radio><label><input type=radio name=optionsRadios id=options-radio-2 value=option2> Option two radio button</label></div><div class="radio disabled"><label><input type=radio name=optionsRadios id=options-radio-3 value=option3 disabled> Option three is disabled</label></div></div><div class="col-xs-12 col-sm-6 bottom-offset-40"><h4>Inline Radio Buttons</h4><label class=radio-inline><input type=radio name=inlineRadioOptions id=inlineRadio1 value=option1> 1</label><label class=radio-inline><input type=radio name=inlineRadioOptions id=inlineRadio2 value=option2> 2</label><label class=radio-inline><input type=radio name=inlineRadioOptions id=inlineRadio3 value=option3> 3</label></div></div><div class=row><div class="col-xs-12 col-sm-8 bottom-offset-40"><h4>Tree Checkboxes</h4><ul class=list-tree><li><label class=checkbox><input type=checkbox value=option1-parent1> Checkbox value (parent 1)</label><ul><li><label class=checkbox><input type=checkbox value=option1-parent1-child1> Checkbox value (child 1)</label><ul><li><label class=checkbox><input type=checkbox value=option1-parent1-grandchild1> Checkbox value (grand child 1)</label></li></ul></li><li><label class=checkbox><input type=checkbox value=option1-parent1-child2> Checkbox value (child 2)</label><ul><li><label class=checkbox><input type=checkbox value=option1-parent1-grandchild3> Checkbox value (grand child 3)</label></li><li><label class=checkbox><input type=checkbox value=option1-parent1-grandchild4> Checkbox value (grand child 4)</label></li><li><label class=checkbox><input type=checkbox value=option1-parent1-grandchild5> Checkbox value (grand child 5)</label><ul><li><label class=checkbox><input type=checkbox value=option1-parent1-greatgrandchild1> Checkbox value (great grand child 1)</label></li><li><label class=checkbox><input type=checkbox value=option1-parent1-greatgrandchild2> Checkbox value (great grand child 2)</label></li><li><label class=checkbox><input type=checkbox value=option1-parent1-greatgrandchild3> Checkbox value (great grand child 3)</label></li></ul></li></ul></li></ul></li><li><label class=checkbox><input type=checkbox value=option1-parent2> Checkbox value (parent 2)</label><ul><li><label class=checkbox><input type=checkbox value=option1-parent2-child1> Checkbox value (child 1)</label><ul><li><label class=checkbox><input type=checkbox value=option1-parent2-grandchild1> Checkbox value (grand child 1)</label></li></ul></li></ul></li></ul></div></div><div class=bottom-offset-20><form class=form-compressed role=form><div class=row><div class=form-group><label class="col-xs-12 col-sm-2 form-label" for=exampleInputFile>File upload label</label><div class="col-xs-6 col-sm-6"><input type=file id=exampleInputFile><p class=help-block>Example block-level help text here.</p></div></div></div></form></div><div class=bottom-offset-20><form class=form-compressed role=form><div class=row><div class=form-group><label class="col-xs-12 col-sm-2 form-label" for=inputError>Input with error</label><div class="col-xs-6 col-sm-6"><input type=text id=inputError class="form-control alert alert-warning" data-html=true data-toggle=popover data-placement=top data-trigger=submit data-content="<strong>\'First Name\'</strong> should not be empty." data-original-title="&lt;i class=\'icon-small-alertnotice text-red pull-left\'&gt;&lt;/i&gt; &nbsp;Not a valid email &lt;button type=\'button\' class=\'close pull-right visible-phone\' data-dismiss=\'popover\'&gt;\xd7&lt;/button&gt;" placeholder="*First Name"></div></div></div></form></div><div class=bottom-offset-20><form class=form-compressed role=form><div class=row><div class="form-group show-password"><label for=passwordShowHide class="col-xs-12 col-sm-2 form-label">Password</label><div class="col-xs-6 col-sm-6"><input id=passwordShowHide type=password class=form-control ng-model=password></div><div class="col-xs-12 col-sm-6 col-sm-offset-2 col-md-6 col-md-offset-2"><label class="checkbox help-block"><input type=checkbox value=option1 ng-model=showPassword ng-click=togglePassword()> <span ng-if=!showPassword>Show password</span> <span ng-if=showPassword>Hide password</span></label></div></div></div></form></div><div class=bottom-offset-20><form class=form-compressed role=form><div class=row><div class="col-xs-6 col-sm-8 col-md-8"><label class="col-xs-12 col-sm-3 form-label" for=phone>Phone number</label><div class="col-xs-12 col-sm-9"><input id=phone type=text class="form-control phone-number" placeholder="(555) 111-2222"></div></div></div><div class=row><div class="col-xs-12 col-sm-8 col-md-8"><div class="col-xs-12 col-sm-6 col-sm-offset-3 col-md-6 col-md-offset-3 help-ext"><a href=javascript:; class=collapsed data-toggle=collapse data-target=#phone-ext><span><label class=show-collapsed><i aria-hidden=true class=icon-ui-plus></i>&nbsp;Add extension</label></span> <span><label class=hide-expanded><i aria-hidden=true class=icon-ui-minus></i>&nbsp;Remove extension</label></span></a></div><div id=phone-ext class="collapse col-xs-6 col-sm-9 col-sm-offset-3 col-md-9 col-md-offset-3"><input type=text class="form-control phone-extension" placeholder="ext: (2222)"></div></div></div></form></div><div class=bottom-offset-20><form class=form-compressed role=form><div class=row><div class=form-group><label class="col-xs-12 col-sm-2 form-label">Email address</label><div class="col-xs-6 col-sm-6"><input name=email type=email class="form-control required" placeholder="*Enter email"></div></div></div><div class=row><div class="col-xs-12 col-md-6 col-md-offset-2 help-ext has-success has-feedback"><span><label class="email-success hide">Your email address is valid</label></span> <span><label class="email-error hide">Your email address is NOT valid</label></span></div></div></form></div><div class=bottom-offset-20><form class=form-compressed role=form><div class=row><div class=form-group><label class="col-xs-12 col-sm-2 form-label">Spin box vertical</label><div class=spinbox data-orient=vertical data-spinmin=0 data-spindefault=0 data-spinmax=30 data-spinstep=1 data-spinincrease="&lt;i class=\'icon-ui-plus\'&gt;&lt;/i&gt;" data-spindecrease="&lt;i class=\'icon-ui-minus\'&gt;&lt;/i&gt;" data-spinname=""></div></div></div></form></div><div class=bottom-offset-40><form class=form-compressed role=form><div class=row><div class=form-group><label class="col-xs-12 col-sm-2 form-label">Spin box horizontal</label><div class=spinbox data-orient=horizontal data-spinmin=0 data-spindefault=0 data-spinmax=30 data-spinstep=1 data-spinincrease="&lt;i class=\'icon-ui-plus\'&gt;&lt;/i&gt;" data-spindecrease="&lt;i class=\'icon-ui-minus\'&gt;&lt;/i&gt;" data-spinname=""></div></div></div></form></div><h3 class=top-offset-40>select form controls</h3><hr><div class=bottom-offset-20><form class=form-compressed role=form><div class=row><div class=form-group><div class="col-xs-12 col-sm-6"><label for=select01>Select list</label><select class=form-control id=select01><option>something</option><option>2</option><option>3</option><option>4</option><option>5</option></select></div></div></div></form></div><div class=bottom-offset-20><form class=form-compressed role=form><div class=row><div class=form-group><div class="col-xs-12 col-sm-6"><label for=select-01>Tiered select list</label><select class=form-control id=select-01><option class=text-gray-dark value=all>All</option><optgroup class=text-gray-dark label="Original Release Date"><option class=text-gray-dark value="0-30 days">0-30 days</option><option class=text-gray-dark value="0-90 days">0-90 days</option><option class=text-gray-dark value=older>older</option></optgroup><optgroup class=text-gray-dark label="Last updated date"><option class=text-gray-dark value="0-30 days">0-30 days</option><option class=text-gray-dark value="0-90 days">0-90 days</option><option class=text-gray-dark value=older>older</option></optgroup></select></div></div></div></form></div><div class=bottom-offset-20><form class=form-compressed role=form><div class=row><div class=form-group><div class="col-xs-12 col-sm-6"><label for=multiSelect>multi-select</label><select multiple id=multiSelect><option>1</option><option>2</option><option>3</option><option>4</option><option>5</option></select></div></div></div></form></div><div class=bottom-offset-40><form class=form-compressed role=form><div class=row><div class=form-group><div class="col-xs-12 col-sm-6"><div class=form-group><label for=ms>Multi-select with checkboxes</label><select class=ms-checkbox id=ms multiple><option value=1>January</option><option value=2>February</option><option value=3>March</option><option value=4>April</option><option value=5>May</option><option value=6>June</option><option value=7>July</option><option value=8>August</option><option value=9>September</option><option value=10>October</option><option value=11>November</option><option value=12>December</option></select></div></div></div></div></form></div><h3 class=top-offset-40>Selects with pre-populated states (U.S. only)</h3><hr><div class=bottom-offset-20><form class=form-compressed role=form><div class=row><div class="col-xs-12 col-sm-6"><div class=form-group><label for=default-select-state>Standard Select U.S. States</label><select class="form-control select-state" id=default-select-state ng-model=stateDefault></select></div></div></div></form></div><div class=bottom-offset-20><form class=form-compressed role=form><div class=row><div class="col-xs-12 col-sm-6"><div class=form-group><label for=short-select-state>States with Abbreviations</label><select class="form-control select-state" data-format=short id=short-select-state ng-model=stateDefault></select></div></div></div></form></div><div class=bottom-offset-20><form class=form-compressed role=form><div class=row><div class="col-xs-12 col-sm-6"><div class=form-group><label for=both-select-state>States with Abbreviations and Name</label><select class="form-control select-state" data-format=both id=both-select-state ng-model=stateDefault></select></div></div></div></form></div><div class=bottom-offset-20><form class=form-compressed role=form><div class=row><div class="col-xs-12 col-sm-6"><div class=form-group><label for=emptyname-select-state>States with Custom Select Text</label><select class="form-control select-state" data-format="" data-empty-name="Please select a state" id=emptyname-select-state ng-model=stateDefault></select></div></div></div></form></div><h3 class=top-offset-40>Common Forms</h3><hr><div class=bottom-offset-40><form class=form-compressed role=form><div class=row><h4 class="col-xs-12 col-sm-9">Ship to</h4></div><div class=row><div class="col-xs-11 col-sm-6 col-md-6"><label class="col-xs-8 col-sm-2 hidden-sm form-label" for=first-name>First Name</label><label class="col-xs-8 col-sm-2 visible-sm-block form-label" for=first-name>First</label><div class="col-xs-12 col-sm-10"><input type=text class=form-control id=first-name placeholder="*First Name"></div></div><div class="col-xs-1 col-sm-1 col-md-1"><label class="col-xs-12 col-sm-4 col-md-3 form-label" for=middle-initial>MI</label><div class="col-xs-12 col-sm-8 col-md-9"><input type=text class=form-control id=middle-initial placeholder=MI></div></div><div class="col-xs-12 col-sm-5 col-md-5"><label class="col-xs-12 col-sm-2 col-md-3 hidden-sm form-label" for=last-name>Last Name</label><label class="col-xs-12 col-sm-2 col-md-3 visible-sm-block form-label" for=last-name>Last</label><div class="col-xs-12 col-sm-10 col-md-9"><input type=text class=form-control id=last-name placeholder="*Last Name"></div></div></div><div class=row><div class="col-xs-6 col-sm-6 col-md-6"><label class="col-xs-8 col-sm-2 form-label" for=phone-number>Phone #</label><div class="col-xs-12 col-sm-10"><input type=text class="form-control phone-number" id=phone-number placeholder="(555) 111-2222"></div></div><div class="col-xs-6 col-sm-6 col-md-6"><label class="col-xs-8 col-sm-2 col-md-1 form-label" for=email-address>Email&nbsp;</label><div class="col-xs-12 col-sm-10 col-md-11"><input type=text class="form-control email-address" id=email-address placeholder="*Email Address"></div></div></div><div class=row><div class="col-xs-12 col-sm-6 col-md-6"><div class="col-xs-12 col-sm-6 col-sm-offset-2 col-md-6 col-md-offset-2 help-ext"><a href=javascript:; class=collapsed data-toggle=collapse data-target=#phonegroup-ext><span><label class=show-collapsed><i aria-hidden=true class=icon-ui-plus></i>&nbsp;Add extension</label></span> <span><label class=hide-expanded><i aria-hidden=true class=icon-ui-minus></i>&nbsp;Remove extension</label></span></a></div><div id=phonegroup-ext class="collapse col-xs-12 col-sm-10 col-sm-offset-2 col-md-10 col-md-offset-2"><input type=text class="form-control phone-extension" placeholder="ext: (2222)"></div></div></div><div class=row><div class="col-xs-12 col-sm-12 col-md-12"><label class="col-xs-8 col-sm-1 col-md-1 form-label" for=address-1>Address</label><div class="col-xs-12 col-sm-11 col-md-11"><input type=text class=form-control id=address-1 placeholder="*Street Address"></div></div></div><div class=row><div class="col-xs-12 col-sm-12 col-md-12"><label class="col-xs-8 col-sm-1 col-md-1 form-label" for=address-2>Address</label><div class="col-xs-12 col-sm-11"><input type=text class=form-control id=address-2 placeholder="*Additional Address"></div></div></div><div class=row><div class="col-xs-12 col-sm-12 col-md-12"><div class="col-xs-12 col-sm-6 col-sm-offset-1 col-md-11 col-md-offset-1 help-ext"><a href=javascript:; class=collapsed data-toggle=collapse data-target=#additional-address><span><label class=show-collapsed for=ph-ext><i aria-hidden=true class=icon-ui-plus></i>&nbsp;Additional address</label></span> <span><label class=hide-expanded for=ph-ext><i aria-hidden=true class=icon-ui-minus></i>&nbsp;Remove address</label></span></a></div><div id=additional-address class="collapse col-xs-12 col-sm-11 col-sm-offset-1 col-md-11 col-md-offset-1"><input type=text class=form-control placeholder="*Additional Address"></div></div></div><div class=row><div class="col-xs-12 col-sm-6 col-md-6"><label class="col-xs-8 col-sm-2 form-label" for=city>City</label><div class="col-xs-12 col-sm-10"><input type=text class=form-control id=city placeholder=*City></div></div><div class="col-xs-6 col-sm-3"><label class="col-xs-8 col-sm-2 form-label visible-xs-block" for=default-state>&nbsp;</label><div><select class="form-control select-state" id=default-state ng-model=stateDefault></select></div></div><div class="col-xs-6 col-sm-3 col-md-3"><label class="col-xs-8 col-sm-2 form-label" for=zip>Zip</label><div class="col-xs-12 col-sm-10"><input type=text class=form-control id=zip placeholder="*Zip Code"></div></div></div></form></div></div></section>');
    $templateCache.put('components/forms/demo-play-forms.html', '<section ng-controller=formsPLayDemoCtrl id=forms-play-demo><div class=container><h2>Forms Builder</h2><div></div></div></section>');
    $templateCache.put('components/icons/demo-icons.html', '<section ng-controller=iconsCtrl id=icons-html-example><div class=container><h2>Icons Demo</h2><div></div></div></section>');
    $templateCache.put('components/icons/demo-play-icons.html', '<section ng-controller=iconsPLayDemoCtrl id=icons-play-demo><div class=container><h2>Icons Builder</h2><div></div></div></section>');
    $templateCache.put('components/labels-and-badges/demo-labels-and-badges.html', '<section ng-controller=labelsAndBadgesCtrl id=labels-and-badges-html-example><div class=container><h2 class=bottom-offset-30>Labels-And-Badges Demo</h2><h4>Standard label</h4><div class=row><div class="col-xs-6 col-sm-5"><div class=bottom-offset-30 id=help-label><span class="label label-info">Help</span></div></div></div><h4>Standards badges</h4><div class=row><div class="col-xs-6 col-sm-5"><ul class="nav nav-pills nav-stacked"><li class=active><a href=javascript:;><span class="badge pull-right">42</span> Home</a></li><li><a href=javascript:;>Profile</a></li><li><a href=javascript:;><span class="badge pull-right">3</span> Messages</a></li></ul></div></div></div></section>');
    $templateCache.put('components/labels-and-badges/demo-play-labels-and-badges.html', '<section ng-controller=labelsAndBadgesPLayDemoCtrl id=labels-and-badges-play-demo><div class=container><h2>Labels-And-Badges Builder</h2><div></div></div></section>');
    $templateCache.put('components/lists/demo-lists.html', '<section ng-controller=listsCtrl id=lists-html-example><div class=container><h2>Lists Demo</h2><h3 class=bottom-offset-20>Unordered lists</h3><ul><li>Lorem ipsum dolor sit amet</li><li>Consectetur adipiscing elit</li><li>Integer molestie lorem at massa</li><li>Facilisis in pretium nisl aliquet</li><li>Nulla volutpat aliquam velit<ul><li>Phasellus iaculis neque</li><li>Purus sodales ultricies</li><li>Vestibulum laoreet porttitor sem</li><li>Ac tristique libero volutpat at</li></ul></li><li>Faucibus porta lacus fringilla vel</li><li>Aenean sit amet erat nunc</li><li>Eget porttitor lorem</li></ul><hr class="bottom-offset-30"><h3 class=bottom-offset-20>Ordered</h3><ol><li>Lorem ipsum dolor sit amet</li><li>Consectetur adipiscing elit</li><li>Integer molestie lorem at massa</li><li>Facilisis in pretium nisl aliquet</li><li>Nulla volutpat aliquam velit</li><li>Faucibus porta lacus fringilla vel</li><li>Aenean sit amet erat nunc</li><li>Eget porttitor lorem</li></ol><hr class="bottom-offset-30"><h3 class=bottom-offset-20>Unstyled</h3><ul class=list-unstyled><li>Lorem ipsum dolor sit amet</li><li>Consectetur adipiscing elit</li><li>Integer molestie lorem at massa</li><li>Facilisis in pretium nisl aliquet</li><li>Nulla volutpat aliquam velit<ul><li>Phasellus iaculis neque</li><li>Purus sodales ultricies</li><li>Vestibulum laoreet porttitor sem</li><li>Ac tristique libero volutpat at</li></ul></li><li>Faucibus porta lacus fringilla vel</li><li>Aenean sit amet erat nunc</li><li>Eget porttitor lorem</li></ul><hr class="bottom-offset-30"><h3 class=bottom-offset-20>Inline</h3><ul class=list-inline><li>Lorem ipsum</li><li>Phasellus iaculis</li><li>Nulla volutpat</li><li>Happy</li><li>Trees</li></ul><hr class="bottom-offset-30"><h3 class=bottom-offset-20>Description</h3><dl><dt>Description lists</dt><dd>A description list is perfect for defining terms.</dd><dt>Euismod</dt><dd>Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.</dd><dd>Donec id elit non mi porta gravida at eget metus.</dd><dt>Malesuada porta</dt><dd>Etiam porta sem malesuada magna mollis euismod.</dd></dl><hr class="bottom-offset-30"><h3 class=bottom-offset-20>Horizontal description</h3><dl class=dl-horizontal><dt>Description lists</dt><dd>A description list is perfect for defining terms.</dd><dt>Euismod</dt><dd>Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.</dd><dd>Donec id elit non mi porta gravida at eget metus.</dd><dt>Malesuada porta</dt><dd>Etiam porta sem malesuada magna mollis euismod.</dd><dt>Felis euismod semper eget lacinia</dt><dd>Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</dd></dl></div></section>');
    $templateCache.put('components/lists/demo-play-lists.html', '<section ng-controller=listsPLayDemoCtrl id=lists-play-demo><div class=container><h2>Lists Builder</h2><div></div></div></section>');
    $templateCache.put('components/mini-buttons/demo-mini-buttons.html', '<section ng-controller=miniButtonsCtrl id=mini-buttons-html-example><div class=container><h2 class=bottom-offset-30>Mini-Buttons Demo</h2><div class=bottom-offset-30><h4>Primary Non-Purchase</h4><a class="btn btn-primary btn-xs" href=javascript:;>Primary</a></div><div class=bottom-offset-30><h4>Primary Non-Purchase disabled</h4><a class="btn btn-primary btn-xs disabled" href=javascript:;>Primary</a></div><hr><div class=bottom-offset-30><h4>Primary Purchase</h4><a class="btn btn-success btn-xs" href=javascript:;>Purchase</a></div><div class=bottom-offset-30><h4>Primary Purchase disabled</h4><a class="btn btn-success btn-xs disabled" href=javascript:;>Purchase</a></div><hr><div class=bottom-offset-30><h4>Secondary or General Use</h4><a class="btn btn-default btn-xs" href=javascript:;>General Use</a></div><div class=bottom-offset-30><h4>Secondary or General Use disabled</h4><a class="btn btn-default btn-xs disabled" href=javascript:;>General Use</a></div><hr></div></section>');
    $templateCache.put('components/mini-buttons/demo-play-mini-buttons.html', '<section ng-controller=miniButtonsPLayDemoCtrl id=mini-buttons-play-demo><div class=container><h2>Mini-Buttons Builder</h2><div></div></div></section>');
    $templateCache.put('components/modals/demo-modals.html', '<section ng-controller=modalsCtrl id=modals-html-example><div class=container><h2 class=bottom-offset-30>Modals Demo</h2><button class="btn btn-default" data-toggle=modal data-target=#example-modal>Launch demo modal</button><div class="modal fade" id=example-modal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true style="display: none"><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal aria-hidden=true>\xd7</button><h3 class=modal-title>Modal title</h3></div><div class=modal-body><p>Placeholder for body text</p></div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal>Close</button> <button type=button class="btn btn-primary">Save changes</button></div></div></div></div></div></section>');
    $templateCache.put('components/modals/demo-play-modals.html', '<section ng-controller=modalsPLayDemoCtrl id=modals-play-demo><div class=container><h2>Modals Builder</h2><div></div></div></section>');
    $templateCache.put('components/offsets/demo-offsets.html', '<section ng-controller=offsetsCtrl id=offsets-html-example><div class=container><h2>Offsets Demo</h2><div class="bottom-offset-30 row"><ul class=list-unstyled><li class="col-xs-12 col-sm-3"><div class="well well-gray-light offset-example"><p>0px</p><hr><div id=top-offset-0><div class="well well-blue top-offset-0">class="top-offset-0"</div></div></div></li><li class="col-xs-12 col-sm-3"><div class="well well-gray-light offset-example"><p>5px</p><hr><div id=top-offset-5><div class="well well-blue top-offset-5">class="top-offset-5"</div></div></div></li><li class="col-xs-12 col-sm-3"><div class="well well-gray-light offset-example"><p>10px</p><hr><div id=top-offset-10><div class="well well-blue top-offset-10">class="top-offset-10"</div></div></div></li><li class="col-xs-12 col-sm-3"><div class="well well-gray-light offset-example"><p>20px</p><hr><div id=top-offset-20><div class="well well-blue top-offset-20">class="top-offset-20"</div></div></div></li><li class="col-xs-12 col-sm-3"><div class="well well-gray-light offset-example"><p>30px</p><hr><div id=top-offset-30><div class="well well-blue top-offset-30">class="top-offset-30"</div></div></div></li><li class="col-xs-12 col-sm-3"><div class="well well-gray-light offset-example"><p>40px</p><hr><div id=top-offset-40><div class="well well-blue top-offset-40">class="top-offset-40"</div></div></div></li><li class="col-xs-12 col-sm-3"><div class="well well-gray-light offset-example"><p>60px</p><hr><div id=top-offset-60><div class="well well-blue top-offset-60">class="top-offset-60"</div></div></div></li></ul></div><hr><div class=bottom-offset-10><h3>Bottom offsets <small>(by pixel modifier)</small></h3></div><div class="bottom-offset-30 row"><ul class=list-unstyled><li class="col-xs-12 col-sm-3"><div class="well well-gray-light offset-example"><p>0px</p><div id=bottom-offset-0><div class="well well-green bottom-offset-0">class="bottom-offset-0"</div></div><hr></div></li><li class="col-xs-12 col-sm-3"><div class="well well-gray-light offset-example"><p>5px</p><div id=bottom-offset-5><div class="well well-green bottom-offset-5">class="bottom-offset-5"</div></div><hr></div></li><li class="col-xs-12 col-sm-3"><div class="well well-gray-light offset-example"><p>10px</p><div id=bottom-offset-10><div class="well well-green bottom-offset-10">class="bottom-offset-10"</div></div><hr></div></li><li class="col-xs-12 col-sm-3"><div class="well well-gray-light offset-example"><p>20px</p><div id=bottom-offset-20><div class="well well-green bottom-offset-20">class="bottom-offset-20"</div></div><hr></div></li><li class="col-xs-12 col-sm-3"><div class="well well-gray-light offset-example"><p>30px</p><div id=bottom-offset-30><div class="well well-green bottom-offset-30">class="bottom-offset-30"</div></div><hr></div></li><li class="col-xs-12 col-sm-3"><div class="well well-gray-light offset-example"><p>40px</p><div id=bottom-offset-40><div class="well well-green bottom-offset-40">class="bottom-offset-40"</div></div><hr></div></li><li class="col-xs-12 col-sm-3"><div class="well well-gray-light offset-example"><p>60px</p><div id=bottom-offset-60><div class="well well-green bottom-offset-60">class="bottom-offset-60"</div></div><hr></div></li></ul></div></div></section>');
    $templateCache.put('components/offsets/demo-play-offsets.html', '<section ng-controller=offsetsPLayDemoCtrl id=offsets-play-demo><div class=container><h2>Offsets Builder</h2><div></div></div></section>');
    $templateCache.put('components/pagers/demo-pagers.html', '<section ng-controller=pagersCtrl id=pagers-html-example><div class=container><h2>Pagers Demo</h2><div><div class=bottom-offset-60><h3 class=bottom-offset-40>Standard pagers</h3><div class=bottom-offset-40><ul class=pager><li><a href=javascript:;><span aria-hidden=true class=icon-ui-arrowleft></span></a></li><li><a href=javascript:;><span aria-hidden=true class=icon-ui-arrowright></span></a></li></ul></div><h3>Pagers with text</h3><div class=bottom-offset-40><ul class=pager><li><a href=javascript:;><span aria-hidden=true class=icon-ui-arrowleft></span>&nbsp;Previous</a></li><li><a href=javascript:;>Next&nbsp;<span aria-hidden=true class=icon-ui-arrowright></span></a></li></ul></div></div></div></div></section>');
    $templateCache.put('components/pagers/demo-play-pagers.html', '<section ng-controller=pagersPLayDemoCtrl id=pagers-play-demo><div class=container><h2>Pagers Builder</h2><div></div></div></section>');
    $templateCache.put('components/pagination/demo-pagination.html', '<section ng-controller=paginationCtrl id=pagination-html-example><div class=container><h2>Pagination Demo</h2><div><h3 class="top-offset-40 bottom-offset-20">Centered pagination</h3><div class="pagination center-block"><ul class=pager><li><a href=# data-action=previous><span aria-hidden=true class=icon-ui-arrowleft></span>&nbsp;Previous</a></li><li><span class="pager-span hidden-xs">page</span><input class=pagination-input type=text readonly data-max-page="40"><span class="pager-span hidden-xs">of 40</span></li><li><a href=# data-action=next>Next&nbsp;<span aria-hidden=true class=icon-ui-arrowright></span></a></li></ul></div><h3 class="top-offset-40 bottom-offset-20">Justified pagination</h3><div class=row><div class="pagination col-xs-12"><ul class="pager bottom-offset-20"><li class=previous><a href=# data-action=previous><span aria-hidden=true class=icon-ui-arrowleft></span>&nbsp;Previous</a></li><li><span class="pager-span hidden-xs">page</span><input class=pagination-input type=text readonly data-max-page="40"><span class="pager-span hidden-xs">of 40</span></li><li class=next><a href=# data-action=next>Next&nbsp;<span aria-hidden=true class=icon-ui-arrowright></span></a></li></ul></div></div><h3 class="top-offset-40 bottom-offset-20">Centered pagination with filters</h3><div class=row><div class="pagination col-xs-12 col-md-8"><ul class="pager bottom-offset-10"><li class=previous><a href=# data-action=previous><span aria-hidden=true class=icon-ui-arrowleft></span>&nbsp;Previous</a></li><li><span class="pager-span hidden-xs">page</span><input class=pagination-input type=text readonly data-max-page="40"><span class="pager-span hidden-xs">of 40</span></li><li class=next><a href=# data-action=next>Next&nbsp;<span aria-hidden=true class=icon-ui-arrowright></span></a></li></ul></div><div class="col-xs-12 col-md-4 bottom-offset-10"><select class=form-control><option value="Items per page">Items per page</option><option value="20 per page">20 per page</option><option value="30 per page">30 per page</option><option value="40 per page">40 per page</option></select></div></div><div class="top-offset-40 bottom-offset-5"><h3 class=bottom-offset-40>Tap-to-Load</h3><div id=loadmore class=pager><a href=# data-action=next><button type=button data-loading-text=Loading... class="btn tap-to-load form-control btn-block next" ng-init=loadingButtonInit()>Load more results</button></a><div class="dashed-text-rule text-center"><span class="pager-span hidden-xs">page</span><input class=pagination-input type=text readonly data-max-page="40"><span class="pager-span hidden-xs">of 6</span></div></div></div><div class=row><div class=col-xs-12><ul class="news-pagination list-unstyled top-offset-10"><li class="well well-transparent-stroke well-blue bottom-offset-5"><p>This is an data set example <strong>A</strong></p></li><li class="well well-transparent-stroke well-blue bottom-offset-5"><p>This is an data set example <strong>A</strong></p></li><li class="well well-transparent-stroke well-blue bottom-offset-5"><p>This is an data set example <strong>B</strong></p></li><li class="well well-transparent-stroke well-blue bottom-offset-5"><p>This is an data set example <strong>C</strong></p></li><li class="well well-transparent-stroke well-blue bottom-offset-5"><p>This is an data set example <strong>D</strong></p></li><li class="well well-transparent-stroke well-blue bottom-offset-5"><p>This is an data set example <strong>E</strong></p></li><li class="well well-transparent-stroke well-berry bottom-offset-5"><p>This is an data set example <strong>F</strong></p></li><li class="well well-transparent-stroke well-berry bottom-offset-5"><p>This is an data set example <strong>H</strong></p></li><li class="well well-transparent-stroke well-berry bottom-offset-5"><p>This is an data set example <strong>I</strong></p></li><li class="well well-transparent-stroke well-berry bottom-offset-5"><p>This is an data set example <strong>J</strong></p></li><li class="well well-transparent-stroke well-berry bottom-offset-5"><p>This is an data set example <strong>K</strong></p></li><li class="well well-transparent-stroke well-orange bottom-offset-5"><p>This is an data set example <strong>L</strong></p></li><li class="well well-transparent-stroke well-orange bottom-offset-5"><p>This is an data set example <strong>M</strong></p></li><li class="well well-transparent-stroke well-orange bottom-offset-5"><p>This is an data set example <strong>N</strong></p></li><li class="well well-transparent-stroke well-orange bottom-offset-5"><p>This is an data set example <strong>O</strong></p></li><li class="well well-transparent-stroke well-orange bottom-offset-5"><p>This is an data set example <strong>P</strong></p></li><li class="well well-transparent-stroke well-light-green bottom-offset-5"><p>This is an data set example <strong>Q</strong></p></li><li class="well well-transparent-stroke well-light-green bottom-offset-5"><p>This is an data set example <strong>R</strong></p></li><li class="well well-transparent-stroke well-light-green bottom-offset-5"><p>This is an data set example <strong>S</strong></p></li><li class="well well-transparent-stroke well-light-green bottom-offset-5"><p>This is an data set example <strong>T</strong></p></li><li class="well well-transparent-stroke well-light-green bottom-offset-5"><p>This is an data set example <strong>U</strong></p></li><li class="well well-transparent-stroke well-purple bottom-offset-5"><p>This is an data set example <strong>V</strong></p></li><li class="well well-transparent-stroke well-purple bottom-offset-5"><p>This is an data set example <strong>W</strong></p></li><li class="well well-transparent-stroke well-purple bottom-offset-5"><p>This is an data set example <strong>X</strong></p></li><li class="well well-transparent-stroke well-purple bottom-offset-5"><p>This is an data set example <strong>Y</strong></p></li><li class="well well-transparent-stroke well-purple bottom-offset-5"><p>This is an data set example <strong>Z</strong></p></li></ul></div></div></div></div></section>');
    $templateCache.put('components/pagination/demo-play-pagination.html', '<section ng-controller=paginationPLayDemoCtrl id=pagination-play-demo><div class=container><h2>Pagination Builder</h2><div></div></div></section>');
    $templateCache.put('components/popovers/demo-play-popovers.html', '<section ng-controller=popoversPLayDemoCtrl id=popovers-play-demo><div class=container><h2>Popovers Builder</h2><div></div></div></section>');
    $templateCache.put('components/popovers/demo-popovers.html', '<section ng-controller=popoversCtrl id=popovers-html-example><div class=container><h2>Popovers Demo</h2><div><div class=bottom-offset-40><ul class="unstyled list-inline"><li class=top-offset-20><a tabindex=0 data-trigger=focus class="btn btn-default hidden-xs" data-html=true data-toggle=popover data-placement=top data-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus." data-original-title="Popover on top &lt;button type=\'button\' class=\'close pull-right visible-phone\' data-dismiss=\'popover\'&gt;\xd7&lt;/button&gt;">Popover on top</a></li><li class=top-offset-20><a tabindex=0 data-trigger=focus class="btn btn-default hidden-xs" data-html=true data-toggle=popover data-placement=right data-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus." data-original-title="Popover on right &lt;button type=\'button\' class=\'close pull-right visible-phone\' data-dismiss=\'popover\'&gt;\xd7&lt;/button&gt;">Popover on right</a></li><li class=top-offset-20><a tabindex=0 data-trigger=focus class="btn btn-default hidden-xs" data-html=true data-toggle=popover data-placement=bottom data-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus." data-original-title="Popover on bottom &lt;button type=\'button\' class=\'close pull-right visible-phone\' data-dismiss=\'popover\'&gt;\xd7&lt;/button&gt;">Popover on bottom</a></li><li class=top-offset-20><a tabindex=0 data-trigger=focus class="btn btn-default hidden-xs" data-html=true data-toggle=popover data-placement=left data-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus." data-original-title="Popover on left &lt;button type=\'button\' class=\'close pull-right visible-phone\' data-dismiss=\'popover\'&gt;\xd7&lt;/button&gt;">Popover on left</a></li></ul></div></div></div></section>');
    $templateCache.put('components/progress-bars/demo-play-progress-bars.html', '<section ng-controller=progressBarsPLayDemoCtrl id=progress-bars-play-demo><div class=container><h2>Progress-Bars Builder</h2><div></div></div></section>');
    $templateCache.put('components/progress-bars/demo-progress-bars.html', '<section ng-controller=progressBarsCtrl id=progress-bars-html-example><div class=container><h2>Progress-Bars Demo</h2><div class=row><div class="col-md-6 bottom-offset-20"><h4>Default</h4><div class=progress><div class=bar style="width: 60%"></div></div><h4>Default with percentage</h4><div class=progress><div class=bar style="width: 60%">60%</div></div></div></div><div class=bottom-offset-60><h4>Default progress status</h4><div class="progress progress-status"><a href=javascript:; class="bar bar-complete" style="width: 33.3%"><span class="hidden-xs hidden-sm">Shipping</span></a><div class="bar bar-progress" style="width: 33.3%"><span class="hidden-xs hidden-sm">Payment</span></div><div class="bar bar-incomplete" style="width: 33.4%"><span class="hidden-xs hidden-sm">Verify &amp; Submit Order</span></div></div></div><div class=bottom-offset-60><h4>Progress Status: Disabled</h4><div class="progress progress-status"><div href=javascript:; class="bar bar-disabled" style="width: 33.3%"><span class="hidden-xs hidden-sm">Shipping</span></div><div class="bar bar-progress-disabled" style="width: 33.3%"><span class="hidden-xs hidden-sm">Payment</span></div><div class="bar bar-incomplete" style="width: 33.4%"><span class="hidden-xs hidden-sm">Verify &amp; Submit Order</span></div></div></div><div class=bottom-offset-60><h4>Progress Status 2-Step minimum</h4><div class="progress progress-status"><a href=javascript:; class="bar bar-complete" style="width: 50%"><span class="hidden-xs hidden-sm">Payment</span></a><div class="bar bar-incomplete" style="width: 50%"><span class="hidden-xs hidden-sm">Verify &amp; submit order</span></div></div></div><div class=bottom-offset-60><h4>Progress status 6-Step maximum</h4><div class="progress progress-status"><a href=javascript:; class="bar bar-complete" style="width: 16.666%"><span class="hidden-xs hidden-sm">Step 1</span></a> <a href=javascript:; class="bar bar-complete" style="width: 16.666%"><span class="hidden-xs hidden-sm">Step 2</span></a> <a href=javascript:; class="bar bar-complete" style="width: 16.666%"><span class="hidden-xs hidden-sm">Step 3</span></a><div class="bar bar-progress" style="width: 16.666%"><span class="hidden-xs hidden-sm">Step 4</span></div><div class="bar bar-incomplete" style="width: 16.666%"><span class="hidden-xs hidden-sm">Step 5</span></div><div class="bar bar-incomplete" style="width: 16.666%"><span class="hidden-xs hidden-sm">Step 6</span></div></div></div><div class=bottom-offset-60><h4>Animated Striped</h4><p>Add <code>.active</code> to <code>.progress-bar-striped</code> to animate the stripes right to left. Not available in IE9 and below.</p><div class=progress><div class="progress-bar progress-bar-striped active" role=progressbar aria-valuenow=45 aria-valuemin=0 aria-valuemax=100 style="width: 45%"><span class=sr-only>45% Complete</span></div></div></div><div class=bottom-offset-60><h4>Striped progress</h4><div ng-init=fakeAnimation()><div class="pull-right progress-counter hidden-xs"><h3 class=pull-right>{{fakeAnimationValue}}%</h3></div><div class="progress bottom-offset-5"><div ng-class=stripeAnimate class="progress-bar progress-bar-striped" role=progressbar aria-valuenow={{fakeAnimationValue}} aria-valuemin=0 aria-valuemax=100 style="width: {{fakeAnimationValue}}%"></div></div><div><p class=pull-left>Download<span ng-if="fakeAnimationValue < 100">ing</span><span ng-if="fakeAnimationValue === 100">ed</span> {{fakeAnimationSteps}} of 5</p><div class="btn-group pull-right fake-animation-controls"><button type=reset class="btn btn-default" ng-click=resetFakeAnimation() ng-if="fakeAnimationValue !== 100">Cancel</button> <button type=submit class="btn btn-primary" ng-click=pauseFakeAnimation() ng-if="fakeAnimationId && fakeAnimationValue !== 100">Pause</button> <button type=submit class="btn btn-primary" ng-click=fakeAnimation() ng-if="!fakeAnimationId && fakeAnimationValue !== 100">Resume</button> <button type=submit class="btn btn-primary" ng-if="fakeAnimationValue === 100" ng-click=resetFakeAnimation()>Ok</button></div></div></div></div></div></section>');
    $templateCache.put('components/ratings-and-reviews/demo-play-ratings-and-reviews.html', '<section ng-controller=ratingsAndReviewsPLayDemoCtrl id=ratings-and-reviews-play-demo><div class=container><h2>Ratings-And-Reviews Builder</h2><div></div></div></section>');
    $templateCache.put('components/ratings-and-reviews/demo-ratings-and-reviews.html', '<section ng-controller=ratingsAndReviewsCtrl id=ratings-and-reviews-html-example><div class=container><h2>Ratings-And-Reviews Demo</h2><div><h3 class=top-offset-40>Star Ratings (No Reviews)</h3><div class=ratingBlock data-user-rating=0 data-review-stars data-histogram=no></div><h3 class=top-offset-40>Star Ratings (Reviews)</h3><div class=ratingBlock data-user-rating=5 data-review-stars=[2,6,12,34,7] data-histogram=no></div><h3 class=top-offset-40>Star Ratings (Reviews w/Histogram)</h3><div class=ratingBlock data-user-rating=5 data-review-stars=[12,12,23,54,107] data-histogram=yes></div></div><div><h3 class=top-offset-40>Recommendation Ratio</h3><div class=recoRatio data-recs=74 data-total=91></div></div><div><h3 class=top-offset-40>Customer Review Quote</h3><div class=revQuote data-quote="When I received the XPS 16 I was so surprised at how thin, sharp, and stylish the XPS 16 was." data-attribution="jevester, September 24, 2009"></div></div><div><h3 class=top-offset-40>Like / Dislike</h3>Was this review helpful?<div class=likeDislike data-yes=74 data-no=6></div><span class=text-blue>Report review</span><div class=nonlink></div></div><div><h3 class=top-offset-40>Individual Ratings</h3><div class="ind-rating-block pull-left"><div class=ratingBlock data-user-rating=5 data-review-stars=[2,6,12,34,7] data-histogram=no></div><div class="individual-rating pull-left" data-rating-label=Features data-user-rating=4.4></div><div class="individual-rating pull-left" data-rating-label=Performance data-user-rating=4.4></div><div class="individual-rating pull-left" data-rating-label=Value data-user-rating=5></div><div class="individual-rating pull-left" data-rating-label="Customer Service" data-user-rating=4.1></div><div class="individual-rating pull-left" data-rating-label="Operating System" data-user-rating=4.1></div></div></div></div></section>');
    $templateCache.put('components/responsive-utilities/demo-play-responsive-utilities.html', '<section ng-controller=responsiveUtilitiesPLayDemoCtrl id=responsive-utilities-play-demo><div class=container><h2>Responsive-Utilities Builder</h2><div></div></div></section>');
    $templateCache.put('components/responsive-utilities/demo-responsive-utilities.html', '<section ng-controller=responsiveUtilitiesCtrl id=responsive-utilities-html-example><div class=container><h2 class=bottom-offset-30>Responsive-Utilities Demo</h2><div class=bottom-offset-30><h3>Available classes</h3><p>Use a single or combination of the available classes for toggling content across viewport breakpoints.</p><div class=table-responsive><table class="table table-bordered table-striped responsive-utilities"><thead><tr><th></th><th>Extra small devices<br><small>Phones (&lt;768px)</small></th><th>Small devices<br><small>Tablets (\u2265768px)</small></th><th>Medium devices<br><small>Desktops (\u2265992px)</small></th><th>Large devices<br><small>Desktops (\u22651200px)</small></th></tr></thead><tbody><tr><th><code>.visible-xs</code></th><td class=is-visible>Visible</td><td class=is-hidden>Hidden</td><td class=is-hidden>Hidden</td><td class=is-hidden>Hidden</td></tr><tr><th><code>.visible-sm</code></th><td class=is-hidden>Hidden</td><td class=is-visible>Visible</td><td class=is-hidden>Hidden</td><td class=is-hidden>Hidden</td></tr><tr><th><code>.visible-md</code></th><td class=is-hidden>Hidden</td><td class=is-hidden>Hidden</td><td class=is-visible>Visible</td><td class=is-hidden>Hidden</td></tr><tr><th><code>.visible-lg</code></th><td class=is-hidden>Hidden</td><td class=is-hidden>Hidden</td><td class=is-hidden>Hidden</td><td class=is-visible>Visible</td></tr></tbody><tbody><tr><th><code>.hidden-xs</code></th><td class=is-hidden>Hidden</td><td class=is-visible>Visible</td><td class=is-visible>Visible</td><td class=is-visible>Visible</td></tr><tr><th><code>.hidden-sm</code></th><td class=is-visible>Visible</td><td class=is-hidden>Hidden</td><td class=is-visible>Visible</td><td class=is-visible>Visible</td></tr><tr><th><code>.hidden-md</code></th><td class=is-visible>Visible</td><td class=is-visible>Visible</td><td class=is-hidden>Hidden</td><td class=is-visible>Visible</td></tr><tr><th><code>.hidden-lg</code></th><td class=is-visible>Visible</td><td class=is-visible>Visible</td><td class=is-visible>Visible</td><td class=is-hidden>Hidden</td></tr></tbody></table></div></div><div><h3>Print classes</h3><p>Similar to the regular responsive classes, use these for toggling content for print.</p><div class=table-responsive><table class="table table-bordered table-striped responsive-utilities"><thead><tr><th>Class</th><th>Browser</th><th>Print</th></tr></thead><tbody><tr><th><code>.visible-print</code></th><td class=is-hidden>Hidden</td><td class=is-visible>Visible</td></tr><tr><th><code>.hidden-print</code></th><td class=is-visible>Visible</td><td class=is-hidden>Hidden</td></tr></tbody></table></div></div></div></section>');
    $templateCache.put('components/search-and-navigation/demo-play-search-and-navigation.html', '<section ng-controller=searchAndNavigationPLayDemoCtrl id=search-and-navigation-play-demo><div class=container><h2>Search-And-Navigation Builder</h2><div></div></div></section>');
    $templateCache.put('components/search-and-navigation/demo-search-and-navigation.html', '<section ng-controller=searchAndNavigationCtrl id=search-and-navigation-html-example><div class=container><h2>Search-And-Filtering Demo</h2><div><div data-ng-app data-ng-controller=myCheckboxCtrl><div class=row><h2>Filtering</h2></div><div class=row><h3>Filter by checkbox</h3></div><div class=row id=filter-checkbox><div class="pull-left col-sm-3 col-xs-12"><p>Narrow your search by screen size</p><label class=pull-left ng-repeat="c in classes"><input type=checkbox ng-model="selected[c]"> <span>{{c}}</span></label></div><div class="col-sm-9 col-xs-12"><div class="pull-left searchCard text-center well-gray" ng-repeat="card in cards | filter:showCards"><h3>{{card.name}}</h3><em>{{card.size}}</em><br><em>{{card.price}}</em></div></div></div></div><hr><div data-ng-app data-ng-controller=myDDCtrl><div class=row><h3>Filter by dropdown</h3></div><div class=row id=filter-drop><div class="pull-left col-sm-3 col-xs-12"><p class="text-left top-padding-5">Screen size:</p><select ng-model=screenSize ng-options="item.size for item in filterOptions.sizes"><option value="" selected>-- Select your Size --</option></select><div><p class="text-left top-padding-5">Price:</p><select ng-model=priceRange ng-options="item.pricerange for item in filterOptions.prices"><option value="" selected>-- Select your Range --</option></select></div></div><div class="col-sm-9 col-xs-12"><div class="pull-left searchCard text-center well-gray" ng-repeat="item in data | filter:screenSize | filter:priceRange"><h3>{{item.name}}</h3><em>{{item.size}}</em><br><em>{{item.pricerange}}</em></div></div></div></div></div></div></section>');
    $templateCache.put('components/standard-buttons/demo-play-standard-buttons.html', '<section ng-controller=standardButtonsPLayDemoCtrl id=standard-buttons-play-demo><div class=container><h2>Standard-Buttons Builder</h2><div></div></div></section>');
    $templateCache.put('components/standard-buttons/demo-standard-buttons.html', '<section ng-controller=standardButtonsCtrl id=standard-buttons-html-example><div class=container><h2 class=bottom-offset-20>Standard-Buttons Demo</h2><div class=bottom-offset-30><h4>Primary Non-Purchase</h4><a class="btn btn-primary" href=javascript:;>Primary</a></div><div class=bottom-offset-30><h4>Primary Non-Purchase disabled</h4><a class="btn btn-primary disabled" href=javascript:;>Primary</a></div><hr><div class=bottom-offset-30><h4>Primary Purchase</h4><a class="btn btn-success" href=javascript:;>Purchase</a></div><div class=bottom-offset-30><h4>Primary Purchase disabled</h4><a class="btn btn-success disabled" href=javascript:;>Purchase</a></div><hr><div class=bottom-offset-30><h4>Secondary or General Use</h4><a class="btn btn-default" href=javascript:;>General Use</a></div><div class=bottom-offset-30><h4>Secondary or General Use disabled</h4><a class="btn btn-default disabled" href=javascript:;>General Use</a></div><hr><div class=bottom-offset-30><h4>Primary link</h4><a class="btn btn-link" href=javascript:;>Link</a></div><div class=bottom-offset-30><h4>Primary link disabled</h4><a class="btn btn-link disabled" href=javascript:;>Link</a></div></div></section>');
    $templateCache.put('components/tables/demo-play-tables.html', '<section ng-controller=tablesPLayDemoCtrl id=tables-play-demo><div class=container><h2>Tables Builder</h2><div></div></div></section>');
    $templateCache.put('components/tables/demo-tables.html', '<section ng-controller=tablesCtrl id=tables-html-example><div class=container><h2>Tables Demo</h2><div><h3>Table with everything - table-striped table-bordered table-hover</h3></div><div class=bottom-offset-20><div id=tables-with-everything><table class="table table-striped table-bordered table-hover"><thead><tr><th>#</th><th>Column heading</th><th>Column heading</th><th>Column heading</th></tr></thead><tbody><tr><td>1</td><td>Column content</td><td>Column content</td><td>Column content</td></tr><tr><td>2</td><td>Column content</td><td>Column content</td><td>Column content</td></tr><tr><td>3</td><td>Column content</td><td>Column content</td><td>Column content</td></tr></tbody></table></div></div><hr><div><h3>Plain bordered table</h3></div><div class=bottom-offset-20><div id=plain-bordered-table><table class="table table-bordered"><thead><tr><th>#</th><th>Column heading</th><th>Column heading</th><th>Column heading</th></tr></thead><tbody><tr><td>1</td><td>Column content</td><td>Column content</td><td>Column content</td></tr><tr><td>2</td><td>Column content</td><td>Column content</td><td>Column content</td></tr><tr><td>3</td><td>Column content</td><td>Column content</td><td>Column content</td></tr></tbody></table></div></div><hr><div><h3>Borderless table with zebra stripes</h3></div><div class=bottom-offset-20><div id=borderless-table-with-zebra-stripes><table class="table table-striped"><thead><tr><th>#</th><th>Column heading</th><th>Column heading</th><th>Column heading</th></tr></thead><tbody><tr><td>1</td><td>Column content</td><td>Column content</td><td>Column content</td></tr><tr><td>2</td><td>Column content</td><td>Column content</td><td>Column content</td></tr><tr><td>3</td><td>Column content</td><td>Column content</td><td>Column content</td></tr></tbody></table></div></div><hr><div><h3>Bordered tables in a panel</h3></div><div class=bottom-offset-20><div id=bordered-tables-in-a-panel><div class="panel blue-stroke"><table class=table><thead><tr><th>#</th><th>Column heading</th><th>Column heading</th><th>Column heading</th></tr></thead><tbody><tr><td>1</td><td>Column content</td><td>Column content</td><td>Column content</td></tr><tr><td>2</td><td>Column content</td><td>Column content</td><td>Column content</td></tr><tr><td>3</td><td>Column content</td><td>Column content</td><td>Column content</td></tr></tbody></table></div></div></div><div><h3>Sortable tables</h3></div><div class=bottom-offset-20><div id=sortable-table-example><div id=sortable-table ui-grid=sortableTable class=sortable-table-example></div></div></div><div><h3>Filtered tables</h3></div><div class=bottom-offset-20><div id=filtered-table-example><div id=filtered-table ui-grid=filteredTable class=filtered-table-example></div></div></div></div></section>');
    $templateCache.put('components/tabs/demo-play-tabs.html', '<section ng-controller=tabsPLayDemoCtrl id=tabs-play-demo><div class=container><h2>Tabs Builder</h2><div></div></div></section>');
    $templateCache.put('components/tabs/demo-tabs.html', '<section ng-controller=tabsCtrl id=tabs-html-example><div class=container><h2>Tabs Demo</h2><h3>Tabs <small>(default)</small></h3><div class=bottom-offset-60><div class="row row-offcanvas row-offcanvas-right"><ul class="nav nav-tabs" role=tablist><li role=presentation class=active><a href=#home aria-controls=home role=tab data-toggle=tab>Home</a></li><li role=presentation><a href=#profile aria-controls=profile role=tab data-toggle=tab>Profile</a></li><li role=presentation><a href=#messages aria-controls=messages role=tab data-toggle=tab>Messages</a></li><li role=presentation><a href=#settings aria-controls=settings role=tab data-toggle=tab>Settings</a></li></ul><div class=tab-content><div role=tabpanel class="tab-pane fade active in" id=home><div class="offcanvas-back-btn well visible-xs-block"><button class="btn btn-link" data-toggle=offcanvas>Back</button></div><div class=row><div class=col-xs-12>Your content goes here. Home is the best place!</div></div></div><div role=tabpanel class="tab-pane fade" id=profile><div class="offcanvas-back-btn well visible-xs-block"><button class="btn btn-link" data-toggle=offcanvas>Back</button></div><div class=row><div class=col-xs-12>Your content goes here. What is this?</div></div></div><div role=tabpanel class="tab-pane fade" id=messages><div class="offcanvas-back-btn well visible-xs-block"><button class="btn btn-link" data-toggle=offcanvas>Back</button></div><div class=row><div class=col-xs-12>Your content goes here. You\'ve got mail!</div></div></div><div role=tabpanel class="tab-pane fade" id=settings><div class="offcanvas-back-btn well visible-xs-block"><button class="btn btn-link" data-toggle=offcanvas>Back</button></div><div class=row><div class=col-xs-12>Your content goes here. Default settings or custom!</div></div></div></div></div></div><h3>Tabs <small>(justified)</small></h3><div class=bottom-offset-60><div class="row row-offcanvas row-offcanvas-right"><ul class="nav nav-tabs nav-justified" role=tablist><li role=presentation class=active><a href=#trains aria-controls=home role=tab data-toggle=tab>Trains</a></li><li role=presentation><a href=#automobile role=tab data-toggle=tab>Automobile</a></li><li role=presentation><a href=#boats role=tab data-toggle=tab>Boats</a></li><li role=presentation><a href=#planes role=tab data-toggle=tab>Planes</a></li></ul><div class=tab-content><div role=tabpanel class="tab-pane fade active in" id=trains><div class="offcanvas-back-btn well visible-xs-block"><button class="btn btn-link" data-toggle=offcanvas>Back</button></div><div class=row><div class=col-xs-12>Your content goes here. I like trains</div></div></div><div role=tabpanel class="tab-pane fade" id=automobile><div class="offcanvas-back-btn well visible-xs-block"><button class="btn btn-link" data-toggle=offcanvas>Back</button></div><div class=row><div class=col-xs-12>Your content goes here. Cars go fast</div></div></div><div role=tabpanel class="tab-pane fade" id=boats><div class="offcanvas-back-btn well visible-xs-block"><button class="btn btn-link" data-toggle=offcanvas>Back</button></div><div class=row><div class=col-xs-12>Your content goes here. Boats are fun in summer</div></div></div><div role=tabpanel class="tab-pane fade" id=planes><div class="offcanvas-back-btn well visible-xs-block"><button class="btn btn-link" data-toggle=offcanvas>Back</button></div><div class=row><div class=col-xs-12>Your content goes here. Planes take me places fast</div></div></div></div></div></div></div></section>');
    $templateCache.put('components/tooltips/demo-play-tooltips.html', '<section ng-controller=tooltipsPLayDemoCtrl id=tooltips-play-demo><div class=container><h2>Tooltips Builder</h2><div></div></div></section>');
    $templateCache.put('components/tooltips/demo-tooltips.html', '<section ng-controller=tooltipsCtrl id=tooltips-html-example><div class=container><h2 class=bottom-offset-20>Tooltips Demo</h2><ul class="unstyled list-inline"><li class=top-offset-10><a href=javascript:; data-toggle=tooltip data-container=body data-placement=top data-original-title="Tooltip on bottom with simple filler copy">Tooltip on top</a></li><li class=top-offset-10><a href=javascript:; data-toggle=tooltip data-container=body data-placement=right data-original-title="Tooltip on left with simple filler copy">Tooltip on right</a></li><li class=top-offset-10><a href=javascript:; data-toggle=tooltip data-container=body data-placement=bottom data-original-title="Tooltip on bottom with simple filler copy">Tooltip on bottom</a></li><li class=top-offset-10><a href=javascript:; data-toggle=tooltip data-container=body data-placement=left data-original-title="Tooltip on left with simple filler copy">Tooltip on left</a></li></ul></div></section>');
    $templateCache.put('components/typography/demo-play-typography.html', '<section ng-controller=typographyPLayDemoCtrl id=typography-play-demo></section>');
    $templateCache.put('components/typography/demo-typography.html', '<section ng-controller=typographyCtrl id=typography-html-example><div class=container><h2>Typography Demo</h2><div class=well><table class="table bottom-offset-0"><tr><td><div id=h1-example class=hide><h1>Heading 1</h1></div><h1 class=visible-lg>H1 : 32px/40px</h1><h1 class=visible-md>H1 : 32px/40px</h1><h1 class=visible-sm>H1 : 30px/36px</h1><h1 class=visible-xs>H1 : 24px/28px</h1><p><small>Font-family: museo-sans-for-dell-300</small></p></td></tr><tr><td><div id=h2-example class=hide><h2>Heading 2</h2></div><h2 class=visible-lg>H2 : 28px/32px</h2><h2 class=visible-md>H2 : 28px/32px</h2><h2 class=visible-sm>H2 : 26px/30px</h2><h2 class=visible-xs>H2 : 20px/24px</h2><p><small>Font-family: Museo Sans for Dell 300</small></p></td></tr><tr><td><div id=heading-3-feature class=hide><h3 class=feature>Heading 3 feature</h3></div><h3 class="visible-lg feature">H3 "feature" : 24px/28px</h3><h3 class="visible-md feature">H3 "feature" : 24px/28px</h3><h3 class="visible-sm feature">H3 "feature" : 22px/26px</h3><h3 class="visible-xs feature">H3 "feature" : 18px/22px</h3><p><small>Font-family: Museo Sans for Dell 300</small></p></td></tr><tr><td><div id=h3-example class=hide><h3>Heading 3</h3></div><h3 class=visible-lg>H3 : 20px/24px</h3><h3 class=visible-md>H3 : 20px/24px</h3><h3 class=visible-sm>H3 : 20px/24px</h3><h3 class=visible-xs>H3 : 17px/20px</h3><p><small>Font-family: Museo Sans for Dell 300</small></p></td></tr><tr><td><div id=h4-example class=hide><h4>Heading 4</h4></div><h4 class=visible-lg>H4 : 18px/22px</h4><h4 class=visible-md>H4 : 18px/22px</h4><h4 class=visible-sm>H4 : 18px/22px</h4><h4 class=visible-xs>H4 : 16px/20px</h4><p><small>Font-family: Trebuchet MS</small></p></td></tr><tr><td><div id=h5-example class=hide><h5>Heading 5</h5></div><h5 class=visible-lg>H5 : 16px/20px</h5><h5 class=visible-md>H5 : 16px/20px</h5><h5 class=visible-sm>H5 : 16px/20px</h5><h5 class=visible-xs>H5 : 14px/20px</h5><p><small>Font-family: Trebuchet MS</small></p></td></tr><tr><td><div id=bold-16-example class=hide><p class=bold-16>bold-16</p></div><p class="bold-16 bottom-offset-0">bold-16</p><p><small>Font-family: Trebuchet MS</small></p></td></tr><tr><td><div id=bold-14-example class=hide><p class=bold-14>bold-14</p></div><p class="bold-14 bottom-offset-0">bold-14</p><p><small>Font-family: Trebuchet MS</small></p></td></tr><tr><td><div id=bold-12-example class=hide><p class=bold-12>bold-12</p></div><p class="bold-12 bottom-offset-0">bold-12</p><p><small>Font-family: Trebuchet MS</small></p></td></tr></table></div><div class=row><div class="col-xs-12 col-sm-6 bottom-offset-20"><div><h3>Example body text <small>(default)</small></h3><div id=example-body-text><p>Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div><p>Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Donec sed odio dui.</p></div><div class="top-offset-30 bottom-offset-20"><h3>Example small text <small>(fine print)</small></h3><div><p id=example-small-body-text><small>This copy is meant to be treated as fine print. Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nullam id dolor id nibh ultricies vehicula ut id elit.</small></p><p><small>This copy is meant to be treated as fine print. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Donec sed odio dui.</small></p></div></div></div></div><div class=row><div class="col-xs-12 col-sm-6 bottom-offset-20"><h3 class=text-rtl>Example body text <small>(default)</small></h3><p class=text-rtl>Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p><p class=text-rtl>Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Donec sed odio dui.</p><div class="top-offset-30 bottom-offset-20"><h3 class=text-rtl>Example small text <small>(fine print)</small></h3><p class=text-rtl><small>This copy is meant to be treated as fine print. Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nullam id dolor id nibh ultricies vehicula ut id elit.</small></p><p class=text-rtl><small>This copy is meant to be treated as fine print. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Donec sed odio dui.</small></p></div></div></div><div class=bottom-offset-40><h3>Example bold copy</h3><div class="well well-sm bottom-offset-40"><div id=strong-text><strong>Text rendered as bold text</strong></div></div><h3>Example italicized copy</h3><div class="well well-sm bottom-offset-40"><div id=italic-text><em>Text rendered as italicized text</em></div></div></div><h3>Example colored text</h3><div class="well well-sm" style="background: #ddd"><p class=text-gray-dark>This text is <strong>text-gray-dark</strong> <small>&nbsp;(default)</small> .</p></div><div class="well well-sm" style="background: #ddd"><p class=text-blue>This text is <strong>text-blue</strong> <small>&nbsp;(Brand name: Dell Blue)</small> .</p></div><div class="well well-sm" style="background: #ddd"><p class=text-dark-blue>This text is <strong>text-dark-blue</strong> <small>&nbsp;(Brand name: Dell Dark Blue)</small> .</p></div><div class="well well-sm" style="background: #ddd"><p class=text-purple>This text is <strong>text-purple</strong> <small>&nbsp;(Brand name: Dell Purple)</small> .</p></div><div class="well well-sm" style="background: #ddd"><p class=text-berry>This text is <strong>text-berry</strong> <small>&nbsp;(Brand name: Dell Berry)</small> .</p></div><div class="well well-sm" style="background: #ddd"><p class=text-red>This text is <strong>text-red</strong> <small>&nbsp;(Brand name: Dell Red)</small> .</p></div><div class="well well-sm" style="background: #ddd"><p class=text-red-dark>This text is <strong>text-red-dark</strong> <small>&nbsp;(Brand name: Dell Dark Red)</small> .</p></div><div class="well well-sm" style="background: #ddd"><p class=text-white>This text is <strong>text-white</strong> <small>&nbsp;(Brand name: White)</small> .</p></div><div class="well well-sm" style="background: #ddd"><p class=text-gray-medium>This text is <strong>text-gray-medium</strong> <small>&nbsp;(Brand name: 75% Dell Dark Gray)</small> .</p></div><div class="well well-sm" style="background: #ddd"><p class=text-gray-dark>This text is <strong>text-gray-dark</strong> <small>&nbsp;(Brand name: Dell Dark Gray)</small> .</p></div><div class="well well-sm" style="background: #ddd"><p class=text-orange>This text is <strong>text-orange</strong> <small>&nbsp;(Brand name: Dell Orange)</small> .</p></div><div class="well well-sm" style="background: #ddd"><p class=text-green>This text is <strong>text-orange</strong> <small>&nbsp;(Brand name: Dell Green)</small> .</p></div><h3>Example text alignment</h3><div class="well well-sm"><div id=left-aligned-text><p class=text-left>Left aligned text.</p></div><hr><div id=center-aligned-text><p class=text-center>Center aligned text.</p></div><hr><div id=right-aligned-text><p class=text-right>Right aligned text.</p></div></div><h3>Example strikethrough</h3><div class="well well-sm bottom-offset-40"><div id=strikethrough-text><p class=strike-through>This is an example of strikethrough text.</p></div></div></div></section>');
    $templateCache.put('demo-assets/partials/all-components/all-components.html', '<div ng-controller=AllComponentsCtrl><h2>All components</h2>testing auto deploy<ul><li ng-repeat="item in components"><a href=#/demo/{{item.id}}>{{item.label}} demo</a> | <a href=#/play/{{item.id}}>play</a></li></ul></div>');
    $templateCache.put('demo-assets/partials/demo/demo.html', '<div ng-controller=ComponentsDemoCtrl><div ng-if=activeComponent ng-include=componentDemoUrl></div><div ng-if=!activeComponent class=container ng-include="\'demo-assets/partials/all-components/all-components.html\'"></div></div>');
    $templateCache.put('demo-assets/partials/home/home.html', '<div ng-controller=HomeCtrl><nav class="navbar navbar-inverse"><div class=container><div class=row><div class="navbar-header col-sm-9"><button type=button class="navbar-toggle collapsed" data-toggle=collapse data-target=#navbar aria-expanded=false aria-controls=navbar><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a class=navbar-brand href=#><i class=icon-ui-dell style="font-size: 42px;\r' + '\n' + '                          position: relative;\r' + '\n' + '                          top: -12px"></i> <span style="position: relative;\r' + '\n' + '                            top: -22px;\r' + '\n' + '                            left: -5px;\r' + '\n' + '                            font-size: 20px">Dell UI Components Demo</span></a></div><div id=navbar class="collapse navbar-collapse col-sm-3 pull-right" ng-if=activeComponent><div class="btn-group pull-right top-offset-10"><a class="btn btn-default dropdown-toggle" data-toggle=dropdown href=javascript:;><span ng-if=activeComponent>{{activeComponent.label}}</span> <i class=caret></i></a><ul class=dropdown-menu><li><a href=#/demo>All components</a></li><li ng-repeat="item in components"><a href=#{{pageType}}/{{item.id}}>{{item.label}}</a></li></ul></div></div></div></div></nav><div class=container ng-if=activeComponent><div class="btn-group demo-play-switcher"><a href=#demo/{{activeComponent.id}} class="btn btn-default btn-xs" ng-class="{\'btn-primary\':pageType === \'demo\'}">Demo</a> <a href=#play/{{activeComponent.id}} class="btn btn-default btn-xs" ng-class="{\'btn-primary\':pageType === \'play\'}">Play</a></div></div><div id=component-{{pageType}} ng-include="\'demo-assets/partials/\'+pageType+\'/\'+pageType+\'.html\'"></div></div>');
    $templateCache.put('demo-assets/partials/play/play.html', '<div ng-controller=PlayCtrl><div ng-if=activeComponent ng-include=componentPlayUrl></div><div ng-if=!activeComponent class=container ng-include="\'demo-assets/partials/all-components/all-components.html\'"></div></div>');
    $templateCache.put('templates/component/demo-partial.html', '<section ng-controller="<%= camelId %>Ctrl" id="<%= dashedId %>-html-example"><div class=container><h2><%= name %>Demo</h2><div></div></div></section>');
    $templateCache.put('templates/component/demo-play-partial.html', '<section ng-controller="<%= camelId %>PLayDemoCtrl" id="<%= dashedId %>-play-demo"><div class=container><h2><%= name %>Builder</h2><div></div></div></section>');
    $templateCache.put('templates/directive/directive.html', '<div></div>');
  }
]);
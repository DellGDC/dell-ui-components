/* 
 *
 * Dell UI Enhancements to Bootstrap themes 
 *
 * The purpose of this file is to enhance certain UI aspects of Bootstrap css.
 * All classes here should not be related to any color or style but rather functional
 *
 * These enhancements should be submitted to bootstrap.
 */


/*
 *
 * [data-toggle="collapse"] enhancer
 * It provides a way to add an icon or switch content
 * between different states.
 *
 * example:
 *
 *  <button type="button" class="btn btn-danger collapsed" data-toggle="collapse" data-target="#demo">
 *    <span class="show-when-collapsed">view</span> 
 *    <span class="hide-when-collapsed">hide</span> 
 *    simple collapsible
 *  </button>
 *  <div id="demo" class="collapse">...</div>
 *
 *  When button is toggled and #demo is visible 
 *  the button text changes to "hide simple collapsible"
 *
 *
 */

[data-toggle="collapse"] {
	&.collapsed {
		.when-expanded {
			display:none;
		}
		.when-collapsed {
			display:inherit;
		}
		//fixes to caret when used in a collapsible toggle
		.caret {
			-webkit-transform: rotate(0deg);
		    -moz-transform: rotate(0deg);
		    -o-transform: rotate(0deg);
		    -ms-transform: rotate(0deg);
		    transform: rotate(0deg);
		}
	}
	.when-expanded {
		display:inherit;
	}
	.when-collapsed {
		display:none;
	}
	//fixes to caret when used in a collapsible toggle
	.caret {
		-webkit-transform: rotate(180deg);
	    -moz-transform: rotate(180deg);
	    -o-transform: rotate(180deg);
	    -ms-transform: rotate(180deg);
	    transform: rotate(180deg);
	}
}

//fixes to dropdown caret 
.open .dropdown-toggle .caret {
	-webkit-transform: rotate(180deg);
    -moz-transform: rotate(180deg);
    -o-transform: rotate(180deg);
    -ms-transform: rotate(180deg);
    transform: rotate(180deg);	
}


/*
.pmConstructor (@index) when (@index > 5) {


	.pT-@{index} {
		padding-top: @index px;
	}
	.pB-@{index} {
		padding-bottom: @index px;
	}
	.pL-@{index} {
		padding-left: @index px;
	}
	.pR-@{index} {
		padding-right: @index px;
	}
	.mT-@{index} {
		margin-top: @index px;
	}
	.mB-@{index} {
		margin-bottom: @index px;
	}
	.mL-@{index} {
		margin-left: @index px;
	}
	.mR-@{index} {
		margin-right: @index px;
	}


	// next iteration
	.pmConstructor(@index - 5);
}

// end the loop when index is 0
.pmConstructor (0) {}

// "call" the loopingClass the first time with highest value
.pmConstructor (60);*/